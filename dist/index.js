var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a10, b10) => {
  for (var prop in b10 || (b10 = {}))
    if (__hasOwnProp.call(b10, prop))
      __defNormalProp(a10, prop, b10[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b10)) {
      if (__propIsEnum.call(b10, prop))
        __defNormalProp(a10, prop, b10[prop]);
    }
  return a10;
};
var __spreadProps = (a10, b10) => __defProps(a10, __getOwnPropDescs(b10));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __commonJS = (cb2, mod) => function __require() {
  return mod || (0, cb2[__getOwnPropNames(cb2)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject2) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e13) {
        reject2(e13);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e13) {
        reject2(e13);
      }
    };
    var step = (x10) => x10.done ? resolve(x10.value) : Promise.resolve(x10.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// ../../node_modules/react/cjs/react.production.min.js
var require_react_production_min = __commonJS({
  "../../node_modules/react/cjs/react.production.min.js"(exports) {
    "use strict";
    var l10 = Symbol.for("react.element");
    var n10 = Symbol.for("react.portal");
    var p10 = Symbol.for("react.fragment");
    var q10 = Symbol.for("react.strict_mode");
    var r11 = Symbol.for("react.profiler");
    var t12 = Symbol.for("react.provider");
    var u10 = Symbol.for("react.context");
    var v10 = Symbol.for("react.forward_ref");
    var w10 = Symbol.for("react.suspense");
    var x10 = Symbol.for("react.memo");
    var y10 = Symbol.for("react.lazy");
    var z10 = Symbol.iterator;
    function A10(a10) {
      if (a10 === null || typeof a10 !== "object")
        return null;
      a10 = z10 && a10[z10] || a10["@@iterator"];
      return typeof a10 === "function" ? a10 : null;
    }
    var B10 = { isMounted: function() {
      return false;
    }, enqueueForceUpdate: function() {
    }, enqueueReplaceState: function() {
    }, enqueueSetState: function() {
    } };
    var C10 = Object.assign;
    var D10 = {};
    function E10(a10, b10, e13) {
      this.props = a10;
      this.context = b10;
      this.refs = D10;
      this.updater = e13 || B10;
    }
    E10.prototype.isReactComponent = {};
    E10.prototype.setState = function(a10, b10) {
      if (typeof a10 !== "object" && typeof a10 !== "function" && a10 != null)
        throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
      this.updater.enqueueSetState(this, a10, b10, "setState");
    };
    E10.prototype.forceUpdate = function(a10) {
      this.updater.enqueueForceUpdate(this, a10, "forceUpdate");
    };
    function F10() {
    }
    F10.prototype = E10.prototype;
    function G10(a10, b10, e13) {
      this.props = a10;
      this.context = b10;
      this.refs = D10;
      this.updater = e13 || B10;
    }
    var H10 = G10.prototype = new F10();
    H10.constructor = G10;
    C10(H10, E10.prototype);
    H10.isPureReactComponent = true;
    var I10 = Array.isArray;
    var J10 = Object.prototype.hasOwnProperty;
    var K10 = { current: null };
    var L10 = { key: true, ref: true, __self: true, __source: true };
    function M10(a10, b10, e13) {
      var d10, c10 = {}, k10 = null, h10 = null;
      if (b10 != null)
        for (d10 in b10.ref !== void 0 && (h10 = b10.ref), b10.key !== void 0 && (k10 = "" + b10.key), b10)
          J10.call(b10, d10) && !L10.hasOwnProperty(d10) && (c10[d10] = b10[d10]);
      var g10 = arguments.length - 2;
      if (g10 === 1)
        c10.children = e13;
      else if (1 < g10) {
        for (var f10 = Array(g10), m10 = 0; m10 < g10; m10++)
          f10[m10] = arguments[m10 + 2];
        c10.children = f10;
      }
      if (a10 && a10.defaultProps)
        for (d10 in g10 = a10.defaultProps, g10)
          c10[d10] === void 0 && (c10[d10] = g10[d10]);
      return { $$typeof: l10, type: a10, key: k10, ref: h10, props: c10, _owner: K10.current };
    }
    function N10(a10, b10) {
      return { $$typeof: l10, type: a10.type, key: b10, ref: a10.ref, props: a10.props, _owner: a10._owner };
    }
    function O10(a10) {
      return typeof a10 === "object" && a10 !== null && a10.$$typeof === l10;
    }
    function escape(a10) {
      var b10 = { "=": "=0", ":": "=2" };
      return "$" + a10.replace(/[=:]/g, function(a11) {
        return b10[a11];
      });
    }
    var P10 = /\/+/g;
    function Q(a10, b10) {
      return typeof a10 === "object" && a10 !== null && a10.key != null ? escape("" + a10.key) : b10.toString(36);
    }
    function R10(a10, b10, e13, d10, c10) {
      var k10 = typeof a10;
      if (k10 === "undefined" || k10 === "boolean")
        a10 = null;
      var h10 = false;
      if (a10 === null)
        h10 = true;
      else
        switch (k10) {
          case "string":
          case "number":
            h10 = true;
            break;
          case "object":
            switch (a10.$$typeof) {
              case l10:
              case n10:
                h10 = true;
            }
        }
      if (h10)
        return h10 = a10, c10 = c10(h10), a10 = d10 === "" ? "." + Q(h10, 0) : d10, I10(c10) ? (e13 = "", a10 != null && (e13 = a10.replace(P10, "$&/") + "/"), R10(c10, b10, e13, "", function(a11) {
          return a11;
        })) : c10 != null && (O10(c10) && (c10 = N10(c10, e13 + (!c10.key || h10 && h10.key === c10.key ? "" : ("" + c10.key).replace(P10, "$&/") + "/") + a10)), b10.push(c10)), 1;
      h10 = 0;
      d10 = d10 === "" ? "." : d10 + ":";
      if (I10(a10))
        for (var g10 = 0; g10 < a10.length; g10++) {
          k10 = a10[g10];
          var f10 = d10 + Q(k10, g10);
          h10 += R10(k10, b10, e13, f10, c10);
        }
      else if (f10 = A10(a10), typeof f10 === "function")
        for (a10 = f10.call(a10), g10 = 0; !(k10 = a10.next()).done; )
          k10 = k10.value, f10 = d10 + Q(k10, g10++), h10 += R10(k10, b10, e13, f10, c10);
      else if (k10 === "object")
        throw b10 = String(a10), Error("Objects are not valid as a React child (found: " + (b10 === "[object Object]" ? "object with keys {" + Object.keys(a10).join(", ") + "}" : b10) + "). If you meant to render a collection of children, use an array instead.");
      return h10;
    }
    function S10(a10, b10, e13) {
      if (a10 == null)
        return a10;
      var d10 = [], c10 = 0;
      R10(a10, d10, "", "", function(a11) {
        return b10.call(e13, a11, c10++);
      });
      return d10;
    }
    function T10(a10) {
      if (a10._status === -1) {
        var b10 = a10._result;
        b10 = b10();
        b10.then(function(b11) {
          if (a10._status === 0 || a10._status === -1)
            a10._status = 1, a10._result = b11;
        }, function(b11) {
          if (a10._status === 0 || a10._status === -1)
            a10._status = 2, a10._result = b11;
        });
        a10._status === -1 && (a10._status = 0, a10._result = b10);
      }
      if (a10._status === 1)
        return a10._result.default;
      throw a10._result;
    }
    var U10 = { current: null };
    var V10 = { transition: null };
    var W10 = { ReactCurrentDispatcher: U10, ReactCurrentBatchConfig: V10, ReactCurrentOwner: K10 };
    exports.Children = { map: S10, forEach: function(a10, b10, e13) {
      S10(a10, function() {
        b10.apply(this, arguments);
      }, e13);
    }, count: function(a10) {
      var b10 = 0;
      S10(a10, function() {
        b10++;
      });
      return b10;
    }, toArray: function(a10) {
      return S10(a10, function(a11) {
        return a11;
      }) || [];
    }, only: function(a10) {
      if (!O10(a10))
        throw Error("React.Children.only expected to receive a single React element child.");
      return a10;
    } };
    exports.Component = E10;
    exports.Fragment = p10;
    exports.Profiler = r11;
    exports.PureComponent = G10;
    exports.StrictMode = q10;
    exports.Suspense = w10;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W10;
    exports.cloneElement = function(a10, b10, e13) {
      if (a10 === null || a10 === void 0)
        throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a10 + ".");
      var d10 = C10({}, a10.props), c10 = a10.key, k10 = a10.ref, h10 = a10._owner;
      if (b10 != null) {
        b10.ref !== void 0 && (k10 = b10.ref, h10 = K10.current);
        b10.key !== void 0 && (c10 = "" + b10.key);
        if (a10.type && a10.type.defaultProps)
          var g10 = a10.type.defaultProps;
        for (f10 in b10)
          J10.call(b10, f10) && !L10.hasOwnProperty(f10) && (d10[f10] = b10[f10] === void 0 && g10 !== void 0 ? g10[f10] : b10[f10]);
      }
      var f10 = arguments.length - 2;
      if (f10 === 1)
        d10.children = e13;
      else if (1 < f10) {
        g10 = Array(f10);
        for (var m10 = 0; m10 < f10; m10++)
          g10[m10] = arguments[m10 + 2];
        d10.children = g10;
      }
      return { $$typeof: l10, type: a10.type, key: c10, ref: k10, props: d10, _owner: h10 };
    };
    exports.createContext = function(a10) {
      a10 = { $$typeof: u10, _currentValue: a10, _currentValue2: a10, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
      a10.Provider = { $$typeof: t12, _context: a10 };
      return a10.Consumer = a10;
    };
    exports.createElement = M10;
    exports.createFactory = function(a10) {
      var b10 = M10.bind(null, a10);
      b10.type = a10;
      return b10;
    };
    exports.createRef = function() {
      return { current: null };
    };
    exports.forwardRef = function(a10) {
      return { $$typeof: v10, render: a10 };
    };
    exports.isValidElement = O10;
    exports.lazy = function(a10) {
      return { $$typeof: y10, _payload: { _status: -1, _result: a10 }, _init: T10 };
    };
    exports.memo = function(a10, b10) {
      return { $$typeof: x10, type: a10, compare: b10 === void 0 ? null : b10 };
    };
    exports.startTransition = function(a10) {
      var b10 = V10.transition;
      V10.transition = {};
      try {
        a10();
      } finally {
        V10.transition = b10;
      }
    };
    exports.unstable_act = function() {
      throw Error("act(...) is not supported in production builds of React.");
    };
    exports.useCallback = function(a10, b10) {
      return U10.current.useCallback(a10, b10);
    };
    exports.useContext = function(a10) {
      return U10.current.useContext(a10);
    };
    exports.useDebugValue = function() {
    };
    exports.useDeferredValue = function(a10) {
      return U10.current.useDeferredValue(a10);
    };
    exports.useEffect = function(a10, b10) {
      return U10.current.useEffect(a10, b10);
    };
    exports.useId = function() {
      return U10.current.useId();
    };
    exports.useImperativeHandle = function(a10, b10, e13) {
      return U10.current.useImperativeHandle(a10, b10, e13);
    };
    exports.useInsertionEffect = function(a10, b10) {
      return U10.current.useInsertionEffect(a10, b10);
    };
    exports.useLayoutEffect = function(a10, b10) {
      return U10.current.useLayoutEffect(a10, b10);
    };
    exports.useMemo = function(a10, b10) {
      return U10.current.useMemo(a10, b10);
    };
    exports.useReducer = function(a10, b10, e13) {
      return U10.current.useReducer(a10, b10, e13);
    };
    exports.useRef = function(a10) {
      return U10.current.useRef(a10);
    };
    exports.useState = function(a10) {
      return U10.current.useState(a10);
    };
    exports.useSyncExternalStore = function(a10, b10, e13) {
      return U10.current.useSyncExternalStore(a10, b10, e13);
    };
    exports.useTransition = function() {
      return U10.current.useTransition();
    };
    exports.version = "18.1.0";
  }
});

// ../../node_modules/react/index.js
var require_react = __commonJS({
  "../../node_modules/react/index.js"(exports, module2) {
    "use strict";
    if (true) {
      module2.exports = require_react_production_min();
    } else {
      module2.exports = null;
    }
  }
});

// ../../node_modules/scheduler/cjs/scheduler.production.min.js
var require_scheduler_production_min = __commonJS({
  "../../node_modules/scheduler/cjs/scheduler.production.min.js"(exports) {
    "use strict";
    function f10(a10, b10) {
      var c10 = a10.length;
      a10.push(b10);
      a:
        for (; 0 < c10; ) {
          var d10 = c10 - 1 >>> 1, e13 = a10[d10];
          if (0 < g10(e13, b10))
            a10[d10] = b10, a10[c10] = e13, c10 = d10;
          else
            break a;
        }
    }
    function h10(a10) {
      return a10.length === 0 ? null : a10[0];
    }
    function k10(a10) {
      if (a10.length === 0)
        return null;
      var b10 = a10[0], c10 = a10.pop();
      if (c10 !== b10) {
        a10[0] = c10;
        a:
          for (var d10 = 0, e13 = a10.length, w10 = e13 >>> 1; d10 < w10; ) {
            var m10 = 2 * (d10 + 1) - 1, C10 = a10[m10], n10 = m10 + 1, x10 = a10[n10];
            if (0 > g10(C10, c10))
              n10 < e13 && 0 > g10(x10, C10) ? (a10[d10] = x10, a10[n10] = c10, d10 = n10) : (a10[d10] = C10, a10[m10] = c10, d10 = m10);
            else if (n10 < e13 && 0 > g10(x10, c10))
              a10[d10] = x10, a10[n10] = c10, d10 = n10;
            else
              break a;
          }
      }
      return b10;
    }
    function g10(a10, b10) {
      var c10 = a10.sortIndex - b10.sortIndex;
      return c10 !== 0 ? c10 : a10.id - b10.id;
    }
    if (typeof performance === "object" && typeof performance.now === "function") {
      l10 = performance;
      exports.unstable_now = function() {
        return l10.now();
      };
    } else {
      p10 = Date, q10 = p10.now();
      exports.unstable_now = function() {
        return p10.now() - q10;
      };
    }
    var l10;
    var p10;
    var q10;
    var r11 = [];
    var t12 = [];
    var u10 = 1;
    var v10 = null;
    var y10 = 3;
    var z10 = false;
    var A10 = false;
    var B10 = false;
    var D10 = typeof setTimeout === "function" ? setTimeout : null;
    var E10 = typeof clearTimeout === "function" ? clearTimeout : null;
    var F10 = typeof setImmediate !== "undefined" ? setImmediate : null;
    typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function G10(a10) {
      for (var b10 = h10(t12); b10 !== null; ) {
        if (b10.callback === null)
          k10(t12);
        else if (b10.startTime <= a10)
          k10(t12), b10.sortIndex = b10.expirationTime, f10(r11, b10);
        else
          break;
        b10 = h10(t12);
      }
    }
    function H10(a10) {
      B10 = false;
      G10(a10);
      if (!A10)
        if (h10(r11) !== null)
          A10 = true, I10(J10);
        else {
          var b10 = h10(t12);
          b10 !== null && K10(H10, b10.startTime - a10);
        }
    }
    function J10(a10, b10) {
      A10 = false;
      B10 && (B10 = false, E10(L10), L10 = -1);
      z10 = true;
      var c10 = y10;
      try {
        G10(b10);
        for (v10 = h10(r11); v10 !== null && (!(v10.expirationTime > b10) || a10 && !M10()); ) {
          var d10 = v10.callback;
          if (typeof d10 === "function") {
            v10.callback = null;
            y10 = v10.priorityLevel;
            var e13 = d10(v10.expirationTime <= b10);
            b10 = exports.unstable_now();
            typeof e13 === "function" ? v10.callback = e13 : v10 === h10(r11) && k10(r11);
            G10(b10);
          } else
            k10(r11);
          v10 = h10(r11);
        }
        if (v10 !== null)
          var w10 = true;
        else {
          var m10 = h10(t12);
          m10 !== null && K10(H10, m10.startTime - b10);
          w10 = false;
        }
        return w10;
      } finally {
        v10 = null, y10 = c10, z10 = false;
      }
    }
    var N10 = false;
    var O10 = null;
    var L10 = -1;
    var P10 = 5;
    var Q = -1;
    function M10() {
      return exports.unstable_now() - Q < P10 ? false : true;
    }
    function R10() {
      if (O10 !== null) {
        var a10 = exports.unstable_now();
        Q = a10;
        var b10 = true;
        try {
          b10 = O10(true, a10);
        } finally {
          b10 ? S10() : (N10 = false, O10 = null);
        }
      } else
        N10 = false;
    }
    var S10;
    if (typeof F10 === "function")
      S10 = function() {
        F10(R10);
      };
    else if (typeof MessageChannel !== "undefined") {
      T10 = new MessageChannel(), U10 = T10.port2;
      T10.port1.onmessage = R10;
      S10 = function() {
        U10.postMessage(null);
      };
    } else
      S10 = function() {
        D10(R10, 0);
      };
    var T10;
    var U10;
    function I10(a10) {
      O10 = a10;
      N10 || (N10 = true, S10());
    }
    function K10(a10, b10) {
      L10 = D10(function() {
        a10(exports.unstable_now());
      }, b10);
    }
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(a10) {
      a10.callback = null;
    };
    exports.unstable_continueExecution = function() {
      A10 || z10 || (A10 = true, I10(J10));
    };
    exports.unstable_forceFrameRate = function(a10) {
      0 > a10 || 125 < a10 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P10 = 0 < a10 ? Math.floor(1e3 / a10) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
      return y10;
    };
    exports.unstable_getFirstCallbackNode = function() {
      return h10(r11);
    };
    exports.unstable_next = function(a10) {
      switch (y10) {
        case 1:
        case 2:
        case 3:
          var b10 = 3;
          break;
        default:
          b10 = y10;
      }
      var c10 = y10;
      y10 = b10;
      try {
        return a10();
      } finally {
        y10 = c10;
      }
    };
    exports.unstable_pauseExecution = function() {
    };
    exports.unstable_requestPaint = function() {
    };
    exports.unstable_runWithPriority = function(a10, b10) {
      switch (a10) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          a10 = 3;
      }
      var c10 = y10;
      y10 = a10;
      try {
        return b10();
      } finally {
        y10 = c10;
      }
    };
    exports.unstable_scheduleCallback = function(a10, b10, c10) {
      var d10 = exports.unstable_now();
      typeof c10 === "object" && c10 !== null ? (c10 = c10.delay, c10 = typeof c10 === "number" && 0 < c10 ? d10 + c10 : d10) : c10 = d10;
      switch (a10) {
        case 1:
          var e13 = -1;
          break;
        case 2:
          e13 = 250;
          break;
        case 5:
          e13 = 1073741823;
          break;
        case 4:
          e13 = 1e4;
          break;
        default:
          e13 = 5e3;
      }
      e13 = c10 + e13;
      a10 = { id: u10++, callback: b10, priorityLevel: a10, startTime: c10, expirationTime: e13, sortIndex: -1 };
      c10 > d10 ? (a10.sortIndex = c10, f10(t12, a10), h10(r11) === null && a10 === h10(t12) && (B10 ? (E10(L10), L10 = -1) : B10 = true, K10(H10, c10 - d10))) : (a10.sortIndex = e13, f10(r11, a10), A10 || z10 || (A10 = true, I10(J10)));
      return a10;
    };
    exports.unstable_shouldYield = M10;
    exports.unstable_wrapCallback = function(a10) {
      var b10 = y10;
      return function() {
        var c10 = y10;
        y10 = b10;
        try {
          return a10.apply(this, arguments);
        } finally {
          y10 = c10;
        }
      };
    };
  }
});

// ../../node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "../../node_modules/scheduler/index.js"(exports, module2) {
    "use strict";
    if (true) {
      module2.exports = require_scheduler_production_min();
    } else {
      module2.exports = null;
    }
  }
});

// ../../node_modules/react-dom/cjs/react-dom.production.min.js
var require_react_dom_production_min = __commonJS({
  "../../node_modules/react-dom/cjs/react-dom.production.min.js"(exports) {
    "use strict";
    var aa2 = require_react();
    var ba2 = require_scheduler();
    function p10(a10) {
      for (var b10 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a10, c10 = 1; c10 < arguments.length; c10++)
        b10 += "&args[]=" + encodeURIComponent(arguments[c10]);
      return "Minified React error #" + a10 + "; visit " + b10 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var da2 = /* @__PURE__ */ new Set();
    var ea2 = {};
    function fa2(a10, b10) {
      ha2(a10, b10);
      ha2(a10 + "Capture", b10);
    }
    function ha2(a10, b10) {
      ea2[a10] = b10;
      for (a10 = 0; a10 < b10.length; a10++)
        da2.add(b10[a10]);
    }
    var ia2 = !(typeof window === "undefined" || typeof window.document === "undefined" || typeof window.document.createElement === "undefined");
    var ja2 = Object.prototype.hasOwnProperty;
    var ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/;
    var la2 = {};
    var ma2 = {};
    function na2(a10) {
      if (ja2.call(ma2, a10))
        return true;
      if (ja2.call(la2, a10))
        return false;
      if (ka.test(a10))
        return ma2[a10] = true;
      la2[a10] = true;
      return false;
    }
    function oa2(a10, b10, c10, d10) {
      if (c10 !== null && c10.type === 0)
        return false;
      switch (typeof b10) {
        case "function":
        case "symbol":
          return true;
        case "boolean":
          if (d10)
            return false;
          if (c10 !== null)
            return !c10.acceptsBooleans;
          a10 = a10.toLowerCase().slice(0, 5);
          return a10 !== "data-" && a10 !== "aria-";
        default:
          return false;
      }
    }
    function pa2(a10, b10, c10, d10) {
      if (b10 === null || typeof b10 === "undefined" || oa2(a10, b10, c10, d10))
        return true;
      if (d10)
        return false;
      if (c10 !== null)
        switch (c10.type) {
          case 3:
            return !b10;
          case 4:
            return b10 === false;
          case 5:
            return isNaN(b10);
          case 6:
            return isNaN(b10) || 1 > b10;
        }
      return false;
    }
    function t12(a10, b10, c10, d10, e13, f10, g10) {
      this.acceptsBooleans = b10 === 2 || b10 === 3 || b10 === 4;
      this.attributeName = d10;
      this.attributeNamespace = e13;
      this.mustUseProperty = c10;
      this.propertyName = a10;
      this.type = b10;
      this.sanitizeURL = f10;
      this.removeEmptyString = g10;
    }
    var z10 = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a10) {
      z10[a10] = new t12(a10, 0, false, a10, null, false, false);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a10) {
      var b10 = a10[0];
      z10[b10] = new t12(b10, 1, false, a10[1], null, false, false);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a10) {
      z10[a10] = new t12(a10, 2, false, a10.toLowerCase(), null, false, false);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a10) {
      z10[a10] = new t12(a10, 2, false, a10, null, false, false);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a10) {
      z10[a10] = new t12(a10, 3, false, a10.toLowerCase(), null, false, false);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a10) {
      z10[a10] = new t12(a10, 3, true, a10, null, false, false);
    });
    ["capture", "download"].forEach(function(a10) {
      z10[a10] = new t12(a10, 4, false, a10, null, false, false);
    });
    ["cols", "rows", "size", "span"].forEach(function(a10) {
      z10[a10] = new t12(a10, 6, false, a10, null, false, false);
    });
    ["rowSpan", "start"].forEach(function(a10) {
      z10[a10] = new t12(a10, 5, false, a10.toLowerCase(), null, false, false);
    });
    var qa2 = /[\-:]([a-z])/g;
    function ra2(a10) {
      return a10[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a10) {
      var b10 = a10.replace(qa2, ra2);
      z10[b10] = new t12(b10, 1, false, a10, null, false, false);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a10) {
      var b10 = a10.replace(qa2, ra2);
      z10[b10] = new t12(b10, 1, false, a10, "http://www.w3.org/1999/xlink", false, false);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a10) {
      var b10 = a10.replace(qa2, ra2);
      z10[b10] = new t12(b10, 1, false, a10, "http://www.w3.org/XML/1998/namespace", false, false);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a10) {
      z10[a10] = new t12(a10, 1, false, a10.toLowerCase(), null, false, false);
    });
    z10.xlinkHref = new t12("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
    ["src", "href", "action", "formAction"].forEach(function(a10) {
      z10[a10] = new t12(a10, 1, false, a10.toLowerCase(), null, true, true);
    });
    function sa2(a10, b10, c10, d10) {
      var e13 = z10.hasOwnProperty(b10) ? z10[b10] : null;
      if (e13 !== null ? e13.type !== 0 : d10 || !(2 < b10.length) || b10[0] !== "o" && b10[0] !== "O" || b10[1] !== "n" && b10[1] !== "N")
        pa2(b10, c10, e13, d10) && (c10 = null), d10 || e13 === null ? na2(b10) && (c10 === null ? a10.removeAttribute(b10) : a10.setAttribute(b10, "" + c10)) : e13.mustUseProperty ? a10[e13.propertyName] = c10 === null ? e13.type === 3 ? false : "" : c10 : (b10 = e13.attributeName, d10 = e13.attributeNamespace, c10 === null ? a10.removeAttribute(b10) : (e13 = e13.type, c10 = e13 === 3 || e13 === 4 && c10 === true ? "" : "" + c10, d10 ? a10.setAttributeNS(d10, b10, c10) : a10.setAttribute(b10, c10)));
    }
    var ta2 = aa2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    var ua2 = Symbol.for("react.element");
    var va2 = Symbol.for("react.portal");
    var wa2 = Symbol.for("react.fragment");
    var xa = Symbol.for("react.strict_mode");
    var za2 = Symbol.for("react.profiler");
    var Aa2 = Symbol.for("react.provider");
    var Ba2 = Symbol.for("react.context");
    var Ca2 = Symbol.for("react.forward_ref");
    var Da2 = Symbol.for("react.suspense");
    var Ea2 = Symbol.for("react.suspense_list");
    var Fa2 = Symbol.for("react.memo");
    var Ga2 = Symbol.for("react.lazy");
    Symbol.for("react.scope");
    Symbol.for("react.debug_trace_mode");
    var Ha2 = Symbol.for("react.offscreen");
    Symbol.for("react.legacy_hidden");
    Symbol.for("react.cache");
    Symbol.for("react.tracing_marker");
    var Ia2 = Symbol.iterator;
    function Ja2(a10) {
      if (a10 === null || typeof a10 !== "object")
        return null;
      a10 = Ia2 && a10[Ia2] || a10["@@iterator"];
      return typeof a10 === "function" ? a10 : null;
    }
    var A10 = Object.assign;
    var Ka;
    function La(a10) {
      if (Ka === void 0)
        try {
          throw Error();
        } catch (c10) {
          var b10 = c10.stack.trim().match(/\n( *(at )?)/);
          Ka = b10 && b10[1] || "";
        }
      return "\n" + Ka + a10;
    }
    var Ma2 = false;
    function Na(a10, b10) {
      if (!a10 || Ma2)
        return "";
      Ma2 = true;
      var c10 = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      try {
        if (b10)
          if (b10 = function() {
            throw Error();
          }, Object.defineProperty(b10.prototype, "props", { set: function() {
            throw Error();
          } }), typeof Reflect === "object" && Reflect.construct) {
            try {
              Reflect.construct(b10, []);
            } catch (l10) {
              var d10 = l10;
            }
            Reflect.construct(a10, [], b10);
          } else {
            try {
              b10.call();
            } catch (l10) {
              d10 = l10;
            }
            a10.call(b10.prototype);
          }
        else {
          try {
            throw Error();
          } catch (l10) {
            d10 = l10;
          }
          a10();
        }
      } catch (l10) {
        if (l10 && d10 && typeof l10.stack === "string") {
          for (var e13 = l10.stack.split("\n"), f10 = d10.stack.split("\n"), g10 = e13.length - 1, h10 = f10.length - 1; 1 <= g10 && 0 <= h10 && e13[g10] !== f10[h10]; )
            h10--;
          for (; 1 <= g10 && 0 <= h10; g10--, h10--)
            if (e13[g10] !== f10[h10]) {
              if (g10 !== 1 || h10 !== 1) {
                do
                  if (g10--, h10--, 0 > h10 || e13[g10] !== f10[h10]) {
                    var k10 = "\n" + e13[g10].replace(" at new ", " at ");
                    a10.displayName && k10.includes("<anonymous>") && (k10 = k10.replace("<anonymous>", a10.displayName));
                    return k10;
                  }
                while (1 <= g10 && 0 <= h10);
              }
              break;
            }
        }
      } finally {
        Ma2 = false, Error.prepareStackTrace = c10;
      }
      return (a10 = a10 ? a10.displayName || a10.name : "") ? La(a10) : "";
    }
    function Oa(a10) {
      switch (a10.tag) {
        case 5:
          return La(a10.type);
        case 16:
          return La("Lazy");
        case 13:
          return La("Suspense");
        case 19:
          return La("SuspenseList");
        case 0:
        case 2:
        case 15:
          return a10 = Na(a10.type, false), a10;
        case 11:
          return a10 = Na(a10.type.render, false), a10;
        case 1:
          return a10 = Na(a10.type, true), a10;
        default:
          return "";
      }
    }
    function Pa2(a10) {
      if (a10 == null)
        return null;
      if (typeof a10 === "function")
        return a10.displayName || a10.name || null;
      if (typeof a10 === "string")
        return a10;
      switch (a10) {
        case wa2:
          return "Fragment";
        case va2:
          return "Portal";
        case za2:
          return "Profiler";
        case xa:
          return "StrictMode";
        case Da2:
          return "Suspense";
        case Ea2:
          return "SuspenseList";
      }
      if (typeof a10 === "object")
        switch (a10.$$typeof) {
          case Ba2:
            return (a10.displayName || "Context") + ".Consumer";
          case Aa2:
            return (a10._context.displayName || "Context") + ".Provider";
          case Ca2:
            var b10 = a10.render;
            a10 = a10.displayName;
            a10 || (a10 = b10.displayName || b10.name || "", a10 = a10 !== "" ? "ForwardRef(" + a10 + ")" : "ForwardRef");
            return a10;
          case Fa2:
            return b10 = a10.displayName || null, b10 !== null ? b10 : Pa2(a10.type) || "Memo";
          case Ga2:
            b10 = a10._payload;
            a10 = a10._init;
            try {
              return Pa2(a10(b10));
            } catch (c10) {
            }
        }
      return null;
    }
    function Qa2(a10) {
      var b10 = a10.type;
      switch (a10.tag) {
        case 24:
          return "Cache";
        case 9:
          return (b10.displayName || "Context") + ".Consumer";
        case 10:
          return (b10._context.displayName || "Context") + ".Provider";
        case 18:
          return "DehydratedFragment";
        case 11:
          return a10 = b10.render, a10 = a10.displayName || a10.name || "", b10.displayName || (a10 !== "" ? "ForwardRef(" + a10 + ")" : "ForwardRef");
        case 7:
          return "Fragment";
        case 5:
          return b10;
        case 4:
          return "Portal";
        case 3:
          return "Root";
        case 6:
          return "Text";
        case 16:
          return Pa2(b10);
        case 8:
          return b10 === xa ? "StrictMode" : "Mode";
        case 22:
          return "Offscreen";
        case 12:
          return "Profiler";
        case 21:
          return "Scope";
        case 13:
          return "Suspense";
        case 19:
          return "SuspenseList";
        case 25:
          return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
          if (typeof b10 === "function")
            return b10.displayName || b10.name || null;
          if (typeof b10 === "string")
            return b10;
      }
      return null;
    }
    function Ra2(a10) {
      switch (typeof a10) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return a10;
        case "object":
          return a10;
        default:
          return "";
      }
    }
    function Sa2(a10) {
      var b10 = a10.type;
      return (a10 = a10.nodeName) && a10.toLowerCase() === "input" && (b10 === "checkbox" || b10 === "radio");
    }
    function Ta2(a10) {
      var b10 = Sa2(a10) ? "checked" : "value", c10 = Object.getOwnPropertyDescriptor(a10.constructor.prototype, b10), d10 = "" + a10[b10];
      if (!a10.hasOwnProperty(b10) && typeof c10 !== "undefined" && typeof c10.get === "function" && typeof c10.set === "function") {
        var e13 = c10.get, f10 = c10.set;
        Object.defineProperty(a10, b10, { configurable: true, get: function() {
          return e13.call(this);
        }, set: function(a11) {
          d10 = "" + a11;
          f10.call(this, a11);
        } });
        Object.defineProperty(a10, b10, { enumerable: c10.enumerable });
        return { getValue: function() {
          return d10;
        }, setValue: function(a11) {
          d10 = "" + a11;
        }, stopTracking: function() {
          a10._valueTracker = null;
          delete a10[b10];
        } };
      }
    }
    function Ua(a10) {
      a10._valueTracker || (a10._valueTracker = Ta2(a10));
    }
    function Va2(a10) {
      if (!a10)
        return false;
      var b10 = a10._valueTracker;
      if (!b10)
        return true;
      var c10 = b10.getValue();
      var d10 = "";
      a10 && (d10 = Sa2(a10) ? a10.checked ? "true" : "false" : a10.value);
      a10 = d10;
      return a10 !== c10 ? (b10.setValue(a10), true) : false;
    }
    function Wa(a10) {
      a10 = a10 || (typeof document !== "undefined" ? document : void 0);
      if (typeof a10 === "undefined")
        return null;
      try {
        return a10.activeElement || a10.body;
      } catch (b10) {
        return a10.body;
      }
    }
    function Xa2(a10, b10) {
      var c10 = b10.checked;
      return A10({}, b10, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c10 != null ? c10 : a10._wrapperState.initialChecked });
    }
    function Ya2(a10, b10) {
      var c10 = b10.defaultValue == null ? "" : b10.defaultValue, d10 = b10.checked != null ? b10.checked : b10.defaultChecked;
      c10 = Ra2(b10.value != null ? b10.value : c10);
      a10._wrapperState = { initialChecked: d10, initialValue: c10, controlled: b10.type === "checkbox" || b10.type === "radio" ? b10.checked != null : b10.value != null };
    }
    function Za(a10, b10) {
      b10 = b10.checked;
      b10 != null && sa2(a10, "checked", b10, false);
    }
    function $a2(a10, b10) {
      Za(a10, b10);
      var c10 = Ra2(b10.value), d10 = b10.type;
      if (c10 != null)
        if (d10 === "number") {
          if (c10 === 0 && a10.value === "" || a10.value != c10)
            a10.value = "" + c10;
        } else
          a10.value !== "" + c10 && (a10.value = "" + c10);
      else if (d10 === "submit" || d10 === "reset") {
        a10.removeAttribute("value");
        return;
      }
      b10.hasOwnProperty("value") ? bb2(a10, b10.type, c10) : b10.hasOwnProperty("defaultValue") && bb2(a10, b10.type, Ra2(b10.defaultValue));
      b10.checked == null && b10.defaultChecked != null && (a10.defaultChecked = !!b10.defaultChecked);
    }
    function cb2(a10, b10, c10) {
      if (b10.hasOwnProperty("value") || b10.hasOwnProperty("defaultValue")) {
        var d10 = b10.type;
        if (!(d10 !== "submit" && d10 !== "reset" || b10.value !== void 0 && b10.value !== null))
          return;
        b10 = "" + a10._wrapperState.initialValue;
        c10 || b10 === a10.value || (a10.value = b10);
        a10.defaultValue = b10;
      }
      c10 = a10.name;
      c10 !== "" && (a10.name = "");
      a10.defaultChecked = !!a10._wrapperState.initialChecked;
      c10 !== "" && (a10.name = c10);
    }
    function bb2(a10, b10, c10) {
      if (b10 !== "number" || Wa(a10.ownerDocument) !== a10)
        c10 == null ? a10.defaultValue = "" + a10._wrapperState.initialValue : a10.defaultValue !== "" + c10 && (a10.defaultValue = "" + c10);
    }
    var db2 = Array.isArray;
    function eb2(a10, b10, c10, d10) {
      a10 = a10.options;
      if (b10) {
        b10 = {};
        for (var e13 = 0; e13 < c10.length; e13++)
          b10["$" + c10[e13]] = true;
        for (c10 = 0; c10 < a10.length; c10++)
          e13 = b10.hasOwnProperty("$" + a10[c10].value), a10[c10].selected !== e13 && (a10[c10].selected = e13), e13 && d10 && (a10[c10].defaultSelected = true);
      } else {
        c10 = "" + Ra2(c10);
        b10 = null;
        for (e13 = 0; e13 < a10.length; e13++) {
          if (a10[e13].value === c10) {
            a10[e13].selected = true;
            d10 && (a10[e13].defaultSelected = true);
            return;
          }
          b10 !== null || a10[e13].disabled || (b10 = a10[e13]);
        }
        b10 !== null && (b10.selected = true);
      }
    }
    function fb2(a10, b10) {
      if (b10.dangerouslySetInnerHTML != null)
        throw Error(p10(91));
      return A10({}, b10, { value: void 0, defaultValue: void 0, children: "" + a10._wrapperState.initialValue });
    }
    function gb2(a10, b10) {
      var c10 = b10.value;
      if (c10 == null) {
        c10 = b10.children;
        b10 = b10.defaultValue;
        if (c10 != null) {
          if (b10 != null)
            throw Error(p10(92));
          if (db2(c10)) {
            if (1 < c10.length)
              throw Error(p10(93));
            c10 = c10[0];
          }
          b10 = c10;
        }
        b10 == null && (b10 = "");
        c10 = b10;
      }
      a10._wrapperState = { initialValue: Ra2(c10) };
    }
    function hb2(a10, b10) {
      var c10 = Ra2(b10.value), d10 = Ra2(b10.defaultValue);
      c10 != null && (c10 = "" + c10, c10 !== a10.value && (a10.value = c10), b10.defaultValue == null && a10.defaultValue !== c10 && (a10.defaultValue = c10));
      d10 != null && (a10.defaultValue = "" + d10);
    }
    function ib2(a10) {
      var b10 = a10.textContent;
      b10 === a10._wrapperState.initialValue && b10 !== "" && b10 !== null && (a10.value = b10);
    }
    function jb2(a10) {
      switch (a10) {
        case "svg":
          return "http://www.w3.org/2000/svg";
        case "math":
          return "http://www.w3.org/1998/Math/MathML";
        default:
          return "http://www.w3.org/1999/xhtml";
      }
    }
    function kb2(a10, b10) {
      return a10 == null || a10 === "http://www.w3.org/1999/xhtml" ? jb2(b10) : a10 === "http://www.w3.org/2000/svg" && b10 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a10;
    }
    var lb2;
    var mb2 = function(a10) {
      return typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction ? function(b10, c10, d10, e13) {
        MSApp.execUnsafeLocalFunction(function() {
          return a10(b10, c10, d10, e13);
        });
      } : a10;
    }(function(a10, b10) {
      if (a10.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a10)
        a10.innerHTML = b10;
      else {
        lb2 = lb2 || document.createElement("div");
        lb2.innerHTML = "<svg>" + b10.valueOf().toString() + "</svg>";
        for (b10 = lb2.firstChild; a10.firstChild; )
          a10.removeChild(a10.firstChild);
        for (; b10.firstChild; )
          a10.appendChild(b10.firstChild);
      }
    });
    function nb2(a10, b10) {
      if (b10) {
        var c10 = a10.firstChild;
        if (c10 && c10 === a10.lastChild && c10.nodeType === 3) {
          c10.nodeValue = b10;
          return;
        }
      }
      a10.textContent = b10;
    }
    var ob2 = {
      animationIterationCount: true,
      aspectRatio: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      columns: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridArea: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowSpan: true,
      gridRowStart: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnSpan: true,
      gridColumnStart: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true
    };
    var pb2 = ["Webkit", "ms", "Moz", "O"];
    Object.keys(ob2).forEach(function(a10) {
      pb2.forEach(function(b10) {
        b10 = b10 + a10.charAt(0).toUpperCase() + a10.substring(1);
        ob2[b10] = ob2[a10];
      });
    });
    function qb2(a10, b10, c10) {
      return b10 == null || typeof b10 === "boolean" || b10 === "" ? "" : c10 || typeof b10 !== "number" || b10 === 0 || ob2.hasOwnProperty(a10) && ob2[a10] ? ("" + b10).trim() : b10 + "px";
    }
    function rb2(a10, b10) {
      a10 = a10.style;
      for (var c10 in b10)
        if (b10.hasOwnProperty(c10)) {
          var d10 = c10.indexOf("--") === 0, e13 = qb2(c10, b10[c10], d10);
          c10 === "float" && (c10 = "cssFloat");
          d10 ? a10.setProperty(c10, e13) : a10[c10] = e13;
        }
    }
    var sb2 = A10({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
    function tb2(a10, b10) {
      if (b10) {
        if (sb2[a10] && (b10.children != null || b10.dangerouslySetInnerHTML != null))
          throw Error(p10(137, a10));
        if (b10.dangerouslySetInnerHTML != null) {
          if (b10.children != null)
            throw Error(p10(60));
          if (typeof b10.dangerouslySetInnerHTML !== "object" || !("__html" in b10.dangerouslySetInnerHTML))
            throw Error(p10(61));
        }
        if (b10.style != null && typeof b10.style !== "object")
          throw Error(p10(62));
      }
    }
    function ub2(a10, b10) {
      if (a10.indexOf("-") === -1)
        return typeof b10.is === "string";
      switch (a10) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return false;
        default:
          return true;
      }
    }
    var vb2 = null;
    function wb2(a10) {
      a10 = a10.target || a10.srcElement || window;
      a10.correspondingUseElement && (a10 = a10.correspondingUseElement);
      return a10.nodeType === 3 ? a10.parentNode : a10;
    }
    var xb2 = null;
    var yb2 = null;
    var zb2 = null;
    function Ab2(a10) {
      if (a10 = Bb2(a10)) {
        if (typeof xb2 !== "function")
          throw Error(p10(280));
        var b10 = a10.stateNode;
        b10 && (b10 = Cb2(b10), xb2(a10.stateNode, a10.type, b10));
      }
    }
    function Db2(a10) {
      yb2 ? zb2 ? zb2.push(a10) : zb2 = [a10] : yb2 = a10;
    }
    function Eb2() {
      if (yb2) {
        var a10 = yb2, b10 = zb2;
        zb2 = yb2 = null;
        Ab2(a10);
        if (b10)
          for (a10 = 0; a10 < b10.length; a10++)
            Ab2(b10[a10]);
      }
    }
    function Fb2(a10, b10) {
      return a10(b10);
    }
    function Gb2() {
    }
    var Hb2 = false;
    function Ib2(a10, b10, c10) {
      if (Hb2)
        return a10(b10, c10);
      Hb2 = true;
      try {
        return Fb2(a10, b10, c10);
      } finally {
        if (Hb2 = false, yb2 !== null || zb2 !== null)
          Gb2(), Eb2();
      }
    }
    function Jb2(a10, b10) {
      var c10 = a10.stateNode;
      if (c10 === null)
        return null;
      var d10 = Cb2(c10);
      if (d10 === null)
        return null;
      c10 = d10[b10];
      a:
        switch (b10) {
          case "onClick":
          case "onClickCapture":
          case "onDoubleClick":
          case "onDoubleClickCapture":
          case "onMouseDown":
          case "onMouseDownCapture":
          case "onMouseMove":
          case "onMouseMoveCapture":
          case "onMouseUp":
          case "onMouseUpCapture":
          case "onMouseEnter":
            (d10 = !d10.disabled) || (a10 = a10.type, d10 = !(a10 === "button" || a10 === "input" || a10 === "select" || a10 === "textarea"));
            a10 = !d10;
            break a;
          default:
            a10 = false;
        }
      if (a10)
        return null;
      if (c10 && typeof c10 !== "function")
        throw Error(p10(231, b10, typeof c10));
      return c10;
    }
    var Kb2 = false;
    if (ia2)
      try {
        Lb2 = {};
        Object.defineProperty(Lb2, "passive", { get: function() {
          Kb2 = true;
        } });
        window.addEventListener("test", Lb2, Lb2);
        window.removeEventListener("test", Lb2, Lb2);
      } catch (a10) {
        Kb2 = false;
      }
    var Lb2;
    function Mb2(a10, b10, c10, d10, e13, f10, g10, h10, k10) {
      var l10 = Array.prototype.slice.call(arguments, 3);
      try {
        b10.apply(c10, l10);
      } catch (n10) {
        this.onError(n10);
      }
    }
    var Nb2 = false;
    var Ob2 = null;
    var Pb2 = false;
    var Qb2 = null;
    var Rb2 = { onError: function(a10) {
      Nb2 = true;
      Ob2 = a10;
    } };
    function Sb2(a10, b10, c10, d10, e13, f10, g10, h10, k10) {
      Nb2 = false;
      Ob2 = null;
      Mb2.apply(Rb2, arguments);
    }
    function Tb2(a10, b10, c10, d10, e13, f10, g10, h10, k10) {
      Sb2.apply(this, arguments);
      if (Nb2) {
        if (Nb2) {
          var l10 = Ob2;
          Nb2 = false;
          Ob2 = null;
        } else
          throw Error(p10(198));
        Pb2 || (Pb2 = true, Qb2 = l10);
      }
    }
    function Ub2(a10) {
      var b10 = a10, c10 = a10;
      if (a10.alternate)
        for (; b10.return; )
          b10 = b10.return;
      else {
        a10 = b10;
        do
          b10 = a10, (b10.flags & 4098) !== 0 && (c10 = b10.return), a10 = b10.return;
        while (a10);
      }
      return b10.tag === 3 ? c10 : null;
    }
    function Vb2(a10) {
      if (a10.tag === 13) {
        var b10 = a10.memoizedState;
        b10 === null && (a10 = a10.alternate, a10 !== null && (b10 = a10.memoizedState));
        if (b10 !== null)
          return b10.dehydrated;
      }
      return null;
    }
    function Wb2(a10) {
      if (Ub2(a10) !== a10)
        throw Error(p10(188));
    }
    function Xb2(a10) {
      var b10 = a10.alternate;
      if (!b10) {
        b10 = Ub2(a10);
        if (b10 === null)
          throw Error(p10(188));
        return b10 !== a10 ? null : a10;
      }
      for (var c10 = a10, d10 = b10; ; ) {
        var e13 = c10.return;
        if (e13 === null)
          break;
        var f10 = e13.alternate;
        if (f10 === null) {
          d10 = e13.return;
          if (d10 !== null) {
            c10 = d10;
            continue;
          }
          break;
        }
        if (e13.child === f10.child) {
          for (f10 = e13.child; f10; ) {
            if (f10 === c10)
              return Wb2(e13), a10;
            if (f10 === d10)
              return Wb2(e13), b10;
            f10 = f10.sibling;
          }
          throw Error(p10(188));
        }
        if (c10.return !== d10.return)
          c10 = e13, d10 = f10;
        else {
          for (var g10 = false, h10 = e13.child; h10; ) {
            if (h10 === c10) {
              g10 = true;
              c10 = e13;
              d10 = f10;
              break;
            }
            if (h10 === d10) {
              g10 = true;
              d10 = e13;
              c10 = f10;
              break;
            }
            h10 = h10.sibling;
          }
          if (!g10) {
            for (h10 = f10.child; h10; ) {
              if (h10 === c10) {
                g10 = true;
                c10 = f10;
                d10 = e13;
                break;
              }
              if (h10 === d10) {
                g10 = true;
                d10 = f10;
                c10 = e13;
                break;
              }
              h10 = h10.sibling;
            }
            if (!g10)
              throw Error(p10(189));
          }
        }
        if (c10.alternate !== d10)
          throw Error(p10(190));
      }
      if (c10.tag !== 3)
        throw Error(p10(188));
      return c10.stateNode.current === c10 ? a10 : b10;
    }
    function Yb2(a10) {
      a10 = Xb2(a10);
      return a10 !== null ? Zb2(a10) : null;
    }
    function Zb2(a10) {
      if (a10.tag === 5 || a10.tag === 6)
        return a10;
      for (a10 = a10.child; a10 !== null; ) {
        var b10 = Zb2(a10);
        if (b10 !== null)
          return b10;
        a10 = a10.sibling;
      }
      return null;
    }
    var $b2 = ba2.unstable_scheduleCallback;
    var ac2 = ba2.unstable_cancelCallback;
    var bc2 = ba2.unstable_shouldYield;
    var cc2 = ba2.unstable_requestPaint;
    var B10 = ba2.unstable_now;
    var dc2 = ba2.unstable_getCurrentPriorityLevel;
    var ec2 = ba2.unstable_ImmediatePriority;
    var fc = ba2.unstable_UserBlockingPriority;
    var gc = ba2.unstable_NormalPriority;
    var hc2 = ba2.unstable_LowPriority;
    var ic2 = ba2.unstable_IdlePriority;
    var jc = null;
    var kc2 = null;
    function lc2(a10) {
      if (kc2 && typeof kc2.onCommitFiberRoot === "function")
        try {
          kc2.onCommitFiberRoot(jc, a10, void 0, (a10.current.flags & 128) === 128);
        } catch (b10) {
        }
    }
    var nc2 = Math.clz32 ? Math.clz32 : mc2;
    var oc2 = Math.log;
    var pc2 = Math.LN2;
    function mc2(a10) {
      a10 >>>= 0;
      return a10 === 0 ? 32 : 31 - (oc2(a10) / pc2 | 0) | 0;
    }
    var qc = 64;
    var rc2 = 4194304;
    function sc2(a10) {
      switch (a10 & -a10) {
        case 1:
          return 1;
        case 2:
          return 2;
        case 4:
          return 4;
        case 8:
          return 8;
        case 16:
          return 16;
        case 32:
          return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return a10 & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return a10 & 130023424;
        case 134217728:
          return 134217728;
        case 268435456:
          return 268435456;
        case 536870912:
          return 536870912;
        case 1073741824:
          return 1073741824;
        default:
          return a10;
      }
    }
    function tc2(a10, b10) {
      var c10 = a10.pendingLanes;
      if (c10 === 0)
        return 0;
      var d10 = 0, e13 = a10.suspendedLanes, f10 = a10.pingedLanes, g10 = c10 & 268435455;
      if (g10 !== 0) {
        var h10 = g10 & ~e13;
        h10 !== 0 ? d10 = sc2(h10) : (f10 &= g10, f10 !== 0 && (d10 = sc2(f10)));
      } else
        g10 = c10 & ~e13, g10 !== 0 ? d10 = sc2(g10) : f10 !== 0 && (d10 = sc2(f10));
      if (d10 === 0)
        return 0;
      if (b10 !== 0 && b10 !== d10 && (b10 & e13) === 0 && (e13 = d10 & -d10, f10 = b10 & -b10, e13 >= f10 || e13 === 16 && (f10 & 4194240) !== 0))
        return b10;
      (d10 & 4) !== 0 && (d10 |= c10 & 16);
      b10 = a10.entangledLanes;
      if (b10 !== 0)
        for (a10 = a10.entanglements, b10 &= d10; 0 < b10; )
          c10 = 31 - nc2(b10), e13 = 1 << c10, d10 |= a10[c10], b10 &= ~e13;
      return d10;
    }
    function uc2(a10, b10) {
      switch (a10) {
        case 1:
        case 2:
        case 4:
          return b10 + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return b10 + 5e3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
          return -1;
        default:
          return -1;
      }
    }
    function vc2(a10, b10) {
      for (var c10 = a10.suspendedLanes, d10 = a10.pingedLanes, e13 = a10.expirationTimes, f10 = a10.pendingLanes; 0 < f10; ) {
        var g10 = 31 - nc2(f10), h10 = 1 << g10, k10 = e13[g10];
        if (k10 === -1) {
          if ((h10 & c10) === 0 || (h10 & d10) !== 0)
            e13[g10] = uc2(h10, b10);
        } else
          k10 <= b10 && (a10.expiredLanes |= h10);
        f10 &= ~h10;
      }
    }
    function wc2(a10) {
      a10 = a10.pendingLanes & -1073741825;
      return a10 !== 0 ? a10 : a10 & 1073741824 ? 1073741824 : 0;
    }
    function xc2() {
      var a10 = qc;
      qc <<= 1;
      (qc & 4194240) === 0 && (qc = 64);
      return a10;
    }
    function yc2(a10) {
      for (var b10 = [], c10 = 0; 31 > c10; c10++)
        b10.push(a10);
      return b10;
    }
    function zc(a10, b10, c10) {
      a10.pendingLanes |= b10;
      b10 !== 536870912 && (a10.suspendedLanes = 0, a10.pingedLanes = 0);
      a10 = a10.eventTimes;
      b10 = 31 - nc2(b10);
      a10[b10] = c10;
    }
    function Ac(a10, b10) {
      var c10 = a10.pendingLanes & ~b10;
      a10.pendingLanes = b10;
      a10.suspendedLanes = 0;
      a10.pingedLanes = 0;
      a10.expiredLanes &= b10;
      a10.mutableReadLanes &= b10;
      a10.entangledLanes &= b10;
      b10 = a10.entanglements;
      var d10 = a10.eventTimes;
      for (a10 = a10.expirationTimes; 0 < c10; ) {
        var e13 = 31 - nc2(c10), f10 = 1 << e13;
        b10[e13] = 0;
        d10[e13] = -1;
        a10[e13] = -1;
        c10 &= ~f10;
      }
    }
    function Bc2(a10, b10) {
      var c10 = a10.entangledLanes |= b10;
      for (a10 = a10.entanglements; c10; ) {
        var d10 = 31 - nc2(c10), e13 = 1 << d10;
        e13 & b10 | a10[d10] & b10 && (a10[d10] |= b10);
        c10 &= ~e13;
      }
    }
    var C10 = 0;
    function Cc2(a10) {
      a10 &= -a10;
      return 1 < a10 ? 4 < a10 ? (a10 & 268435455) !== 0 ? 16 : 536870912 : 4 : 1;
    }
    var Dc;
    var Ec2;
    var Fc2;
    var Gc;
    var Hc;
    var Ic2 = false;
    var Jc2 = [];
    var Kc = null;
    var Lc = null;
    var Mc2 = null;
    var Nc = /* @__PURE__ */ new Map();
    var Oc = /* @__PURE__ */ new Map();
    var Pc2 = [];
    var Qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
    function Rc(a10, b10) {
      switch (a10) {
        case "focusin":
        case "focusout":
          Kc = null;
          break;
        case "dragenter":
        case "dragleave":
          Lc = null;
          break;
        case "mouseover":
        case "mouseout":
          Mc2 = null;
          break;
        case "pointerover":
        case "pointerout":
          Nc.delete(b10.pointerId);
          break;
        case "gotpointercapture":
        case "lostpointercapture":
          Oc.delete(b10.pointerId);
      }
    }
    function Sc2(a10, b10, c10, d10, e13, f10) {
      if (a10 === null || a10.nativeEvent !== f10)
        return a10 = { blockedOn: b10, domEventName: c10, eventSystemFlags: d10, nativeEvent: f10, targetContainers: [e13] }, b10 !== null && (b10 = Bb2(b10), b10 !== null && Ec2(b10)), a10;
      a10.eventSystemFlags |= d10;
      b10 = a10.targetContainers;
      e13 !== null && b10.indexOf(e13) === -1 && b10.push(e13);
      return a10;
    }
    function Tc2(a10, b10, c10, d10, e13) {
      switch (b10) {
        case "focusin":
          return Kc = Sc2(Kc, a10, b10, c10, d10, e13), true;
        case "dragenter":
          return Lc = Sc2(Lc, a10, b10, c10, d10, e13), true;
        case "mouseover":
          return Mc2 = Sc2(Mc2, a10, b10, c10, d10, e13), true;
        case "pointerover":
          var f10 = e13.pointerId;
          Nc.set(f10, Sc2(Nc.get(f10) || null, a10, b10, c10, d10, e13));
          return true;
        case "gotpointercapture":
          return f10 = e13.pointerId, Oc.set(f10, Sc2(Oc.get(f10) || null, a10, b10, c10, d10, e13)), true;
      }
      return false;
    }
    function Uc(a10) {
      var b10 = Vc2(a10.target);
      if (b10 !== null) {
        var c10 = Ub2(b10);
        if (c10 !== null) {
          if (b10 = c10.tag, b10 === 13) {
            if (b10 = Vb2(c10), b10 !== null) {
              a10.blockedOn = b10;
              Hc(a10.priority, function() {
                Fc2(c10);
              });
              return;
            }
          } else if (b10 === 3 && c10.stateNode.current.memoizedState.isDehydrated) {
            a10.blockedOn = c10.tag === 3 ? c10.stateNode.containerInfo : null;
            return;
          }
        }
      }
      a10.blockedOn = null;
    }
    function Wc2(a10) {
      if (a10.blockedOn !== null)
        return false;
      for (var b10 = a10.targetContainers; 0 < b10.length; ) {
        var c10 = Xc(a10.domEventName, a10.eventSystemFlags, b10[0], a10.nativeEvent);
        if (c10 === null) {
          c10 = a10.nativeEvent;
          var d10 = new c10.constructor(c10.type, c10);
          vb2 = d10;
          c10.target.dispatchEvent(d10);
          vb2 = null;
        } else
          return b10 = Bb2(c10), b10 !== null && Ec2(b10), a10.blockedOn = c10, false;
        b10.shift();
      }
      return true;
    }
    function Yc(a10, b10, c10) {
      Wc2(a10) && c10.delete(b10);
    }
    function Zc() {
      Ic2 = false;
      Kc !== null && Wc2(Kc) && (Kc = null);
      Lc !== null && Wc2(Lc) && (Lc = null);
      Mc2 !== null && Wc2(Mc2) && (Mc2 = null);
      Nc.forEach(Yc);
      Oc.forEach(Yc);
    }
    function $c(a10, b10) {
      a10.blockedOn === b10 && (a10.blockedOn = null, Ic2 || (Ic2 = true, ba2.unstable_scheduleCallback(ba2.unstable_NormalPriority, Zc)));
    }
    function ad2(a10) {
      function b10(b11) {
        return $c(b11, a10);
      }
      if (0 < Jc2.length) {
        $c(Jc2[0], a10);
        for (var c10 = 1; c10 < Jc2.length; c10++) {
          var d10 = Jc2[c10];
          d10.blockedOn === a10 && (d10.blockedOn = null);
        }
      }
      Kc !== null && $c(Kc, a10);
      Lc !== null && $c(Lc, a10);
      Mc2 !== null && $c(Mc2, a10);
      Nc.forEach(b10);
      Oc.forEach(b10);
      for (c10 = 0; c10 < Pc2.length; c10++)
        d10 = Pc2[c10], d10.blockedOn === a10 && (d10.blockedOn = null);
      for (; 0 < Pc2.length && (c10 = Pc2[0], c10.blockedOn === null); )
        Uc(c10), c10.blockedOn === null && Pc2.shift();
    }
    var bd2 = ta2.ReactCurrentBatchConfig;
    var cd2 = true;
    function dd(a10, b10, c10, d10) {
      var e13 = C10, f10 = bd2.transition;
      bd2.transition = null;
      try {
        C10 = 1, ed2(a10, b10, c10, d10);
      } finally {
        C10 = e13, bd2.transition = f10;
      }
    }
    function fd2(a10, b10, c10, d10) {
      var e13 = C10, f10 = bd2.transition;
      bd2.transition = null;
      try {
        C10 = 4, ed2(a10, b10, c10, d10);
      } finally {
        C10 = e13, bd2.transition = f10;
      }
    }
    function ed2(a10, b10, c10, d10) {
      if (cd2) {
        var e13 = Xc(a10, b10, c10, d10);
        if (e13 === null)
          gd2(a10, b10, d10, hd2, c10), Rc(a10, d10);
        else if (Tc2(e13, a10, b10, c10, d10))
          d10.stopPropagation();
        else if (Rc(a10, d10), b10 & 4 && -1 < Qc.indexOf(a10)) {
          for (; e13 !== null; ) {
            var f10 = Bb2(e13);
            f10 !== null && Dc(f10);
            f10 = Xc(a10, b10, c10, d10);
            f10 === null && gd2(a10, b10, d10, hd2, c10);
            if (f10 === e13)
              break;
            e13 = f10;
          }
          e13 !== null && d10.stopPropagation();
        } else
          gd2(a10, b10, d10, null, c10);
      }
    }
    var hd2 = null;
    function Xc(a10, b10, c10, d10) {
      hd2 = null;
      a10 = wb2(d10);
      a10 = Vc2(a10);
      if (a10 !== null)
        if (b10 = Ub2(a10), b10 === null)
          a10 = null;
        else if (c10 = b10.tag, c10 === 13) {
          a10 = Vb2(b10);
          if (a10 !== null)
            return a10;
          a10 = null;
        } else if (c10 === 3) {
          if (b10.stateNode.current.memoizedState.isDehydrated)
            return b10.tag === 3 ? b10.stateNode.containerInfo : null;
          a10 = null;
        } else
          b10 !== a10 && (a10 = null);
      hd2 = a10;
      return null;
    }
    function id2(a10) {
      switch (a10) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return 1;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return 4;
        case "message":
          switch (dc2()) {
            case ec2:
              return 1;
            case fc:
              return 4;
            case gc:
            case hc2:
              return 16;
            case ic2:
              return 536870912;
            default:
              return 16;
          }
        default:
          return 16;
      }
    }
    var jd2 = null;
    var kd = null;
    var ld2 = null;
    function md() {
      if (ld2)
        return ld2;
      var a10, b10 = kd, c10 = b10.length, d10, e13 = "value" in jd2 ? jd2.value : jd2.textContent, f10 = e13.length;
      for (a10 = 0; a10 < c10 && b10[a10] === e13[a10]; a10++)
        ;
      var g10 = c10 - a10;
      for (d10 = 1; d10 <= g10 && b10[c10 - d10] === e13[f10 - d10]; d10++)
        ;
      return ld2 = e13.slice(a10, 1 < d10 ? 1 - d10 : void 0);
    }
    function nd(a10) {
      var b10 = a10.keyCode;
      "charCode" in a10 ? (a10 = a10.charCode, a10 === 0 && b10 === 13 && (a10 = 13)) : a10 = b10;
      a10 === 10 && (a10 = 13);
      return 32 <= a10 || a10 === 13 ? a10 : 0;
    }
    function od2() {
      return true;
    }
    function pd2() {
      return false;
    }
    function qd2(a10) {
      function b10(b11, d10, e13, f10, g10) {
        this._reactName = b11;
        this._targetInst = e13;
        this.type = d10;
        this.nativeEvent = f10;
        this.target = g10;
        this.currentTarget = null;
        for (var c10 in a10)
          a10.hasOwnProperty(c10) && (b11 = a10[c10], this[c10] = b11 ? b11(f10) : f10[c10]);
        this.isDefaultPrevented = (f10.defaultPrevented != null ? f10.defaultPrevented : f10.returnValue === false) ? od2 : pd2;
        this.isPropagationStopped = pd2;
        return this;
      }
      A10(b10.prototype, { preventDefault: function() {
        this.defaultPrevented = true;
        var a11 = this.nativeEvent;
        a11 && (a11.preventDefault ? a11.preventDefault() : typeof a11.returnValue !== "unknown" && (a11.returnValue = false), this.isDefaultPrevented = od2);
      }, stopPropagation: function() {
        var a11 = this.nativeEvent;
        a11 && (a11.stopPropagation ? a11.stopPropagation() : typeof a11.cancelBubble !== "unknown" && (a11.cancelBubble = true), this.isPropagationStopped = od2);
      }, persist: function() {
      }, isPersistent: od2 });
      return b10;
    }
    var rd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a10) {
      return a10.timeStamp || Date.now();
    }, defaultPrevented: 0, isTrusted: 0 };
    var sd2 = qd2(rd);
    var td2 = A10({}, rd, { view: 0, detail: 0 });
    var ud = qd2(td2);
    var vd;
    var wd2;
    var xd2;
    var zd2 = A10({}, td2, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: yd2, button: 0, buttons: 0, relatedTarget: function(a10) {
      return a10.relatedTarget === void 0 ? a10.fromElement === a10.srcElement ? a10.toElement : a10.fromElement : a10.relatedTarget;
    }, movementX: function(a10) {
      if ("movementX" in a10)
        return a10.movementX;
      a10 !== xd2 && (xd2 && a10.type === "mousemove" ? (vd = a10.screenX - xd2.screenX, wd2 = a10.screenY - xd2.screenY) : wd2 = vd = 0, xd2 = a10);
      return vd;
    }, movementY: function(a10) {
      return "movementY" in a10 ? a10.movementY : wd2;
    } });
    var Ad2 = qd2(zd2);
    var Bd = A10({}, zd2, { dataTransfer: 0 });
    var Cd = qd2(Bd);
    var Dd = A10({}, td2, { relatedTarget: 0 });
    var Ed2 = qd2(Dd);
    var Fd2 = A10({}, rd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 });
    var Gd2 = qd2(Fd2);
    var Hd2 = A10({}, rd, { clipboardData: function(a10) {
      return "clipboardData" in a10 ? a10.clipboardData : window.clipboardData;
    } });
    var Id = qd2(Hd2);
    var Jd2 = A10({}, rd, { data: 0 });
    var Kd2 = qd2(Jd2);
    var Ld2 = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    };
    var Md2 = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    var Nd2 = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
    function Od2(a10) {
      var b10 = this.nativeEvent;
      return b10.getModifierState ? b10.getModifierState(a10) : (a10 = Nd2[a10]) ? !!b10[a10] : false;
    }
    function yd2() {
      return Od2;
    }
    var Pd2 = A10({}, td2, { key: function(a10) {
      if (a10.key) {
        var b10 = Ld2[a10.key] || a10.key;
        if (b10 !== "Unidentified")
          return b10;
      }
      return a10.type === "keypress" ? (a10 = nd(a10), a10 === 13 ? "Enter" : String.fromCharCode(a10)) : a10.type === "keydown" || a10.type === "keyup" ? Md2[a10.keyCode] || "Unidentified" : "";
    }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: yd2, charCode: function(a10) {
      return a10.type === "keypress" ? nd(a10) : 0;
    }, keyCode: function(a10) {
      return a10.type === "keydown" || a10.type === "keyup" ? a10.keyCode : 0;
    }, which: function(a10) {
      return a10.type === "keypress" ? nd(a10) : a10.type === "keydown" || a10.type === "keyup" ? a10.keyCode : 0;
    } });
    var Qd2 = qd2(Pd2);
    var Rd2 = A10({}, zd2, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 });
    var Sd2 = qd2(Rd2);
    var Td = A10({}, td2, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: yd2 });
    var Ud2 = qd2(Td);
    var Vd2 = A10({}, rd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 });
    var Wd2 = qd2(Vd2);
    var Xd2 = A10({}, zd2, {
      deltaX: function(a10) {
        return "deltaX" in a10 ? a10.deltaX : "wheelDeltaX" in a10 ? -a10.wheelDeltaX : 0;
      },
      deltaY: function(a10) {
        return "deltaY" in a10 ? a10.deltaY : "wheelDeltaY" in a10 ? -a10.wheelDeltaY : "wheelDelta" in a10 ? -a10.wheelDelta : 0;
      },
      deltaZ: 0,
      deltaMode: 0
    });
    var Yd2 = qd2(Xd2);
    var Zd2 = [9, 13, 27, 32];
    var $d2 = ia2 && "CompositionEvent" in window;
    var ae2 = null;
    ia2 && "documentMode" in document && (ae2 = document.documentMode);
    var be2 = ia2 && "TextEvent" in window && !ae2;
    var ce = ia2 && (!$d2 || ae2 && 8 < ae2 && 11 >= ae2);
    var de = String.fromCharCode(32);
    var ee2 = false;
    function fe3(a10, b10) {
      switch (a10) {
        case "keyup":
          return Zd2.indexOf(b10.keyCode) !== -1;
        case "keydown":
          return b10.keyCode !== 229;
        case "keypress":
        case "mousedown":
        case "focusout":
          return true;
        default:
          return false;
      }
    }
    function ge3(a10) {
      a10 = a10.detail;
      return typeof a10 === "object" && "data" in a10 ? a10.data : null;
    }
    var he2 = false;
    function ie3(a10, b10) {
      switch (a10) {
        case "compositionend":
          return ge3(b10);
        case "keypress":
          if (b10.which !== 32)
            return null;
          ee2 = true;
          return de;
        case "textInput":
          return a10 = b10.data, a10 === de && ee2 ? null : a10;
        default:
          return null;
      }
    }
    function je2(a10, b10) {
      if (he2)
        return a10 === "compositionend" || !$d2 && fe3(a10, b10) ? (a10 = md(), ld2 = kd = jd2 = null, he2 = false, a10) : null;
      switch (a10) {
        case "paste":
          return null;
        case "keypress":
          if (!(b10.ctrlKey || b10.altKey || b10.metaKey) || b10.ctrlKey && b10.altKey) {
            if (b10.char && 1 < b10.char.length)
              return b10.char;
            if (b10.which)
              return String.fromCharCode(b10.which);
          }
          return null;
        case "compositionend":
          return ce && b10.locale !== "ko" ? null : b10.data;
        default:
          return null;
      }
    }
    var ke = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
    function le3(a10) {
      var b10 = a10 && a10.nodeName && a10.nodeName.toLowerCase();
      return b10 === "input" ? !!ke[a10.type] : b10 === "textarea" ? true : false;
    }
    function me3(a10, b10, c10, d10) {
      Db2(d10);
      b10 = ne3(b10, "onChange");
      0 < b10.length && (c10 = new sd2("onChange", "change", null, c10, d10), a10.push({ event: c10, listeners: b10 }));
    }
    var oe2 = null;
    var pe3 = null;
    function qe2(a10) {
      re3(a10, 0);
    }
    function se2(a10) {
      var b10 = te(a10);
      if (Va2(b10))
        return a10;
    }
    function ue3(a10, b10) {
      if (a10 === "change")
        return b10;
    }
    var ve2 = false;
    if (ia2) {
      if (ia2) {
        xe = "oninput" in document;
        if (!xe) {
          ye2 = document.createElement("div");
          ye2.setAttribute("oninput", "return;");
          xe = typeof ye2.oninput === "function";
        }
        we = xe;
      } else
        we = false;
      ve2 = we && (!document.documentMode || 9 < document.documentMode);
    }
    var we;
    var xe;
    var ye2;
    function ze2() {
      oe2 && (oe2.detachEvent("onpropertychange", Ae2), pe3 = oe2 = null);
    }
    function Ae2(a10) {
      if (a10.propertyName === "value" && se2(pe3)) {
        var b10 = [];
        me3(b10, pe3, a10, wb2(a10));
        Ib2(qe2, b10);
      }
    }
    function Be2(a10, b10, c10) {
      a10 === "focusin" ? (ze2(), oe2 = b10, pe3 = c10, oe2.attachEvent("onpropertychange", Ae2)) : a10 === "focusout" && ze2();
    }
    function Ce2(a10) {
      if (a10 === "selectionchange" || a10 === "keyup" || a10 === "keydown")
        return se2(pe3);
    }
    function De2(a10, b10) {
      if (a10 === "click")
        return se2(b10);
    }
    function Ee2(a10, b10) {
      if (a10 === "input" || a10 === "change")
        return se2(b10);
    }
    function Fe(a10, b10) {
      return a10 === b10 && (a10 !== 0 || 1 / a10 === 1 / b10) || a10 !== a10 && b10 !== b10;
    }
    var Ge2 = typeof Object.is === "function" ? Object.is : Fe;
    function He(a10, b10) {
      if (Ge2(a10, b10))
        return true;
      if (typeof a10 !== "object" || a10 === null || typeof b10 !== "object" || b10 === null)
        return false;
      var c10 = Object.keys(a10), d10 = Object.keys(b10);
      if (c10.length !== d10.length)
        return false;
      for (d10 = 0; d10 < c10.length; d10++) {
        var e13 = c10[d10];
        if (!ja2.call(b10, e13) || !Ge2(a10[e13], b10[e13]))
          return false;
      }
      return true;
    }
    function Ie(a10) {
      for (; a10 && a10.firstChild; )
        a10 = a10.firstChild;
      return a10;
    }
    function Je2(a10, b10) {
      var c10 = Ie(a10);
      a10 = 0;
      for (var d10; c10; ) {
        if (c10.nodeType === 3) {
          d10 = a10 + c10.textContent.length;
          if (a10 <= b10 && d10 >= b10)
            return { node: c10, offset: b10 - a10 };
          a10 = d10;
        }
        a: {
          for (; c10; ) {
            if (c10.nextSibling) {
              c10 = c10.nextSibling;
              break a;
            }
            c10 = c10.parentNode;
          }
          c10 = void 0;
        }
        c10 = Ie(c10);
      }
    }
    function Ke2(a10, b10) {
      return a10 && b10 ? a10 === b10 ? true : a10 && a10.nodeType === 3 ? false : b10 && b10.nodeType === 3 ? Ke2(a10, b10.parentNode) : "contains" in a10 ? a10.contains(b10) : a10.compareDocumentPosition ? !!(a10.compareDocumentPosition(b10) & 16) : false : false;
    }
    function Le2() {
      for (var a10 = window, b10 = Wa(); b10 instanceof a10.HTMLIFrameElement; ) {
        try {
          var c10 = typeof b10.contentWindow.location.href === "string";
        } catch (d10) {
          c10 = false;
        }
        if (c10)
          a10 = b10.contentWindow;
        else
          break;
        b10 = Wa(a10.document);
      }
      return b10;
    }
    function Me(a10) {
      var b10 = a10 && a10.nodeName && a10.nodeName.toLowerCase();
      return b10 && (b10 === "input" && (a10.type === "text" || a10.type === "search" || a10.type === "tel" || a10.type === "url" || a10.type === "password") || b10 === "textarea" || a10.contentEditable === "true");
    }
    function Ne2(a10) {
      var b10 = Le2(), c10 = a10.focusedElem, d10 = a10.selectionRange;
      if (b10 !== c10 && c10 && c10.ownerDocument && Ke2(c10.ownerDocument.documentElement, c10)) {
        if (d10 !== null && Me(c10)) {
          if (b10 = d10.start, a10 = d10.end, a10 === void 0 && (a10 = b10), "selectionStart" in c10)
            c10.selectionStart = b10, c10.selectionEnd = Math.min(a10, c10.value.length);
          else if (a10 = (b10 = c10.ownerDocument || document) && b10.defaultView || window, a10.getSelection) {
            a10 = a10.getSelection();
            var e13 = c10.textContent.length, f10 = Math.min(d10.start, e13);
            d10 = d10.end === void 0 ? f10 : Math.min(d10.end, e13);
            !a10.extend && f10 > d10 && (e13 = d10, d10 = f10, f10 = e13);
            e13 = Je2(c10, f10);
            var g10 = Je2(c10, d10);
            e13 && g10 && (a10.rangeCount !== 1 || a10.anchorNode !== e13.node || a10.anchorOffset !== e13.offset || a10.focusNode !== g10.node || a10.focusOffset !== g10.offset) && (b10 = b10.createRange(), b10.setStart(e13.node, e13.offset), a10.removeAllRanges(), f10 > d10 ? (a10.addRange(b10), a10.extend(g10.node, g10.offset)) : (b10.setEnd(g10.node, g10.offset), a10.addRange(b10)));
          }
        }
        b10 = [];
        for (a10 = c10; a10 = a10.parentNode; )
          a10.nodeType === 1 && b10.push({ element: a10, left: a10.scrollLeft, top: a10.scrollTop });
        typeof c10.focus === "function" && c10.focus();
        for (c10 = 0; c10 < b10.length; c10++)
          a10 = b10[c10], a10.element.scrollLeft = a10.left, a10.element.scrollTop = a10.top;
      }
    }
    var Oe2 = ia2 && "documentMode" in document && 11 >= document.documentMode;
    var Pe = null;
    var Qe2 = null;
    var Re = null;
    var Se2 = false;
    function Te3(a10, b10, c10) {
      var d10 = c10.window === c10 ? c10.document : c10.nodeType === 9 ? c10 : c10.ownerDocument;
      Se2 || Pe == null || Pe !== Wa(d10) || (d10 = Pe, "selectionStart" in d10 && Me(d10) ? d10 = { start: d10.selectionStart, end: d10.selectionEnd } : (d10 = (d10.ownerDocument && d10.ownerDocument.defaultView || window).getSelection(), d10 = { anchorNode: d10.anchorNode, anchorOffset: d10.anchorOffset, focusNode: d10.focusNode, focusOffset: d10.focusOffset }), Re && He(Re, d10) || (Re = d10, d10 = ne3(Qe2, "onSelect"), 0 < d10.length && (b10 = new sd2("onSelect", "select", null, b10, c10), a10.push({ event: b10, listeners: d10 }), b10.target = Pe)));
    }
    function Ue2(a10, b10) {
      var c10 = {};
      c10[a10.toLowerCase()] = b10.toLowerCase();
      c10["Webkit" + a10] = "webkit" + b10;
      c10["Moz" + a10] = "moz" + b10;
      return c10;
    }
    var Ve2 = { animationend: Ue2("Animation", "AnimationEnd"), animationiteration: Ue2("Animation", "AnimationIteration"), animationstart: Ue2("Animation", "AnimationStart"), transitionend: Ue2("Transition", "TransitionEnd") };
    var We = {};
    var Xe2 = {};
    ia2 && (Xe2 = document.createElement("div").style, "AnimationEvent" in window || (delete Ve2.animationend.animation, delete Ve2.animationiteration.animation, delete Ve2.animationstart.animation), "TransitionEvent" in window || delete Ve2.transitionend.transition);
    function Ye2(a10) {
      if (We[a10])
        return We[a10];
      if (!Ve2[a10])
        return a10;
      var b10 = Ve2[a10], c10;
      for (c10 in b10)
        if (b10.hasOwnProperty(c10) && c10 in Xe2)
          return We[a10] = b10[c10];
      return a10;
    }
    var Ze2 = Ye2("animationend");
    var $e = Ye2("animationiteration");
    var af2 = Ye2("animationstart");
    var bf2 = Ye2("transitionend");
    var cf2 = /* @__PURE__ */ new Map();
    var df2 = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
    function ef2(a10, b10) {
      cf2.set(a10, b10);
      fa2(b10, [a10]);
    }
    for (ff2 = 0; ff2 < df2.length; ff2++) {
      gf2 = df2[ff2], hf2 = gf2.toLowerCase(), jf2 = gf2[0].toUpperCase() + gf2.slice(1);
      ef2(hf2, "on" + jf2);
    }
    var gf2;
    var hf2;
    var jf2;
    var ff2;
    ef2(Ze2, "onAnimationEnd");
    ef2($e, "onAnimationIteration");
    ef2(af2, "onAnimationStart");
    ef2("dblclick", "onDoubleClick");
    ef2("focusin", "onFocus");
    ef2("focusout", "onBlur");
    ef2(bf2, "onTransitionEnd");
    ha2("onMouseEnter", ["mouseout", "mouseover"]);
    ha2("onMouseLeave", ["mouseout", "mouseover"]);
    ha2("onPointerEnter", ["pointerout", "pointerover"]);
    ha2("onPointerLeave", ["pointerout", "pointerover"]);
    fa2("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
    fa2("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
    fa2("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
    fa2("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
    fa2("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
    fa2("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
    var kf2 = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");
    var lf2 = new Set("cancel close invalid load scroll toggle".split(" ").concat(kf2));
    function mf2(a10, b10, c10) {
      var d10 = a10.type || "unknown-event";
      a10.currentTarget = c10;
      Tb2(d10, b10, void 0, a10);
      a10.currentTarget = null;
    }
    function re3(a10, b10) {
      b10 = (b10 & 4) !== 0;
      for (var c10 = 0; c10 < a10.length; c10++) {
        var d10 = a10[c10], e13 = d10.event;
        d10 = d10.listeners;
        a: {
          var f10 = void 0;
          if (b10)
            for (var g10 = d10.length - 1; 0 <= g10; g10--) {
              var h10 = d10[g10], k10 = h10.instance, l10 = h10.currentTarget;
              h10 = h10.listener;
              if (k10 !== f10 && e13.isPropagationStopped())
                break a;
              mf2(e13, h10, l10);
              f10 = k10;
            }
          else
            for (g10 = 0; g10 < d10.length; g10++) {
              h10 = d10[g10];
              k10 = h10.instance;
              l10 = h10.currentTarget;
              h10 = h10.listener;
              if (k10 !== f10 && e13.isPropagationStopped())
                break a;
              mf2(e13, h10, l10);
              f10 = k10;
            }
        }
      }
      if (Pb2)
        throw a10 = Qb2, Pb2 = false, Qb2 = null, a10;
    }
    function D10(a10, b10) {
      var c10 = b10[nf2];
      c10 === void 0 && (c10 = b10[nf2] = /* @__PURE__ */ new Set());
      var d10 = a10 + "__bubble";
      c10.has(d10) || (of2(b10, a10, 2, false), c10.add(d10));
    }
    function pf2(a10, b10, c10) {
      var d10 = 0;
      b10 && (d10 |= 4);
      of2(c10, a10, d10, b10);
    }
    var qf2 = "_reactListening" + Math.random().toString(36).slice(2);
    function rf2(a10) {
      if (!a10[qf2]) {
        a10[qf2] = true;
        da2.forEach(function(b11) {
          b11 !== "selectionchange" && (lf2.has(b11) || pf2(b11, false, a10), pf2(b11, true, a10));
        });
        var b10 = a10.nodeType === 9 ? a10 : a10.ownerDocument;
        b10 === null || b10[qf2] || (b10[qf2] = true, pf2("selectionchange", false, b10));
      }
    }
    function of2(a10, b10, c10, d10) {
      switch (id2(b10)) {
        case 1:
          var e13 = dd;
          break;
        case 4:
          e13 = fd2;
          break;
        default:
          e13 = ed2;
      }
      c10 = e13.bind(null, b10, c10, a10);
      e13 = void 0;
      !Kb2 || b10 !== "touchstart" && b10 !== "touchmove" && b10 !== "wheel" || (e13 = true);
      d10 ? e13 !== void 0 ? a10.addEventListener(b10, c10, { capture: true, passive: e13 }) : a10.addEventListener(b10, c10, true) : e13 !== void 0 ? a10.addEventListener(b10, c10, { passive: e13 }) : a10.addEventListener(b10, c10, false);
    }
    function gd2(a10, b10, c10, d10, e13) {
      var f10 = d10;
      if ((b10 & 1) === 0 && (b10 & 2) === 0 && d10 !== null)
        a:
          for (; ; ) {
            if (d10 === null)
              return;
            var g10 = d10.tag;
            if (g10 === 3 || g10 === 4) {
              var h10 = d10.stateNode.containerInfo;
              if (h10 === e13 || h10.nodeType === 8 && h10.parentNode === e13)
                break;
              if (g10 === 4)
                for (g10 = d10.return; g10 !== null; ) {
                  var k10 = g10.tag;
                  if (k10 === 3 || k10 === 4) {
                    if (k10 = g10.stateNode.containerInfo, k10 === e13 || k10.nodeType === 8 && k10.parentNode === e13)
                      return;
                  }
                  g10 = g10.return;
                }
              for (; h10 !== null; ) {
                g10 = Vc2(h10);
                if (g10 === null)
                  return;
                k10 = g10.tag;
                if (k10 === 5 || k10 === 6) {
                  d10 = f10 = g10;
                  continue a;
                }
                h10 = h10.parentNode;
              }
            }
            d10 = d10.return;
          }
      Ib2(function() {
        var d11 = f10, e14 = wb2(c10), g11 = [];
        a: {
          var h11 = cf2.get(a10);
          if (h11 !== void 0) {
            var k11 = sd2, m10 = a10;
            switch (a10) {
              case "keypress":
                if (nd(c10) === 0)
                  break a;
              case "keydown":
              case "keyup":
                k11 = Qd2;
                break;
              case "focusin":
                m10 = "focus";
                k11 = Ed2;
                break;
              case "focusout":
                m10 = "blur";
                k11 = Ed2;
                break;
              case "beforeblur":
              case "afterblur":
                k11 = Ed2;
                break;
              case "click":
                if (c10.button === 2)
                  break a;
              case "auxclick":
              case "dblclick":
              case "mousedown":
              case "mousemove":
              case "mouseup":
              case "mouseout":
              case "mouseover":
              case "contextmenu":
                k11 = Ad2;
                break;
              case "drag":
              case "dragend":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "dragstart":
              case "drop":
                k11 = Cd;
                break;
              case "touchcancel":
              case "touchend":
              case "touchmove":
              case "touchstart":
                k11 = Ud2;
                break;
              case Ze2:
              case $e:
              case af2:
                k11 = Gd2;
                break;
              case bf2:
                k11 = Wd2;
                break;
              case "scroll":
                k11 = ud;
                break;
              case "wheel":
                k11 = Yd2;
                break;
              case "copy":
              case "cut":
              case "paste":
                k11 = Id;
                break;
              case "gotpointercapture":
              case "lostpointercapture":
              case "pointercancel":
              case "pointerdown":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "pointerup":
                k11 = Sd2;
            }
            var w10 = (b10 & 4) !== 0, J10 = !w10 && a10 === "scroll", v10 = w10 ? h11 !== null ? h11 + "Capture" : null : h11;
            w10 = [];
            for (var x10 = d11, r11; x10 !== null; ) {
              r11 = x10;
              var F10 = r11.stateNode;
              r11.tag === 5 && F10 !== null && (r11 = F10, v10 !== null && (F10 = Jb2(x10, v10), F10 != null && w10.push(sf2(x10, F10, r11))));
              if (J10)
                break;
              x10 = x10.return;
            }
            0 < w10.length && (h11 = new k11(h11, m10, null, c10, e14), g11.push({ event: h11, listeners: w10 }));
          }
        }
        if ((b10 & 7) === 0) {
          a: {
            h11 = a10 === "mouseover" || a10 === "pointerover";
            k11 = a10 === "mouseout" || a10 === "pointerout";
            if (h11 && c10 !== vb2 && (m10 = c10.relatedTarget || c10.fromElement) && (Vc2(m10) || m10[tf2]))
              break a;
            if (k11 || h11) {
              h11 = e14.window === e14 ? e14 : (h11 = e14.ownerDocument) ? h11.defaultView || h11.parentWindow : window;
              if (k11) {
                if (m10 = c10.relatedTarget || c10.toElement, k11 = d11, m10 = m10 ? Vc2(m10) : null, m10 !== null && (J10 = Ub2(m10), m10 !== J10 || m10.tag !== 5 && m10.tag !== 6))
                  m10 = null;
              } else
                k11 = null, m10 = d11;
              if (k11 !== m10) {
                w10 = Ad2;
                F10 = "onMouseLeave";
                v10 = "onMouseEnter";
                x10 = "mouse";
                if (a10 === "pointerout" || a10 === "pointerover")
                  w10 = Sd2, F10 = "onPointerLeave", v10 = "onPointerEnter", x10 = "pointer";
                J10 = k11 == null ? h11 : te(k11);
                r11 = m10 == null ? h11 : te(m10);
                h11 = new w10(F10, x10 + "leave", k11, c10, e14);
                h11.target = J10;
                h11.relatedTarget = r11;
                F10 = null;
                Vc2(e14) === d11 && (w10 = new w10(v10, x10 + "enter", m10, c10, e14), w10.target = r11, w10.relatedTarget = J10, F10 = w10);
                J10 = F10;
                if (k11 && m10)
                  b: {
                    w10 = k11;
                    v10 = m10;
                    x10 = 0;
                    for (r11 = w10; r11; r11 = uf2(r11))
                      x10++;
                    r11 = 0;
                    for (F10 = v10; F10; F10 = uf2(F10))
                      r11++;
                    for (; 0 < x10 - r11; )
                      w10 = uf2(w10), x10--;
                    for (; 0 < r11 - x10; )
                      v10 = uf2(v10), r11--;
                    for (; x10--; ) {
                      if (w10 === v10 || v10 !== null && w10 === v10.alternate)
                        break b;
                      w10 = uf2(w10);
                      v10 = uf2(v10);
                    }
                    w10 = null;
                  }
                else
                  w10 = null;
                k11 !== null && vf2(g11, h11, k11, w10, false);
                m10 !== null && J10 !== null && vf2(g11, J10, m10, w10, true);
              }
            }
          }
          a: {
            h11 = d11 ? te(d11) : window;
            k11 = h11.nodeName && h11.nodeName.toLowerCase();
            if (k11 === "select" || k11 === "input" && h11.type === "file")
              var Z10 = ue3;
            else if (le3(h11))
              if (ve2)
                Z10 = Ee2;
              else {
                Z10 = Ce2;
                var ya2 = Be2;
              }
            else
              (k11 = h11.nodeName) && k11.toLowerCase() === "input" && (h11.type === "checkbox" || h11.type === "radio") && (Z10 = De2);
            if (Z10 && (Z10 = Z10(a10, d11))) {
              me3(g11, Z10, c10, e14);
              break a;
            }
            ya2 && ya2(a10, h11, d11);
            a10 === "focusout" && (ya2 = h11._wrapperState) && ya2.controlled && h11.type === "number" && bb2(h11, "number", h11.value);
          }
          ya2 = d11 ? te(d11) : window;
          switch (a10) {
            case "focusin":
              if (le3(ya2) || ya2.contentEditable === "true")
                Pe = ya2, Qe2 = d11, Re = null;
              break;
            case "focusout":
              Re = Qe2 = Pe = null;
              break;
            case "mousedown":
              Se2 = true;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              Se2 = false;
              Te3(g11, c10, e14);
              break;
            case "selectionchange":
              if (Oe2)
                break;
            case "keydown":
            case "keyup":
              Te3(g11, c10, e14);
          }
          var ab2;
          if ($d2)
            b: {
              switch (a10) {
                case "compositionstart":
                  var ca2 = "onCompositionStart";
                  break b;
                case "compositionend":
                  ca2 = "onCompositionEnd";
                  break b;
                case "compositionupdate":
                  ca2 = "onCompositionUpdate";
                  break b;
              }
              ca2 = void 0;
            }
          else
            he2 ? fe3(a10, c10) && (ca2 = "onCompositionEnd") : a10 === "keydown" && c10.keyCode === 229 && (ca2 = "onCompositionStart");
          ca2 && (ce && c10.locale !== "ko" && (he2 || ca2 !== "onCompositionStart" ? ca2 === "onCompositionEnd" && he2 && (ab2 = md()) : (jd2 = e14, kd = "value" in jd2 ? jd2.value : jd2.textContent, he2 = true)), ya2 = ne3(d11, ca2), 0 < ya2.length && (ca2 = new Kd2(ca2, a10, null, c10, e14), g11.push({ event: ca2, listeners: ya2 }), ab2 ? ca2.data = ab2 : (ab2 = ge3(c10), ab2 !== null && (ca2.data = ab2))));
          if (ab2 = be2 ? ie3(a10, c10) : je2(a10, c10))
            d11 = ne3(d11, "onBeforeInput"), 0 < d11.length && (e14 = new Kd2("onBeforeInput", "beforeinput", null, c10, e14), g11.push({ event: e14, listeners: d11 }), e14.data = ab2);
        }
        re3(g11, b10);
      });
    }
    function sf2(a10, b10, c10) {
      return { instance: a10, listener: b10, currentTarget: c10 };
    }
    function ne3(a10, b10) {
      for (var c10 = b10 + "Capture", d10 = []; a10 !== null; ) {
        var e13 = a10, f10 = e13.stateNode;
        e13.tag === 5 && f10 !== null && (e13 = f10, f10 = Jb2(a10, c10), f10 != null && d10.unshift(sf2(a10, f10, e13)), f10 = Jb2(a10, b10), f10 != null && d10.push(sf2(a10, f10, e13)));
        a10 = a10.return;
      }
      return d10;
    }
    function uf2(a10) {
      if (a10 === null)
        return null;
      do
        a10 = a10.return;
      while (a10 && a10.tag !== 5);
      return a10 ? a10 : null;
    }
    function vf2(a10, b10, c10, d10, e13) {
      for (var f10 = b10._reactName, g10 = []; c10 !== null && c10 !== d10; ) {
        var h10 = c10, k10 = h10.alternate, l10 = h10.stateNode;
        if (k10 !== null && k10 === d10)
          break;
        h10.tag === 5 && l10 !== null && (h10 = l10, e13 ? (k10 = Jb2(c10, f10), k10 != null && g10.unshift(sf2(c10, k10, h10))) : e13 || (k10 = Jb2(c10, f10), k10 != null && g10.push(sf2(c10, k10, h10))));
        c10 = c10.return;
      }
      g10.length !== 0 && a10.push({ event: b10, listeners: g10 });
    }
    var wf2 = /\r\n?/g;
    var xf2 = /\u0000|\uFFFD/g;
    function yf2(a10) {
      return (typeof a10 === "string" ? a10 : "" + a10).replace(wf2, "\n").replace(xf2, "");
    }
    function zf2(a10, b10, c10) {
      b10 = yf2(b10);
      if (yf2(a10) !== b10 && c10)
        throw Error(p10(425));
    }
    function Af2() {
    }
    var Bf2 = null;
    var Cf2 = null;
    function Df2(a10, b10) {
      return a10 === "textarea" || a10 === "noscript" || typeof b10.children === "string" || typeof b10.children === "number" || typeof b10.dangerouslySetInnerHTML === "object" && b10.dangerouslySetInnerHTML !== null && b10.dangerouslySetInnerHTML.__html != null;
    }
    var Ef2 = typeof setTimeout === "function" ? setTimeout : void 0;
    var Ff2 = typeof clearTimeout === "function" ? clearTimeout : void 0;
    var Gf2 = typeof Promise === "function" ? Promise : void 0;
    var If2 = typeof queueMicrotask === "function" ? queueMicrotask : typeof Gf2 !== "undefined" ? function(a10) {
      return Gf2.resolve(null).then(a10).catch(Hf2);
    } : Ef2;
    function Hf2(a10) {
      setTimeout(function() {
        throw a10;
      });
    }
    function Jf2(a10, b10) {
      var c10 = b10, d10 = 0;
      do {
        var e13 = c10.nextSibling;
        a10.removeChild(c10);
        if (e13 && e13.nodeType === 8)
          if (c10 = e13.data, c10 === "/$") {
            if (d10 === 0) {
              a10.removeChild(e13);
              ad2(b10);
              return;
            }
            d10--;
          } else
            c10 !== "$" && c10 !== "$?" && c10 !== "$!" || d10++;
        c10 = e13;
      } while (c10);
      ad2(b10);
    }
    function Kf2(a10) {
      for (; a10 != null; a10 = a10.nextSibling) {
        var b10 = a10.nodeType;
        if (b10 === 1 || b10 === 3)
          break;
        if (b10 === 8) {
          b10 = a10.data;
          if (b10 === "$" || b10 === "$!" || b10 === "$?")
            break;
          if (b10 === "/$")
            return null;
        }
      }
      return a10;
    }
    function Lf2(a10) {
      a10 = a10.previousSibling;
      for (var b10 = 0; a10; ) {
        if (a10.nodeType === 8) {
          var c10 = a10.data;
          if (c10 === "$" || c10 === "$!" || c10 === "$?") {
            if (b10 === 0)
              return a10;
            b10--;
          } else
            c10 === "/$" && b10++;
        }
        a10 = a10.previousSibling;
      }
      return null;
    }
    var Mf2 = Math.random().toString(36).slice(2);
    var Nf2 = "__reactFiber$" + Mf2;
    var Of2 = "__reactProps$" + Mf2;
    var tf2 = "__reactContainer$" + Mf2;
    var nf2 = "__reactEvents$" + Mf2;
    var Pf2 = "__reactListeners$" + Mf2;
    var Qf2 = "__reactHandles$" + Mf2;
    function Vc2(a10) {
      var b10 = a10[Nf2];
      if (b10)
        return b10;
      for (var c10 = a10.parentNode; c10; ) {
        if (b10 = c10[tf2] || c10[Nf2]) {
          c10 = b10.alternate;
          if (b10.child !== null || c10 !== null && c10.child !== null)
            for (a10 = Lf2(a10); a10 !== null; ) {
              if (c10 = a10[Nf2])
                return c10;
              a10 = Lf2(a10);
            }
          return b10;
        }
        a10 = c10;
        c10 = a10.parentNode;
      }
      return null;
    }
    function Bb2(a10) {
      a10 = a10[Nf2] || a10[tf2];
      return !a10 || a10.tag !== 5 && a10.tag !== 6 && a10.tag !== 13 && a10.tag !== 3 ? null : a10;
    }
    function te(a10) {
      if (a10.tag === 5 || a10.tag === 6)
        return a10.stateNode;
      throw Error(p10(33));
    }
    function Cb2(a10) {
      return a10[Of2] || null;
    }
    var Rf2 = [];
    var Sf2 = -1;
    function Tf2(a10) {
      return { current: a10 };
    }
    function E10(a10) {
      0 > Sf2 || (a10.current = Rf2[Sf2], Rf2[Sf2] = null, Sf2--);
    }
    function G10(a10, b10) {
      Sf2++;
      Rf2[Sf2] = a10.current;
      a10.current = b10;
    }
    var Uf2 = {};
    var H10 = Tf2(Uf2);
    var Vf2 = Tf2(false);
    var Wf2 = Uf2;
    function Xf2(a10, b10) {
      var c10 = a10.type.contextTypes;
      if (!c10)
        return Uf2;
      var d10 = a10.stateNode;
      if (d10 && d10.__reactInternalMemoizedUnmaskedChildContext === b10)
        return d10.__reactInternalMemoizedMaskedChildContext;
      var e13 = {}, f10;
      for (f10 in c10)
        e13[f10] = b10[f10];
      d10 && (a10 = a10.stateNode, a10.__reactInternalMemoizedUnmaskedChildContext = b10, a10.__reactInternalMemoizedMaskedChildContext = e13);
      return e13;
    }
    function Yf2(a10) {
      a10 = a10.childContextTypes;
      return a10 !== null && a10 !== void 0;
    }
    function Zf2() {
      E10(Vf2);
      E10(H10);
    }
    function $f2(a10, b10, c10) {
      if (H10.current !== Uf2)
        throw Error(p10(168));
      G10(H10, b10);
      G10(Vf2, c10);
    }
    function ag2(a10, b10, c10) {
      var d10 = a10.stateNode;
      b10 = b10.childContextTypes;
      if (typeof d10.getChildContext !== "function")
        return c10;
      d10 = d10.getChildContext();
      for (var e13 in d10)
        if (!(e13 in b10))
          throw Error(p10(108, Qa2(a10) || "Unknown", e13));
      return A10({}, c10, d10);
    }
    function bg2(a10) {
      a10 = (a10 = a10.stateNode) && a10.__reactInternalMemoizedMergedChildContext || Uf2;
      Wf2 = H10.current;
      G10(H10, a10);
      G10(Vf2, Vf2.current);
      return true;
    }
    function cg2(a10, b10, c10) {
      var d10 = a10.stateNode;
      if (!d10)
        throw Error(p10(169));
      c10 ? (a10 = ag2(a10, b10, Wf2), d10.__reactInternalMemoizedMergedChildContext = a10, E10(Vf2), E10(H10), G10(H10, a10)) : E10(Vf2);
      G10(Vf2, c10);
    }
    var dg2 = null;
    var eg2 = false;
    var fg2 = false;
    function gg2(a10) {
      dg2 === null ? dg2 = [a10] : dg2.push(a10);
    }
    function hg2(a10) {
      eg2 = true;
      gg2(a10);
    }
    function ig2() {
      if (!fg2 && dg2 !== null) {
        fg2 = true;
        var a10 = 0, b10 = C10;
        try {
          var c10 = dg2;
          for (C10 = 1; a10 < c10.length; a10++) {
            var d10 = c10[a10];
            do
              d10 = d10(true);
            while (d10 !== null);
          }
          dg2 = null;
          eg2 = false;
        } catch (e13) {
          throw dg2 !== null && (dg2 = dg2.slice(a10 + 1)), $b2(ec2, ig2), e13;
        } finally {
          C10 = b10, fg2 = false;
        }
      }
      return null;
    }
    var jg2 = ta2.ReactCurrentBatchConfig;
    function kg2(a10, b10) {
      if (a10 && a10.defaultProps) {
        b10 = A10({}, b10);
        a10 = a10.defaultProps;
        for (var c10 in a10)
          b10[c10] === void 0 && (b10[c10] = a10[c10]);
        return b10;
      }
      return b10;
    }
    var lg2 = Tf2(null);
    var mg2 = null;
    var ng2 = null;
    var og2 = null;
    function pg2() {
      og2 = ng2 = mg2 = null;
    }
    function qg2(a10) {
      var b10 = lg2.current;
      E10(lg2);
      a10._currentValue = b10;
    }
    function rg2(a10, b10, c10) {
      for (; a10 !== null; ) {
        var d10 = a10.alternate;
        (a10.childLanes & b10) !== b10 ? (a10.childLanes |= b10, d10 !== null && (d10.childLanes |= b10)) : d10 !== null && (d10.childLanes & b10) !== b10 && (d10.childLanes |= b10);
        if (a10 === c10)
          break;
        a10 = a10.return;
      }
    }
    function sg2(a10, b10) {
      mg2 = a10;
      og2 = ng2 = null;
      a10 = a10.dependencies;
      a10 !== null && a10.firstContext !== null && ((a10.lanes & b10) !== 0 && (tg2 = true), a10.firstContext = null);
    }
    function ug2(a10) {
      var b10 = a10._currentValue;
      if (og2 !== a10)
        if (a10 = { context: a10, memoizedValue: b10, next: null }, ng2 === null) {
          if (mg2 === null)
            throw Error(p10(308));
          ng2 = a10;
          mg2.dependencies = { lanes: 0, firstContext: a10 };
        } else
          ng2 = ng2.next = a10;
      return b10;
    }
    var vg2 = null;
    var wg2 = false;
    function xg2(a10) {
      a10.updateQueue = { baseState: a10.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
    }
    function yg2(a10, b10) {
      a10 = a10.updateQueue;
      b10.updateQueue === a10 && (b10.updateQueue = { baseState: a10.baseState, firstBaseUpdate: a10.firstBaseUpdate, lastBaseUpdate: a10.lastBaseUpdate, shared: a10.shared, effects: a10.effects });
    }
    function zg2(a10, b10) {
      return { eventTime: a10, lane: b10, tag: 0, payload: null, callback: null, next: null };
    }
    function Ag2(a10, b10) {
      var c10 = a10.updateQueue;
      c10 !== null && (c10 = c10.shared, Bg2(a10) ? (a10 = c10.interleaved, a10 === null ? (b10.next = b10, vg2 === null ? vg2 = [c10] : vg2.push(c10)) : (b10.next = a10.next, a10.next = b10), c10.interleaved = b10) : (a10 = c10.pending, a10 === null ? b10.next = b10 : (b10.next = a10.next, a10.next = b10), c10.pending = b10));
    }
    function Cg2(a10, b10, c10) {
      b10 = b10.updateQueue;
      if (b10 !== null && (b10 = b10.shared, (c10 & 4194240) !== 0)) {
        var d10 = b10.lanes;
        d10 &= a10.pendingLanes;
        c10 |= d10;
        b10.lanes = c10;
        Bc2(a10, c10);
      }
    }
    function Dg2(a10, b10) {
      var c10 = a10.updateQueue, d10 = a10.alternate;
      if (d10 !== null && (d10 = d10.updateQueue, c10 === d10)) {
        var e13 = null, f10 = null;
        c10 = c10.firstBaseUpdate;
        if (c10 !== null) {
          do {
            var g10 = { eventTime: c10.eventTime, lane: c10.lane, tag: c10.tag, payload: c10.payload, callback: c10.callback, next: null };
            f10 === null ? e13 = f10 = g10 : f10 = f10.next = g10;
            c10 = c10.next;
          } while (c10 !== null);
          f10 === null ? e13 = f10 = b10 : f10 = f10.next = b10;
        } else
          e13 = f10 = b10;
        c10 = { baseState: d10.baseState, firstBaseUpdate: e13, lastBaseUpdate: f10, shared: d10.shared, effects: d10.effects };
        a10.updateQueue = c10;
        return;
      }
      a10 = c10.lastBaseUpdate;
      a10 === null ? c10.firstBaseUpdate = b10 : a10.next = b10;
      c10.lastBaseUpdate = b10;
    }
    function Eg2(a10, b10, c10, d10) {
      var e13 = a10.updateQueue;
      wg2 = false;
      var f10 = e13.firstBaseUpdate, g10 = e13.lastBaseUpdate, h10 = e13.shared.pending;
      if (h10 !== null) {
        e13.shared.pending = null;
        var k10 = h10, l10 = k10.next;
        k10.next = null;
        g10 === null ? f10 = l10 : g10.next = l10;
        g10 = k10;
        var n10 = a10.alternate;
        n10 !== null && (n10 = n10.updateQueue, h10 = n10.lastBaseUpdate, h10 !== g10 && (h10 === null ? n10.firstBaseUpdate = l10 : h10.next = l10, n10.lastBaseUpdate = k10));
      }
      if (f10 !== null) {
        var u10 = e13.baseState;
        g10 = 0;
        n10 = l10 = k10 = null;
        h10 = f10;
        do {
          var q10 = h10.lane, y10 = h10.eventTime;
          if ((d10 & q10) === q10) {
            n10 !== null && (n10 = n10.next = {
              eventTime: y10,
              lane: 0,
              tag: h10.tag,
              payload: h10.payload,
              callback: h10.callback,
              next: null
            });
            a: {
              var m10 = a10, w10 = h10;
              q10 = b10;
              y10 = c10;
              switch (w10.tag) {
                case 1:
                  m10 = w10.payload;
                  if (typeof m10 === "function") {
                    u10 = m10.call(y10, u10, q10);
                    break a;
                  }
                  u10 = m10;
                  break a;
                case 3:
                  m10.flags = m10.flags & -65537 | 128;
                case 0:
                  m10 = w10.payload;
                  q10 = typeof m10 === "function" ? m10.call(y10, u10, q10) : m10;
                  if (q10 === null || q10 === void 0)
                    break a;
                  u10 = A10({}, u10, q10);
                  break a;
                case 2:
                  wg2 = true;
              }
            }
            h10.callback !== null && h10.lane !== 0 && (a10.flags |= 64, q10 = e13.effects, q10 === null ? e13.effects = [h10] : q10.push(h10));
          } else
            y10 = { eventTime: y10, lane: q10, tag: h10.tag, payload: h10.payload, callback: h10.callback, next: null }, n10 === null ? (l10 = n10 = y10, k10 = u10) : n10 = n10.next = y10, g10 |= q10;
          h10 = h10.next;
          if (h10 === null)
            if (h10 = e13.shared.pending, h10 === null)
              break;
            else
              q10 = h10, h10 = q10.next, q10.next = null, e13.lastBaseUpdate = q10, e13.shared.pending = null;
        } while (1);
        n10 === null && (k10 = u10);
        e13.baseState = k10;
        e13.firstBaseUpdate = l10;
        e13.lastBaseUpdate = n10;
        b10 = e13.shared.interleaved;
        if (b10 !== null) {
          e13 = b10;
          do
            g10 |= e13.lane, e13 = e13.next;
          while (e13 !== b10);
        } else
          f10 === null && (e13.shared.lanes = 0);
        Fg2 |= g10;
        a10.lanes = g10;
        a10.memoizedState = u10;
      }
    }
    function Gg2(a10, b10, c10) {
      a10 = b10.effects;
      b10.effects = null;
      if (a10 !== null)
        for (b10 = 0; b10 < a10.length; b10++) {
          var d10 = a10[b10], e13 = d10.callback;
          if (e13 !== null) {
            d10.callback = null;
            d10 = c10;
            if (typeof e13 !== "function")
              throw Error(p10(191, e13));
            e13.call(d10);
          }
        }
    }
    var Hg2 = new aa2.Component().refs;
    function Ig2(a10, b10, c10, d10) {
      b10 = a10.memoizedState;
      c10 = c10(d10, b10);
      c10 = c10 === null || c10 === void 0 ? b10 : A10({}, b10, c10);
      a10.memoizedState = c10;
      a10.lanes === 0 && (a10.updateQueue.baseState = c10);
    }
    var Mg2 = { isMounted: function(a10) {
      return (a10 = a10._reactInternals) ? Ub2(a10) === a10 : false;
    }, enqueueSetState: function(a10, b10, c10) {
      a10 = a10._reactInternals;
      var d10 = Jg2(), e13 = Kg2(a10), f10 = zg2(d10, e13);
      f10.payload = b10;
      c10 !== void 0 && c10 !== null && (f10.callback = c10);
      Ag2(a10, f10);
      b10 = Lg2(a10, e13, d10);
      b10 !== null && Cg2(b10, a10, e13);
    }, enqueueReplaceState: function(a10, b10, c10) {
      a10 = a10._reactInternals;
      var d10 = Jg2(), e13 = Kg2(a10), f10 = zg2(d10, e13);
      f10.tag = 1;
      f10.payload = b10;
      c10 !== void 0 && c10 !== null && (f10.callback = c10);
      Ag2(a10, f10);
      b10 = Lg2(a10, e13, d10);
      b10 !== null && Cg2(b10, a10, e13);
    }, enqueueForceUpdate: function(a10, b10) {
      a10 = a10._reactInternals;
      var c10 = Jg2(), d10 = Kg2(a10), e13 = zg2(c10, d10);
      e13.tag = 2;
      b10 !== void 0 && b10 !== null && (e13.callback = b10);
      Ag2(a10, e13);
      b10 = Lg2(a10, d10, c10);
      b10 !== null && Cg2(b10, a10, d10);
    } };
    function Ng2(a10, b10, c10, d10, e13, f10, g10) {
      a10 = a10.stateNode;
      return typeof a10.shouldComponentUpdate === "function" ? a10.shouldComponentUpdate(d10, f10, g10) : b10.prototype && b10.prototype.isPureReactComponent ? !He(c10, d10) || !He(e13, f10) : true;
    }
    function Og2(a10, b10, c10) {
      var d10 = false, e13 = Uf2;
      var f10 = b10.contextType;
      typeof f10 === "object" && f10 !== null ? f10 = ug2(f10) : (e13 = Yf2(b10) ? Wf2 : H10.current, d10 = b10.contextTypes, f10 = (d10 = d10 !== null && d10 !== void 0) ? Xf2(a10, e13) : Uf2);
      b10 = new b10(c10, f10);
      a10.memoizedState = b10.state !== null && b10.state !== void 0 ? b10.state : null;
      b10.updater = Mg2;
      a10.stateNode = b10;
      b10._reactInternals = a10;
      d10 && (a10 = a10.stateNode, a10.__reactInternalMemoizedUnmaskedChildContext = e13, a10.__reactInternalMemoizedMaskedChildContext = f10);
      return b10;
    }
    function Pg2(a10, b10, c10, d10) {
      a10 = b10.state;
      typeof b10.componentWillReceiveProps === "function" && b10.componentWillReceiveProps(c10, d10);
      typeof b10.UNSAFE_componentWillReceiveProps === "function" && b10.UNSAFE_componentWillReceiveProps(c10, d10);
      b10.state !== a10 && Mg2.enqueueReplaceState(b10, b10.state, null);
    }
    function Qg2(a10, b10, c10, d10) {
      var e13 = a10.stateNode;
      e13.props = c10;
      e13.state = a10.memoizedState;
      e13.refs = Hg2;
      xg2(a10);
      var f10 = b10.contextType;
      typeof f10 === "object" && f10 !== null ? e13.context = ug2(f10) : (f10 = Yf2(b10) ? Wf2 : H10.current, e13.context = Xf2(a10, f10));
      e13.state = a10.memoizedState;
      f10 = b10.getDerivedStateFromProps;
      typeof f10 === "function" && (Ig2(a10, b10, f10, c10), e13.state = a10.memoizedState);
      typeof b10.getDerivedStateFromProps === "function" || typeof e13.getSnapshotBeforeUpdate === "function" || typeof e13.UNSAFE_componentWillMount !== "function" && typeof e13.componentWillMount !== "function" || (b10 = e13.state, typeof e13.componentWillMount === "function" && e13.componentWillMount(), typeof e13.UNSAFE_componentWillMount === "function" && e13.UNSAFE_componentWillMount(), b10 !== e13.state && Mg2.enqueueReplaceState(e13, e13.state, null), Eg2(a10, c10, e13, d10), e13.state = a10.memoizedState);
      typeof e13.componentDidMount === "function" && (a10.flags |= 4194308);
    }
    var Rg2 = [];
    var Sg2 = 0;
    var Tg2 = null;
    var Ug2 = 0;
    var Vg2 = [];
    var Wg2 = 0;
    var Xg2 = null;
    var Yg2 = 1;
    var Zg2 = "";
    function $g2(a10, b10) {
      Rg2[Sg2++] = Ug2;
      Rg2[Sg2++] = Tg2;
      Tg2 = a10;
      Ug2 = b10;
    }
    function ah2(a10, b10, c10) {
      Vg2[Wg2++] = Yg2;
      Vg2[Wg2++] = Zg2;
      Vg2[Wg2++] = Xg2;
      Xg2 = a10;
      var d10 = Yg2;
      a10 = Zg2;
      var e13 = 32 - nc2(d10) - 1;
      d10 &= ~(1 << e13);
      c10 += 1;
      var f10 = 32 - nc2(b10) + e13;
      if (30 < f10) {
        var g10 = e13 - e13 % 5;
        f10 = (d10 & (1 << g10) - 1).toString(32);
        d10 >>= g10;
        e13 -= g10;
        Yg2 = 1 << 32 - nc2(b10) + e13 | c10 << e13 | d10;
        Zg2 = f10 + a10;
      } else
        Yg2 = 1 << f10 | c10 << e13 | d10, Zg2 = a10;
    }
    function bh2(a10) {
      a10.return !== null && ($g2(a10, 1), ah2(a10, 1, 0));
    }
    function ch2(a10) {
      for (; a10 === Tg2; )
        Tg2 = Rg2[--Sg2], Rg2[Sg2] = null, Ug2 = Rg2[--Sg2], Rg2[Sg2] = null;
      for (; a10 === Xg2; )
        Xg2 = Vg2[--Wg2], Vg2[Wg2] = null, Zg2 = Vg2[--Wg2], Vg2[Wg2] = null, Yg2 = Vg2[--Wg2], Vg2[Wg2] = null;
    }
    var dh2 = null;
    var eh2 = null;
    var I10 = false;
    var fh2 = null;
    function gh2(a10, b10) {
      var c10 = hh2(5, null, null, 0);
      c10.elementType = "DELETED";
      c10.stateNode = b10;
      c10.return = a10;
      b10 = a10.deletions;
      b10 === null ? (a10.deletions = [c10], a10.flags |= 16) : b10.push(c10);
    }
    function ih2(a10, b10) {
      switch (a10.tag) {
        case 5:
          var c10 = a10.type;
          b10 = b10.nodeType !== 1 || c10.toLowerCase() !== b10.nodeName.toLowerCase() ? null : b10;
          return b10 !== null ? (a10.stateNode = b10, dh2 = a10, eh2 = Kf2(b10.firstChild), true) : false;
        case 6:
          return b10 = a10.pendingProps === "" || b10.nodeType !== 3 ? null : b10, b10 !== null ? (a10.stateNode = b10, dh2 = a10, eh2 = null, true) : false;
        case 13:
          return b10 = b10.nodeType !== 8 ? null : b10, b10 !== null ? (c10 = Xg2 !== null ? { id: Yg2, overflow: Zg2 } : null, a10.memoizedState = { dehydrated: b10, treeContext: c10, retryLane: 1073741824 }, c10 = hh2(18, null, null, 0), c10.stateNode = b10, c10.return = a10, a10.child = c10, dh2 = a10, eh2 = null, true) : false;
        default:
          return false;
      }
    }
    function jh2(a10) {
      return (a10.mode & 1) !== 0 && (a10.flags & 128) === 0;
    }
    function kh2(a10) {
      if (I10) {
        var b10 = eh2;
        if (b10) {
          var c10 = b10;
          if (!ih2(a10, b10)) {
            if (jh2(a10))
              throw Error(p10(418));
            b10 = Kf2(c10.nextSibling);
            var d10 = dh2;
            b10 && ih2(a10, b10) ? gh2(d10, c10) : (a10.flags = a10.flags & -4097 | 2, I10 = false, dh2 = a10);
          }
        } else {
          if (jh2(a10))
            throw Error(p10(418));
          a10.flags = a10.flags & -4097 | 2;
          I10 = false;
          dh2 = a10;
        }
      }
    }
    function lh2(a10) {
      for (a10 = a10.return; a10 !== null && a10.tag !== 5 && a10.tag !== 3 && a10.tag !== 13; )
        a10 = a10.return;
      dh2 = a10;
    }
    function mh2(a10) {
      if (a10 !== dh2)
        return false;
      if (!I10)
        return lh2(a10), I10 = true, false;
      var b10;
      (b10 = a10.tag !== 3) && !(b10 = a10.tag !== 5) && (b10 = a10.type, b10 = b10 !== "head" && b10 !== "body" && !Df2(a10.type, a10.memoizedProps));
      if (b10 && (b10 = eh2)) {
        if (jh2(a10)) {
          for (a10 = eh2; a10; )
            a10 = Kf2(a10.nextSibling);
          throw Error(p10(418));
        }
        for (; b10; )
          gh2(a10, b10), b10 = Kf2(b10.nextSibling);
      }
      lh2(a10);
      if (a10.tag === 13) {
        a10 = a10.memoizedState;
        a10 = a10 !== null ? a10.dehydrated : null;
        if (!a10)
          throw Error(p10(317));
        a: {
          a10 = a10.nextSibling;
          for (b10 = 0; a10; ) {
            if (a10.nodeType === 8) {
              var c10 = a10.data;
              if (c10 === "/$") {
                if (b10 === 0) {
                  eh2 = Kf2(a10.nextSibling);
                  break a;
                }
                b10--;
              } else
                c10 !== "$" && c10 !== "$!" && c10 !== "$?" || b10++;
            }
            a10 = a10.nextSibling;
          }
          eh2 = null;
        }
      } else
        eh2 = dh2 ? Kf2(a10.stateNode.nextSibling) : null;
      return true;
    }
    function nh2() {
      eh2 = dh2 = null;
      I10 = false;
    }
    function oh2(a10) {
      fh2 === null ? fh2 = [a10] : fh2.push(a10);
    }
    function ph2(a10, b10, c10) {
      a10 = c10.ref;
      if (a10 !== null && typeof a10 !== "function" && typeof a10 !== "object") {
        if (c10._owner) {
          c10 = c10._owner;
          if (c10) {
            if (c10.tag !== 1)
              throw Error(p10(309));
            var d10 = c10.stateNode;
          }
          if (!d10)
            throw Error(p10(147, a10));
          var e13 = d10, f10 = "" + a10;
          if (b10 !== null && b10.ref !== null && typeof b10.ref === "function" && b10.ref._stringRef === f10)
            return b10.ref;
          b10 = function(a11) {
            var b11 = e13.refs;
            b11 === Hg2 && (b11 = e13.refs = {});
            a11 === null ? delete b11[f10] : b11[f10] = a11;
          };
          b10._stringRef = f10;
          return b10;
        }
        if (typeof a10 !== "string")
          throw Error(p10(284));
        if (!c10._owner)
          throw Error(p10(290, a10));
      }
      return a10;
    }
    function qh2(a10, b10) {
      a10 = Object.prototype.toString.call(b10);
      throw Error(p10(31, a10 === "[object Object]" ? "object with keys {" + Object.keys(b10).join(", ") + "}" : a10));
    }
    function rh2(a10) {
      var b10 = a10._init;
      return b10(a10._payload);
    }
    function sh2(a10) {
      function b10(b11, c11) {
        if (a10) {
          var d11 = b11.deletions;
          d11 === null ? (b11.deletions = [c11], b11.flags |= 16) : d11.push(c11);
        }
      }
      function c10(c11, d11) {
        if (!a10)
          return null;
        for (; d11 !== null; )
          b10(c11, d11), d11 = d11.sibling;
        return null;
      }
      function d10(a11, b11) {
        for (a11 = /* @__PURE__ */ new Map(); b11 !== null; )
          b11.key !== null ? a11.set(b11.key, b11) : a11.set(b11.index, b11), b11 = b11.sibling;
        return a11;
      }
      function e13(a11, b11) {
        a11 = th2(a11, b11);
        a11.index = 0;
        a11.sibling = null;
        return a11;
      }
      function f10(b11, c11, d11) {
        b11.index = d11;
        if (!a10)
          return b11.flags |= 1048576, c11;
        d11 = b11.alternate;
        if (d11 !== null)
          return d11 = d11.index, d11 < c11 ? (b11.flags |= 2, c11) : d11;
        b11.flags |= 2;
        return c11;
      }
      function g10(b11) {
        a10 && b11.alternate === null && (b11.flags |= 2);
        return b11;
      }
      function h10(a11, b11, c11, d11) {
        if (b11 === null || b11.tag !== 6)
          return b11 = uh2(c11, a11.mode, d11), b11.return = a11, b11;
        b11 = e13(b11, c11);
        b11.return = a11;
        return b11;
      }
      function k10(a11, b11, c11, d11) {
        var f11 = c11.type;
        if (f11 === wa2)
          return n10(a11, b11, c11.props.children, d11, c11.key);
        if (b11 !== null && (b11.elementType === f11 || typeof f11 === "object" && f11 !== null && f11.$$typeof === Ga2 && rh2(f11) === b11.type))
          return d11 = e13(b11, c11.props), d11.ref = ph2(a11, b11, c11), d11.return = a11, d11;
        d11 = vh2(c11.type, c11.key, c11.props, null, a11.mode, d11);
        d11.ref = ph2(a11, b11, c11);
        d11.return = a11;
        return d11;
      }
      function l10(a11, b11, c11, d11) {
        if (b11 === null || b11.tag !== 4 || b11.stateNode.containerInfo !== c11.containerInfo || b11.stateNode.implementation !== c11.implementation)
          return b11 = wh2(c11, a11.mode, d11), b11.return = a11, b11;
        b11 = e13(b11, c11.children || []);
        b11.return = a11;
        return b11;
      }
      function n10(a11, b11, c11, d11, f11) {
        if (b11 === null || b11.tag !== 7)
          return b11 = xh2(c11, a11.mode, d11, f11), b11.return = a11, b11;
        b11 = e13(b11, c11);
        b11.return = a11;
        return b11;
      }
      function u10(a11, b11, c11) {
        if (typeof b11 === "string" && b11 !== "" || typeof b11 === "number")
          return b11 = uh2("" + b11, a11.mode, c11), b11.return = a11, b11;
        if (typeof b11 === "object" && b11 !== null) {
          switch (b11.$$typeof) {
            case ua2:
              return c11 = vh2(b11.type, b11.key, b11.props, null, a11.mode, c11), c11.ref = ph2(a11, null, b11), c11.return = a11, c11;
            case va2:
              return b11 = wh2(b11, a11.mode, c11), b11.return = a11, b11;
            case Ga2:
              var d11 = b11._init;
              return u10(a11, d11(b11._payload), c11);
          }
          if (db2(b11) || Ja2(b11))
            return b11 = xh2(b11, a11.mode, c11, null), b11.return = a11, b11;
          qh2(a11, b11);
        }
        return null;
      }
      function q10(a11, b11, c11, d11) {
        var e14 = b11 !== null ? b11.key : null;
        if (typeof c11 === "string" && c11 !== "" || typeof c11 === "number")
          return e14 !== null ? null : h10(a11, b11, "" + c11, d11);
        if (typeof c11 === "object" && c11 !== null) {
          switch (c11.$$typeof) {
            case ua2:
              return c11.key === e14 ? k10(a11, b11, c11, d11) : null;
            case va2:
              return c11.key === e14 ? l10(a11, b11, c11, d11) : null;
            case Ga2:
              return e14 = c11._init, q10(a11, b11, e14(c11._payload), d11);
          }
          if (db2(c11) || Ja2(c11))
            return e14 !== null ? null : n10(a11, b11, c11, d11, null);
          qh2(a11, c11);
        }
        return null;
      }
      function y10(a11, b11, c11, d11, e14) {
        if (typeof d11 === "string" && d11 !== "" || typeof d11 === "number")
          return a11 = a11.get(c11) || null, h10(b11, a11, "" + d11, e14);
        if (typeof d11 === "object" && d11 !== null) {
          switch (d11.$$typeof) {
            case ua2:
              return a11 = a11.get(d11.key === null ? c11 : d11.key) || null, k10(b11, a11, d11, e14);
            case va2:
              return a11 = a11.get(d11.key === null ? c11 : d11.key) || null, l10(b11, a11, d11, e14);
            case Ga2:
              var f11 = d11._init;
              return y10(a11, b11, c11, f11(d11._payload), e14);
          }
          if (db2(d11) || Ja2(d11))
            return a11 = a11.get(c11) || null, n10(b11, a11, d11, e14, null);
          qh2(b11, d11);
        }
        return null;
      }
      function m10(e14, g11, h11, k11) {
        for (var l11 = null, n11 = null, r11 = g11, m11 = g11 = 0, x10 = null; r11 !== null && m11 < h11.length; m11++) {
          r11.index > m11 ? (x10 = r11, r11 = null) : x10 = r11.sibling;
          var v10 = q10(e14, r11, h11[m11], k11);
          if (v10 === null) {
            r11 === null && (r11 = x10);
            break;
          }
          a10 && r11 && v10.alternate === null && b10(e14, r11);
          g11 = f10(v10, g11, m11);
          n11 === null ? l11 = v10 : n11.sibling = v10;
          n11 = v10;
          r11 = x10;
        }
        if (m11 === h11.length)
          return c10(e14, r11), I10 && $g2(e14, m11), l11;
        if (r11 === null) {
          for (; m11 < h11.length; m11++)
            r11 = u10(e14, h11[m11], k11), r11 !== null && (g11 = f10(r11, g11, m11), n11 === null ? l11 = r11 : n11.sibling = r11, n11 = r11);
          I10 && $g2(e14, m11);
          return l11;
        }
        for (r11 = d10(e14, r11); m11 < h11.length; m11++)
          x10 = y10(r11, e14, m11, h11[m11], k11), x10 !== null && (a10 && x10.alternate !== null && r11.delete(x10.key === null ? m11 : x10.key), g11 = f10(x10, g11, m11), n11 === null ? l11 = x10 : n11.sibling = x10, n11 = x10);
        a10 && r11.forEach(function(a11) {
          return b10(e14, a11);
        });
        I10 && $g2(e14, m11);
        return l11;
      }
      function w10(e14, g11, h11, k11) {
        var l11 = Ja2(h11);
        if (typeof l11 !== "function")
          throw Error(p10(150));
        h11 = l11.call(h11);
        if (h11 == null)
          throw Error(p10(151));
        for (var n11 = l11 = null, m11 = g11, r11 = g11 = 0, x10 = null, v10 = h11.next(); m11 !== null && !v10.done; r11++, v10 = h11.next()) {
          m11.index > r11 ? (x10 = m11, m11 = null) : x10 = m11.sibling;
          var w11 = q10(e14, m11, v10.value, k11);
          if (w11 === null) {
            m11 === null && (m11 = x10);
            break;
          }
          a10 && m11 && w11.alternate === null && b10(e14, m11);
          g11 = f10(w11, g11, r11);
          n11 === null ? l11 = w11 : n11.sibling = w11;
          n11 = w11;
          m11 = x10;
        }
        if (v10.done)
          return c10(e14, m11), I10 && $g2(e14, r11), l11;
        if (m11 === null) {
          for (; !v10.done; r11++, v10 = h11.next())
            v10 = u10(e14, v10.value, k11), v10 !== null && (g11 = f10(v10, g11, r11), n11 === null ? l11 = v10 : n11.sibling = v10, n11 = v10);
          I10 && $g2(e14, r11);
          return l11;
        }
        for (m11 = d10(e14, m11); !v10.done; r11++, v10 = h11.next())
          v10 = y10(m11, e14, r11, v10.value, k11), v10 !== null && (a10 && v10.alternate !== null && m11.delete(v10.key === null ? r11 : v10.key), g11 = f10(v10, g11, r11), n11 === null ? l11 = v10 : n11.sibling = v10, n11 = v10);
        a10 && m11.forEach(function(a11) {
          return b10(e14, a11);
        });
        I10 && $g2(e14, r11);
        return l11;
      }
      function J10(a11, d11, f11, h11) {
        typeof f11 === "object" && f11 !== null && f11.type === wa2 && f11.key === null && (f11 = f11.props.children);
        if (typeof f11 === "object" && f11 !== null) {
          switch (f11.$$typeof) {
            case ua2:
              a: {
                for (var k11 = f11.key, l11 = d11; l11 !== null; ) {
                  if (l11.key === k11) {
                    k11 = f11.type;
                    if (k11 === wa2) {
                      if (l11.tag === 7) {
                        c10(a11, l11.sibling);
                        d11 = e13(l11, f11.props.children);
                        d11.return = a11;
                        a11 = d11;
                        break a;
                      }
                    } else if (l11.elementType === k11 || typeof k11 === "object" && k11 !== null && k11.$$typeof === Ga2 && rh2(k11) === l11.type) {
                      c10(a11, l11.sibling);
                      d11 = e13(l11, f11.props);
                      d11.ref = ph2(a11, l11, f11);
                      d11.return = a11;
                      a11 = d11;
                      break a;
                    }
                    c10(a11, l11);
                    break;
                  } else
                    b10(a11, l11);
                  l11 = l11.sibling;
                }
                f11.type === wa2 ? (d11 = xh2(f11.props.children, a11.mode, h11, f11.key), d11.return = a11, a11 = d11) : (h11 = vh2(f11.type, f11.key, f11.props, null, a11.mode, h11), h11.ref = ph2(a11, d11, f11), h11.return = a11, a11 = h11);
              }
              return g10(a11);
            case va2:
              a: {
                for (l11 = f11.key; d11 !== null; ) {
                  if (d11.key === l11)
                    if (d11.tag === 4 && d11.stateNode.containerInfo === f11.containerInfo && d11.stateNode.implementation === f11.implementation) {
                      c10(a11, d11.sibling);
                      d11 = e13(d11, f11.children || []);
                      d11.return = a11;
                      a11 = d11;
                      break a;
                    } else {
                      c10(a11, d11);
                      break;
                    }
                  else
                    b10(a11, d11);
                  d11 = d11.sibling;
                }
                d11 = wh2(f11, a11.mode, h11);
                d11.return = a11;
                a11 = d11;
              }
              return g10(a11);
            case Ga2:
              return l11 = f11._init, J10(a11, d11, l11(f11._payload), h11);
          }
          if (db2(f11))
            return m10(a11, d11, f11, h11);
          if (Ja2(f11))
            return w10(a11, d11, f11, h11);
          qh2(a11, f11);
        }
        return typeof f11 === "string" && f11 !== "" || typeof f11 === "number" ? (f11 = "" + f11, d11 !== null && d11.tag === 6 ? (c10(a11, d11.sibling), d11 = e13(d11, f11), d11.return = a11, a11 = d11) : (c10(a11, d11), d11 = uh2(f11, a11.mode, h11), d11.return = a11, a11 = d11), g10(a11)) : c10(a11, d11);
      }
      return J10;
    }
    var yh2 = sh2(true);
    var zh2 = sh2(false);
    var Ah2 = {};
    var Bh2 = Tf2(Ah2);
    var Ch2 = Tf2(Ah2);
    var Dh2 = Tf2(Ah2);
    function Eh2(a10) {
      if (a10 === Ah2)
        throw Error(p10(174));
      return a10;
    }
    function Fh2(a10, b10) {
      G10(Dh2, b10);
      G10(Ch2, a10);
      G10(Bh2, Ah2);
      a10 = b10.nodeType;
      switch (a10) {
        case 9:
        case 11:
          b10 = (b10 = b10.documentElement) ? b10.namespaceURI : kb2(null, "");
          break;
        default:
          a10 = a10 === 8 ? b10.parentNode : b10, b10 = a10.namespaceURI || null, a10 = a10.tagName, b10 = kb2(b10, a10);
      }
      E10(Bh2);
      G10(Bh2, b10);
    }
    function Gh2() {
      E10(Bh2);
      E10(Ch2);
      E10(Dh2);
    }
    function Hh2(a10) {
      Eh2(Dh2.current);
      var b10 = Eh2(Bh2.current);
      var c10 = kb2(b10, a10.type);
      b10 !== c10 && (G10(Ch2, a10), G10(Bh2, c10));
    }
    function Ih2(a10) {
      Ch2.current === a10 && (E10(Bh2), E10(Ch2));
    }
    var K10 = Tf2(0);
    function Jh2(a10) {
      for (var b10 = a10; b10 !== null; ) {
        if (b10.tag === 13) {
          var c10 = b10.memoizedState;
          if (c10 !== null && (c10 = c10.dehydrated, c10 === null || c10.data === "$?" || c10.data === "$!"))
            return b10;
        } else if (b10.tag === 19 && b10.memoizedProps.revealOrder !== void 0) {
          if ((b10.flags & 128) !== 0)
            return b10;
        } else if (b10.child !== null) {
          b10.child.return = b10;
          b10 = b10.child;
          continue;
        }
        if (b10 === a10)
          break;
        for (; b10.sibling === null; ) {
          if (b10.return === null || b10.return === a10)
            return null;
          b10 = b10.return;
        }
        b10.sibling.return = b10.return;
        b10 = b10.sibling;
      }
      return null;
    }
    var Kh2 = [];
    function Lh2() {
      for (var a10 = 0; a10 < Kh2.length; a10++)
        Kh2[a10]._workInProgressVersionPrimary = null;
      Kh2.length = 0;
    }
    var Mh2 = ta2.ReactCurrentDispatcher;
    var Nh2 = ta2.ReactCurrentBatchConfig;
    var Oh2 = 0;
    var L10 = null;
    var M10 = null;
    var N10 = null;
    var Ph2 = false;
    var Qh2 = false;
    var Rh2 = 0;
    var Sh2 = 0;
    function O10() {
      throw Error(p10(321));
    }
    function Th2(a10, b10) {
      if (b10 === null)
        return false;
      for (var c10 = 0; c10 < b10.length && c10 < a10.length; c10++)
        if (!Ge2(a10[c10], b10[c10]))
          return false;
      return true;
    }
    function Uh2(a10, b10, c10, d10, e13, f10) {
      Oh2 = f10;
      L10 = b10;
      b10.memoizedState = null;
      b10.updateQueue = null;
      b10.lanes = 0;
      Mh2.current = a10 === null || a10.memoizedState === null ? Vh2 : Wh2;
      a10 = c10(d10, e13);
      if (Qh2) {
        f10 = 0;
        do {
          Qh2 = false;
          Rh2 = 0;
          if (25 <= f10)
            throw Error(p10(301));
          f10 += 1;
          N10 = M10 = null;
          b10.updateQueue = null;
          Mh2.current = Xh2;
          a10 = c10(d10, e13);
        } while (Qh2);
      }
      Mh2.current = Yh2;
      b10 = M10 !== null && M10.next !== null;
      Oh2 = 0;
      N10 = M10 = L10 = null;
      Ph2 = false;
      if (b10)
        throw Error(p10(300));
      return a10;
    }
    function Zh2() {
      var a10 = Rh2 !== 0;
      Rh2 = 0;
      return a10;
    }
    function $h2() {
      var a10 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
      N10 === null ? L10.memoizedState = N10 = a10 : N10 = N10.next = a10;
      return N10;
    }
    function ai2() {
      if (M10 === null) {
        var a10 = L10.alternate;
        a10 = a10 !== null ? a10.memoizedState : null;
      } else
        a10 = M10.next;
      var b10 = N10 === null ? L10.memoizedState : N10.next;
      if (b10 !== null)
        N10 = b10, M10 = a10;
      else {
        if (a10 === null)
          throw Error(p10(310));
        M10 = a10;
        a10 = { memoizedState: M10.memoizedState, baseState: M10.baseState, baseQueue: M10.baseQueue, queue: M10.queue, next: null };
        N10 === null ? L10.memoizedState = N10 = a10 : N10 = N10.next = a10;
      }
      return N10;
    }
    function bi(a10, b10) {
      return typeof b10 === "function" ? b10(a10) : b10;
    }
    function ci2(a10) {
      var b10 = ai2(), c10 = b10.queue;
      if (c10 === null)
        throw Error(p10(311));
      c10.lastRenderedReducer = a10;
      var d10 = M10, e13 = d10.baseQueue, f10 = c10.pending;
      if (f10 !== null) {
        if (e13 !== null) {
          var g10 = e13.next;
          e13.next = f10.next;
          f10.next = g10;
        }
        d10.baseQueue = e13 = f10;
        c10.pending = null;
      }
      if (e13 !== null) {
        f10 = e13.next;
        d10 = d10.baseState;
        var h10 = g10 = null, k10 = null, l10 = f10;
        do {
          var n10 = l10.lane;
          if ((Oh2 & n10) === n10)
            k10 !== null && (k10 = k10.next = { lane: 0, action: l10.action, hasEagerState: l10.hasEagerState, eagerState: l10.eagerState, next: null }), d10 = l10.hasEagerState ? l10.eagerState : a10(d10, l10.action);
          else {
            var u10 = {
              lane: n10,
              action: l10.action,
              hasEagerState: l10.hasEagerState,
              eagerState: l10.eagerState,
              next: null
            };
            k10 === null ? (h10 = k10 = u10, g10 = d10) : k10 = k10.next = u10;
            L10.lanes |= n10;
            Fg2 |= n10;
          }
          l10 = l10.next;
        } while (l10 !== null && l10 !== f10);
        k10 === null ? g10 = d10 : k10.next = h10;
        Ge2(d10, b10.memoizedState) || (tg2 = true);
        b10.memoizedState = d10;
        b10.baseState = g10;
        b10.baseQueue = k10;
        c10.lastRenderedState = d10;
      }
      a10 = c10.interleaved;
      if (a10 !== null) {
        e13 = a10;
        do
          f10 = e13.lane, L10.lanes |= f10, Fg2 |= f10, e13 = e13.next;
        while (e13 !== a10);
      } else
        e13 === null && (c10.lanes = 0);
      return [b10.memoizedState, c10.dispatch];
    }
    function di(a10) {
      var b10 = ai2(), c10 = b10.queue;
      if (c10 === null)
        throw Error(p10(311));
      c10.lastRenderedReducer = a10;
      var d10 = c10.dispatch, e13 = c10.pending, f10 = b10.memoizedState;
      if (e13 !== null) {
        c10.pending = null;
        var g10 = e13 = e13.next;
        do
          f10 = a10(f10, g10.action), g10 = g10.next;
        while (g10 !== e13);
        Ge2(f10, b10.memoizedState) || (tg2 = true);
        b10.memoizedState = f10;
        b10.baseQueue === null && (b10.baseState = f10);
        c10.lastRenderedState = f10;
      }
      return [f10, d10];
    }
    function ei2() {
    }
    function fi(a10, b10) {
      var c10 = L10, d10 = ai2(), e13 = b10(), f10 = !Ge2(d10.memoizedState, e13);
      f10 && (d10.memoizedState = e13, tg2 = true);
      d10 = d10.queue;
      gi2(hi2.bind(null, c10, d10, a10), [a10]);
      if (d10.getSnapshot !== b10 || f10 || N10 !== null && N10.memoizedState.tag & 1) {
        c10.flags |= 2048;
        ii(9, ji2.bind(null, c10, d10, e13, b10), void 0, null);
        if (P10 === null)
          throw Error(p10(349));
        (Oh2 & 30) !== 0 || ki2(c10, b10, e13);
      }
      return e13;
    }
    function ki2(a10, b10, c10) {
      a10.flags |= 16384;
      a10 = { getSnapshot: b10, value: c10 };
      b10 = L10.updateQueue;
      b10 === null ? (b10 = { lastEffect: null, stores: null }, L10.updateQueue = b10, b10.stores = [a10]) : (c10 = b10.stores, c10 === null ? b10.stores = [a10] : c10.push(a10));
    }
    function ji2(a10, b10, c10, d10) {
      b10.value = c10;
      b10.getSnapshot = d10;
      li2(b10) && Lg2(a10, 1, -1);
    }
    function hi2(a10, b10, c10) {
      return c10(function() {
        li2(b10) && Lg2(a10, 1, -1);
      });
    }
    function li2(a10) {
      var b10 = a10.getSnapshot;
      a10 = a10.value;
      try {
        var c10 = b10();
        return !Ge2(a10, c10);
      } catch (d10) {
        return true;
      }
    }
    function mi2(a10) {
      var b10 = $h2();
      typeof a10 === "function" && (a10 = a10());
      b10.memoizedState = b10.baseState = a10;
      a10 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: bi, lastRenderedState: a10 };
      b10.queue = a10;
      a10 = a10.dispatch = ni2.bind(null, L10, a10);
      return [b10.memoizedState, a10];
    }
    function ii(a10, b10, c10, d10) {
      a10 = { tag: a10, create: b10, destroy: c10, deps: d10, next: null };
      b10 = L10.updateQueue;
      b10 === null ? (b10 = { lastEffect: null, stores: null }, L10.updateQueue = b10, b10.lastEffect = a10.next = a10) : (c10 = b10.lastEffect, c10 === null ? b10.lastEffect = a10.next = a10 : (d10 = c10.next, c10.next = a10, a10.next = d10, b10.lastEffect = a10));
      return a10;
    }
    function oi() {
      return ai2().memoizedState;
    }
    function pi2(a10, b10, c10, d10) {
      var e13 = $h2();
      L10.flags |= a10;
      e13.memoizedState = ii(1 | b10, c10, void 0, d10 === void 0 ? null : d10);
    }
    function qi2(a10, b10, c10, d10) {
      var e13 = ai2();
      d10 = d10 === void 0 ? null : d10;
      var f10 = void 0;
      if (M10 !== null) {
        var g10 = M10.memoizedState;
        f10 = g10.destroy;
        if (d10 !== null && Th2(d10, g10.deps)) {
          e13.memoizedState = ii(b10, c10, f10, d10);
          return;
        }
      }
      L10.flags |= a10;
      e13.memoizedState = ii(1 | b10, c10, f10, d10);
    }
    function ri2(a10, b10) {
      return pi2(8390656, 8, a10, b10);
    }
    function gi2(a10, b10) {
      return qi2(2048, 8, a10, b10);
    }
    function si2(a10, b10) {
      return qi2(4, 2, a10, b10);
    }
    function ti2(a10, b10) {
      return qi2(4, 4, a10, b10);
    }
    function ui2(a10, b10) {
      if (typeof b10 === "function")
        return a10 = a10(), b10(a10), function() {
          b10(null);
        };
      if (b10 !== null && b10 !== void 0)
        return a10 = a10(), b10.current = a10, function() {
          b10.current = null;
        };
    }
    function vi2(a10, b10, c10) {
      c10 = c10 !== null && c10 !== void 0 ? c10.concat([a10]) : null;
      return qi2(4, 4, ui2.bind(null, b10, a10), c10);
    }
    function wi2() {
    }
    function xi2(a10, b10) {
      var c10 = ai2();
      b10 = b10 === void 0 ? null : b10;
      var d10 = c10.memoizedState;
      if (d10 !== null && b10 !== null && Th2(b10, d10[1]))
        return d10[0];
      c10.memoizedState = [a10, b10];
      return a10;
    }
    function yi(a10, b10) {
      var c10 = ai2();
      b10 = b10 === void 0 ? null : b10;
      var d10 = c10.memoizedState;
      if (d10 !== null && b10 !== null && Th2(b10, d10[1]))
        return d10[0];
      a10 = a10();
      c10.memoizedState = [a10, b10];
      return a10;
    }
    function zi2(a10, b10, c10) {
      if ((Oh2 & 21) === 0)
        return a10.baseState && (a10.baseState = false, tg2 = true), a10.memoizedState = c10;
      Ge2(c10, b10) || (c10 = xc2(), L10.lanes |= c10, Fg2 |= c10, a10.baseState = true);
      return b10;
    }
    function Ai2(a10, b10) {
      var c10 = C10;
      C10 = c10 !== 0 && 4 > c10 ? c10 : 4;
      a10(true);
      var d10 = Nh2.transition;
      Nh2.transition = {};
      try {
        a10(false), b10();
      } finally {
        C10 = c10, Nh2.transition = d10;
      }
    }
    function Bi2() {
      return ai2().memoizedState;
    }
    function Ci2(a10, b10, c10) {
      var d10 = Kg2(a10);
      c10 = { lane: d10, action: c10, hasEagerState: false, eagerState: null, next: null };
      Di2(a10) ? Ei2(b10, c10) : (Fi2(a10, b10, c10), c10 = Jg2(), a10 = Lg2(a10, d10, c10), a10 !== null && Gi2(a10, b10, d10));
    }
    function ni2(a10, b10, c10) {
      var d10 = Kg2(a10), e13 = { lane: d10, action: c10, hasEagerState: false, eagerState: null, next: null };
      if (Di2(a10))
        Ei2(b10, e13);
      else {
        Fi2(a10, b10, e13);
        var f10 = a10.alternate;
        if (a10.lanes === 0 && (f10 === null || f10.lanes === 0) && (f10 = b10.lastRenderedReducer, f10 !== null))
          try {
            var g10 = b10.lastRenderedState, h10 = f10(g10, c10);
            e13.hasEagerState = true;
            e13.eagerState = h10;
            if (Ge2(h10, g10))
              return;
          } catch (k10) {
          } finally {
          }
        c10 = Jg2();
        a10 = Lg2(a10, d10, c10);
        a10 !== null && Gi2(a10, b10, d10);
      }
    }
    function Di2(a10) {
      var b10 = a10.alternate;
      return a10 === L10 || b10 !== null && b10 === L10;
    }
    function Ei2(a10, b10) {
      Qh2 = Ph2 = true;
      var c10 = a10.pending;
      c10 === null ? b10.next = b10 : (b10.next = c10.next, c10.next = b10);
      a10.pending = b10;
    }
    function Fi2(a10, b10, c10) {
      Bg2(a10) ? (a10 = b10.interleaved, a10 === null ? (c10.next = c10, vg2 === null ? vg2 = [b10] : vg2.push(b10)) : (c10.next = a10.next, a10.next = c10), b10.interleaved = c10) : (a10 = b10.pending, a10 === null ? c10.next = c10 : (c10.next = a10.next, a10.next = c10), b10.pending = c10);
    }
    function Gi2(a10, b10, c10) {
      if ((c10 & 4194240) !== 0) {
        var d10 = b10.lanes;
        d10 &= a10.pendingLanes;
        c10 |= d10;
        b10.lanes = c10;
        Bc2(a10, c10);
      }
    }
    var Yh2 = { readContext: ug2, useCallback: O10, useContext: O10, useEffect: O10, useImperativeHandle: O10, useInsertionEffect: O10, useLayoutEffect: O10, useMemo: O10, useReducer: O10, useRef: O10, useState: O10, useDebugValue: O10, useDeferredValue: O10, useTransition: O10, useMutableSource: O10, useSyncExternalStore: O10, useId: O10, unstable_isNewReconciler: false };
    var Vh2 = { readContext: ug2, useCallback: function(a10, b10) {
      $h2().memoizedState = [a10, b10 === void 0 ? null : b10];
      return a10;
    }, useContext: ug2, useEffect: ri2, useImperativeHandle: function(a10, b10, c10) {
      c10 = c10 !== null && c10 !== void 0 ? c10.concat([a10]) : null;
      return pi2(4194308, 4, ui2.bind(null, b10, a10), c10);
    }, useLayoutEffect: function(a10, b10) {
      return pi2(4194308, 4, a10, b10);
    }, useInsertionEffect: function(a10, b10) {
      return pi2(4, 2, a10, b10);
    }, useMemo: function(a10, b10) {
      var c10 = $h2();
      b10 = b10 === void 0 ? null : b10;
      a10 = a10();
      c10.memoizedState = [a10, b10];
      return a10;
    }, useReducer: function(a10, b10, c10) {
      var d10 = $h2();
      b10 = c10 !== void 0 ? c10(b10) : b10;
      d10.memoizedState = d10.baseState = b10;
      a10 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a10, lastRenderedState: b10 };
      d10.queue = a10;
      a10 = a10.dispatch = Ci2.bind(null, L10, a10);
      return [d10.memoizedState, a10];
    }, useRef: function(a10) {
      var b10 = $h2();
      a10 = { current: a10 };
      return b10.memoizedState = a10;
    }, useState: mi2, useDebugValue: wi2, useDeferredValue: function(a10) {
      return $h2().memoizedState = a10;
    }, useTransition: function() {
      var a10 = mi2(false), b10 = a10[0];
      a10 = Ai2.bind(null, a10[1]);
      $h2().memoizedState = a10;
      return [b10, a10];
    }, useMutableSource: function() {
    }, useSyncExternalStore: function(a10, b10, c10) {
      var d10 = L10, e13 = $h2();
      if (I10) {
        if (c10 === void 0)
          throw Error(p10(407));
        c10 = c10();
      } else {
        c10 = b10();
        if (P10 === null)
          throw Error(p10(349));
        (Oh2 & 30) !== 0 || ki2(d10, b10, c10);
      }
      e13.memoizedState = c10;
      var f10 = { value: c10, getSnapshot: b10 };
      e13.queue = f10;
      ri2(hi2.bind(null, d10, f10, a10), [a10]);
      d10.flags |= 2048;
      ii(9, ji2.bind(null, d10, f10, c10, b10), void 0, null);
      return c10;
    }, useId: function() {
      var a10 = $h2(), b10 = P10.identifierPrefix;
      if (I10) {
        var c10 = Zg2;
        var d10 = Yg2;
        c10 = (d10 & ~(1 << 32 - nc2(d10) - 1)).toString(32) + c10;
        b10 = ":" + b10 + "R" + c10;
        c10 = Rh2++;
        0 < c10 && (b10 += "H" + c10.toString(32));
        b10 += ":";
      } else
        c10 = Sh2++, b10 = ":" + b10 + "r" + c10.toString(32) + ":";
      return a10.memoizedState = b10;
    }, unstable_isNewReconciler: false };
    var Wh2 = {
      readContext: ug2,
      useCallback: xi2,
      useContext: ug2,
      useEffect: gi2,
      useImperativeHandle: vi2,
      useInsertionEffect: si2,
      useLayoutEffect: ti2,
      useMemo: yi,
      useReducer: ci2,
      useRef: oi,
      useState: function() {
        return ci2(bi);
      },
      useDebugValue: wi2,
      useDeferredValue: function(a10) {
        var b10 = ai2();
        return zi2(b10, M10.memoizedState, a10);
      },
      useTransition: function() {
        var a10 = ci2(bi)[0], b10 = ai2().memoizedState;
        return [a10, b10];
      },
      useMutableSource: ei2,
      useSyncExternalStore: fi,
      useId: Bi2,
      unstable_isNewReconciler: false
    };
    var Xh2 = { readContext: ug2, useCallback: xi2, useContext: ug2, useEffect: gi2, useImperativeHandle: vi2, useInsertionEffect: si2, useLayoutEffect: ti2, useMemo: yi, useReducer: di, useRef: oi, useState: function() {
      return di(bi);
    }, useDebugValue: wi2, useDeferredValue: function(a10) {
      var b10 = ai2();
      return M10 === null ? b10.memoizedState = a10 : zi2(b10, M10.memoizedState, a10);
    }, useTransition: function() {
      var a10 = di(bi)[0], b10 = ai2().memoizedState;
      return [a10, b10];
    }, useMutableSource: ei2, useSyncExternalStore: fi, useId: Bi2, unstable_isNewReconciler: false };
    function Hi2(a10, b10) {
      try {
        var c10 = "", d10 = b10;
        do
          c10 += Oa(d10), d10 = d10.return;
        while (d10);
        var e13 = c10;
      } catch (f10) {
        e13 = "\nError generating stack: " + f10.message + "\n" + f10.stack;
      }
      return { value: a10, source: b10, stack: e13 };
    }
    function Ii(a10, b10) {
      try {
        console.error(b10.value);
      } catch (c10) {
        setTimeout(function() {
          throw c10;
        });
      }
    }
    var Ji2 = typeof WeakMap === "function" ? WeakMap : Map;
    function Ki2(a10, b10, c10) {
      c10 = zg2(-1, c10);
      c10.tag = 3;
      c10.payload = { element: null };
      var d10 = b10.value;
      c10.callback = function() {
        Li2 || (Li2 = true, Mi2 = d10);
        Ii(a10, b10);
      };
      return c10;
    }
    function Ni2(a10, b10, c10) {
      c10 = zg2(-1, c10);
      c10.tag = 3;
      var d10 = a10.type.getDerivedStateFromError;
      if (typeof d10 === "function") {
        var e13 = b10.value;
        c10.payload = function() {
          return d10(e13);
        };
        c10.callback = function() {
          Ii(a10, b10);
        };
      }
      var f10 = a10.stateNode;
      f10 !== null && typeof f10.componentDidCatch === "function" && (c10.callback = function() {
        Ii(a10, b10);
        typeof d10 !== "function" && (Oi2 === null ? Oi2 = /* @__PURE__ */ new Set([this]) : Oi2.add(this));
        var c11 = b10.stack;
        this.componentDidCatch(b10.value, { componentStack: c11 !== null ? c11 : "" });
      });
      return c10;
    }
    function Pi(a10, b10, c10) {
      var d10 = a10.pingCache;
      if (d10 === null) {
        d10 = a10.pingCache = new Ji2();
        var e13 = /* @__PURE__ */ new Set();
        d10.set(b10, e13);
      } else
        e13 = d10.get(b10), e13 === void 0 && (e13 = /* @__PURE__ */ new Set(), d10.set(b10, e13));
      e13.has(c10) || (e13.add(c10), a10 = Qi2.bind(null, a10, b10, c10), b10.then(a10, a10));
    }
    function Ri2(a10) {
      do {
        var b10;
        if (b10 = a10.tag === 13)
          b10 = a10.memoizedState, b10 = b10 !== null ? b10.dehydrated !== null ? true : false : true;
        if (b10)
          return a10;
        a10 = a10.return;
      } while (a10 !== null);
      return null;
    }
    function Si2(a10, b10, c10, d10, e13) {
      if ((a10.mode & 1) === 0)
        return a10 === b10 ? a10.flags |= 65536 : (a10.flags |= 128, c10.flags |= 131072, c10.flags &= -52805, c10.tag === 1 && (c10.alternate === null ? c10.tag = 17 : (b10 = zg2(-1, 1), b10.tag = 2, Ag2(c10, b10))), c10.lanes |= 1), a10;
      a10.flags |= 65536;
      a10.lanes = e13;
      return a10;
    }
    var Ti2;
    var Ui2;
    var Vi2;
    var Wi2;
    Ti2 = function(a10, b10) {
      for (var c10 = b10.child; c10 !== null; ) {
        if (c10.tag === 5 || c10.tag === 6)
          a10.appendChild(c10.stateNode);
        else if (c10.tag !== 4 && c10.child !== null) {
          c10.child.return = c10;
          c10 = c10.child;
          continue;
        }
        if (c10 === b10)
          break;
        for (; c10.sibling === null; ) {
          if (c10.return === null || c10.return === b10)
            return;
          c10 = c10.return;
        }
        c10.sibling.return = c10.return;
        c10 = c10.sibling;
      }
    };
    Ui2 = function() {
    };
    Vi2 = function(a10, b10, c10, d10) {
      var e13 = a10.memoizedProps;
      if (e13 !== d10) {
        a10 = b10.stateNode;
        Eh2(Bh2.current);
        var f10 = null;
        switch (c10) {
          case "input":
            e13 = Xa2(a10, e13);
            d10 = Xa2(a10, d10);
            f10 = [];
            break;
          case "select":
            e13 = A10({}, e13, { value: void 0 });
            d10 = A10({}, d10, { value: void 0 });
            f10 = [];
            break;
          case "textarea":
            e13 = fb2(a10, e13);
            d10 = fb2(a10, d10);
            f10 = [];
            break;
          default:
            typeof e13.onClick !== "function" && typeof d10.onClick === "function" && (a10.onclick = Af2);
        }
        tb2(c10, d10);
        var g10;
        c10 = null;
        for (l10 in e13)
          if (!d10.hasOwnProperty(l10) && e13.hasOwnProperty(l10) && e13[l10] != null)
            if (l10 === "style") {
              var h10 = e13[l10];
              for (g10 in h10)
                h10.hasOwnProperty(g10) && (c10 || (c10 = {}), c10[g10] = "");
            } else
              l10 !== "dangerouslySetInnerHTML" && l10 !== "children" && l10 !== "suppressContentEditableWarning" && l10 !== "suppressHydrationWarning" && l10 !== "autoFocus" && (ea2.hasOwnProperty(l10) ? f10 || (f10 = []) : (f10 = f10 || []).push(l10, null));
        for (l10 in d10) {
          var k10 = d10[l10];
          h10 = e13 != null ? e13[l10] : void 0;
          if (d10.hasOwnProperty(l10) && k10 !== h10 && (k10 != null || h10 != null))
            if (l10 === "style")
              if (h10) {
                for (g10 in h10)
                  !h10.hasOwnProperty(g10) || k10 && k10.hasOwnProperty(g10) || (c10 || (c10 = {}), c10[g10] = "");
                for (g10 in k10)
                  k10.hasOwnProperty(g10) && h10[g10] !== k10[g10] && (c10 || (c10 = {}), c10[g10] = k10[g10]);
              } else
                c10 || (f10 || (f10 = []), f10.push(l10, c10)), c10 = k10;
            else
              l10 === "dangerouslySetInnerHTML" ? (k10 = k10 ? k10.__html : void 0, h10 = h10 ? h10.__html : void 0, k10 != null && h10 !== k10 && (f10 = f10 || []).push(l10, k10)) : l10 === "children" ? typeof k10 !== "string" && typeof k10 !== "number" || (f10 = f10 || []).push(l10, "" + k10) : l10 !== "suppressContentEditableWarning" && l10 !== "suppressHydrationWarning" && (ea2.hasOwnProperty(l10) ? (k10 != null && l10 === "onScroll" && D10("scroll", a10), f10 || h10 === k10 || (f10 = [])) : (f10 = f10 || []).push(l10, k10));
        }
        c10 && (f10 = f10 || []).push("style", c10);
        var l10 = f10;
        if (b10.updateQueue = l10)
          b10.flags |= 4;
      }
    };
    Wi2 = function(a10, b10, c10, d10) {
      c10 !== d10 && (b10.flags |= 4);
    };
    function Xi2(a10, b10) {
      if (!I10)
        switch (a10.tailMode) {
          case "hidden":
            b10 = a10.tail;
            for (var c10 = null; b10 !== null; )
              b10.alternate !== null && (c10 = b10), b10 = b10.sibling;
            c10 === null ? a10.tail = null : c10.sibling = null;
            break;
          case "collapsed":
            c10 = a10.tail;
            for (var d10 = null; c10 !== null; )
              c10.alternate !== null && (d10 = c10), c10 = c10.sibling;
            d10 === null ? b10 || a10.tail === null ? a10.tail = null : a10.tail.sibling = null : d10.sibling = null;
        }
    }
    function Q(a10) {
      var b10 = a10.alternate !== null && a10.alternate.child === a10.child, c10 = 0, d10 = 0;
      if (b10)
        for (var e13 = a10.child; e13 !== null; )
          c10 |= e13.lanes | e13.childLanes, d10 |= e13.subtreeFlags & 14680064, d10 |= e13.flags & 14680064, e13.return = a10, e13 = e13.sibling;
      else
        for (e13 = a10.child; e13 !== null; )
          c10 |= e13.lanes | e13.childLanes, d10 |= e13.subtreeFlags, d10 |= e13.flags, e13.return = a10, e13 = e13.sibling;
      a10.subtreeFlags |= d10;
      a10.childLanes = c10;
      return b10;
    }
    function Yi2(a10, b10, c10) {
      var d10 = b10.pendingProps;
      ch2(b10);
      switch (b10.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
          return Q(b10), null;
        case 1:
          return Yf2(b10.type) && Zf2(), Q(b10), null;
        case 3:
          d10 = b10.stateNode;
          Gh2();
          E10(Vf2);
          E10(H10);
          Lh2();
          d10.pendingContext && (d10.context = d10.pendingContext, d10.pendingContext = null);
          if (a10 === null || a10.child === null)
            mh2(b10) ? b10.flags |= 4 : a10 === null || a10.memoizedState.isDehydrated && (b10.flags & 256) === 0 || (b10.flags |= 1024, fh2 !== null && (Zi2(fh2), fh2 = null));
          Ui2(a10, b10);
          Q(b10);
          return null;
        case 5:
          Ih2(b10);
          var e13 = Eh2(Dh2.current);
          c10 = b10.type;
          if (a10 !== null && b10.stateNode != null)
            Vi2(a10, b10, c10, d10, e13), a10.ref !== b10.ref && (b10.flags |= 512, b10.flags |= 2097152);
          else {
            if (!d10) {
              if (b10.stateNode === null)
                throw Error(p10(166));
              Q(b10);
              return null;
            }
            a10 = Eh2(Bh2.current);
            if (mh2(b10)) {
              d10 = b10.stateNode;
              c10 = b10.type;
              var f10 = b10.memoizedProps;
              d10[Nf2] = b10;
              d10[Of2] = f10;
              a10 = (b10.mode & 1) !== 0;
              switch (c10) {
                case "dialog":
                  D10("cancel", d10);
                  D10("close", d10);
                  break;
                case "iframe":
                case "object":
                case "embed":
                  D10("load", d10);
                  break;
                case "video":
                case "audio":
                  for (e13 = 0; e13 < kf2.length; e13++)
                    D10(kf2[e13], d10);
                  break;
                case "source":
                  D10("error", d10);
                  break;
                case "img":
                case "image":
                case "link":
                  D10("error", d10);
                  D10("load", d10);
                  break;
                case "details":
                  D10("toggle", d10);
                  break;
                case "input":
                  Ya2(d10, f10);
                  D10("invalid", d10);
                  break;
                case "select":
                  d10._wrapperState = { wasMultiple: !!f10.multiple };
                  D10("invalid", d10);
                  break;
                case "textarea":
                  gb2(d10, f10), D10("invalid", d10);
              }
              tb2(c10, f10);
              e13 = null;
              for (var g10 in f10)
                if (f10.hasOwnProperty(g10)) {
                  var h10 = f10[g10];
                  g10 === "children" ? typeof h10 === "string" ? d10.textContent !== h10 && (f10.suppressHydrationWarning !== true && zf2(d10.textContent, h10, a10), e13 = ["children", h10]) : typeof h10 === "number" && d10.textContent !== "" + h10 && (f10.suppressHydrationWarning !== true && zf2(d10.textContent, h10, a10), e13 = ["children", "" + h10]) : ea2.hasOwnProperty(g10) && h10 != null && g10 === "onScroll" && D10("scroll", d10);
                }
              switch (c10) {
                case "input":
                  Ua(d10);
                  cb2(d10, f10, true);
                  break;
                case "textarea":
                  Ua(d10);
                  ib2(d10);
                  break;
                case "select":
                case "option":
                  break;
                default:
                  typeof f10.onClick === "function" && (d10.onclick = Af2);
              }
              d10 = e13;
              b10.updateQueue = d10;
              d10 !== null && (b10.flags |= 4);
            } else {
              g10 = e13.nodeType === 9 ? e13 : e13.ownerDocument;
              a10 === "http://www.w3.org/1999/xhtml" && (a10 = jb2(c10));
              a10 === "http://www.w3.org/1999/xhtml" ? c10 === "script" ? (a10 = g10.createElement("div"), a10.innerHTML = "<script><\/script>", a10 = a10.removeChild(a10.firstChild)) : typeof d10.is === "string" ? a10 = g10.createElement(c10, { is: d10.is }) : (a10 = g10.createElement(c10), c10 === "select" && (g10 = a10, d10.multiple ? g10.multiple = true : d10.size && (g10.size = d10.size))) : a10 = g10.createElementNS(a10, c10);
              a10[Nf2] = b10;
              a10[Of2] = d10;
              Ti2(a10, b10, false, false);
              b10.stateNode = a10;
              a: {
                g10 = ub2(c10, d10);
                switch (c10) {
                  case "dialog":
                    D10("cancel", a10);
                    D10("close", a10);
                    e13 = d10;
                    break;
                  case "iframe":
                  case "object":
                  case "embed":
                    D10("load", a10);
                    e13 = d10;
                    break;
                  case "video":
                  case "audio":
                    for (e13 = 0; e13 < kf2.length; e13++)
                      D10(kf2[e13], a10);
                    e13 = d10;
                    break;
                  case "source":
                    D10("error", a10);
                    e13 = d10;
                    break;
                  case "img":
                  case "image":
                  case "link":
                    D10("error", a10);
                    D10("load", a10);
                    e13 = d10;
                    break;
                  case "details":
                    D10("toggle", a10);
                    e13 = d10;
                    break;
                  case "input":
                    Ya2(a10, d10);
                    e13 = Xa2(a10, d10);
                    D10("invalid", a10);
                    break;
                  case "option":
                    e13 = d10;
                    break;
                  case "select":
                    a10._wrapperState = { wasMultiple: !!d10.multiple };
                    e13 = A10({}, d10, { value: void 0 });
                    D10("invalid", a10);
                    break;
                  case "textarea":
                    gb2(a10, d10);
                    e13 = fb2(a10, d10);
                    D10("invalid", a10);
                    break;
                  default:
                    e13 = d10;
                }
                tb2(c10, e13);
                h10 = e13;
                for (f10 in h10)
                  if (h10.hasOwnProperty(f10)) {
                    var k10 = h10[f10];
                    f10 === "style" ? rb2(a10, k10) : f10 === "dangerouslySetInnerHTML" ? (k10 = k10 ? k10.__html : void 0, k10 != null && mb2(a10, k10)) : f10 === "children" ? typeof k10 === "string" ? (c10 !== "textarea" || k10 !== "") && nb2(a10, k10) : typeof k10 === "number" && nb2(a10, "" + k10) : f10 !== "suppressContentEditableWarning" && f10 !== "suppressHydrationWarning" && f10 !== "autoFocus" && (ea2.hasOwnProperty(f10) ? k10 != null && f10 === "onScroll" && D10("scroll", a10) : k10 != null && sa2(a10, f10, k10, g10));
                  }
                switch (c10) {
                  case "input":
                    Ua(a10);
                    cb2(a10, d10, false);
                    break;
                  case "textarea":
                    Ua(a10);
                    ib2(a10);
                    break;
                  case "option":
                    d10.value != null && a10.setAttribute("value", "" + Ra2(d10.value));
                    break;
                  case "select":
                    a10.multiple = !!d10.multiple;
                    f10 = d10.value;
                    f10 != null ? eb2(a10, !!d10.multiple, f10, false) : d10.defaultValue != null && eb2(a10, !!d10.multiple, d10.defaultValue, true);
                    break;
                  default:
                    typeof e13.onClick === "function" && (a10.onclick = Af2);
                }
                switch (c10) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    d10 = !!d10.autoFocus;
                    break a;
                  case "img":
                    d10 = true;
                    break a;
                  default:
                    d10 = false;
                }
              }
              d10 && (b10.flags |= 4);
            }
            b10.ref !== null && (b10.flags |= 512, b10.flags |= 2097152);
          }
          Q(b10);
          return null;
        case 6:
          if (a10 && b10.stateNode != null)
            Wi2(a10, b10, a10.memoizedProps, d10);
          else {
            if (typeof d10 !== "string" && b10.stateNode === null)
              throw Error(p10(166));
            c10 = Eh2(Dh2.current);
            Eh2(Bh2.current);
            if (mh2(b10)) {
              d10 = b10.stateNode;
              c10 = b10.memoizedProps;
              d10[Nf2] = b10;
              if (f10 = d10.nodeValue !== c10) {
                if (a10 = dh2, a10 !== null)
                  switch (a10.tag) {
                    case 3:
                      zf2(d10.nodeValue, c10, (a10.mode & 1) !== 0);
                      break;
                    case 5:
                      a10.memoizedProps.suppressHydrationWarning !== true && zf2(d10.nodeValue, c10, (a10.mode & 1) !== 0);
                  }
              }
              f10 && (b10.flags |= 4);
            } else
              d10 = (c10.nodeType === 9 ? c10 : c10.ownerDocument).createTextNode(d10), d10[Nf2] = b10, b10.stateNode = d10;
          }
          Q(b10);
          return null;
        case 13:
          E10(K10);
          d10 = b10.memoizedState;
          if (I10 && eh2 !== null && (b10.mode & 1) !== 0 && (b10.flags & 128) === 0) {
            for (d10 = eh2; d10; )
              d10 = Kf2(d10.nextSibling);
            nh2();
            b10.flags |= 98560;
            return b10;
          }
          if (d10 !== null && d10.dehydrated !== null) {
            d10 = mh2(b10);
            if (a10 === null) {
              if (!d10)
                throw Error(p10(318));
              d10 = b10.memoizedState;
              d10 = d10 !== null ? d10.dehydrated : null;
              if (!d10)
                throw Error(p10(317));
              d10[Nf2] = b10;
            } else
              nh2(), (b10.flags & 128) === 0 && (b10.memoizedState = null), b10.flags |= 4;
            Q(b10);
            return null;
          }
          fh2 !== null && (Zi2(fh2), fh2 = null);
          if ((b10.flags & 128) !== 0)
            return b10.lanes = c10, b10;
          d10 = d10 !== null;
          c10 = false;
          a10 === null ? mh2(b10) : c10 = a10.memoizedState !== null;
          d10 !== c10 && d10 && (b10.child.flags |= 8192, (b10.mode & 1) !== 0 && (a10 === null || (K10.current & 1) !== 0 ? R10 === 0 && (R10 = 3) : $i2()));
          b10.updateQueue !== null && (b10.flags |= 4);
          Q(b10);
          return null;
        case 4:
          return Gh2(), Ui2(a10, b10), a10 === null && rf2(b10.stateNode.containerInfo), Q(b10), null;
        case 10:
          return qg2(b10.type._context), Q(b10), null;
        case 17:
          return Yf2(b10.type) && Zf2(), Q(b10), null;
        case 19:
          E10(K10);
          f10 = b10.memoizedState;
          if (f10 === null)
            return Q(b10), null;
          d10 = (b10.flags & 128) !== 0;
          g10 = f10.rendering;
          if (g10 === null)
            if (d10)
              Xi2(f10, false);
            else {
              if (R10 !== 0 || a10 !== null && (a10.flags & 128) !== 0)
                for (a10 = b10.child; a10 !== null; ) {
                  g10 = Jh2(a10);
                  if (g10 !== null) {
                    b10.flags |= 128;
                    Xi2(f10, false);
                    d10 = g10.updateQueue;
                    d10 !== null && (b10.updateQueue = d10, b10.flags |= 4);
                    b10.subtreeFlags = 0;
                    d10 = c10;
                    for (c10 = b10.child; c10 !== null; )
                      f10 = c10, a10 = d10, f10.flags &= 14680066, g10 = f10.alternate, g10 === null ? (f10.childLanes = 0, f10.lanes = a10, f10.child = null, f10.subtreeFlags = 0, f10.memoizedProps = null, f10.memoizedState = null, f10.updateQueue = null, f10.dependencies = null, f10.stateNode = null) : (f10.childLanes = g10.childLanes, f10.lanes = g10.lanes, f10.child = g10.child, f10.subtreeFlags = 0, f10.deletions = null, f10.memoizedProps = g10.memoizedProps, f10.memoizedState = g10.memoizedState, f10.updateQueue = g10.updateQueue, f10.type = g10.type, a10 = g10.dependencies, f10.dependencies = a10 === null ? null : { lanes: a10.lanes, firstContext: a10.firstContext }), c10 = c10.sibling;
                    G10(K10, K10.current & 1 | 2);
                    return b10.child;
                  }
                  a10 = a10.sibling;
                }
              f10.tail !== null && B10() > aj2 && (b10.flags |= 128, d10 = true, Xi2(f10, false), b10.lanes = 4194304);
            }
          else {
            if (!d10)
              if (a10 = Jh2(g10), a10 !== null) {
                if (b10.flags |= 128, d10 = true, c10 = a10.updateQueue, c10 !== null && (b10.updateQueue = c10, b10.flags |= 4), Xi2(f10, true), f10.tail === null && f10.tailMode === "hidden" && !g10.alternate && !I10)
                  return Q(b10), null;
              } else
                2 * B10() - f10.renderingStartTime > aj2 && c10 !== 1073741824 && (b10.flags |= 128, d10 = true, Xi2(f10, false), b10.lanes = 4194304);
            f10.isBackwards ? (g10.sibling = b10.child, b10.child = g10) : (c10 = f10.last, c10 !== null ? c10.sibling = g10 : b10.child = g10, f10.last = g10);
          }
          if (f10.tail !== null)
            return b10 = f10.tail, f10.rendering = b10, f10.tail = b10.sibling, f10.renderingStartTime = B10(), b10.sibling = null, c10 = K10.current, G10(K10, d10 ? c10 & 1 | 2 : c10 & 1), b10;
          Q(b10);
          return null;
        case 22:
        case 23:
          return bj2(), d10 = b10.memoizedState !== null, a10 !== null && a10.memoizedState !== null !== d10 && (b10.flags |= 8192), d10 && (b10.mode & 1) !== 0 ? (cj2 & 1073741824) !== 0 && (Q(b10), b10.subtreeFlags & 6 && (b10.flags |= 8192)) : Q(b10), null;
        case 24:
          return null;
        case 25:
          return null;
      }
      throw Error(p10(156, b10.tag));
    }
    var dj2 = ta2.ReactCurrentOwner;
    var tg2 = false;
    function ej2(a10, b10, c10, d10) {
      b10.child = a10 === null ? zh2(b10, null, c10, d10) : yh2(b10, a10.child, c10, d10);
    }
    function fj2(a10, b10, c10, d10, e13) {
      c10 = c10.render;
      var f10 = b10.ref;
      sg2(b10, e13);
      d10 = Uh2(a10, b10, c10, d10, f10, e13);
      c10 = Zh2();
      if (a10 !== null && !tg2)
        return b10.updateQueue = a10.updateQueue, b10.flags &= -2053, a10.lanes &= ~e13, gj2(a10, b10, e13);
      I10 && c10 && bh2(b10);
      b10.flags |= 1;
      ej2(a10, b10, d10, e13);
      return b10.child;
    }
    function hj2(a10, b10, c10, d10, e13) {
      if (a10 === null) {
        var f10 = c10.type;
        if (typeof f10 === "function" && !ij2(f10) && f10.defaultProps === void 0 && c10.compare === null && c10.defaultProps === void 0)
          return b10.tag = 15, b10.type = f10, jj2(a10, b10, f10, d10, e13);
        a10 = vh2(c10.type, null, d10, b10, b10.mode, e13);
        a10.ref = b10.ref;
        a10.return = b10;
        return b10.child = a10;
      }
      f10 = a10.child;
      if ((a10.lanes & e13) === 0) {
        var g10 = f10.memoizedProps;
        c10 = c10.compare;
        c10 = c10 !== null ? c10 : He;
        if (c10(g10, d10) && a10.ref === b10.ref)
          return gj2(a10, b10, e13);
      }
      b10.flags |= 1;
      a10 = th2(f10, d10);
      a10.ref = b10.ref;
      a10.return = b10;
      return b10.child = a10;
    }
    function jj2(a10, b10, c10, d10, e13) {
      if (a10 !== null) {
        var f10 = a10.memoizedProps;
        if (He(f10, d10) && a10.ref === b10.ref)
          if (tg2 = false, b10.pendingProps = d10 = f10, (a10.lanes & e13) !== 0)
            (a10.flags & 131072) !== 0 && (tg2 = true);
          else
            return b10.lanes = a10.lanes, gj2(a10, b10, e13);
      }
      return kj(a10, b10, c10, d10, e13);
    }
    function lj2(a10, b10, c10) {
      var d10 = b10.pendingProps, e13 = d10.children, f10 = a10 !== null ? a10.memoizedState : null;
      if (d10.mode === "hidden")
        if ((b10.mode & 1) === 0)
          b10.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G10(mj2, cj2), cj2 |= c10;
        else if ((c10 & 1073741824) !== 0)
          b10.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, d10 = f10 !== null ? f10.baseLanes : c10, G10(mj2, cj2), cj2 |= d10;
        else
          return a10 = f10 !== null ? f10.baseLanes | c10 : c10, b10.lanes = b10.childLanes = 1073741824, b10.memoizedState = { baseLanes: a10, cachePool: null, transitions: null }, b10.updateQueue = null, G10(mj2, cj2), cj2 |= a10, null;
      else
        f10 !== null ? (d10 = f10.baseLanes | c10, b10.memoizedState = null) : d10 = c10, G10(mj2, cj2), cj2 |= d10;
      ej2(a10, b10, e13, c10);
      return b10.child;
    }
    function nj(a10, b10) {
      var c10 = b10.ref;
      if (a10 === null && c10 !== null || a10 !== null && a10.ref !== c10)
        b10.flags |= 512, b10.flags |= 2097152;
    }
    function kj(a10, b10, c10, d10, e13) {
      var f10 = Yf2(c10) ? Wf2 : H10.current;
      f10 = Xf2(b10, f10);
      sg2(b10, e13);
      c10 = Uh2(a10, b10, c10, d10, f10, e13);
      d10 = Zh2();
      if (a10 !== null && !tg2)
        return b10.updateQueue = a10.updateQueue, b10.flags &= -2053, a10.lanes &= ~e13, gj2(a10, b10, e13);
      I10 && d10 && bh2(b10);
      b10.flags |= 1;
      ej2(a10, b10, c10, e13);
      return b10.child;
    }
    function oj(a10, b10, c10, d10, e13) {
      if (Yf2(c10)) {
        var f10 = true;
        bg2(b10);
      } else
        f10 = false;
      sg2(b10, e13);
      if (b10.stateNode === null)
        a10 !== null && (a10.alternate = null, b10.alternate = null, b10.flags |= 2), Og2(b10, c10, d10), Qg2(b10, c10, d10, e13), d10 = true;
      else if (a10 === null) {
        var g10 = b10.stateNode, h10 = b10.memoizedProps;
        g10.props = h10;
        var k10 = g10.context, l10 = c10.contextType;
        typeof l10 === "object" && l10 !== null ? l10 = ug2(l10) : (l10 = Yf2(c10) ? Wf2 : H10.current, l10 = Xf2(b10, l10));
        var n10 = c10.getDerivedStateFromProps, u10 = typeof n10 === "function" || typeof g10.getSnapshotBeforeUpdate === "function";
        u10 || typeof g10.UNSAFE_componentWillReceiveProps !== "function" && typeof g10.componentWillReceiveProps !== "function" || (h10 !== d10 || k10 !== l10) && Pg2(b10, g10, d10, l10);
        wg2 = false;
        var q10 = b10.memoizedState;
        g10.state = q10;
        Eg2(b10, d10, g10, e13);
        k10 = b10.memoizedState;
        h10 !== d10 || q10 !== k10 || Vf2.current || wg2 ? (typeof n10 === "function" && (Ig2(b10, c10, n10, d10), k10 = b10.memoizedState), (h10 = wg2 || Ng2(b10, c10, h10, d10, q10, k10, l10)) ? (u10 || typeof g10.UNSAFE_componentWillMount !== "function" && typeof g10.componentWillMount !== "function" || (typeof g10.componentWillMount === "function" && g10.componentWillMount(), typeof g10.UNSAFE_componentWillMount === "function" && g10.UNSAFE_componentWillMount()), typeof g10.componentDidMount === "function" && (b10.flags |= 4194308)) : (typeof g10.componentDidMount === "function" && (b10.flags |= 4194308), b10.memoizedProps = d10, b10.memoizedState = k10), g10.props = d10, g10.state = k10, g10.context = l10, d10 = h10) : (typeof g10.componentDidMount === "function" && (b10.flags |= 4194308), d10 = false);
      } else {
        g10 = b10.stateNode;
        yg2(a10, b10);
        h10 = b10.memoizedProps;
        l10 = b10.type === b10.elementType ? h10 : kg2(b10.type, h10);
        g10.props = l10;
        u10 = b10.pendingProps;
        q10 = g10.context;
        k10 = c10.contextType;
        typeof k10 === "object" && k10 !== null ? k10 = ug2(k10) : (k10 = Yf2(c10) ? Wf2 : H10.current, k10 = Xf2(b10, k10));
        var y10 = c10.getDerivedStateFromProps;
        (n10 = typeof y10 === "function" || typeof g10.getSnapshotBeforeUpdate === "function") || typeof g10.UNSAFE_componentWillReceiveProps !== "function" && typeof g10.componentWillReceiveProps !== "function" || (h10 !== u10 || q10 !== k10) && Pg2(b10, g10, d10, k10);
        wg2 = false;
        q10 = b10.memoizedState;
        g10.state = q10;
        Eg2(b10, d10, g10, e13);
        var m10 = b10.memoizedState;
        h10 !== u10 || q10 !== m10 || Vf2.current || wg2 ? (typeof y10 === "function" && (Ig2(b10, c10, y10, d10), m10 = b10.memoizedState), (l10 = wg2 || Ng2(b10, c10, l10, d10, q10, m10, k10) || false) ? (n10 || typeof g10.UNSAFE_componentWillUpdate !== "function" && typeof g10.componentWillUpdate !== "function" || (typeof g10.componentWillUpdate === "function" && g10.componentWillUpdate(d10, m10, k10), typeof g10.UNSAFE_componentWillUpdate === "function" && g10.UNSAFE_componentWillUpdate(d10, m10, k10)), typeof g10.componentDidUpdate === "function" && (b10.flags |= 4), typeof g10.getSnapshotBeforeUpdate === "function" && (b10.flags |= 1024)) : (typeof g10.componentDidUpdate !== "function" || h10 === a10.memoizedProps && q10 === a10.memoizedState || (b10.flags |= 4), typeof g10.getSnapshotBeforeUpdate !== "function" || h10 === a10.memoizedProps && q10 === a10.memoizedState || (b10.flags |= 1024), b10.memoizedProps = d10, b10.memoizedState = m10), g10.props = d10, g10.state = m10, g10.context = k10, d10 = l10) : (typeof g10.componentDidUpdate !== "function" || h10 === a10.memoizedProps && q10 === a10.memoizedState || (b10.flags |= 4), typeof g10.getSnapshotBeforeUpdate !== "function" || h10 === a10.memoizedProps && q10 === a10.memoizedState || (b10.flags |= 1024), d10 = false);
      }
      return pj2(a10, b10, c10, d10, f10, e13);
    }
    function pj2(a10, b10, c10, d10, e13, f10) {
      nj(a10, b10);
      var g10 = (b10.flags & 128) !== 0;
      if (!d10 && !g10)
        return e13 && cg2(b10, c10, false), gj2(a10, b10, f10);
      d10 = b10.stateNode;
      dj2.current = b10;
      var h10 = g10 && typeof c10.getDerivedStateFromError !== "function" ? null : d10.render();
      b10.flags |= 1;
      a10 !== null && g10 ? (b10.child = yh2(b10, a10.child, null, f10), b10.child = yh2(b10, null, h10, f10)) : ej2(a10, b10, h10, f10);
      b10.memoizedState = d10.state;
      e13 && cg2(b10, c10, true);
      return b10.child;
    }
    function qj(a10) {
      var b10 = a10.stateNode;
      b10.pendingContext ? $f2(a10, b10.pendingContext, b10.pendingContext !== b10.context) : b10.context && $f2(a10, b10.context, false);
      Fh2(a10, b10.containerInfo);
    }
    function rj2(a10, b10, c10, d10, e13) {
      nh2();
      oh2(e13);
      b10.flags |= 256;
      ej2(a10, b10, c10, d10);
      return b10.child;
    }
    var sj = { dehydrated: null, treeContext: null, retryLane: 0 };
    function tj(a10) {
      return { baseLanes: a10, cachePool: null, transitions: null };
    }
    function uj2(a10, b10) {
      return { baseLanes: a10.baseLanes | b10, cachePool: null, transitions: a10.transitions };
    }
    function vj(a10, b10, c10) {
      var d10 = b10.pendingProps, e13 = K10.current, f10 = false, g10 = (b10.flags & 128) !== 0, h10;
      (h10 = g10) || (h10 = a10 !== null && a10.memoizedState === null ? false : (e13 & 2) !== 0);
      if (h10)
        f10 = true, b10.flags &= -129;
      else if (a10 === null || a10.memoizedState !== null)
        e13 |= 1;
      G10(K10, e13 & 1);
      if (a10 === null) {
        kh2(b10);
        a10 = b10.memoizedState;
        if (a10 !== null && (a10 = a10.dehydrated, a10 !== null))
          return (b10.mode & 1) === 0 ? b10.lanes = 1 : a10.data === "$!" ? b10.lanes = 8 : b10.lanes = 1073741824, null;
        e13 = d10.children;
        a10 = d10.fallback;
        return f10 ? (d10 = b10.mode, f10 = b10.child, e13 = { mode: "hidden", children: e13 }, (d10 & 1) === 0 && f10 !== null ? (f10.childLanes = 0, f10.pendingProps = e13) : f10 = wj(e13, d10, 0, null), a10 = xh2(a10, d10, c10, null), f10.return = b10, a10.return = b10, f10.sibling = a10, b10.child = f10, b10.child.memoizedState = tj(c10), b10.memoizedState = sj, a10) : xj(b10, e13);
      }
      e13 = a10.memoizedState;
      if (e13 !== null) {
        h10 = e13.dehydrated;
        if (h10 !== null) {
          if (g10) {
            if (b10.flags & 256)
              return b10.flags &= -257, yj2(a10, b10, c10, Error(p10(422)));
            if (b10.memoizedState !== null)
              return b10.child = a10.child, b10.flags |= 128, null;
            f10 = d10.fallback;
            e13 = b10.mode;
            d10 = wj({ mode: "visible", children: d10.children }, e13, 0, null);
            f10 = xh2(f10, e13, c10, null);
            f10.flags |= 2;
            d10.return = b10;
            f10.return = b10;
            d10.sibling = f10;
            b10.child = d10;
            (b10.mode & 1) !== 0 && yh2(b10, a10.child, null, c10);
            b10.child.memoizedState = tj(c10);
            b10.memoizedState = sj;
            return f10;
          }
          if ((b10.mode & 1) === 0)
            b10 = yj2(a10, b10, c10, null);
          else if (h10.data === "$!")
            b10 = yj2(a10, b10, c10, Error(p10(419)));
          else if (d10 = (c10 & a10.childLanes) !== 0, tg2 || d10) {
            d10 = P10;
            if (d10 !== null) {
              switch (c10 & -c10) {
                case 4:
                  f10 = 2;
                  break;
                case 16:
                  f10 = 8;
                  break;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                  f10 = 32;
                  break;
                case 536870912:
                  f10 = 268435456;
                  break;
                default:
                  f10 = 0;
              }
              d10 = (f10 & (d10.suspendedLanes | c10)) !== 0 ? 0 : f10;
              d10 !== 0 && d10 !== e13.retryLane && (e13.retryLane = d10, Lg2(a10, d10, -1));
            }
            $i2();
            b10 = yj2(a10, b10, c10, Error(p10(421)));
          } else
            h10.data === "$?" ? (b10.flags |= 128, b10.child = a10.child, b10 = zj2.bind(null, a10), h10._reactRetry = b10, b10 = null) : (c10 = e13.treeContext, eh2 = Kf2(h10.nextSibling), dh2 = b10, I10 = true, fh2 = null, c10 !== null && (Vg2[Wg2++] = Yg2, Vg2[Wg2++] = Zg2, Vg2[Wg2++] = Xg2, Yg2 = c10.id, Zg2 = c10.overflow, Xg2 = b10), b10 = xj(b10, b10.pendingProps.children), b10.flags |= 4096);
          return b10;
        }
        if (f10)
          return d10 = Aj2(a10, b10, d10.children, d10.fallback, c10), f10 = b10.child, e13 = a10.child.memoizedState, f10.memoizedState = e13 === null ? tj(c10) : uj2(e13, c10), f10.childLanes = a10.childLanes & ~c10, b10.memoizedState = sj, d10;
        c10 = Bj(a10, b10, d10.children, c10);
        b10.memoizedState = null;
        return c10;
      }
      if (f10)
        return d10 = Aj2(a10, b10, d10.children, d10.fallback, c10), f10 = b10.child, e13 = a10.child.memoizedState, f10.memoizedState = e13 === null ? tj(c10) : uj2(e13, c10), f10.childLanes = a10.childLanes & ~c10, b10.memoizedState = sj, d10;
      c10 = Bj(a10, b10, d10.children, c10);
      b10.memoizedState = null;
      return c10;
    }
    function xj(a10, b10) {
      b10 = wj({ mode: "visible", children: b10 }, a10.mode, 0, null);
      b10.return = a10;
      return a10.child = b10;
    }
    function Bj(a10, b10, c10, d10) {
      var e13 = a10.child;
      a10 = e13.sibling;
      c10 = th2(e13, { mode: "visible", children: c10 });
      (b10.mode & 1) === 0 && (c10.lanes = d10);
      c10.return = b10;
      c10.sibling = null;
      a10 !== null && (d10 = b10.deletions, d10 === null ? (b10.deletions = [a10], b10.flags |= 16) : d10.push(a10));
      return b10.child = c10;
    }
    function Aj2(a10, b10, c10, d10, e13) {
      var f10 = b10.mode;
      a10 = a10.child;
      var g10 = a10.sibling, h10 = { mode: "hidden", children: c10 };
      (f10 & 1) === 0 && b10.child !== a10 ? (c10 = b10.child, c10.childLanes = 0, c10.pendingProps = h10, b10.deletions = null) : (c10 = th2(a10, h10), c10.subtreeFlags = a10.subtreeFlags & 14680064);
      g10 !== null ? d10 = th2(g10, d10) : (d10 = xh2(d10, f10, e13, null), d10.flags |= 2);
      d10.return = b10;
      c10.return = b10;
      c10.sibling = d10;
      b10.child = c10;
      return d10;
    }
    function yj2(a10, b10, c10, d10) {
      d10 !== null && oh2(d10);
      yh2(b10, a10.child, null, c10);
      a10 = xj(b10, b10.pendingProps.children);
      a10.flags |= 2;
      b10.memoizedState = null;
      return a10;
    }
    function Cj(a10, b10, c10) {
      a10.lanes |= b10;
      var d10 = a10.alternate;
      d10 !== null && (d10.lanes |= b10);
      rg2(a10.return, b10, c10);
    }
    function Dj(a10, b10, c10, d10, e13) {
      var f10 = a10.memoizedState;
      f10 === null ? a10.memoizedState = { isBackwards: b10, rendering: null, renderingStartTime: 0, last: d10, tail: c10, tailMode: e13 } : (f10.isBackwards = b10, f10.rendering = null, f10.renderingStartTime = 0, f10.last = d10, f10.tail = c10, f10.tailMode = e13);
    }
    function Ej(a10, b10, c10) {
      var d10 = b10.pendingProps, e13 = d10.revealOrder, f10 = d10.tail;
      ej2(a10, b10, d10.children, c10);
      d10 = K10.current;
      if ((d10 & 2) !== 0)
        d10 = d10 & 1 | 2, b10.flags |= 128;
      else {
        if (a10 !== null && (a10.flags & 128) !== 0)
          a:
            for (a10 = b10.child; a10 !== null; ) {
              if (a10.tag === 13)
                a10.memoizedState !== null && Cj(a10, c10, b10);
              else if (a10.tag === 19)
                Cj(a10, c10, b10);
              else if (a10.child !== null) {
                a10.child.return = a10;
                a10 = a10.child;
                continue;
              }
              if (a10 === b10)
                break a;
              for (; a10.sibling === null; ) {
                if (a10.return === null || a10.return === b10)
                  break a;
                a10 = a10.return;
              }
              a10.sibling.return = a10.return;
              a10 = a10.sibling;
            }
        d10 &= 1;
      }
      G10(K10, d10);
      if ((b10.mode & 1) === 0)
        b10.memoizedState = null;
      else
        switch (e13) {
          case "forwards":
            c10 = b10.child;
            for (e13 = null; c10 !== null; )
              a10 = c10.alternate, a10 !== null && Jh2(a10) === null && (e13 = c10), c10 = c10.sibling;
            c10 = e13;
            c10 === null ? (e13 = b10.child, b10.child = null) : (e13 = c10.sibling, c10.sibling = null);
            Dj(b10, false, e13, c10, f10);
            break;
          case "backwards":
            c10 = null;
            e13 = b10.child;
            for (b10.child = null; e13 !== null; ) {
              a10 = e13.alternate;
              if (a10 !== null && Jh2(a10) === null) {
                b10.child = e13;
                break;
              }
              a10 = e13.sibling;
              e13.sibling = c10;
              c10 = e13;
              e13 = a10;
            }
            Dj(b10, true, c10, null, f10);
            break;
          case "together":
            Dj(b10, false, null, null, void 0);
            break;
          default:
            b10.memoizedState = null;
        }
      return b10.child;
    }
    function gj2(a10, b10, c10) {
      a10 !== null && (b10.dependencies = a10.dependencies);
      Fg2 |= b10.lanes;
      if ((c10 & b10.childLanes) === 0)
        return null;
      if (a10 !== null && b10.child !== a10.child)
        throw Error(p10(153));
      if (b10.child !== null) {
        a10 = b10.child;
        c10 = th2(a10, a10.pendingProps);
        b10.child = c10;
        for (c10.return = b10; a10.sibling !== null; )
          a10 = a10.sibling, c10 = c10.sibling = th2(a10, a10.pendingProps), c10.return = b10;
        c10.sibling = null;
      }
      return b10.child;
    }
    function Fj2(a10, b10, c10) {
      switch (b10.tag) {
        case 3:
          qj(b10);
          nh2();
          break;
        case 5:
          Hh2(b10);
          break;
        case 1:
          Yf2(b10.type) && bg2(b10);
          break;
        case 4:
          Fh2(b10, b10.stateNode.containerInfo);
          break;
        case 10:
          var d10 = b10.type._context, e13 = b10.memoizedProps.value;
          G10(lg2, d10._currentValue);
          d10._currentValue = e13;
          break;
        case 13:
          d10 = b10.memoizedState;
          if (d10 !== null) {
            if (d10.dehydrated !== null)
              return G10(K10, K10.current & 1), b10.flags |= 128, null;
            if ((c10 & b10.child.childLanes) !== 0)
              return vj(a10, b10, c10);
            G10(K10, K10.current & 1);
            a10 = gj2(a10, b10, c10);
            return a10 !== null ? a10.sibling : null;
          }
          G10(K10, K10.current & 1);
          break;
        case 19:
          d10 = (c10 & b10.childLanes) !== 0;
          if ((a10.flags & 128) !== 0) {
            if (d10)
              return Ej(a10, b10, c10);
            b10.flags |= 128;
          }
          e13 = b10.memoizedState;
          e13 !== null && (e13.rendering = null, e13.tail = null, e13.lastEffect = null);
          G10(K10, K10.current);
          if (d10)
            break;
          else
            return null;
        case 22:
        case 23:
          return b10.lanes = 0, lj2(a10, b10, c10);
      }
      return gj2(a10, b10, c10);
    }
    function Gj2(a10, b10) {
      ch2(b10);
      switch (b10.tag) {
        case 1:
          return Yf2(b10.type) && Zf2(), a10 = b10.flags, a10 & 65536 ? (b10.flags = a10 & -65537 | 128, b10) : null;
        case 3:
          return Gh2(), E10(Vf2), E10(H10), Lh2(), a10 = b10.flags, (a10 & 65536) !== 0 && (a10 & 128) === 0 ? (b10.flags = a10 & -65537 | 128, b10) : null;
        case 5:
          return Ih2(b10), null;
        case 13:
          E10(K10);
          a10 = b10.memoizedState;
          if (a10 !== null && a10.dehydrated !== null) {
            if (b10.alternate === null)
              throw Error(p10(340));
            nh2();
          }
          a10 = b10.flags;
          return a10 & 65536 ? (b10.flags = a10 & -65537 | 128, b10) : null;
        case 19:
          return E10(K10), null;
        case 4:
          return Gh2(), null;
        case 10:
          return qg2(b10.type._context), null;
        case 22:
        case 23:
          return bj2(), null;
        case 24:
          return null;
        default:
          return null;
      }
    }
    var Hj2 = false;
    var S10 = false;
    var Ij = typeof WeakSet === "function" ? WeakSet : Set;
    var T10 = null;
    function Jj2(a10, b10) {
      var c10 = a10.ref;
      if (c10 !== null)
        if (typeof c10 === "function")
          try {
            c10(null);
          } catch (d10) {
            U10(a10, b10, d10);
          }
        else
          c10.current = null;
    }
    function Kj2(a10, b10, c10) {
      try {
        c10();
      } catch (d10) {
        U10(a10, b10, d10);
      }
    }
    var Lj2 = false;
    function Mj(a10, b10) {
      Bf2 = cd2;
      a10 = Le2();
      if (Me(a10)) {
        if ("selectionStart" in a10)
          var c10 = { start: a10.selectionStart, end: a10.selectionEnd };
        else
          a: {
            c10 = (c10 = a10.ownerDocument) && c10.defaultView || window;
            var d10 = c10.getSelection && c10.getSelection();
            if (d10 && d10.rangeCount !== 0) {
              c10 = d10.anchorNode;
              var e13 = d10.anchorOffset, f10 = d10.focusNode;
              d10 = d10.focusOffset;
              try {
                c10.nodeType, f10.nodeType;
              } catch (Z10) {
                c10 = null;
                break a;
              }
              var g10 = 0, h10 = -1, k10 = -1, l10 = 0, n10 = 0, u10 = a10, q10 = null;
              b:
                for (; ; ) {
                  for (var y10; ; ) {
                    u10 !== c10 || e13 !== 0 && u10.nodeType !== 3 || (h10 = g10 + e13);
                    u10 !== f10 || d10 !== 0 && u10.nodeType !== 3 || (k10 = g10 + d10);
                    u10.nodeType === 3 && (g10 += u10.nodeValue.length);
                    if ((y10 = u10.firstChild) === null)
                      break;
                    q10 = u10;
                    u10 = y10;
                  }
                  for (; ; ) {
                    if (u10 === a10)
                      break b;
                    q10 === c10 && ++l10 === e13 && (h10 = g10);
                    q10 === f10 && ++n10 === d10 && (k10 = g10);
                    if ((y10 = u10.nextSibling) !== null)
                      break;
                    u10 = q10;
                    q10 = u10.parentNode;
                  }
                  u10 = y10;
                }
              c10 = h10 === -1 || k10 === -1 ? null : { start: h10, end: k10 };
            } else
              c10 = null;
          }
        c10 = c10 || { start: 0, end: 0 };
      } else
        c10 = null;
      Cf2 = { focusedElem: a10, selectionRange: c10 };
      cd2 = false;
      for (T10 = b10; T10 !== null; )
        if (b10 = T10, a10 = b10.child, (b10.subtreeFlags & 1028) !== 0 && a10 !== null)
          a10.return = b10, T10 = a10;
        else
          for (; T10 !== null; ) {
            b10 = T10;
            try {
              var m10 = b10.alternate;
              if ((b10.flags & 1024) !== 0)
                switch (b10.tag) {
                  case 0:
                  case 11:
                  case 15:
                    break;
                  case 1:
                    if (m10 !== null) {
                      var w10 = m10.memoizedProps, J10 = m10.memoizedState, v10 = b10.stateNode, x10 = v10.getSnapshotBeforeUpdate(b10.elementType === b10.type ? w10 : kg2(b10.type, w10), J10);
                      v10.__reactInternalSnapshotBeforeUpdate = x10;
                    }
                    break;
                  case 3:
                    var r11 = b10.stateNode.containerInfo;
                    if (r11.nodeType === 1)
                      r11.textContent = "";
                    else if (r11.nodeType === 9) {
                      var F10 = r11.body;
                      F10 != null && (F10.textContent = "");
                    }
                    break;
                  case 5:
                  case 6:
                  case 4:
                  case 17:
                    break;
                  default:
                    throw Error(p10(163));
                }
            } catch (Z10) {
              U10(b10, b10.return, Z10);
            }
            a10 = b10.sibling;
            if (a10 !== null) {
              a10.return = b10.return;
              T10 = a10;
              break;
            }
            T10 = b10.return;
          }
      m10 = Lj2;
      Lj2 = false;
      return m10;
    }
    function Nj(a10, b10, c10) {
      var d10 = b10.updateQueue;
      d10 = d10 !== null ? d10.lastEffect : null;
      if (d10 !== null) {
        var e13 = d10 = d10.next;
        do {
          if ((e13.tag & a10) === a10) {
            var f10 = e13.destroy;
            e13.destroy = void 0;
            f10 !== void 0 && Kj2(b10, c10, f10);
          }
          e13 = e13.next;
        } while (e13 !== d10);
      }
    }
    function Oj2(a10, b10) {
      b10 = b10.updateQueue;
      b10 = b10 !== null ? b10.lastEffect : null;
      if (b10 !== null) {
        var c10 = b10 = b10.next;
        do {
          if ((c10.tag & a10) === a10) {
            var d10 = c10.create;
            c10.destroy = d10();
          }
          c10 = c10.next;
        } while (c10 !== b10);
      }
    }
    function Pj(a10) {
      var b10 = a10.ref;
      if (b10 !== null) {
        var c10 = a10.stateNode;
        switch (a10.tag) {
          case 5:
            a10 = c10;
            break;
          default:
            a10 = c10;
        }
        typeof b10 === "function" ? b10(a10) : b10.current = a10;
      }
    }
    function Qj2(a10) {
      var b10 = a10.alternate;
      b10 !== null && (a10.alternate = null, Qj2(b10));
      a10.child = null;
      a10.deletions = null;
      a10.sibling = null;
      a10.tag === 5 && (b10 = a10.stateNode, b10 !== null && (delete b10[Nf2], delete b10[Of2], delete b10[nf2], delete b10[Pf2], delete b10[Qf2]));
      a10.stateNode = null;
      a10.return = null;
      a10.dependencies = null;
      a10.memoizedProps = null;
      a10.memoizedState = null;
      a10.pendingProps = null;
      a10.stateNode = null;
      a10.updateQueue = null;
    }
    function Rj2(a10) {
      return a10.tag === 5 || a10.tag === 3 || a10.tag === 4;
    }
    function Sj2(a10) {
      a:
        for (; ; ) {
          for (; a10.sibling === null; ) {
            if (a10.return === null || Rj2(a10.return))
              return null;
            a10 = a10.return;
          }
          a10.sibling.return = a10.return;
          for (a10 = a10.sibling; a10.tag !== 5 && a10.tag !== 6 && a10.tag !== 18; ) {
            if (a10.flags & 2)
              continue a;
            if (a10.child === null || a10.tag === 4)
              continue a;
            else
              a10.child.return = a10, a10 = a10.child;
          }
          if (!(a10.flags & 2))
            return a10.stateNode;
        }
    }
    function Tj2(a10, b10, c10) {
      var d10 = a10.tag;
      if (d10 === 5 || d10 === 6)
        a10 = a10.stateNode, b10 ? c10.nodeType === 8 ? c10.parentNode.insertBefore(a10, b10) : c10.insertBefore(a10, b10) : (c10.nodeType === 8 ? (b10 = c10.parentNode, b10.insertBefore(a10, c10)) : (b10 = c10, b10.appendChild(a10)), c10 = c10._reactRootContainer, c10 !== null && c10 !== void 0 || b10.onclick !== null || (b10.onclick = Af2));
      else if (d10 !== 4 && (a10 = a10.child, a10 !== null))
        for (Tj2(a10, b10, c10), a10 = a10.sibling; a10 !== null; )
          Tj2(a10, b10, c10), a10 = a10.sibling;
    }
    function Uj2(a10, b10, c10) {
      var d10 = a10.tag;
      if (d10 === 5 || d10 === 6)
        a10 = a10.stateNode, b10 ? c10.insertBefore(a10, b10) : c10.appendChild(a10);
      else if (d10 !== 4 && (a10 = a10.child, a10 !== null))
        for (Uj2(a10, b10, c10), a10 = a10.sibling; a10 !== null; )
          Uj2(a10, b10, c10), a10 = a10.sibling;
    }
    var V10 = null;
    var Vj = false;
    function Wj2(a10, b10, c10) {
      for (c10 = c10.child; c10 !== null; )
        Xj(a10, b10, c10), c10 = c10.sibling;
    }
    function Xj(a10, b10, c10) {
      if (kc2 && typeof kc2.onCommitFiberUnmount === "function")
        try {
          kc2.onCommitFiberUnmount(jc, c10);
        } catch (h10) {
        }
      switch (c10.tag) {
        case 5:
          S10 || Jj2(c10, b10);
        case 6:
          var d10 = V10, e13 = Vj;
          V10 = null;
          Wj2(a10, b10, c10);
          V10 = d10;
          Vj = e13;
          V10 !== null && (Vj ? (a10 = V10, c10 = c10.stateNode, a10.nodeType === 8 ? a10.parentNode.removeChild(c10) : a10.removeChild(c10)) : V10.removeChild(c10.stateNode));
          break;
        case 18:
          V10 !== null && (Vj ? (a10 = V10, c10 = c10.stateNode, a10.nodeType === 8 ? Jf2(a10.parentNode, c10) : a10.nodeType === 1 && Jf2(a10, c10), ad2(a10)) : Jf2(V10, c10.stateNode));
          break;
        case 4:
          d10 = V10;
          e13 = Vj;
          V10 = c10.stateNode.containerInfo;
          Vj = true;
          Wj2(a10, b10, c10);
          V10 = d10;
          Vj = e13;
          break;
        case 0:
        case 11:
        case 14:
        case 15:
          if (!S10 && (d10 = c10.updateQueue, d10 !== null && (d10 = d10.lastEffect, d10 !== null))) {
            e13 = d10 = d10.next;
            do {
              var f10 = e13, g10 = f10.destroy;
              f10 = f10.tag;
              g10 !== void 0 && ((f10 & 2) !== 0 ? Kj2(c10, b10, g10) : (f10 & 4) !== 0 && Kj2(c10, b10, g10));
              e13 = e13.next;
            } while (e13 !== d10);
          }
          Wj2(a10, b10, c10);
          break;
        case 1:
          if (!S10 && (Jj2(c10, b10), d10 = c10.stateNode, typeof d10.componentWillUnmount === "function"))
            try {
              d10.props = c10.memoizedProps, d10.state = c10.memoizedState, d10.componentWillUnmount();
            } catch (h10) {
              U10(c10, b10, h10);
            }
          Wj2(a10, b10, c10);
          break;
        case 21:
          Wj2(a10, b10, c10);
          break;
        case 22:
          c10.mode & 1 ? (S10 = (d10 = S10) || c10.memoizedState !== null, Wj2(a10, b10, c10), S10 = d10) : Wj2(a10, b10, c10);
          break;
        default:
          Wj2(a10, b10, c10);
      }
    }
    function Yj2(a10) {
      var b10 = a10.updateQueue;
      if (b10 !== null) {
        a10.updateQueue = null;
        var c10 = a10.stateNode;
        c10 === null && (c10 = a10.stateNode = new Ij());
        b10.forEach(function(b11) {
          var d10 = Zj2.bind(null, a10, b11);
          c10.has(b11) || (c10.add(b11), b11.then(d10, d10));
        });
      }
    }
    function ak2(a10, b10) {
      var c10 = b10.deletions;
      if (c10 !== null)
        for (var d10 = 0; d10 < c10.length; d10++) {
          var e13 = c10[d10];
          try {
            var f10 = a10, g10 = b10, h10 = g10;
            a:
              for (; h10 !== null; ) {
                switch (h10.tag) {
                  case 5:
                    V10 = h10.stateNode;
                    Vj = false;
                    break a;
                  case 3:
                    V10 = h10.stateNode.containerInfo;
                    Vj = true;
                    break a;
                  case 4:
                    V10 = h10.stateNode.containerInfo;
                    Vj = true;
                    break a;
                }
                h10 = h10.return;
              }
            if (V10 === null)
              throw Error(p10(160));
            Xj(f10, g10, e13);
            V10 = null;
            Vj = false;
            var k10 = e13.alternate;
            k10 !== null && (k10.return = null);
            e13.return = null;
          } catch (l10) {
            U10(e13, b10, l10);
          }
        }
      if (b10.subtreeFlags & 12854)
        for (b10 = b10.child; b10 !== null; )
          bk2(b10, a10), b10 = b10.sibling;
    }
    function bk2(a10, b10) {
      var c10 = a10.alternate, d10 = a10.flags;
      switch (a10.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          ak2(b10, a10);
          ck2(a10);
          if (d10 & 4) {
            try {
              Nj(3, a10, a10.return), Oj2(3, a10);
            } catch (m10) {
              U10(a10, a10.return, m10);
            }
            try {
              Nj(5, a10, a10.return);
            } catch (m10) {
              U10(a10, a10.return, m10);
            }
          }
          break;
        case 1:
          ak2(b10, a10);
          ck2(a10);
          d10 & 512 && c10 !== null && Jj2(c10, c10.return);
          break;
        case 5:
          ak2(b10, a10);
          ck2(a10);
          d10 & 512 && c10 !== null && Jj2(c10, c10.return);
          if (a10.flags & 32) {
            var e13 = a10.stateNode;
            try {
              nb2(e13, "");
            } catch (m10) {
              U10(a10, a10.return, m10);
            }
          }
          if (d10 & 4 && (e13 = a10.stateNode, e13 != null)) {
            var f10 = a10.memoizedProps, g10 = c10 !== null ? c10.memoizedProps : f10, h10 = a10.type, k10 = a10.updateQueue;
            a10.updateQueue = null;
            if (k10 !== null)
              try {
                h10 === "input" && f10.type === "radio" && f10.name != null && Za(e13, f10);
                ub2(h10, g10);
                var l10 = ub2(h10, f10);
                for (g10 = 0; g10 < k10.length; g10 += 2) {
                  var n10 = k10[g10], u10 = k10[g10 + 1];
                  n10 === "style" ? rb2(e13, u10) : n10 === "dangerouslySetInnerHTML" ? mb2(e13, u10) : n10 === "children" ? nb2(e13, u10) : sa2(e13, n10, u10, l10);
                }
                switch (h10) {
                  case "input":
                    $a2(e13, f10);
                    break;
                  case "textarea":
                    hb2(e13, f10);
                    break;
                  case "select":
                    var q10 = e13._wrapperState.wasMultiple;
                    e13._wrapperState.wasMultiple = !!f10.multiple;
                    var y10 = f10.value;
                    y10 != null ? eb2(e13, !!f10.multiple, y10, false) : q10 !== !!f10.multiple && (f10.defaultValue != null ? eb2(e13, !!f10.multiple, f10.defaultValue, true) : eb2(e13, !!f10.multiple, f10.multiple ? [] : "", false));
                }
                e13[Of2] = f10;
              } catch (m10) {
                U10(a10, a10.return, m10);
              }
          }
          break;
        case 6:
          ak2(b10, a10);
          ck2(a10);
          if (d10 & 4) {
            if (a10.stateNode === null)
              throw Error(p10(162));
            l10 = a10.stateNode;
            n10 = a10.memoizedProps;
            try {
              l10.nodeValue = n10;
            } catch (m10) {
              U10(a10, a10.return, m10);
            }
          }
          break;
        case 3:
          ak2(b10, a10);
          ck2(a10);
          if (d10 & 4 && c10 !== null && c10.memoizedState.isDehydrated)
            try {
              ad2(b10.containerInfo);
            } catch (m10) {
              U10(a10, a10.return, m10);
            }
          break;
        case 4:
          ak2(b10, a10);
          ck2(a10);
          break;
        case 13:
          ak2(b10, a10);
          ck2(a10);
          l10 = a10.child;
          l10.flags & 8192 && l10.memoizedState !== null && (l10.alternate === null || l10.alternate.memoizedState === null) && (dk2 = B10());
          d10 & 4 && Yj2(a10);
          break;
        case 22:
          l10 = c10 !== null && c10.memoizedState !== null;
          a10.mode & 1 ? (S10 = (n10 = S10) || l10, ak2(b10, a10), S10 = n10) : ak2(b10, a10);
          ck2(a10);
          if (d10 & 8192) {
            n10 = a10.memoizedState !== null;
            a:
              for (u10 = null, q10 = a10; ; ) {
                if (q10.tag === 5) {
                  if (u10 === null) {
                    u10 = q10;
                    try {
                      e13 = q10.stateNode, n10 ? (f10 = e13.style, typeof f10.setProperty === "function" ? f10.setProperty("display", "none", "important") : f10.display = "none") : (h10 = q10.stateNode, k10 = q10.memoizedProps.style, g10 = k10 !== void 0 && k10 !== null && k10.hasOwnProperty("display") ? k10.display : null, h10.style.display = qb2("display", g10));
                    } catch (m10) {
                      U10(a10, a10.return, m10);
                    }
                  }
                } else if (q10.tag === 6) {
                  if (u10 === null)
                    try {
                      q10.stateNode.nodeValue = n10 ? "" : q10.memoizedProps;
                    } catch (m10) {
                      U10(a10, a10.return, m10);
                    }
                } else if ((q10.tag !== 22 && q10.tag !== 23 || q10.memoizedState === null || q10 === a10) && q10.child !== null) {
                  q10.child.return = q10;
                  q10 = q10.child;
                  continue;
                }
                if (q10 === a10)
                  break a;
                for (; q10.sibling === null; ) {
                  if (q10.return === null || q10.return === a10)
                    break a;
                  u10 === q10 && (u10 = null);
                  q10 = q10.return;
                }
                u10 === q10 && (u10 = null);
                q10.sibling.return = q10.return;
                q10 = q10.sibling;
              }
            if (n10 && !l10 && (a10.mode & 1) !== 0)
              for (T10 = a10, a10 = a10.child; a10 !== null; ) {
                for (l10 = T10 = a10; T10 !== null; ) {
                  n10 = T10;
                  u10 = n10.child;
                  switch (n10.tag) {
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                      Nj(4, n10, n10.return);
                      break;
                    case 1:
                      Jj2(n10, n10.return);
                      f10 = n10.stateNode;
                      if (typeof f10.componentWillUnmount === "function") {
                        q10 = n10;
                        y10 = n10.return;
                        try {
                          e13 = q10, f10.props = e13.memoizedProps, f10.state = e13.memoizedState, f10.componentWillUnmount();
                        } catch (m10) {
                          U10(q10, y10, m10);
                        }
                      }
                      break;
                    case 5:
                      Jj2(n10, n10.return);
                      break;
                    case 22:
                      if (n10.memoizedState !== null) {
                        ek2(l10);
                        continue;
                      }
                  }
                  u10 !== null ? (u10.return = n10, T10 = u10) : ek2(l10);
                }
                a10 = a10.sibling;
              }
          }
          break;
        case 19:
          ak2(b10, a10);
          ck2(a10);
          d10 & 4 && Yj2(a10);
          break;
        case 21:
          break;
        default:
          ak2(b10, a10), ck2(a10);
      }
    }
    function ck2(a10) {
      var b10 = a10.flags;
      if (b10 & 2) {
        try {
          a: {
            for (var c10 = a10.return; c10 !== null; ) {
              if (Rj2(c10)) {
                var d10 = c10;
                break a;
              }
              c10 = c10.return;
            }
            throw Error(p10(160));
          }
          switch (d10.tag) {
            case 5:
              var e13 = d10.stateNode;
              d10.flags & 32 && (nb2(e13, ""), d10.flags &= -33);
              var f10 = Sj2(a10);
              Uj2(a10, f10, e13);
              break;
            case 3:
            case 4:
              var g10 = d10.stateNode.containerInfo, h10 = Sj2(a10);
              Tj2(a10, h10, g10);
              break;
            default:
              throw Error(p10(161));
          }
        } catch (k10) {
          U10(a10, a10.return, k10);
        }
        a10.flags &= -3;
      }
      b10 & 4096 && (a10.flags &= -4097);
    }
    function fk2(a10, b10, c10) {
      T10 = a10;
      gk2(a10, b10, c10);
    }
    function gk2(a10, b10, c10) {
      for (var d10 = (a10.mode & 1) !== 0; T10 !== null; ) {
        var e13 = T10, f10 = e13.child;
        if (e13.tag === 22 && d10) {
          var g10 = e13.memoizedState !== null || Hj2;
          if (!g10) {
            var h10 = e13.alternate, k10 = h10 !== null && h10.memoizedState !== null || S10;
            h10 = Hj2;
            var l10 = S10;
            Hj2 = g10;
            if ((S10 = k10) && !l10)
              for (T10 = e13; T10 !== null; )
                g10 = T10, k10 = g10.child, g10.tag === 22 && g10.memoizedState !== null ? hk2(e13) : k10 !== null ? (k10.return = g10, T10 = k10) : hk2(e13);
            for (; f10 !== null; )
              T10 = f10, gk2(f10, b10, c10), f10 = f10.sibling;
            T10 = e13;
            Hj2 = h10;
            S10 = l10;
          }
          ik2(a10, b10, c10);
        } else
          (e13.subtreeFlags & 8772) !== 0 && f10 !== null ? (f10.return = e13, T10 = f10) : ik2(a10, b10, c10);
      }
    }
    function ik2(a10) {
      for (; T10 !== null; ) {
        var b10 = T10;
        if ((b10.flags & 8772) !== 0) {
          var c10 = b10.alternate;
          try {
            if ((b10.flags & 8772) !== 0)
              switch (b10.tag) {
                case 0:
                case 11:
                case 15:
                  S10 || Oj2(5, b10);
                  break;
                case 1:
                  var d10 = b10.stateNode;
                  if (b10.flags & 4 && !S10)
                    if (c10 === null)
                      d10.componentDidMount();
                    else {
                      var e13 = b10.elementType === b10.type ? c10.memoizedProps : kg2(b10.type, c10.memoizedProps);
                      d10.componentDidUpdate(e13, c10.memoizedState, d10.__reactInternalSnapshotBeforeUpdate);
                    }
                  var f10 = b10.updateQueue;
                  f10 !== null && Gg2(b10, f10, d10);
                  break;
                case 3:
                  var g10 = b10.updateQueue;
                  if (g10 !== null) {
                    c10 = null;
                    if (b10.child !== null)
                      switch (b10.child.tag) {
                        case 5:
                          c10 = b10.child.stateNode;
                          break;
                        case 1:
                          c10 = b10.child.stateNode;
                      }
                    Gg2(b10, g10, c10);
                  }
                  break;
                case 5:
                  var h10 = b10.stateNode;
                  if (c10 === null && b10.flags & 4) {
                    c10 = h10;
                    var k10 = b10.memoizedProps;
                    switch (b10.type) {
                      case "button":
                      case "input":
                      case "select":
                      case "textarea":
                        k10.autoFocus && c10.focus();
                        break;
                      case "img":
                        k10.src && (c10.src = k10.src);
                    }
                  }
                  break;
                case 6:
                  break;
                case 4:
                  break;
                case 12:
                  break;
                case 13:
                  if (b10.memoizedState === null) {
                    var l10 = b10.alternate;
                    if (l10 !== null) {
                      var n10 = l10.memoizedState;
                      if (n10 !== null) {
                        var u10 = n10.dehydrated;
                        u10 !== null && ad2(u10);
                      }
                    }
                  }
                  break;
                case 19:
                case 17:
                case 21:
                case 22:
                case 23:
                  break;
                default:
                  throw Error(p10(163));
              }
            S10 || b10.flags & 512 && Pj(b10);
          } catch (q10) {
            U10(b10, b10.return, q10);
          }
        }
        if (b10 === a10) {
          T10 = null;
          break;
        }
        c10 = b10.sibling;
        if (c10 !== null) {
          c10.return = b10.return;
          T10 = c10;
          break;
        }
        T10 = b10.return;
      }
    }
    function ek2(a10) {
      for (; T10 !== null; ) {
        var b10 = T10;
        if (b10 === a10) {
          T10 = null;
          break;
        }
        var c10 = b10.sibling;
        if (c10 !== null) {
          c10.return = b10.return;
          T10 = c10;
          break;
        }
        T10 = b10.return;
      }
    }
    function hk2(a10) {
      for (; T10 !== null; ) {
        var b10 = T10;
        try {
          switch (b10.tag) {
            case 0:
            case 11:
            case 15:
              var c10 = b10.return;
              try {
                Oj2(4, b10);
              } catch (k10) {
                U10(b10, c10, k10);
              }
              break;
            case 1:
              var d10 = b10.stateNode;
              if (typeof d10.componentDidMount === "function") {
                var e13 = b10.return;
                try {
                  d10.componentDidMount();
                } catch (k10) {
                  U10(b10, e13, k10);
                }
              }
              var f10 = b10.return;
              try {
                Pj(b10);
              } catch (k10) {
                U10(b10, f10, k10);
              }
              break;
            case 5:
              var g10 = b10.return;
              try {
                Pj(b10);
              } catch (k10) {
                U10(b10, g10, k10);
              }
          }
        } catch (k10) {
          U10(b10, b10.return, k10);
        }
        if (b10 === a10) {
          T10 = null;
          break;
        }
        var h10 = b10.sibling;
        if (h10 !== null) {
          h10.return = b10.return;
          T10 = h10;
          break;
        }
        T10 = b10.return;
      }
    }
    var jk2 = Math.ceil;
    var kk2 = ta2.ReactCurrentDispatcher;
    var lk2 = ta2.ReactCurrentOwner;
    var mk2 = ta2.ReactCurrentBatchConfig;
    var W10 = 0;
    var P10 = null;
    var X10 = null;
    var Y10 = 0;
    var cj2 = 0;
    var mj2 = Tf2(0);
    var R10 = 0;
    var nk2 = null;
    var Fg2 = 0;
    var ok2 = 0;
    var pk2 = 0;
    var qk2 = null;
    var rk2 = null;
    var dk2 = 0;
    var aj2 = Infinity;
    var sk2 = null;
    var Li2 = false;
    var Mi2 = null;
    var Oi2 = null;
    var tk2 = false;
    var uk2 = null;
    var vk2 = 0;
    var wk2 = 0;
    var xk2 = null;
    var yk2 = -1;
    var zk2 = 0;
    function Jg2() {
      return (W10 & 6) !== 0 ? B10() : yk2 !== -1 ? yk2 : yk2 = B10();
    }
    function Kg2(a10) {
      if ((a10.mode & 1) === 0)
        return 1;
      if ((W10 & 2) !== 0 && Y10 !== 0)
        return Y10 & -Y10;
      if (jg2.transition !== null)
        return zk2 === 0 && (zk2 = xc2()), zk2;
      a10 = C10;
      if (a10 !== 0)
        return a10;
      a10 = window.event;
      a10 = a10 === void 0 ? 16 : id2(a10.type);
      return a10;
    }
    function Lg2(a10, b10, c10) {
      if (50 < wk2)
        throw wk2 = 0, xk2 = null, Error(p10(185));
      var d10 = Ak2(a10, b10);
      if (d10 === null)
        return null;
      zc(d10, b10, c10);
      if ((W10 & 2) === 0 || d10 !== P10)
        d10 === P10 && ((W10 & 2) === 0 && (ok2 |= b10), R10 === 4 && Bk2(d10, Y10)), Ck2(d10, c10), b10 === 1 && W10 === 0 && (a10.mode & 1) === 0 && (aj2 = B10() + 500, eg2 && ig2());
      return d10;
    }
    function Ak2(a10, b10) {
      a10.lanes |= b10;
      var c10 = a10.alternate;
      c10 !== null && (c10.lanes |= b10);
      c10 = a10;
      for (a10 = a10.return; a10 !== null; )
        a10.childLanes |= b10, c10 = a10.alternate, c10 !== null && (c10.childLanes |= b10), c10 = a10, a10 = a10.return;
      return c10.tag === 3 ? c10.stateNode : null;
    }
    function Bg2(a10) {
      return (P10 !== null || vg2 !== null) && (a10.mode & 1) !== 0 && (W10 & 2) === 0;
    }
    function Ck2(a10, b10) {
      var c10 = a10.callbackNode;
      vc2(a10, b10);
      var d10 = tc2(a10, a10 === P10 ? Y10 : 0);
      if (d10 === 0)
        c10 !== null && ac2(c10), a10.callbackNode = null, a10.callbackPriority = 0;
      else if (b10 = d10 & -d10, a10.callbackPriority !== b10) {
        c10 != null && ac2(c10);
        if (b10 === 1)
          a10.tag === 0 ? hg2(Dk2.bind(null, a10)) : gg2(Dk2.bind(null, a10)), If2(function() {
            W10 === 0 && ig2();
          }), c10 = null;
        else {
          switch (Cc2(d10)) {
            case 1:
              c10 = ec2;
              break;
            case 4:
              c10 = fc;
              break;
            case 16:
              c10 = gc;
              break;
            case 536870912:
              c10 = ic2;
              break;
            default:
              c10 = gc;
          }
          c10 = Ek2(c10, Fk2.bind(null, a10));
        }
        a10.callbackPriority = b10;
        a10.callbackNode = c10;
      }
    }
    function Fk2(a10, b10) {
      yk2 = -1;
      zk2 = 0;
      if ((W10 & 6) !== 0)
        throw Error(p10(327));
      var c10 = a10.callbackNode;
      if (Gk2() && a10.callbackNode !== c10)
        return null;
      var d10 = tc2(a10, a10 === P10 ? Y10 : 0);
      if (d10 === 0)
        return null;
      if ((d10 & 30) !== 0 || (d10 & a10.expiredLanes) !== 0 || b10)
        b10 = Hk2(a10, d10);
      else {
        b10 = d10;
        var e13 = W10;
        W10 |= 2;
        var f10 = Ik2();
        if (P10 !== a10 || Y10 !== b10)
          sk2 = null, aj2 = B10() + 500, Jk2(a10, b10);
        do
          try {
            Kk2();
            break;
          } catch (h10) {
            Lk2(a10, h10);
          }
        while (1);
        pg2();
        kk2.current = f10;
        W10 = e13;
        X10 !== null ? b10 = 0 : (P10 = null, Y10 = 0, b10 = R10);
      }
      if (b10 !== 0) {
        b10 === 2 && (e13 = wc2(a10), e13 !== 0 && (d10 = e13, b10 = Mk2(a10, e13)));
        if (b10 === 1)
          throw c10 = nk2, Jk2(a10, 0), Bk2(a10, d10), Ck2(a10, B10()), c10;
        if (b10 === 6)
          Bk2(a10, d10);
        else {
          e13 = a10.current.alternate;
          if ((d10 & 30) === 0 && !Nk2(e13) && (b10 = Hk2(a10, d10), b10 === 2 && (f10 = wc2(a10), f10 !== 0 && (d10 = f10, b10 = Mk2(a10, f10))), b10 === 1))
            throw c10 = nk2, Jk2(a10, 0), Bk2(a10, d10), Ck2(a10, B10()), c10;
          a10.finishedWork = e13;
          a10.finishedLanes = d10;
          switch (b10) {
            case 0:
            case 1:
              throw Error(p10(345));
            case 2:
              Ok2(a10, rk2, sk2);
              break;
            case 3:
              Bk2(a10, d10);
              if ((d10 & 130023424) === d10 && (b10 = dk2 + 500 - B10(), 10 < b10)) {
                if (tc2(a10, 0) !== 0)
                  break;
                e13 = a10.suspendedLanes;
                if ((e13 & d10) !== d10) {
                  Jg2();
                  a10.pingedLanes |= a10.suspendedLanes & e13;
                  break;
                }
                a10.timeoutHandle = Ef2(Ok2.bind(null, a10, rk2, sk2), b10);
                break;
              }
              Ok2(a10, rk2, sk2);
              break;
            case 4:
              Bk2(a10, d10);
              if ((d10 & 4194240) === d10)
                break;
              b10 = a10.eventTimes;
              for (e13 = -1; 0 < d10; ) {
                var g10 = 31 - nc2(d10);
                f10 = 1 << g10;
                g10 = b10[g10];
                g10 > e13 && (e13 = g10);
                d10 &= ~f10;
              }
              d10 = e13;
              d10 = B10() - d10;
              d10 = (120 > d10 ? 120 : 480 > d10 ? 480 : 1080 > d10 ? 1080 : 1920 > d10 ? 1920 : 3e3 > d10 ? 3e3 : 4320 > d10 ? 4320 : 1960 * jk2(d10 / 1960)) - d10;
              if (10 < d10) {
                a10.timeoutHandle = Ef2(Ok2.bind(null, a10, rk2, sk2), d10);
                break;
              }
              Ok2(a10, rk2, sk2);
              break;
            case 5:
              Ok2(a10, rk2, sk2);
              break;
            default:
              throw Error(p10(329));
          }
        }
      }
      Ck2(a10, B10());
      return a10.callbackNode === c10 ? Fk2.bind(null, a10) : null;
    }
    function Mk2(a10, b10) {
      var c10 = qk2;
      a10.current.memoizedState.isDehydrated && (Jk2(a10, b10).flags |= 256);
      a10 = Hk2(a10, b10);
      a10 !== 2 && (b10 = rk2, rk2 = c10, b10 !== null && Zi2(b10));
      return a10;
    }
    function Zi2(a10) {
      rk2 === null ? rk2 = a10 : rk2.push.apply(rk2, a10);
    }
    function Nk2(a10) {
      for (var b10 = a10; ; ) {
        if (b10.flags & 16384) {
          var c10 = b10.updateQueue;
          if (c10 !== null && (c10 = c10.stores, c10 !== null))
            for (var d10 = 0; d10 < c10.length; d10++) {
              var e13 = c10[d10], f10 = e13.getSnapshot;
              e13 = e13.value;
              try {
                if (!Ge2(f10(), e13))
                  return false;
              } catch (g10) {
                return false;
              }
            }
        }
        c10 = b10.child;
        if (b10.subtreeFlags & 16384 && c10 !== null)
          c10.return = b10, b10 = c10;
        else {
          if (b10 === a10)
            break;
          for (; b10.sibling === null; ) {
            if (b10.return === null || b10.return === a10)
              return true;
            b10 = b10.return;
          }
          b10.sibling.return = b10.return;
          b10 = b10.sibling;
        }
      }
      return true;
    }
    function Bk2(a10, b10) {
      b10 &= ~pk2;
      b10 &= ~ok2;
      a10.suspendedLanes |= b10;
      a10.pingedLanes &= ~b10;
      for (a10 = a10.expirationTimes; 0 < b10; ) {
        var c10 = 31 - nc2(b10), d10 = 1 << c10;
        a10[c10] = -1;
        b10 &= ~d10;
      }
    }
    function Dk2(a10) {
      if ((W10 & 6) !== 0)
        throw Error(p10(327));
      Gk2();
      var b10 = tc2(a10, 0);
      if ((b10 & 1) === 0)
        return Ck2(a10, B10()), null;
      var c10 = Hk2(a10, b10);
      if (a10.tag !== 0 && c10 === 2) {
        var d10 = wc2(a10);
        d10 !== 0 && (b10 = d10, c10 = Mk2(a10, d10));
      }
      if (c10 === 1)
        throw c10 = nk2, Jk2(a10, 0), Bk2(a10, b10), Ck2(a10, B10()), c10;
      if (c10 === 6)
        throw Error(p10(345));
      a10.finishedWork = a10.current.alternate;
      a10.finishedLanes = b10;
      Ok2(a10, rk2, sk2);
      Ck2(a10, B10());
      return null;
    }
    function Pk2(a10, b10) {
      var c10 = W10;
      W10 |= 1;
      try {
        return a10(b10);
      } finally {
        W10 = c10, W10 === 0 && (aj2 = B10() + 500, eg2 && ig2());
      }
    }
    function Qk2(a10) {
      uk2 !== null && uk2.tag === 0 && (W10 & 6) === 0 && Gk2();
      var b10 = W10;
      W10 |= 1;
      var c10 = mk2.transition, d10 = C10;
      try {
        if (mk2.transition = null, C10 = 1, a10)
          return a10();
      } finally {
        C10 = d10, mk2.transition = c10, W10 = b10, (W10 & 6) === 0 && ig2();
      }
    }
    function bj2() {
      cj2 = mj2.current;
      E10(mj2);
    }
    function Jk2(a10, b10) {
      a10.finishedWork = null;
      a10.finishedLanes = 0;
      var c10 = a10.timeoutHandle;
      c10 !== -1 && (a10.timeoutHandle = -1, Ff2(c10));
      if (X10 !== null)
        for (c10 = X10.return; c10 !== null; ) {
          var d10 = c10;
          ch2(d10);
          switch (d10.tag) {
            case 1:
              d10 = d10.type.childContextTypes;
              d10 !== null && d10 !== void 0 && Zf2();
              break;
            case 3:
              Gh2();
              E10(Vf2);
              E10(H10);
              Lh2();
              break;
            case 5:
              Ih2(d10);
              break;
            case 4:
              Gh2();
              break;
            case 13:
              E10(K10);
              break;
            case 19:
              E10(K10);
              break;
            case 10:
              qg2(d10.type._context);
              break;
            case 22:
            case 23:
              bj2();
          }
          c10 = c10.return;
        }
      P10 = a10;
      X10 = a10 = th2(a10.current, null);
      Y10 = cj2 = b10;
      R10 = 0;
      nk2 = null;
      pk2 = ok2 = Fg2 = 0;
      rk2 = qk2 = null;
      if (vg2 !== null) {
        for (b10 = 0; b10 < vg2.length; b10++)
          if (c10 = vg2[b10], d10 = c10.interleaved, d10 !== null) {
            c10.interleaved = null;
            var e13 = d10.next, f10 = c10.pending;
            if (f10 !== null) {
              var g10 = f10.next;
              f10.next = e13;
              d10.next = g10;
            }
            c10.pending = d10;
          }
        vg2 = null;
      }
      return a10;
    }
    function Lk2(a10, b10) {
      do {
        var c10 = X10;
        try {
          pg2();
          Mh2.current = Yh2;
          if (Ph2) {
            for (var d10 = L10.memoizedState; d10 !== null; ) {
              var e13 = d10.queue;
              e13 !== null && (e13.pending = null);
              d10 = d10.next;
            }
            Ph2 = false;
          }
          Oh2 = 0;
          N10 = M10 = L10 = null;
          Qh2 = false;
          Rh2 = 0;
          lk2.current = null;
          if (c10 === null || c10.return === null) {
            R10 = 1;
            nk2 = b10;
            X10 = null;
            break;
          }
          a: {
            var f10 = a10, g10 = c10.return, h10 = c10, k10 = b10;
            b10 = Y10;
            h10.flags |= 32768;
            if (k10 !== null && typeof k10 === "object" && typeof k10.then === "function") {
              var l10 = k10, n10 = h10, u10 = n10.tag;
              if ((n10.mode & 1) === 0 && (u10 === 0 || u10 === 11 || u10 === 15)) {
                var q10 = n10.alternate;
                q10 ? (n10.updateQueue = q10.updateQueue, n10.memoizedState = q10.memoizedState, n10.lanes = q10.lanes) : (n10.updateQueue = null, n10.memoizedState = null);
              }
              var y10 = Ri2(g10);
              if (y10 !== null) {
                y10.flags &= -257;
                Si2(y10, g10, h10, f10, b10);
                y10.mode & 1 && Pi(f10, l10, b10);
                b10 = y10;
                k10 = l10;
                var m10 = b10.updateQueue;
                if (m10 === null) {
                  var w10 = /* @__PURE__ */ new Set();
                  w10.add(k10);
                  b10.updateQueue = w10;
                } else
                  m10.add(k10);
                break a;
              } else {
                if ((b10 & 1) === 0) {
                  Pi(f10, l10, b10);
                  $i2();
                  break a;
                }
                k10 = Error(p10(426));
              }
            } else if (I10 && h10.mode & 1) {
              var J10 = Ri2(g10);
              if (J10 !== null) {
                (J10.flags & 65536) === 0 && (J10.flags |= 256);
                Si2(J10, g10, h10, f10, b10);
                oh2(k10);
                break a;
              }
            }
            f10 = k10;
            R10 !== 4 && (R10 = 2);
            qk2 === null ? qk2 = [f10] : qk2.push(f10);
            k10 = Hi2(k10, h10);
            h10 = g10;
            do {
              switch (h10.tag) {
                case 3:
                  h10.flags |= 65536;
                  b10 &= -b10;
                  h10.lanes |= b10;
                  var v10 = Ki2(h10, k10, b10);
                  Dg2(h10, v10);
                  break a;
                case 1:
                  f10 = k10;
                  var x10 = h10.type, r11 = h10.stateNode;
                  if ((h10.flags & 128) === 0 && (typeof x10.getDerivedStateFromError === "function" || r11 !== null && typeof r11.componentDidCatch === "function" && (Oi2 === null || !Oi2.has(r11)))) {
                    h10.flags |= 65536;
                    b10 &= -b10;
                    h10.lanes |= b10;
                    var F10 = Ni2(h10, f10, b10);
                    Dg2(h10, F10);
                    break a;
                  }
              }
              h10 = h10.return;
            } while (h10 !== null);
          }
          Rk2(c10);
        } catch (Z10) {
          b10 = Z10;
          X10 === c10 && c10 !== null && (X10 = c10 = c10.return);
          continue;
        }
        break;
      } while (1);
    }
    function Ik2() {
      var a10 = kk2.current;
      kk2.current = Yh2;
      return a10 === null ? Yh2 : a10;
    }
    function $i2() {
      if (R10 === 0 || R10 === 3 || R10 === 2)
        R10 = 4;
      P10 === null || (Fg2 & 268435455) === 0 && (ok2 & 268435455) === 0 || Bk2(P10, Y10);
    }
    function Hk2(a10, b10) {
      var c10 = W10;
      W10 |= 2;
      var d10 = Ik2();
      if (P10 !== a10 || Y10 !== b10)
        sk2 = null, Jk2(a10, b10);
      do
        try {
          Sk2();
          break;
        } catch (e13) {
          Lk2(a10, e13);
        }
      while (1);
      pg2();
      W10 = c10;
      kk2.current = d10;
      if (X10 !== null)
        throw Error(p10(261));
      P10 = null;
      Y10 = 0;
      return R10;
    }
    function Sk2() {
      for (; X10 !== null; )
        Tk2(X10);
    }
    function Kk2() {
      for (; X10 !== null && !bc2(); )
        Tk2(X10);
    }
    function Tk2(a10) {
      var b10 = Uk2(a10.alternate, a10, cj2);
      a10.memoizedProps = a10.pendingProps;
      b10 === null ? Rk2(a10) : X10 = b10;
      lk2.current = null;
    }
    function Rk2(a10) {
      var b10 = a10;
      do {
        var c10 = b10.alternate;
        a10 = b10.return;
        if ((b10.flags & 32768) === 0) {
          if (c10 = Yi2(c10, b10, cj2), c10 !== null) {
            X10 = c10;
            return;
          }
        } else {
          c10 = Gj2(c10, b10);
          if (c10 !== null) {
            c10.flags &= 32767;
            X10 = c10;
            return;
          }
          if (a10 !== null)
            a10.flags |= 32768, a10.subtreeFlags = 0, a10.deletions = null;
          else {
            R10 = 6;
            X10 = null;
            return;
          }
        }
        b10 = b10.sibling;
        if (b10 !== null) {
          X10 = b10;
          return;
        }
        X10 = b10 = a10;
      } while (b10 !== null);
      R10 === 0 && (R10 = 5);
    }
    function Ok2(a10, b10, c10) {
      var d10 = C10, e13 = mk2.transition;
      try {
        mk2.transition = null, C10 = 1, Vk2(a10, b10, c10, d10);
      } finally {
        mk2.transition = e13, C10 = d10;
      }
      return null;
    }
    function Vk2(a10, b10, c10, d10) {
      do
        Gk2();
      while (uk2 !== null);
      if ((W10 & 6) !== 0)
        throw Error(p10(327));
      c10 = a10.finishedWork;
      var e13 = a10.finishedLanes;
      if (c10 === null)
        return null;
      a10.finishedWork = null;
      a10.finishedLanes = 0;
      if (c10 === a10.current)
        throw Error(p10(177));
      a10.callbackNode = null;
      a10.callbackPriority = 0;
      var f10 = c10.lanes | c10.childLanes;
      Ac(a10, f10);
      a10 === P10 && (X10 = P10 = null, Y10 = 0);
      (c10.subtreeFlags & 2064) === 0 && (c10.flags & 2064) === 0 || tk2 || (tk2 = true, Ek2(gc, function() {
        Gk2();
        return null;
      }));
      f10 = (c10.flags & 15990) !== 0;
      if ((c10.subtreeFlags & 15990) !== 0 || f10) {
        f10 = mk2.transition;
        mk2.transition = null;
        var g10 = C10;
        C10 = 1;
        var h10 = W10;
        W10 |= 4;
        lk2.current = null;
        Mj(a10, c10);
        bk2(c10, a10);
        Ne2(Cf2);
        cd2 = !!Bf2;
        Cf2 = Bf2 = null;
        a10.current = c10;
        fk2(c10, a10, e13);
        cc2();
        W10 = h10;
        C10 = g10;
        mk2.transition = f10;
      } else
        a10.current = c10;
      tk2 && (tk2 = false, uk2 = a10, vk2 = e13);
      f10 = a10.pendingLanes;
      f10 === 0 && (Oi2 = null);
      lc2(c10.stateNode, d10);
      Ck2(a10, B10());
      if (b10 !== null)
        for (d10 = a10.onRecoverableError, c10 = 0; c10 < b10.length; c10++)
          d10(b10[c10]);
      if (Li2)
        throw Li2 = false, a10 = Mi2, Mi2 = null, a10;
      (vk2 & 1) !== 0 && a10.tag !== 0 && Gk2();
      f10 = a10.pendingLanes;
      (f10 & 1) !== 0 ? a10 === xk2 ? wk2++ : (wk2 = 0, xk2 = a10) : wk2 = 0;
      ig2();
      return null;
    }
    function Gk2() {
      if (uk2 !== null) {
        var a10 = Cc2(vk2), b10 = mk2.transition, c10 = C10;
        try {
          mk2.transition = null;
          C10 = 16 > a10 ? 16 : a10;
          if (uk2 === null)
            var d10 = false;
          else {
            a10 = uk2;
            uk2 = null;
            vk2 = 0;
            if ((W10 & 6) !== 0)
              throw Error(p10(331));
            var e13 = W10;
            W10 |= 4;
            for (T10 = a10.current; T10 !== null; ) {
              var f10 = T10, g10 = f10.child;
              if ((T10.flags & 16) !== 0) {
                var h10 = f10.deletions;
                if (h10 !== null) {
                  for (var k10 = 0; k10 < h10.length; k10++) {
                    var l10 = h10[k10];
                    for (T10 = l10; T10 !== null; ) {
                      var n10 = T10;
                      switch (n10.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Nj(8, n10, f10);
                      }
                      var u10 = n10.child;
                      if (u10 !== null)
                        u10.return = n10, T10 = u10;
                      else
                        for (; T10 !== null; ) {
                          n10 = T10;
                          var q10 = n10.sibling, y10 = n10.return;
                          Qj2(n10);
                          if (n10 === l10) {
                            T10 = null;
                            break;
                          }
                          if (q10 !== null) {
                            q10.return = y10;
                            T10 = q10;
                            break;
                          }
                          T10 = y10;
                        }
                    }
                  }
                  var m10 = f10.alternate;
                  if (m10 !== null) {
                    var w10 = m10.child;
                    if (w10 !== null) {
                      m10.child = null;
                      do {
                        var J10 = w10.sibling;
                        w10.sibling = null;
                        w10 = J10;
                      } while (w10 !== null);
                    }
                  }
                  T10 = f10;
                }
              }
              if ((f10.subtreeFlags & 2064) !== 0 && g10 !== null)
                g10.return = f10, T10 = g10;
              else
                b:
                  for (; T10 !== null; ) {
                    f10 = T10;
                    if ((f10.flags & 2048) !== 0)
                      switch (f10.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Nj(9, f10, f10.return);
                      }
                    var v10 = f10.sibling;
                    if (v10 !== null) {
                      v10.return = f10.return;
                      T10 = v10;
                      break b;
                    }
                    T10 = f10.return;
                  }
            }
            var x10 = a10.current;
            for (T10 = x10; T10 !== null; ) {
              g10 = T10;
              var r11 = g10.child;
              if ((g10.subtreeFlags & 2064) !== 0 && r11 !== null)
                r11.return = g10, T10 = r11;
              else
                b:
                  for (g10 = x10; T10 !== null; ) {
                    h10 = T10;
                    if ((h10.flags & 2048) !== 0)
                      try {
                        switch (h10.tag) {
                          case 0:
                          case 11:
                          case 15:
                            Oj2(9, h10);
                        }
                      } catch (Z10) {
                        U10(h10, h10.return, Z10);
                      }
                    if (h10 === g10) {
                      T10 = null;
                      break b;
                    }
                    var F10 = h10.sibling;
                    if (F10 !== null) {
                      F10.return = h10.return;
                      T10 = F10;
                      break b;
                    }
                    T10 = h10.return;
                  }
            }
            W10 = e13;
            ig2();
            if (kc2 && typeof kc2.onPostCommitFiberRoot === "function")
              try {
                kc2.onPostCommitFiberRoot(jc, a10);
              } catch (Z10) {
              }
            d10 = true;
          }
          return d10;
        } finally {
          C10 = c10, mk2.transition = b10;
        }
      }
      return false;
    }
    function Wk2(a10, b10, c10) {
      b10 = Hi2(c10, b10);
      b10 = Ki2(a10, b10, 1);
      Ag2(a10, b10);
      b10 = Jg2();
      a10 = Ak2(a10, 1);
      a10 !== null && (zc(a10, 1, b10), Ck2(a10, b10));
    }
    function U10(a10, b10, c10) {
      if (a10.tag === 3)
        Wk2(a10, a10, c10);
      else
        for (; b10 !== null; ) {
          if (b10.tag === 3) {
            Wk2(b10, a10, c10);
            break;
          } else if (b10.tag === 1) {
            var d10 = b10.stateNode;
            if (typeof b10.type.getDerivedStateFromError === "function" || typeof d10.componentDidCatch === "function" && (Oi2 === null || !Oi2.has(d10))) {
              a10 = Hi2(c10, a10);
              a10 = Ni2(b10, a10, 1);
              Ag2(b10, a10);
              a10 = Jg2();
              b10 = Ak2(b10, 1);
              b10 !== null && (zc(b10, 1, a10), Ck2(b10, a10));
              break;
            }
          }
          b10 = b10.return;
        }
    }
    function Qi2(a10, b10, c10) {
      var d10 = a10.pingCache;
      d10 !== null && d10.delete(b10);
      b10 = Jg2();
      a10.pingedLanes |= a10.suspendedLanes & c10;
      P10 === a10 && (Y10 & c10) === c10 && (R10 === 4 || R10 === 3 && (Y10 & 130023424) === Y10 && 500 > B10() - dk2 ? Jk2(a10, 0) : pk2 |= c10);
      Ck2(a10, b10);
    }
    function Xk2(a10, b10) {
      b10 === 0 && ((a10.mode & 1) === 0 ? b10 = 1 : (b10 = rc2, rc2 <<= 1, (rc2 & 130023424) === 0 && (rc2 = 4194304)));
      var c10 = Jg2();
      a10 = Ak2(a10, b10);
      a10 !== null && (zc(a10, b10, c10), Ck2(a10, c10));
    }
    function zj2(a10) {
      var b10 = a10.memoizedState, c10 = 0;
      b10 !== null && (c10 = b10.retryLane);
      Xk2(a10, c10);
    }
    function Zj2(a10, b10) {
      var c10 = 0;
      switch (a10.tag) {
        case 13:
          var d10 = a10.stateNode;
          var e13 = a10.memoizedState;
          e13 !== null && (c10 = e13.retryLane);
          break;
        case 19:
          d10 = a10.stateNode;
          break;
        default:
          throw Error(p10(314));
      }
      d10 !== null && d10.delete(b10);
      Xk2(a10, c10);
    }
    var Uk2;
    Uk2 = function(a10, b10, c10) {
      if (a10 !== null)
        if (a10.memoizedProps !== b10.pendingProps || Vf2.current)
          tg2 = true;
        else {
          if ((a10.lanes & c10) === 0 && (b10.flags & 128) === 0)
            return tg2 = false, Fj2(a10, b10, c10);
          tg2 = (a10.flags & 131072) !== 0 ? true : false;
        }
      else
        tg2 = false, I10 && (b10.flags & 1048576) !== 0 && ah2(b10, Ug2, b10.index);
      b10.lanes = 0;
      switch (b10.tag) {
        case 2:
          var d10 = b10.type;
          a10 !== null && (a10.alternate = null, b10.alternate = null, b10.flags |= 2);
          a10 = b10.pendingProps;
          var e13 = Xf2(b10, H10.current);
          sg2(b10, c10);
          e13 = Uh2(null, b10, d10, a10, e13, c10);
          var f10 = Zh2();
          b10.flags |= 1;
          typeof e13 === "object" && e13 !== null && typeof e13.render === "function" && e13.$$typeof === void 0 ? (b10.tag = 1, b10.memoizedState = null, b10.updateQueue = null, Yf2(d10) ? (f10 = true, bg2(b10)) : f10 = false, b10.memoizedState = e13.state !== null && e13.state !== void 0 ? e13.state : null, xg2(b10), e13.updater = Mg2, b10.stateNode = e13, e13._reactInternals = b10, Qg2(b10, d10, a10, c10), b10 = pj2(null, b10, d10, true, f10, c10)) : (b10.tag = 0, I10 && f10 && bh2(b10), ej2(null, b10, e13, c10), b10 = b10.child);
          return b10;
        case 16:
          d10 = b10.elementType;
          a: {
            a10 !== null && (a10.alternate = null, b10.alternate = null, b10.flags |= 2);
            a10 = b10.pendingProps;
            e13 = d10._init;
            d10 = e13(d10._payload);
            b10.type = d10;
            e13 = b10.tag = Yk2(d10);
            a10 = kg2(d10, a10);
            switch (e13) {
              case 0:
                b10 = kj(null, b10, d10, a10, c10);
                break a;
              case 1:
                b10 = oj(null, b10, d10, a10, c10);
                break a;
              case 11:
                b10 = fj2(null, b10, d10, a10, c10);
                break a;
              case 14:
                b10 = hj2(null, b10, d10, kg2(d10.type, a10), c10);
                break a;
            }
            throw Error(p10(306, d10, ""));
          }
          return b10;
        case 0:
          return d10 = b10.type, e13 = b10.pendingProps, e13 = b10.elementType === d10 ? e13 : kg2(d10, e13), kj(a10, b10, d10, e13, c10);
        case 1:
          return d10 = b10.type, e13 = b10.pendingProps, e13 = b10.elementType === d10 ? e13 : kg2(d10, e13), oj(a10, b10, d10, e13, c10);
        case 3:
          a: {
            qj(b10);
            if (a10 === null)
              throw Error(p10(387));
            d10 = b10.pendingProps;
            f10 = b10.memoizedState;
            e13 = f10.element;
            yg2(a10, b10);
            Eg2(b10, d10, null, c10);
            var g10 = b10.memoizedState;
            d10 = g10.element;
            if (f10.isDehydrated)
              if (f10 = {
                element: d10,
                isDehydrated: false,
                cache: g10.cache,
                pendingSuspenseBoundaries: g10.pendingSuspenseBoundaries,
                transitions: g10.transitions
              }, b10.updateQueue.baseState = f10, b10.memoizedState = f10, b10.flags & 256) {
                e13 = Error(p10(423));
                b10 = rj2(a10, b10, d10, c10, e13);
                break a;
              } else if (d10 !== e13) {
                e13 = Error(p10(424));
                b10 = rj2(a10, b10, d10, c10, e13);
                break a;
              } else
                for (eh2 = Kf2(b10.stateNode.containerInfo.firstChild), dh2 = b10, I10 = true, fh2 = null, c10 = zh2(b10, null, d10, c10), b10.child = c10; c10; )
                  c10.flags = c10.flags & -3 | 4096, c10 = c10.sibling;
            else {
              nh2();
              if (d10 === e13) {
                b10 = gj2(a10, b10, c10);
                break a;
              }
              ej2(a10, b10, d10, c10);
            }
            b10 = b10.child;
          }
          return b10;
        case 5:
          return Hh2(b10), a10 === null && kh2(b10), d10 = b10.type, e13 = b10.pendingProps, f10 = a10 !== null ? a10.memoizedProps : null, g10 = e13.children, Df2(d10, e13) ? g10 = null : f10 !== null && Df2(d10, f10) && (b10.flags |= 32), nj(a10, b10), ej2(a10, b10, g10, c10), b10.child;
        case 6:
          return a10 === null && kh2(b10), null;
        case 13:
          return vj(a10, b10, c10);
        case 4:
          return Fh2(b10, b10.stateNode.containerInfo), d10 = b10.pendingProps, a10 === null ? b10.child = yh2(b10, null, d10, c10) : ej2(a10, b10, d10, c10), b10.child;
        case 11:
          return d10 = b10.type, e13 = b10.pendingProps, e13 = b10.elementType === d10 ? e13 : kg2(d10, e13), fj2(a10, b10, d10, e13, c10);
        case 7:
          return ej2(a10, b10, b10.pendingProps, c10), b10.child;
        case 8:
          return ej2(a10, b10, b10.pendingProps.children, c10), b10.child;
        case 12:
          return ej2(a10, b10, b10.pendingProps.children, c10), b10.child;
        case 10:
          a: {
            d10 = b10.type._context;
            e13 = b10.pendingProps;
            f10 = b10.memoizedProps;
            g10 = e13.value;
            G10(lg2, d10._currentValue);
            d10._currentValue = g10;
            if (f10 !== null)
              if (Ge2(f10.value, g10)) {
                if (f10.children === e13.children && !Vf2.current) {
                  b10 = gj2(a10, b10, c10);
                  break a;
                }
              } else
                for (f10 = b10.child, f10 !== null && (f10.return = b10); f10 !== null; ) {
                  var h10 = f10.dependencies;
                  if (h10 !== null) {
                    g10 = f10.child;
                    for (var k10 = h10.firstContext; k10 !== null; ) {
                      if (k10.context === d10) {
                        if (f10.tag === 1) {
                          k10 = zg2(-1, c10 & -c10);
                          k10.tag = 2;
                          var l10 = f10.updateQueue;
                          if (l10 !== null) {
                            l10 = l10.shared;
                            var n10 = l10.pending;
                            n10 === null ? k10.next = k10 : (k10.next = n10.next, n10.next = k10);
                            l10.pending = k10;
                          }
                        }
                        f10.lanes |= c10;
                        k10 = f10.alternate;
                        k10 !== null && (k10.lanes |= c10);
                        rg2(f10.return, c10, b10);
                        h10.lanes |= c10;
                        break;
                      }
                      k10 = k10.next;
                    }
                  } else if (f10.tag === 10)
                    g10 = f10.type === b10.type ? null : f10.child;
                  else if (f10.tag === 18) {
                    g10 = f10.return;
                    if (g10 === null)
                      throw Error(p10(341));
                    g10.lanes |= c10;
                    h10 = g10.alternate;
                    h10 !== null && (h10.lanes |= c10);
                    rg2(g10, c10, b10);
                    g10 = f10.sibling;
                  } else
                    g10 = f10.child;
                  if (g10 !== null)
                    g10.return = f10;
                  else
                    for (g10 = f10; g10 !== null; ) {
                      if (g10 === b10) {
                        g10 = null;
                        break;
                      }
                      f10 = g10.sibling;
                      if (f10 !== null) {
                        f10.return = g10.return;
                        g10 = f10;
                        break;
                      }
                      g10 = g10.return;
                    }
                  f10 = g10;
                }
            ej2(a10, b10, e13.children, c10);
            b10 = b10.child;
          }
          return b10;
        case 9:
          return e13 = b10.type, d10 = b10.pendingProps.children, sg2(b10, c10), e13 = ug2(e13), d10 = d10(e13), b10.flags |= 1, ej2(a10, b10, d10, c10), b10.child;
        case 14:
          return d10 = b10.type, e13 = kg2(d10, b10.pendingProps), e13 = kg2(d10.type, e13), hj2(a10, b10, d10, e13, c10);
        case 15:
          return jj2(a10, b10, b10.type, b10.pendingProps, c10);
        case 17:
          return d10 = b10.type, e13 = b10.pendingProps, e13 = b10.elementType === d10 ? e13 : kg2(d10, e13), a10 !== null && (a10.alternate = null, b10.alternate = null, b10.flags |= 2), b10.tag = 1, Yf2(d10) ? (a10 = true, bg2(b10)) : a10 = false, sg2(b10, c10), Og2(b10, d10, e13), Qg2(b10, d10, e13, c10), pj2(null, b10, d10, true, a10, c10);
        case 19:
          return Ej(a10, b10, c10);
        case 22:
          return lj2(a10, b10, c10);
      }
      throw Error(p10(156, b10.tag));
    };
    function Ek2(a10, b10) {
      return $b2(a10, b10);
    }
    function Zk2(a10, b10, c10, d10) {
      this.tag = a10;
      this.key = c10;
      this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
      this.index = 0;
      this.ref = null;
      this.pendingProps = b10;
      this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
      this.mode = d10;
      this.subtreeFlags = this.flags = 0;
      this.deletions = null;
      this.childLanes = this.lanes = 0;
      this.alternate = null;
    }
    function hh2(a10, b10, c10, d10) {
      return new Zk2(a10, b10, c10, d10);
    }
    function ij2(a10) {
      a10 = a10.prototype;
      return !(!a10 || !a10.isReactComponent);
    }
    function Yk2(a10) {
      if (typeof a10 === "function")
        return ij2(a10) ? 1 : 0;
      if (a10 !== void 0 && a10 !== null) {
        a10 = a10.$$typeof;
        if (a10 === Ca2)
          return 11;
        if (a10 === Fa2)
          return 14;
      }
      return 2;
    }
    function th2(a10, b10) {
      var c10 = a10.alternate;
      c10 === null ? (c10 = hh2(a10.tag, b10, a10.key, a10.mode), c10.elementType = a10.elementType, c10.type = a10.type, c10.stateNode = a10.stateNode, c10.alternate = a10, a10.alternate = c10) : (c10.pendingProps = b10, c10.type = a10.type, c10.flags = 0, c10.subtreeFlags = 0, c10.deletions = null);
      c10.flags = a10.flags & 14680064;
      c10.childLanes = a10.childLanes;
      c10.lanes = a10.lanes;
      c10.child = a10.child;
      c10.memoizedProps = a10.memoizedProps;
      c10.memoizedState = a10.memoizedState;
      c10.updateQueue = a10.updateQueue;
      b10 = a10.dependencies;
      c10.dependencies = b10 === null ? null : { lanes: b10.lanes, firstContext: b10.firstContext };
      c10.sibling = a10.sibling;
      c10.index = a10.index;
      c10.ref = a10.ref;
      return c10;
    }
    function vh2(a10, b10, c10, d10, e13, f10) {
      var g10 = 2;
      d10 = a10;
      if (typeof a10 === "function")
        ij2(a10) && (g10 = 1);
      else if (typeof a10 === "string")
        g10 = 5;
      else
        a:
          switch (a10) {
            case wa2:
              return xh2(c10.children, e13, f10, b10);
            case xa:
              g10 = 8;
              e13 |= 8;
              break;
            case za2:
              return a10 = hh2(12, c10, b10, e13 | 2), a10.elementType = za2, a10.lanes = f10, a10;
            case Da2:
              return a10 = hh2(13, c10, b10, e13), a10.elementType = Da2, a10.lanes = f10, a10;
            case Ea2:
              return a10 = hh2(19, c10, b10, e13), a10.elementType = Ea2, a10.lanes = f10, a10;
            case Ha2:
              return wj(c10, e13, f10, b10);
            default:
              if (typeof a10 === "object" && a10 !== null)
                switch (a10.$$typeof) {
                  case Aa2:
                    g10 = 10;
                    break a;
                  case Ba2:
                    g10 = 9;
                    break a;
                  case Ca2:
                    g10 = 11;
                    break a;
                  case Fa2:
                    g10 = 14;
                    break a;
                  case Ga2:
                    g10 = 16;
                    d10 = null;
                    break a;
                }
              throw Error(p10(130, a10 == null ? a10 : typeof a10, ""));
          }
      b10 = hh2(g10, c10, b10, e13);
      b10.elementType = a10;
      b10.type = d10;
      b10.lanes = f10;
      return b10;
    }
    function xh2(a10, b10, c10, d10) {
      a10 = hh2(7, a10, d10, b10);
      a10.lanes = c10;
      return a10;
    }
    function wj(a10, b10, c10, d10) {
      a10 = hh2(22, a10, d10, b10);
      a10.elementType = Ha2;
      a10.lanes = c10;
      a10.stateNode = {};
      return a10;
    }
    function uh2(a10, b10, c10) {
      a10 = hh2(6, a10, null, b10);
      a10.lanes = c10;
      return a10;
    }
    function wh2(a10, b10, c10) {
      b10 = hh2(4, a10.children !== null ? a10.children : [], a10.key, b10);
      b10.lanes = c10;
      b10.stateNode = { containerInfo: a10.containerInfo, pendingChildren: null, implementation: a10.implementation };
      return b10;
    }
    function $k2(a10, b10, c10, d10, e13) {
      this.tag = b10;
      this.containerInfo = a10;
      this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
      this.timeoutHandle = -1;
      this.callbackNode = this.pendingContext = this.context = null;
      this.callbackPriority = 0;
      this.eventTimes = yc2(0);
      this.expirationTimes = yc2(-1);
      this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
      this.entanglements = yc2(0);
      this.identifierPrefix = d10;
      this.onRecoverableError = e13;
      this.mutableSourceEagerHydrationData = null;
    }
    function al2(a10, b10, c10, d10, e13, f10, g10, h10, k10) {
      a10 = new $k2(a10, b10, c10, h10, k10);
      b10 === 1 ? (b10 = 1, f10 === true && (b10 |= 8)) : b10 = 0;
      f10 = hh2(3, null, null, b10);
      a10.current = f10;
      f10.stateNode = a10;
      f10.memoizedState = { element: d10, isDehydrated: c10, cache: null, transitions: null, pendingSuspenseBoundaries: null };
      xg2(f10);
      return a10;
    }
    function bl2(a10, b10, c10) {
      var d10 = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
      return { $$typeof: va2, key: d10 == null ? null : "" + d10, children: a10, containerInfo: b10, implementation: c10 };
    }
    function cl2(a10) {
      if (!a10)
        return Uf2;
      a10 = a10._reactInternals;
      a: {
        if (Ub2(a10) !== a10 || a10.tag !== 1)
          throw Error(p10(170));
        var b10 = a10;
        do {
          switch (b10.tag) {
            case 3:
              b10 = b10.stateNode.context;
              break a;
            case 1:
              if (Yf2(b10.type)) {
                b10 = b10.stateNode.__reactInternalMemoizedMergedChildContext;
                break a;
              }
          }
          b10 = b10.return;
        } while (b10 !== null);
        throw Error(p10(171));
      }
      if (a10.tag === 1) {
        var c10 = a10.type;
        if (Yf2(c10))
          return ag2(a10, c10, b10);
      }
      return b10;
    }
    function dl2(a10, b10, c10, d10, e13, f10, g10, h10, k10) {
      a10 = al2(c10, d10, true, a10, e13, f10, g10, h10, k10);
      a10.context = cl2(null);
      c10 = a10.current;
      d10 = Jg2();
      e13 = Kg2(c10);
      f10 = zg2(d10, e13);
      f10.callback = b10 !== void 0 && b10 !== null ? b10 : null;
      Ag2(c10, f10);
      a10.current.lanes = e13;
      zc(a10, e13, d10);
      Ck2(a10, d10);
      return a10;
    }
    function el2(a10, b10, c10, d10) {
      var e13 = b10.current, f10 = Jg2(), g10 = Kg2(e13);
      c10 = cl2(c10);
      b10.context === null ? b10.context = c10 : b10.pendingContext = c10;
      b10 = zg2(f10, g10);
      b10.payload = { element: a10 };
      d10 = d10 === void 0 ? null : d10;
      d10 !== null && (b10.callback = d10);
      Ag2(e13, b10);
      a10 = Lg2(e13, g10, f10);
      a10 !== null && Cg2(a10, e13, g10);
      return g10;
    }
    function fl2(a10) {
      a10 = a10.current;
      if (!a10.child)
        return null;
      switch (a10.child.tag) {
        case 5:
          return a10.child.stateNode;
        default:
          return a10.child.stateNode;
      }
    }
    function gl2(a10, b10) {
      a10 = a10.memoizedState;
      if (a10 !== null && a10.dehydrated !== null) {
        var c10 = a10.retryLane;
        a10.retryLane = c10 !== 0 && c10 < b10 ? c10 : b10;
      }
    }
    function hl2(a10, b10) {
      gl2(a10, b10);
      (a10 = a10.alternate) && gl2(a10, b10);
    }
    function il2() {
      return null;
    }
    var jl2 = typeof reportError === "function" ? reportError : function(a10) {
      console.error(a10);
    };
    function kl2(a10) {
      this._internalRoot = a10;
    }
    ll2.prototype.render = kl2.prototype.render = function(a10) {
      var b10 = this._internalRoot;
      if (b10 === null)
        throw Error(p10(409));
      el2(a10, b10, null, null);
    };
    ll2.prototype.unmount = kl2.prototype.unmount = function() {
      var a10 = this._internalRoot;
      if (a10 !== null) {
        this._internalRoot = null;
        var b10 = a10.containerInfo;
        Qk2(function() {
          el2(null, a10, null, null);
        });
        b10[tf2] = null;
      }
    };
    function ll2(a10) {
      this._internalRoot = a10;
    }
    ll2.prototype.unstable_scheduleHydration = function(a10) {
      if (a10) {
        var b10 = Gc();
        a10 = { blockedOn: null, target: a10, priority: b10 };
        for (var c10 = 0; c10 < Pc2.length && b10 !== 0 && b10 < Pc2[c10].priority; c10++)
          ;
        Pc2.splice(c10, 0, a10);
        c10 === 0 && Uc(a10);
      }
    };
    function ml2(a10) {
      return !(!a10 || a10.nodeType !== 1 && a10.nodeType !== 9 && a10.nodeType !== 11);
    }
    function nl2(a10) {
      return !(!a10 || a10.nodeType !== 1 && a10.nodeType !== 9 && a10.nodeType !== 11 && (a10.nodeType !== 8 || a10.nodeValue !== " react-mount-point-unstable "));
    }
    function ol2() {
    }
    function pl2(a10, b10, c10, d10, e13) {
      if (e13) {
        if (typeof d10 === "function") {
          var f10 = d10;
          d10 = function() {
            var a11 = fl2(g10);
            f10.call(a11);
          };
        }
        var g10 = dl2(b10, d10, a10, 0, null, false, false, "", ol2);
        a10._reactRootContainer = g10;
        a10[tf2] = g10.current;
        rf2(a10.nodeType === 8 ? a10.parentNode : a10);
        Qk2();
        return g10;
      }
      for (; e13 = a10.lastChild; )
        a10.removeChild(e13);
      if (typeof d10 === "function") {
        var h10 = d10;
        d10 = function() {
          var a11 = fl2(k10);
          h10.call(a11);
        };
      }
      var k10 = al2(a10, 0, false, null, null, false, false, "", ol2);
      a10._reactRootContainer = k10;
      a10[tf2] = k10.current;
      rf2(a10.nodeType === 8 ? a10.parentNode : a10);
      Qk2(function() {
        el2(b10, k10, c10, d10);
      });
      return k10;
    }
    function ql(a10, b10, c10, d10, e13) {
      var f10 = c10._reactRootContainer;
      if (f10) {
        var g10 = f10;
        if (typeof e13 === "function") {
          var h10 = e13;
          e13 = function() {
            var a11 = fl2(g10);
            h10.call(a11);
          };
        }
        el2(b10, g10, a10, e13);
      } else
        g10 = pl2(c10, b10, a10, e13, d10);
      return fl2(g10);
    }
    Dc = function(a10) {
      switch (a10.tag) {
        case 3:
          var b10 = a10.stateNode;
          if (b10.current.memoizedState.isDehydrated) {
            var c10 = sc2(b10.pendingLanes);
            c10 !== 0 && (Bc2(b10, c10 | 1), Ck2(b10, B10()), (W10 & 6) === 0 && (aj2 = B10() + 500, ig2()));
          }
          break;
        case 13:
          var d10 = Jg2();
          Qk2(function() {
            return Lg2(a10, 1, d10);
          });
          hl2(a10, 1);
      }
    };
    Ec2 = function(a10) {
      if (a10.tag === 13) {
        var b10 = Jg2();
        Lg2(a10, 134217728, b10);
        hl2(a10, 134217728);
      }
    };
    Fc2 = function(a10) {
      if (a10.tag === 13) {
        var b10 = Jg2(), c10 = Kg2(a10);
        Lg2(a10, c10, b10);
        hl2(a10, c10);
      }
    };
    Gc = function() {
      return C10;
    };
    Hc = function(a10, b10) {
      var c10 = C10;
      try {
        return C10 = a10, b10();
      } finally {
        C10 = c10;
      }
    };
    xb2 = function(a10, b10, c10) {
      switch (b10) {
        case "input":
          $a2(a10, c10);
          b10 = c10.name;
          if (c10.type === "radio" && b10 != null) {
            for (c10 = a10; c10.parentNode; )
              c10 = c10.parentNode;
            c10 = c10.querySelectorAll("input[name=" + JSON.stringify("" + b10) + '][type="radio"]');
            for (b10 = 0; b10 < c10.length; b10++) {
              var d10 = c10[b10];
              if (d10 !== a10 && d10.form === a10.form) {
                var e13 = Cb2(d10);
                if (!e13)
                  throw Error(p10(90));
                Va2(d10);
                $a2(d10, e13);
              }
            }
          }
          break;
        case "textarea":
          hb2(a10, c10);
          break;
        case "select":
          b10 = c10.value, b10 != null && eb2(a10, !!c10.multiple, b10, false);
      }
    };
    Fb2 = Pk2;
    Gb2 = Qk2;
    var rl2 = { usingClientEntryPoint: false, Events: [Bb2, te, Cb2, Db2, Eb2, Pk2] };
    var sl2 = { findFiberByHostInstance: Vc2, bundleType: 0, version: "18.1.0", rendererPackageName: "react-dom" };
    var tl2 = { bundleType: sl2.bundleType, version: sl2.version, rendererPackageName: sl2.rendererPackageName, rendererConfig: sl2.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ta2.ReactCurrentDispatcher, findHostInstanceByFiber: function(a10) {
      a10 = Yb2(a10);
      return a10 === null ? null : a10.stateNode;
    }, findFiberByHostInstance: sl2.findFiberByHostInstance || il2, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.1.0-next-22edb9f77-20220426" };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined") {
      ul2 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (!ul2.isDisabled && ul2.supportsFiber)
        try {
          jc = ul2.inject(tl2), kc2 = ul2;
        } catch (a10) {
        }
    }
    var ul2;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = rl2;
    exports.createPortal = function(a10, b10) {
      var c10 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
      if (!ml2(b10))
        throw Error(p10(200));
      return bl2(a10, b10, null, c10);
    };
    exports.createRoot = function(a10, b10) {
      if (!ml2(a10))
        throw Error(p10(299));
      var c10 = false, d10 = "", e13 = jl2;
      b10 !== null && b10 !== void 0 && (b10.unstable_strictMode === true && (c10 = true), b10.identifierPrefix !== void 0 && (d10 = b10.identifierPrefix), b10.onRecoverableError !== void 0 && (e13 = b10.onRecoverableError));
      b10 = al2(a10, 1, false, null, null, c10, false, d10, e13);
      a10[tf2] = b10.current;
      rf2(a10.nodeType === 8 ? a10.parentNode : a10);
      return new kl2(b10);
    };
    exports.findDOMNode = function(a10) {
      if (a10 == null)
        return null;
      if (a10.nodeType === 1)
        return a10;
      var b10 = a10._reactInternals;
      if (b10 === void 0) {
        if (typeof a10.render === "function")
          throw Error(p10(188));
        a10 = Object.keys(a10).join(",");
        throw Error(p10(268, a10));
      }
      a10 = Yb2(b10);
      a10 = a10 === null ? null : a10.stateNode;
      return a10;
    };
    exports.flushSync = function(a10) {
      return Qk2(a10);
    };
    exports.hydrate = function(a10, b10, c10) {
      if (!nl2(b10))
        throw Error(p10(200));
      return ql(null, a10, b10, true, c10);
    };
    exports.hydrateRoot = function(a10, b10, c10) {
      if (!ml2(a10))
        throw Error(p10(405));
      var d10 = c10 != null && c10.hydratedSources || null, e13 = false, f10 = "", g10 = jl2;
      c10 !== null && c10 !== void 0 && (c10.unstable_strictMode === true && (e13 = true), c10.identifierPrefix !== void 0 && (f10 = c10.identifierPrefix), c10.onRecoverableError !== void 0 && (g10 = c10.onRecoverableError));
      b10 = dl2(b10, null, a10, 1, c10 != null ? c10 : null, e13, false, f10, g10);
      a10[tf2] = b10.current;
      rf2(a10);
      if (d10)
        for (a10 = 0; a10 < d10.length; a10++)
          c10 = d10[a10], e13 = c10._getVersion, e13 = e13(c10._source), b10.mutableSourceEagerHydrationData == null ? b10.mutableSourceEagerHydrationData = [c10, e13] : b10.mutableSourceEagerHydrationData.push(c10, e13);
      return new ll2(b10);
    };
    exports.render = function(a10, b10, c10) {
      if (!nl2(b10))
        throw Error(p10(200));
      return ql(null, a10, b10, false, c10);
    };
    exports.unmountComponentAtNode = function(a10) {
      if (!nl2(a10))
        throw Error(p10(40));
      return a10._reactRootContainer ? (Qk2(function() {
        ql(null, null, a10, false, function() {
          a10._reactRootContainer = null;
          a10[tf2] = null;
        });
      }), true) : false;
    };
    exports.unstable_batchedUpdates = Pk2;
    exports.unstable_renderSubtreeIntoContainer = function(a10, b10, c10, d10) {
      if (!nl2(c10))
        throw Error(p10(200));
      if (a10 == null || a10._reactInternals === void 0)
        throw Error(p10(38));
      return ql(a10, b10, c10, false, d10);
    };
    exports.version = "18.1.0-next-22edb9f77-20220426";
  }
});

// ../../node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "../../node_modules/react-dom/index.js"(exports, module2) {
    "use strict";
    function checkDCE() {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
        return;
      }
      if (false) {
        throw new Error("^_^");
      }
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
      } catch (err) {
        console.error(err);
      }
    }
    if (true) {
      checkDCE();
      module2.exports = require_react_dom_production_min();
    } else {
      module2.exports = null;
    }
  }
});

// ../../node_modules/react-dom/client.js
var require_client = __commonJS({
  "../../node_modules/react-dom/client.js"(exports) {
    "use strict";
    var m10 = require_react_dom();
    if (true) {
      exports.createRoot = m10.createRoot;
      exports.hydrateRoot = m10.hydrateRoot;
    } else {
      i10 = m10.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      exports.createRoot = function(c10, o10) {
        i10.usingClientEntryPoint = true;
        try {
          return m10.createRoot(c10, o10);
        } finally {
          i10.usingClientEntryPoint = false;
        }
      };
      exports.hydrateRoot = function(c10, h10, o10) {
        i10.usingClientEntryPoint = true;
        try {
          return m10.hydrateRoot(c10, h10, o10);
        } finally {
          i10.usingClientEntryPoint = false;
        }
      };
    }
    var i10;
  }
});

// ../../node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "../../node_modules/tslib/tslib.js"(exports, module2) {
    var __extends4;
    var __assign5;
    var __rest5;
    var __decorate4;
    var __param4;
    var __metadata4;
    var __awaiter5;
    var __generator4;
    var __exportStar4;
    var __values5;
    var __read5;
    var __spread4;
    var __spreadArrays4;
    var __spreadArray2;
    var __await4;
    var __asyncGenerator4;
    var __asyncDelegator4;
    var __asyncValues4;
    var __makeTemplateObject4;
    var __importStar4;
    var __importDefault4;
    var __classPrivateFieldGet4;
    var __classPrivateFieldSet4;
    var __classPrivateFieldIn2;
    var __createBinding4;
    (function(factory) {
      var root2 = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root2, createExporter(exports2)));
        });
      } else if (typeof module2 === "object" && typeof module2.exports === "object") {
        factory(createExporter(root2, createExporter(module2.exports)));
      } else {
        factory(createExporter(root2));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root2) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id2, v10) {
          return exports2[id2] = previous ? previous(id2, v10) : v10;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d10, b10) {
        d10.__proto__ = b10;
      } || function(d10, b10) {
        for (var p10 in b10)
          if (Object.prototype.hasOwnProperty.call(b10, p10))
            d10[p10] = b10[p10];
      };
      __extends4 = function(d10, b10) {
        if (typeof b10 !== "function" && b10 !== null)
          throw new TypeError("Class extends value " + String(b10) + " is not a constructor or null");
        extendStatics(d10, b10);
        function __() {
          this.constructor = d10;
        }
        d10.prototype = b10 === null ? Object.create(b10) : (__.prototype = b10.prototype, new __());
      };
      __assign5 = Object.assign || function(t12) {
        for (var s10, i10 = 1, n10 = arguments.length; i10 < n10; i10++) {
          s10 = arguments[i10];
          for (var p10 in s10)
            if (Object.prototype.hasOwnProperty.call(s10, p10))
              t12[p10] = s10[p10];
        }
        return t12;
      };
      __rest5 = function(s10, e13) {
        var t12 = {};
        for (var p10 in s10)
          if (Object.prototype.hasOwnProperty.call(s10, p10) && e13.indexOf(p10) < 0)
            t12[p10] = s10[p10];
        if (s10 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i10 = 0, p10 = Object.getOwnPropertySymbols(s10); i10 < p10.length; i10++) {
            if (e13.indexOf(p10[i10]) < 0 && Object.prototype.propertyIsEnumerable.call(s10, p10[i10]))
              t12[p10[i10]] = s10[p10[i10]];
          }
        return t12;
      };
      __decorate4 = function(decorators, target, key, desc) {
        var c10 = arguments.length, r11 = c10 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d10;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r11 = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i10 = decorators.length - 1; i10 >= 0; i10--)
            if (d10 = decorators[i10])
              r11 = (c10 < 3 ? d10(r11) : c10 > 3 ? d10(target, key, r11) : d10(target, key)) || r11;
        return c10 > 3 && r11 && Object.defineProperty(target, key, r11), r11;
      };
      __param4 = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata4 = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter5 = function(thisArg, _arguments, P10, generator) {
        function adopt(value) {
          return value instanceof P10 ? value : new P10(function(resolve) {
            resolve(value);
          });
        }
        return new (P10 || (P10 = Promise))(function(resolve, reject2) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e13) {
              reject2(e13);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e13) {
              reject2(e13);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator4 = function(thisArg, body) {
        var _10 = { label: 0, sent: function() {
          if (t12[0] & 1)
            throw t12[1];
          return t12[1];
        }, trys: [], ops: [] }, f10, y10, t12, g10;
        return g10 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g10[Symbol.iterator] = function() {
          return this;
        }), g10;
        function verb(n10) {
          return function(v10) {
            return step([n10, v10]);
          };
        }
        function step(op) {
          if (f10)
            throw new TypeError("Generator is already executing.");
          while (_10)
            try {
              if (f10 = 1, y10 && (t12 = op[0] & 2 ? y10["return"] : op[0] ? y10["throw"] || ((t12 = y10["return"]) && t12.call(y10), 0) : y10.next) && !(t12 = t12.call(y10, op[1])).done)
                return t12;
              if (y10 = 0, t12)
                op = [op[0] & 2, t12.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t12 = op;
                  break;
                case 4:
                  _10.label++;
                  return { value: op[1], done: false };
                case 5:
                  _10.label++;
                  y10 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _10.ops.pop();
                  _10.trys.pop();
                  continue;
                default:
                  if (!(t12 = _10.trys, t12 = t12.length > 0 && t12[t12.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _10 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t12 || op[1] > t12[0] && op[1] < t12[3])) {
                    _10.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _10.label < t12[1]) {
                    _10.label = t12[1];
                    t12 = op;
                    break;
                  }
                  if (t12 && _10.label < t12[2]) {
                    _10.label = t12[2];
                    _10.ops.push(op);
                    break;
                  }
                  if (t12[2])
                    _10.ops.pop();
                  _10.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _10);
            } catch (e13) {
              op = [6, e13];
              y10 = 0;
            } finally {
              f10 = t12 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __exportStar4 = function(m10, o10) {
        for (var p10 in m10)
          if (p10 !== "default" && !Object.prototype.hasOwnProperty.call(o10, p10))
            __createBinding4(o10, m10, p10);
      };
      __createBinding4 = Object.create ? function(o10, m10, k10, k23) {
        if (k23 === void 0)
          k23 = k10;
        var desc = Object.getOwnPropertyDescriptor(m10, k10);
        if (!desc || ("get" in desc ? !m10.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m10[k10];
          } };
        }
        Object.defineProperty(o10, k23, desc);
      } : function(o10, m10, k10, k23) {
        if (k23 === void 0)
          k23 = k10;
        o10[k23] = m10[k10];
      };
      __values5 = function(o10) {
        var s10 = typeof Symbol === "function" && Symbol.iterator, m10 = s10 && o10[s10], i10 = 0;
        if (m10)
          return m10.call(o10);
        if (o10 && typeof o10.length === "number")
          return {
            next: function() {
              if (o10 && i10 >= o10.length)
                o10 = void 0;
              return { value: o10 && o10[i10++], done: !o10 };
            }
          };
        throw new TypeError(s10 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read5 = function(o10, n10) {
        var m10 = typeof Symbol === "function" && o10[Symbol.iterator];
        if (!m10)
          return o10;
        var i10 = m10.call(o10), r11, ar2 = [], e13;
        try {
          while ((n10 === void 0 || n10-- > 0) && !(r11 = i10.next()).done)
            ar2.push(r11.value);
        } catch (error) {
          e13 = { error };
        } finally {
          try {
            if (r11 && !r11.done && (m10 = i10["return"]))
              m10.call(i10);
          } finally {
            if (e13)
              throw e13.error;
          }
        }
        return ar2;
      };
      __spread4 = function() {
        for (var ar2 = [], i10 = 0; i10 < arguments.length; i10++)
          ar2 = ar2.concat(__read5(arguments[i10]));
        return ar2;
      };
      __spreadArrays4 = function() {
        for (var s10 = 0, i10 = 0, il2 = arguments.length; i10 < il2; i10++)
          s10 += arguments[i10].length;
        for (var r11 = Array(s10), k10 = 0, i10 = 0; i10 < il2; i10++)
          for (var a10 = arguments[i10], j10 = 0, jl2 = a10.length; j10 < jl2; j10++, k10++)
            r11[k10] = a10[j10];
        return r11;
      };
      __spreadArray2 = function(to2, from, pack) {
        if (pack || arguments.length === 2)
          for (var i10 = 0, l10 = from.length, ar2; i10 < l10; i10++) {
            if (ar2 || !(i10 in from)) {
              if (!ar2)
                ar2 = Array.prototype.slice.call(from, 0, i10);
              ar2[i10] = from[i10];
            }
          }
        return to2.concat(ar2 || Array.prototype.slice.call(from));
      };
      __await4 = function(v10) {
        return this instanceof __await4 ? (this.v = v10, this) : new __await4(v10);
      };
      __asyncGenerator4 = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g10 = generator.apply(thisArg, _arguments || []), i10, q10 = [];
        return i10 = {}, verb("next"), verb("throw"), verb("return"), i10[Symbol.asyncIterator] = function() {
          return this;
        }, i10;
        function verb(n10) {
          if (g10[n10])
            i10[n10] = function(v10) {
              return new Promise(function(a10, b10) {
                q10.push([n10, v10, a10, b10]) > 1 || resume(n10, v10);
              });
            };
        }
        function resume(n10, v10) {
          try {
            step(g10[n10](v10));
          } catch (e13) {
            settle(q10[0][3], e13);
          }
        }
        function step(r11) {
          r11.value instanceof __await4 ? Promise.resolve(r11.value.v).then(fulfill, reject2) : settle(q10[0][2], r11);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject2(value) {
          resume("throw", value);
        }
        function settle(f10, v10) {
          if (f10(v10), q10.shift(), q10.length)
            resume(q10[0][0], q10[0][1]);
        }
      };
      __asyncDelegator4 = function(o10) {
        var i10, p10;
        return i10 = {}, verb("next"), verb("throw", function(e13) {
          throw e13;
        }), verb("return"), i10[Symbol.iterator] = function() {
          return this;
        }, i10;
        function verb(n10, f10) {
          i10[n10] = o10[n10] ? function(v10) {
            return (p10 = !p10) ? { value: __await4(o10[n10](v10)), done: n10 === "return" } : f10 ? f10(v10) : v10;
          } : f10;
        }
      };
      __asyncValues4 = function(o10) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m10 = o10[Symbol.asyncIterator], i10;
        return m10 ? m10.call(o10) : (o10 = typeof __values5 === "function" ? __values5(o10) : o10[Symbol.iterator](), i10 = {}, verb("next"), verb("throw"), verb("return"), i10[Symbol.asyncIterator] = function() {
          return this;
        }, i10);
        function verb(n10) {
          i10[n10] = o10[n10] && function(v10) {
            return new Promise(function(resolve, reject2) {
              v10 = o10[n10](v10), settle(resolve, reject2, v10.done, v10.value);
            });
          };
        }
        function settle(resolve, reject2, d10, v10) {
          Promise.resolve(v10).then(function(v11) {
            resolve({ value: v11, done: d10 });
          }, reject2);
        }
      };
      __makeTemplateObject4 = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      var __setModuleDefault = Object.create ? function(o10, v10) {
        Object.defineProperty(o10, "default", { enumerable: true, value: v10 });
      } : function(o10, v10) {
        o10["default"] = v10;
      };
      __importStar4 = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k10 in mod)
            if (k10 !== "default" && Object.prototype.hasOwnProperty.call(mod, k10))
              __createBinding4(result, mod, k10);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      __importDefault4 = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet4 = function(receiver, state, kind, f10) {
        if (kind === "a" && !f10)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f10 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f10 : kind === "a" ? f10.call(receiver) : f10 ? f10.value : state.get(receiver);
      };
      __classPrivateFieldSet4 = function(receiver, state, value, kind, f10) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f10)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f10 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f10.call(receiver, value) : f10 ? f10.value = value : state.set(receiver, value), value;
      };
      __classPrivateFieldIn2 = function(state, receiver) {
        if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
      };
      exporter("__extends", __extends4);
      exporter("__assign", __assign5);
      exporter("__rest", __rest5);
      exporter("__decorate", __decorate4);
      exporter("__param", __param4);
      exporter("__metadata", __metadata4);
      exporter("__awaiter", __awaiter5);
      exporter("__generator", __generator4);
      exporter("__exportStar", __exportStar4);
      exporter("__createBinding", __createBinding4);
      exporter("__values", __values5);
      exporter("__read", __read5);
      exporter("__spread", __spread4);
      exporter("__spreadArrays", __spreadArrays4);
      exporter("__spreadArray", __spreadArray2);
      exporter("__await", __await4);
      exporter("__asyncGenerator", __asyncGenerator4);
      exporter("__asyncDelegator", __asyncDelegator4);
      exporter("__asyncValues", __asyncValues4);
      exporter("__makeTemplateObject", __makeTemplateObject4);
      exporter("__importStar", __importStar4);
      exporter("__importDefault", __importDefault4);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet4);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet4);
      exporter("__classPrivateFieldIn", __classPrivateFieldIn2);
    });
  }
});

// ../../node_modules/react-is/cjs/react-is.production.min.js
var require_react_is_production_min = __commonJS({
  "../../node_modules/react-is/cjs/react-is.production.min.js"(exports) {
    "use strict";
    var b10 = typeof Symbol === "function" && Symbol.for;
    var c10 = b10 ? Symbol.for("react.element") : 60103;
    var d10 = b10 ? Symbol.for("react.portal") : 60106;
    var e13 = b10 ? Symbol.for("react.fragment") : 60107;
    var f10 = b10 ? Symbol.for("react.strict_mode") : 60108;
    var g10 = b10 ? Symbol.for("react.profiler") : 60114;
    var h10 = b10 ? Symbol.for("react.provider") : 60109;
    var k10 = b10 ? Symbol.for("react.context") : 60110;
    var l10 = b10 ? Symbol.for("react.async_mode") : 60111;
    var m10 = b10 ? Symbol.for("react.concurrent_mode") : 60111;
    var n10 = b10 ? Symbol.for("react.forward_ref") : 60112;
    var p10 = b10 ? Symbol.for("react.suspense") : 60113;
    var q10 = b10 ? Symbol.for("react.suspense_list") : 60120;
    var r11 = b10 ? Symbol.for("react.memo") : 60115;
    var t12 = b10 ? Symbol.for("react.lazy") : 60116;
    var v10 = b10 ? Symbol.for("react.block") : 60121;
    var w10 = b10 ? Symbol.for("react.fundamental") : 60117;
    var x10 = b10 ? Symbol.for("react.responder") : 60118;
    var y10 = b10 ? Symbol.for("react.scope") : 60119;
    function z10(a10) {
      if (typeof a10 === "object" && a10 !== null) {
        var u10 = a10.$$typeof;
        switch (u10) {
          case c10:
            switch (a10 = a10.type, a10) {
              case l10:
              case m10:
              case e13:
              case g10:
              case f10:
              case p10:
                return a10;
              default:
                switch (a10 = a10 && a10.$$typeof, a10) {
                  case k10:
                  case n10:
                  case t12:
                  case r11:
                  case h10:
                    return a10;
                  default:
                    return u10;
                }
            }
          case d10:
            return u10;
        }
      }
    }
    function A10(a10) {
      return z10(a10) === m10;
    }
    exports.AsyncMode = l10;
    exports.ConcurrentMode = m10;
    exports.ContextConsumer = k10;
    exports.ContextProvider = h10;
    exports.Element = c10;
    exports.ForwardRef = n10;
    exports.Fragment = e13;
    exports.Lazy = t12;
    exports.Memo = r11;
    exports.Portal = d10;
    exports.Profiler = g10;
    exports.StrictMode = f10;
    exports.Suspense = p10;
    exports.isAsyncMode = function(a10) {
      return A10(a10) || z10(a10) === l10;
    };
    exports.isConcurrentMode = A10;
    exports.isContextConsumer = function(a10) {
      return z10(a10) === k10;
    };
    exports.isContextProvider = function(a10) {
      return z10(a10) === h10;
    };
    exports.isElement = function(a10) {
      return typeof a10 === "object" && a10 !== null && a10.$$typeof === c10;
    };
    exports.isForwardRef = function(a10) {
      return z10(a10) === n10;
    };
    exports.isFragment = function(a10) {
      return z10(a10) === e13;
    };
    exports.isLazy = function(a10) {
      return z10(a10) === t12;
    };
    exports.isMemo = function(a10) {
      return z10(a10) === r11;
    };
    exports.isPortal = function(a10) {
      return z10(a10) === d10;
    };
    exports.isProfiler = function(a10) {
      return z10(a10) === g10;
    };
    exports.isStrictMode = function(a10) {
      return z10(a10) === f10;
    };
    exports.isSuspense = function(a10) {
      return z10(a10) === p10;
    };
    exports.isValidElementType = function(a10) {
      return typeof a10 === "string" || typeof a10 === "function" || a10 === e13 || a10 === m10 || a10 === g10 || a10 === f10 || a10 === p10 || a10 === q10 || typeof a10 === "object" && a10 !== null && (a10.$$typeof === t12 || a10.$$typeof === r11 || a10.$$typeof === h10 || a10.$$typeof === k10 || a10.$$typeof === n10 || a10.$$typeof === w10 || a10.$$typeof === x10 || a10.$$typeof === y10 || a10.$$typeof === v10);
    };
    exports.typeOf = z10;
  }
});

// ../../node_modules/react-is/index.js
var require_react_is = __commonJS({
  "../../node_modules/react-is/index.js"(exports, module2) {
    "use strict";
    if (true) {
      module2.exports = require_react_is_production_min();
    } else {
      module2.exports = null;
    }
  }
});

// ../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module2) {
    "use strict";
    var reactIs = require_react_is();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty3 = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype2 = Object.prototype;
    function hoistNonReactStatics2(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype2) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype2) {
            hoistNonReactStatics2(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i10 = 0; i10 < keys.length; ++i10) {
          var key = keys[i10];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
            try {
              defineProperty3(targetComponent, key, descriptor);
            } catch (e13) {
            }
          }
        }
      }
      return targetComponent;
    }
    module2.exports = hoistNonReactStatics2;
  }
});

// ../../node_modules/react-remove-scroll/node_modules/tslib/tslib.js
var require_tslib2 = __commonJS({
  "../../node_modules/react-remove-scroll/node_modules/tslib/tslib.js"(exports, module2) {
    var __extends4;
    var __assign5;
    var __rest5;
    var __decorate4;
    var __param4;
    var __metadata4;
    var __awaiter5;
    var __generator4;
    var __exportStar4;
    var __values5;
    var __read5;
    var __spread4;
    var __spreadArrays4;
    var __await4;
    var __asyncGenerator4;
    var __asyncDelegator4;
    var __asyncValues4;
    var __makeTemplateObject4;
    var __importStar4;
    var __importDefault4;
    var __classPrivateFieldGet4;
    var __classPrivateFieldSet4;
    var __createBinding4;
    (function(factory) {
      var root2 = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root2, createExporter(exports2)));
        });
      } else if (typeof module2 === "object" && typeof module2.exports === "object") {
        factory(createExporter(root2, createExporter(module2.exports)));
      } else {
        factory(createExporter(root2));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root2) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id2, v10) {
          return exports2[id2] = previous ? previous(id2, v10) : v10;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d10, b10) {
        d10.__proto__ = b10;
      } || function(d10, b10) {
        for (var p10 in b10)
          if (b10.hasOwnProperty(p10))
            d10[p10] = b10[p10];
      };
      __extends4 = function(d10, b10) {
        extendStatics(d10, b10);
        function __() {
          this.constructor = d10;
        }
        d10.prototype = b10 === null ? Object.create(b10) : (__.prototype = b10.prototype, new __());
      };
      __assign5 = Object.assign || function(t12) {
        for (var s10, i10 = 1, n10 = arguments.length; i10 < n10; i10++) {
          s10 = arguments[i10];
          for (var p10 in s10)
            if (Object.prototype.hasOwnProperty.call(s10, p10))
              t12[p10] = s10[p10];
        }
        return t12;
      };
      __rest5 = function(s10, e13) {
        var t12 = {};
        for (var p10 in s10)
          if (Object.prototype.hasOwnProperty.call(s10, p10) && e13.indexOf(p10) < 0)
            t12[p10] = s10[p10];
        if (s10 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i10 = 0, p10 = Object.getOwnPropertySymbols(s10); i10 < p10.length; i10++) {
            if (e13.indexOf(p10[i10]) < 0 && Object.prototype.propertyIsEnumerable.call(s10, p10[i10]))
              t12[p10[i10]] = s10[p10[i10]];
          }
        return t12;
      };
      __decorate4 = function(decorators, target, key, desc) {
        var c10 = arguments.length, r11 = c10 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d10;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r11 = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i10 = decorators.length - 1; i10 >= 0; i10--)
            if (d10 = decorators[i10])
              r11 = (c10 < 3 ? d10(r11) : c10 > 3 ? d10(target, key, r11) : d10(target, key)) || r11;
        return c10 > 3 && r11 && Object.defineProperty(target, key, r11), r11;
      };
      __param4 = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata4 = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter5 = function(thisArg, _arguments, P10, generator) {
        function adopt(value) {
          return value instanceof P10 ? value : new P10(function(resolve) {
            resolve(value);
          });
        }
        return new (P10 || (P10 = Promise))(function(resolve, reject2) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e13) {
              reject2(e13);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e13) {
              reject2(e13);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator4 = function(thisArg, body) {
        var _10 = { label: 0, sent: function() {
          if (t12[0] & 1)
            throw t12[1];
          return t12[1];
        }, trys: [], ops: [] }, f10, y10, t12, g10;
        return g10 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g10[Symbol.iterator] = function() {
          return this;
        }), g10;
        function verb(n10) {
          return function(v10) {
            return step([n10, v10]);
          };
        }
        function step(op) {
          if (f10)
            throw new TypeError("Generator is already executing.");
          while (_10)
            try {
              if (f10 = 1, y10 && (t12 = op[0] & 2 ? y10["return"] : op[0] ? y10["throw"] || ((t12 = y10["return"]) && t12.call(y10), 0) : y10.next) && !(t12 = t12.call(y10, op[1])).done)
                return t12;
              if (y10 = 0, t12)
                op = [op[0] & 2, t12.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t12 = op;
                  break;
                case 4:
                  _10.label++;
                  return { value: op[1], done: false };
                case 5:
                  _10.label++;
                  y10 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _10.ops.pop();
                  _10.trys.pop();
                  continue;
                default:
                  if (!(t12 = _10.trys, t12 = t12.length > 0 && t12[t12.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _10 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t12 || op[1] > t12[0] && op[1] < t12[3])) {
                    _10.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _10.label < t12[1]) {
                    _10.label = t12[1];
                    t12 = op;
                    break;
                  }
                  if (t12 && _10.label < t12[2]) {
                    _10.label = t12[2];
                    _10.ops.push(op);
                    break;
                  }
                  if (t12[2])
                    _10.ops.pop();
                  _10.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _10);
            } catch (e13) {
              op = [6, e13];
              y10 = 0;
            } finally {
              f10 = t12 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __createBinding4 = function(o10, m10, k10, k23) {
        if (k23 === void 0)
          k23 = k10;
        o10[k23] = m10[k10];
      };
      __exportStar4 = function(m10, exports2) {
        for (var p10 in m10)
          if (p10 !== "default" && !exports2.hasOwnProperty(p10))
            exports2[p10] = m10[p10];
      };
      __values5 = function(o10) {
        var s10 = typeof Symbol === "function" && Symbol.iterator, m10 = s10 && o10[s10], i10 = 0;
        if (m10)
          return m10.call(o10);
        if (o10 && typeof o10.length === "number")
          return {
            next: function() {
              if (o10 && i10 >= o10.length)
                o10 = void 0;
              return { value: o10 && o10[i10++], done: !o10 };
            }
          };
        throw new TypeError(s10 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read5 = function(o10, n10) {
        var m10 = typeof Symbol === "function" && o10[Symbol.iterator];
        if (!m10)
          return o10;
        var i10 = m10.call(o10), r11, ar2 = [], e13;
        try {
          while ((n10 === void 0 || n10-- > 0) && !(r11 = i10.next()).done)
            ar2.push(r11.value);
        } catch (error) {
          e13 = { error };
        } finally {
          try {
            if (r11 && !r11.done && (m10 = i10["return"]))
              m10.call(i10);
          } finally {
            if (e13)
              throw e13.error;
          }
        }
        return ar2;
      };
      __spread4 = function() {
        for (var ar2 = [], i10 = 0; i10 < arguments.length; i10++)
          ar2 = ar2.concat(__read5(arguments[i10]));
        return ar2;
      };
      __spreadArrays4 = function() {
        for (var s10 = 0, i10 = 0, il2 = arguments.length; i10 < il2; i10++)
          s10 += arguments[i10].length;
        for (var r11 = Array(s10), k10 = 0, i10 = 0; i10 < il2; i10++)
          for (var a10 = arguments[i10], j10 = 0, jl2 = a10.length; j10 < jl2; j10++, k10++)
            r11[k10] = a10[j10];
        return r11;
      };
      __await4 = function(v10) {
        return this instanceof __await4 ? (this.v = v10, this) : new __await4(v10);
      };
      __asyncGenerator4 = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g10 = generator.apply(thisArg, _arguments || []), i10, q10 = [];
        return i10 = {}, verb("next"), verb("throw"), verb("return"), i10[Symbol.asyncIterator] = function() {
          return this;
        }, i10;
        function verb(n10) {
          if (g10[n10])
            i10[n10] = function(v10) {
              return new Promise(function(a10, b10) {
                q10.push([n10, v10, a10, b10]) > 1 || resume(n10, v10);
              });
            };
        }
        function resume(n10, v10) {
          try {
            step(g10[n10](v10));
          } catch (e13) {
            settle(q10[0][3], e13);
          }
        }
        function step(r11) {
          r11.value instanceof __await4 ? Promise.resolve(r11.value.v).then(fulfill, reject2) : settle(q10[0][2], r11);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject2(value) {
          resume("throw", value);
        }
        function settle(f10, v10) {
          if (f10(v10), q10.shift(), q10.length)
            resume(q10[0][0], q10[0][1]);
        }
      };
      __asyncDelegator4 = function(o10) {
        var i10, p10;
        return i10 = {}, verb("next"), verb("throw", function(e13) {
          throw e13;
        }), verb("return"), i10[Symbol.iterator] = function() {
          return this;
        }, i10;
        function verb(n10, f10) {
          i10[n10] = o10[n10] ? function(v10) {
            return (p10 = !p10) ? { value: __await4(o10[n10](v10)), done: n10 === "return" } : f10 ? f10(v10) : v10;
          } : f10;
        }
      };
      __asyncValues4 = function(o10) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m10 = o10[Symbol.asyncIterator], i10;
        return m10 ? m10.call(o10) : (o10 = typeof __values5 === "function" ? __values5(o10) : o10[Symbol.iterator](), i10 = {}, verb("next"), verb("throw"), verb("return"), i10[Symbol.asyncIterator] = function() {
          return this;
        }, i10);
        function verb(n10) {
          i10[n10] = o10[n10] && function(v10) {
            return new Promise(function(resolve, reject2) {
              v10 = o10[n10](v10), settle(resolve, reject2, v10.done, v10.value);
            });
          };
        }
        function settle(resolve, reject2, d10, v10) {
          Promise.resolve(v10).then(function(v11) {
            resolve({ value: v11, done: d10 });
          }, reject2);
        }
      };
      __makeTemplateObject4 = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      __importStar4 = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k10 in mod)
            if (Object.hasOwnProperty.call(mod, k10))
              result[k10] = mod[k10];
        }
        result["default"] = mod;
        return result;
      };
      __importDefault4 = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet4 = function(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
      };
      __classPrivateFieldSet4 = function(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
      };
      exporter("__extends", __extends4);
      exporter("__assign", __assign5);
      exporter("__rest", __rest5);
      exporter("__decorate", __decorate4);
      exporter("__param", __param4);
      exporter("__metadata", __metadata4);
      exporter("__awaiter", __awaiter5);
      exporter("__generator", __generator4);
      exporter("__exportStar", __exportStar4);
      exporter("__createBinding", __createBinding4);
      exporter("__values", __values5);
      exporter("__read", __read5);
      exporter("__spread", __spread4);
      exporter("__spreadArrays", __spreadArrays4);
      exporter("__await", __await4);
      exporter("__asyncGenerator", __asyncGenerator4);
      exporter("__asyncDelegator", __asyncDelegator4);
      exporter("__asyncValues", __asyncValues4);
      exporter("__makeTemplateObject", __makeTemplateObject4);
      exporter("__importStar", __importStar4);
      exporter("__importDefault", __importDefault4);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet4);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet4);
    });
  }
});

// ../../node_modules/use-sidecar/node_modules/tslib/tslib.js
var require_tslib3 = __commonJS({
  "../../node_modules/use-sidecar/node_modules/tslib/tslib.js"(exports, module2) {
    var __extends4;
    var __assign5;
    var __rest5;
    var __decorate4;
    var __param4;
    var __metadata4;
    var __awaiter5;
    var __generator4;
    var __exportStar4;
    var __values5;
    var __read5;
    var __spread4;
    var __spreadArrays4;
    var __await4;
    var __asyncGenerator4;
    var __asyncDelegator4;
    var __asyncValues4;
    var __makeTemplateObject4;
    var __importStar4;
    var __importDefault4;
    var __classPrivateFieldGet4;
    var __classPrivateFieldSet4;
    var __createBinding4;
    (function(factory) {
      var root2 = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root2, createExporter(exports2)));
        });
      } else if (typeof module2 === "object" && typeof module2.exports === "object") {
        factory(createExporter(root2, createExporter(module2.exports)));
      } else {
        factory(createExporter(root2));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root2) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id2, v10) {
          return exports2[id2] = previous ? previous(id2, v10) : v10;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d10, b10) {
        d10.__proto__ = b10;
      } || function(d10, b10) {
        for (var p10 in b10)
          if (b10.hasOwnProperty(p10))
            d10[p10] = b10[p10];
      };
      __extends4 = function(d10, b10) {
        extendStatics(d10, b10);
        function __() {
          this.constructor = d10;
        }
        d10.prototype = b10 === null ? Object.create(b10) : (__.prototype = b10.prototype, new __());
      };
      __assign5 = Object.assign || function(t12) {
        for (var s10, i10 = 1, n10 = arguments.length; i10 < n10; i10++) {
          s10 = arguments[i10];
          for (var p10 in s10)
            if (Object.prototype.hasOwnProperty.call(s10, p10))
              t12[p10] = s10[p10];
        }
        return t12;
      };
      __rest5 = function(s10, e13) {
        var t12 = {};
        for (var p10 in s10)
          if (Object.prototype.hasOwnProperty.call(s10, p10) && e13.indexOf(p10) < 0)
            t12[p10] = s10[p10];
        if (s10 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i10 = 0, p10 = Object.getOwnPropertySymbols(s10); i10 < p10.length; i10++) {
            if (e13.indexOf(p10[i10]) < 0 && Object.prototype.propertyIsEnumerable.call(s10, p10[i10]))
              t12[p10[i10]] = s10[p10[i10]];
          }
        return t12;
      };
      __decorate4 = function(decorators, target, key, desc) {
        var c10 = arguments.length, r11 = c10 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d10;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r11 = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i10 = decorators.length - 1; i10 >= 0; i10--)
            if (d10 = decorators[i10])
              r11 = (c10 < 3 ? d10(r11) : c10 > 3 ? d10(target, key, r11) : d10(target, key)) || r11;
        return c10 > 3 && r11 && Object.defineProperty(target, key, r11), r11;
      };
      __param4 = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata4 = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter5 = function(thisArg, _arguments, P10, generator) {
        function adopt(value) {
          return value instanceof P10 ? value : new P10(function(resolve) {
            resolve(value);
          });
        }
        return new (P10 || (P10 = Promise))(function(resolve, reject2) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e13) {
              reject2(e13);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e13) {
              reject2(e13);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator4 = function(thisArg, body) {
        var _10 = { label: 0, sent: function() {
          if (t12[0] & 1)
            throw t12[1];
          return t12[1];
        }, trys: [], ops: [] }, f10, y10, t12, g10;
        return g10 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g10[Symbol.iterator] = function() {
          return this;
        }), g10;
        function verb(n10) {
          return function(v10) {
            return step([n10, v10]);
          };
        }
        function step(op) {
          if (f10)
            throw new TypeError("Generator is already executing.");
          while (_10)
            try {
              if (f10 = 1, y10 && (t12 = op[0] & 2 ? y10["return"] : op[0] ? y10["throw"] || ((t12 = y10["return"]) && t12.call(y10), 0) : y10.next) && !(t12 = t12.call(y10, op[1])).done)
                return t12;
              if (y10 = 0, t12)
                op = [op[0] & 2, t12.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t12 = op;
                  break;
                case 4:
                  _10.label++;
                  return { value: op[1], done: false };
                case 5:
                  _10.label++;
                  y10 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _10.ops.pop();
                  _10.trys.pop();
                  continue;
                default:
                  if (!(t12 = _10.trys, t12 = t12.length > 0 && t12[t12.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _10 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t12 || op[1] > t12[0] && op[1] < t12[3])) {
                    _10.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _10.label < t12[1]) {
                    _10.label = t12[1];
                    t12 = op;
                    break;
                  }
                  if (t12 && _10.label < t12[2]) {
                    _10.label = t12[2];
                    _10.ops.push(op);
                    break;
                  }
                  if (t12[2])
                    _10.ops.pop();
                  _10.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _10);
            } catch (e13) {
              op = [6, e13];
              y10 = 0;
            } finally {
              f10 = t12 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __createBinding4 = function(o10, m10, k10, k23) {
        if (k23 === void 0)
          k23 = k10;
        o10[k23] = m10[k10];
      };
      __exportStar4 = function(m10, exports2) {
        for (var p10 in m10)
          if (p10 !== "default" && !exports2.hasOwnProperty(p10))
            exports2[p10] = m10[p10];
      };
      __values5 = function(o10) {
        var s10 = typeof Symbol === "function" && Symbol.iterator, m10 = s10 && o10[s10], i10 = 0;
        if (m10)
          return m10.call(o10);
        if (o10 && typeof o10.length === "number")
          return {
            next: function() {
              if (o10 && i10 >= o10.length)
                o10 = void 0;
              return { value: o10 && o10[i10++], done: !o10 };
            }
          };
        throw new TypeError(s10 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read5 = function(o10, n10) {
        var m10 = typeof Symbol === "function" && o10[Symbol.iterator];
        if (!m10)
          return o10;
        var i10 = m10.call(o10), r11, ar2 = [], e13;
        try {
          while ((n10 === void 0 || n10-- > 0) && !(r11 = i10.next()).done)
            ar2.push(r11.value);
        } catch (error) {
          e13 = { error };
        } finally {
          try {
            if (r11 && !r11.done && (m10 = i10["return"]))
              m10.call(i10);
          } finally {
            if (e13)
              throw e13.error;
          }
        }
        return ar2;
      };
      __spread4 = function() {
        for (var ar2 = [], i10 = 0; i10 < arguments.length; i10++)
          ar2 = ar2.concat(__read5(arguments[i10]));
        return ar2;
      };
      __spreadArrays4 = function() {
        for (var s10 = 0, i10 = 0, il2 = arguments.length; i10 < il2; i10++)
          s10 += arguments[i10].length;
        for (var r11 = Array(s10), k10 = 0, i10 = 0; i10 < il2; i10++)
          for (var a10 = arguments[i10], j10 = 0, jl2 = a10.length; j10 < jl2; j10++, k10++)
            r11[k10] = a10[j10];
        return r11;
      };
      __await4 = function(v10) {
        return this instanceof __await4 ? (this.v = v10, this) : new __await4(v10);
      };
      __asyncGenerator4 = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g10 = generator.apply(thisArg, _arguments || []), i10, q10 = [];
        return i10 = {}, verb("next"), verb("throw"), verb("return"), i10[Symbol.asyncIterator] = function() {
          return this;
        }, i10;
        function verb(n10) {
          if (g10[n10])
            i10[n10] = function(v10) {
              return new Promise(function(a10, b10) {
                q10.push([n10, v10, a10, b10]) > 1 || resume(n10, v10);
              });
            };
        }
        function resume(n10, v10) {
          try {
            step(g10[n10](v10));
          } catch (e13) {
            settle(q10[0][3], e13);
          }
        }
        function step(r11) {
          r11.value instanceof __await4 ? Promise.resolve(r11.value.v).then(fulfill, reject2) : settle(q10[0][2], r11);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject2(value) {
          resume("throw", value);
        }
        function settle(f10, v10) {
          if (f10(v10), q10.shift(), q10.length)
            resume(q10[0][0], q10[0][1]);
        }
      };
      __asyncDelegator4 = function(o10) {
        var i10, p10;
        return i10 = {}, verb("next"), verb("throw", function(e13) {
          throw e13;
        }), verb("return"), i10[Symbol.iterator] = function() {
          return this;
        }, i10;
        function verb(n10, f10) {
          i10[n10] = o10[n10] ? function(v10) {
            return (p10 = !p10) ? { value: __await4(o10[n10](v10)), done: n10 === "return" } : f10 ? f10(v10) : v10;
          } : f10;
        }
      };
      __asyncValues4 = function(o10) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m10 = o10[Symbol.asyncIterator], i10;
        return m10 ? m10.call(o10) : (o10 = typeof __values5 === "function" ? __values5(o10) : o10[Symbol.iterator](), i10 = {}, verb("next"), verb("throw"), verb("return"), i10[Symbol.asyncIterator] = function() {
          return this;
        }, i10);
        function verb(n10) {
          i10[n10] = o10[n10] && function(v10) {
            return new Promise(function(resolve, reject2) {
              v10 = o10[n10](v10), settle(resolve, reject2, v10.done, v10.value);
            });
          };
        }
        function settle(resolve, reject2, d10, v10) {
          Promise.resolve(v10).then(function(v11) {
            resolve({ value: v11, done: d10 });
          }, reject2);
        }
      };
      __makeTemplateObject4 = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      __importStar4 = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k10 in mod)
            if (Object.hasOwnProperty.call(mod, k10))
              result[k10] = mod[k10];
        }
        result["default"] = mod;
        return result;
      };
      __importDefault4 = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet4 = function(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
      };
      __classPrivateFieldSet4 = function(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
      };
      exporter("__extends", __extends4);
      exporter("__assign", __assign5);
      exporter("__rest", __rest5);
      exporter("__decorate", __decorate4);
      exporter("__param", __param4);
      exporter("__metadata", __metadata4);
      exporter("__awaiter", __awaiter5);
      exporter("__generator", __generator4);
      exporter("__exportStar", __exportStar4);
      exporter("__createBinding", __createBinding4);
      exporter("__values", __values5);
      exporter("__read", __read5);
      exporter("__spread", __spread4);
      exporter("__spreadArrays", __spreadArrays4);
      exporter("__await", __await4);
      exporter("__asyncGenerator", __asyncGenerator4);
      exporter("__asyncDelegator", __asyncDelegator4);
      exporter("__asyncValues", __asyncValues4);
      exporter("__makeTemplateObject", __makeTemplateObject4);
      exporter("__importStar", __importStar4);
      exporter("__importDefault", __importDefault4);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet4);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet4);
    });
  }
});

// ../../node_modules/react-error-boundary/dist/react-error-boundary.umd.js
var require_react_error_boundary_umd = __commonJS({
  "../../node_modules/react-error-boundary/dist/react-error-boundary.umd.js"(exports, module2) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? factory(exports, require_react()) : typeof define === "function" && define.amd ? define(["exports", "react"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2.ReactErrorBoundary = {}, global2.React));
    })(exports, function(exports2, React64) {
      "use strict";
      function _interopNamespace(e13) {
        if (e13 && e13.__esModule)
          return e13;
        var n10 = /* @__PURE__ */ Object.create(null);
        if (e13) {
          Object.keys(e13).forEach(function(k10) {
            if (k10 !== "default") {
              var d10 = Object.getOwnPropertyDescriptor(e13, k10);
              Object.defineProperty(n10, k10, d10.get ? d10 : {
                enumerable: true,
                get: function() {
                  return e13[k10];
                }
              });
            }
          });
        }
        n10["default"] = e13;
        return Object.freeze(n10);
      }
      var React__namespace = /* @__PURE__ */ _interopNamespace(React64);
      function _setPrototypeOf2(o10, p10) {
        _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf3(o11, p11) {
          o11.__proto__ = p11;
          return o11;
        };
        return _setPrototypeOf2(o10, p10);
      }
      function _inheritsLoose2(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        _setPrototypeOf2(subClass, superClass);
      }
      var changedArray = function changedArray2(a10, b10) {
        if (a10 === void 0) {
          a10 = [];
        }
        if (b10 === void 0) {
          b10 = [];
        }
        return a10.length !== b10.length || a10.some(function(item, index2) {
          return !Object.is(item, b10[index2]);
        });
      };
      var initialState = {
        error: null
      };
      var ErrorBoundary = /* @__PURE__ */ function(_React$Component) {
        _inheritsLoose2(ErrorBoundary2, _React$Component);
        function ErrorBoundary2() {
          var _this;
          for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
            _args[_key] = arguments[_key];
          }
          _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
          _this.state = initialState;
          _this.resetErrorBoundary = function() {
            var _this$props;
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }
            _this.props.onReset == null ? void 0 : (_this$props = _this.props).onReset.apply(_this$props, args);
            _this.reset();
          };
          return _this;
        }
        ErrorBoundary2.getDerivedStateFromError = function getDerivedStateFromError(error) {
          return {
            error
          };
        };
        var _proto = ErrorBoundary2.prototype;
        _proto.reset = function reset() {
          this.setState(initialState);
        };
        _proto.componentDidCatch = function componentDidCatch(error, info) {
          var _this$props$onError, _this$props2;
          (_this$props$onError = (_this$props2 = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props2, error, info);
        };
        _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
          var error = this.state.error;
          var resetKeys = this.props.resetKeys;
          if (error !== null && prevState.error !== null && changedArray(prevProps.resetKeys, resetKeys)) {
            var _this$props$onResetKe, _this$props3;
            (_this$props$onResetKe = (_this$props3 = this.props).onResetKeysChange) == null ? void 0 : _this$props$onResetKe.call(_this$props3, prevProps.resetKeys, resetKeys);
            this.reset();
          }
        };
        _proto.render = function render() {
          var error = this.state.error;
          var _this$props4 = this.props, fallbackRender = _this$props4.fallbackRender, FallbackComponent = _this$props4.FallbackComponent, fallback = _this$props4.fallback;
          if (error !== null) {
            var _props = {
              error,
              resetErrorBoundary: this.resetErrorBoundary
            };
            if (/* @__PURE__ */ React__namespace.isValidElement(fallback)) {
              return fallback;
            } else if (typeof fallbackRender === "function") {
              return fallbackRender(_props);
            } else if (FallbackComponent) {
              return /* @__PURE__ */ React__namespace.createElement(FallbackComponent, _props);
            } else {
              throw new Error("react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop");
            }
          }
          return this.props.children;
        };
        return ErrorBoundary2;
      }(React__namespace.Component);
      function withErrorBoundary(Component, errorBoundaryProps) {
        var Wrapped = function Wrapped2(props) {
          return /* @__PURE__ */ React__namespace.createElement(ErrorBoundary, errorBoundaryProps, /* @__PURE__ */ React__namespace.createElement(Component, props));
        };
        var name = Component.displayName || Component.name || "Unknown";
        Wrapped.displayName = "withErrorBoundary(" + name + ")";
        return Wrapped;
      }
      function useErrorHandler(givenError) {
        var _React$useState = React__namespace.useState(null), error = _React$useState[0], setError = _React$useState[1];
        if (givenError != null)
          throw givenError;
        if (error != null)
          throw error;
        return setError;
      }
      exports2.ErrorBoundary = ErrorBoundary;
      exports2.useErrorHandler = useErrorHandler;
      exports2.withErrorBoundary = withErrorBoundary;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// src/index.tsx
var import_react22 = __toESM(require_react());
var import_client4 = __toESM(require_client());

// src/multiplayer/multiplayer.tsx
var React62 = __toESM(require_react());

// ../../packages/tldraw/dist/index.mjs
var ge2 = __toESM(require_react(), 1);

// ../../node_modules/mobx/dist/mobx.esm.js
function die(error) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  if (false) {
    var e13 = typeof error === "string" ? error : errors[error];
    if (typeof e13 === "function")
      e13 = e13.apply(null, args);
    throw new Error("[MobX] " + e13);
  }
  throw new Error(typeof error === "number" ? "[MobX] minified error nr: " + error + (args.length ? " " + args.map(String).join(",") : "") + ". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts" : "[MobX] " + error);
}
var mockGlobal = {};
function getGlobal() {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  return mockGlobal;
}
var assign = Object.assign;
var getDescriptor = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var objectPrototype = Object.prototype;
var EMPTY_ARRAY = [];
Object.freeze(EMPTY_ARRAY);
var EMPTY_OBJECT = {};
Object.freeze(EMPTY_OBJECT);
var hasProxy = typeof Proxy !== "undefined";
var plainObjectString = /* @__PURE__ */ Object.toString();
function assertProxies() {
  if (!hasProxy) {
    die(false ? "`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`" : "Proxy not available");
  }
}
function once(func) {
  var invoked = false;
  return function() {
    if (invoked)
      return;
    invoked = true;
    return func.apply(this, arguments);
  };
}
var noop = function noop2() {
};
function isFunction(fn) {
  return typeof fn === "function";
}
function isStringish(value) {
  var t12 = typeof value;
  switch (t12) {
    case "string":
    case "symbol":
    case "number":
      return true;
  }
  return false;
}
function isObject(value) {
  return value !== null && typeof value === "object";
}
function isPlainObject(value) {
  if (!isObject(value))
    return false;
  var proto = Object.getPrototypeOf(value);
  if (proto == null)
    return true;
  var protoConstructor = Object.hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof protoConstructor === "function" && protoConstructor.toString() === plainObjectString;
}
function isGenerator(obj) {
  var constructor = obj == null ? void 0 : obj.constructor;
  if (!constructor)
    return false;
  if (constructor.name === "GeneratorFunction" || constructor.displayName === "GeneratorFunction")
    return true;
  return false;
}
function addHiddenProp(object2, propName, value) {
  defineProperty(object2, propName, {
    enumerable: false,
    writable: true,
    configurable: true,
    value
  });
}
function addHiddenFinalProp(object2, propName, value) {
  defineProperty(object2, propName, {
    enumerable: false,
    writable: false,
    configurable: true,
    value
  });
}
function createInstanceofPredicate(name, theClass) {
  var propName = "isMobX" + name;
  theClass.prototype[propName] = true;
  return function(x10) {
    return isObject(x10) && x10[propName] === true;
  };
}
function isES6Map(thing) {
  return thing instanceof Map;
}
function isES6Set(thing) {
  return thing instanceof Set;
}
var hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== "undefined";
function getPlainObjectKeys(object2) {
  var keys = Object.keys(object2);
  if (!hasGetOwnPropertySymbols)
    return keys;
  var symbols = Object.getOwnPropertySymbols(object2);
  if (!symbols.length)
    return keys;
  return [].concat(keys, symbols.filter(function(s10) {
    return objectPrototype.propertyIsEnumerable.call(object2, s10);
  }));
}
var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : hasGetOwnPropertySymbols ? function(obj) {
  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));
} : Object.getOwnPropertyNames;
function toPrimitive(value) {
  return value === null ? null : typeof value === "object" ? "" + value : value;
}
function hasProp(target, prop) {
  return objectPrototype.hasOwnProperty.call(target, prop);
}
var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors2(target) {
  var res = {};
  ownKeys(target).forEach(function(key) {
    res[key] = getDescriptor(target, key);
  });
  return res;
};
function _defineProperties(target, props) {
  for (var i10 = 0; i10 < props.length; i10++) {
    var descriptor = props[i10];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i10 = 1; i10 < arguments.length; i10++) {
      var source = arguments[i10];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o10, p10) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o11, p11) {
    o11.__proto__ = p11;
    return o11;
  };
  return _setPrototypeOf(o10, p10);
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _unsupportedIterableToArray(o10, minLen) {
  if (!o10)
    return;
  if (typeof o10 === "string")
    return _arrayLikeToArray(o10, minLen);
  var n10 = Object.prototype.toString.call(o10).slice(8, -1);
  if (n10 === "Object" && o10.constructor)
    n10 = o10.constructor.name;
  if (n10 === "Map" || n10 === "Set")
    return Array.from(o10);
  if (n10 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n10))
    return _arrayLikeToArray(o10, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i10 = 0, arr2 = new Array(len); i10 < len; i10++)
    arr2[i10] = arr[i10];
  return arr2;
}
function _createForOfIteratorHelperLoose(o10, allowArrayLike) {
  var it2 = typeof Symbol !== "undefined" && o10[Symbol.iterator] || o10["@@iterator"];
  if (it2)
    return (it2 = it2.call(o10)).next.bind(it2);
  if (Array.isArray(o10) || (it2 = _unsupportedIterableToArray(o10)) || allowArrayLike && o10 && typeof o10.length === "number") {
    if (it2)
      o10 = it2;
    var i10 = 0;
    return function() {
      if (i10 >= o10.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o10[i10++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var storedAnnotationsSymbol = /* @__PURE__ */ Symbol("mobx-stored-annotations");
function createDecoratorAnnotation(annotation) {
  function decorator(target, property) {
    storeAnnotation(target, property, annotation);
  }
  return Object.assign(decorator, annotation);
}
function storeAnnotation(prototype, key, annotation) {
  if (!hasProp(prototype, storedAnnotationsSymbol)) {
    addHiddenProp(prototype, storedAnnotationsSymbol, _extends({}, prototype[storedAnnotationsSymbol]));
  }
  if (false) {
    var fieldName = prototype.constructor.name + ".prototype." + key.toString();
    die("'" + fieldName + "' is decorated with 'override', but no such decorated member was found on prototype.");
  }
  assertNotDecorated(prototype, annotation, key);
  if (!isOverride(annotation)) {
    prototype[storedAnnotationsSymbol][key] = annotation;
  }
}
function assertNotDecorated(prototype, annotation, key) {
  if (false) {
    var fieldName = prototype.constructor.name + ".prototype." + key.toString();
    var currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_;
    var requestedAnnotationType = annotation.annotationType_;
    die("Cannot apply '@" + requestedAnnotationType + "' to '" + fieldName + "':" + ("\nThe field is already decorated with '@" + currentAnnotationType + "'.") + "\nRe-decorating fields is not allowed.\nUse '@override' decorator for methods overriden by subclass.");
  }
}
function collectStoredAnnotations(target) {
  if (!hasProp(target, storedAnnotationsSymbol)) {
    if (false) {
      die("No annotations were passed to makeObservable, but no decorated members have been found either");
    }
    addHiddenProp(target, storedAnnotationsSymbol, _extends({}, target[storedAnnotationsSymbol]));
  }
  return target[storedAnnotationsSymbol];
}
var $mobx = /* @__PURE__ */ Symbol("mobx administration");
var Atom = /* @__PURE__ */ function() {
  function Atom2(name_) {
    if (name_ === void 0) {
      name_ = false ? "Atom@" + getNextId() : "Atom";
    }
    this.name_ = void 0;
    this.isPendingUnobservation_ = false;
    this.isBeingObserved_ = false;
    this.observers_ = /* @__PURE__ */ new Set();
    this.diffValue_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.NOT_TRACKING_;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    this.name_ = name_;
  }
  var _proto = Atom2.prototype;
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.reportObserved = function reportObserved$1() {
    return reportObserved(this);
  };
  _proto.reportChanged = function reportChanged() {
    startBatch();
    propagateChanged(this);
    endBatch();
  };
  _proto.toString = function toString2() {
    return this.name_;
  };
  return Atom2;
}();
var isAtom = /* @__PURE__ */ createInstanceofPredicate("Atom", Atom);
function createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
  if (onBecomeObservedHandler === void 0) {
    onBecomeObservedHandler = noop;
  }
  if (onBecomeUnobservedHandler === void 0) {
    onBecomeUnobservedHandler = noop;
  }
  var atom = new Atom(name);
  if (onBecomeObservedHandler !== noop) {
    onBecomeObserved(atom, onBecomeObservedHandler);
  }
  if (onBecomeUnobservedHandler !== noop) {
    onBecomeUnobserved(atom, onBecomeUnobservedHandler);
  }
  return atom;
}
function identityComparer(a10, b10) {
  return a10 === b10;
}
function structuralComparer(a10, b10) {
  return deepEqual(a10, b10);
}
function shallowComparer(a10, b10) {
  return deepEqual(a10, b10, 1);
}
function defaultComparer(a10, b10) {
  if (Object.is)
    return Object.is(a10, b10);
  return a10 === b10 ? a10 !== 0 || 1 / a10 === 1 / b10 : a10 !== a10 && b10 !== b10;
}
var comparer = {
  identity: identityComparer,
  structural: structuralComparer,
  "default": defaultComparer,
  shallow: shallowComparer
};
function deepEnhancer(v10, _10, name) {
  if (isObservable(v10))
    return v10;
  if (Array.isArray(v10))
    return observable.array(v10, {
      name
    });
  if (isPlainObject(v10))
    return observable.object(v10, void 0, {
      name
    });
  if (isES6Map(v10))
    return observable.map(v10, {
      name
    });
  if (isES6Set(v10))
    return observable.set(v10, {
      name
    });
  if (typeof v10 === "function" && !isAction(v10) && !isFlow(v10)) {
    if (isGenerator(v10)) {
      return flow(v10);
    } else {
      return autoAction(name, v10);
    }
  }
  return v10;
}
function shallowEnhancer(v10, _10, name) {
  if (v10 === void 0 || v10 === null)
    return v10;
  if (isObservableObject(v10) || isObservableArray(v10) || isObservableMap(v10) || isObservableSet(v10))
    return v10;
  if (Array.isArray(v10))
    return observable.array(v10, {
      name,
      deep: false
    });
  if (isPlainObject(v10))
    return observable.object(v10, void 0, {
      name,
      deep: false
    });
  if (isES6Map(v10))
    return observable.map(v10, {
      name,
      deep: false
    });
  if (isES6Set(v10))
    return observable.set(v10, {
      name,
      deep: false
    });
  if (false)
    die("The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets");
}
function referenceEnhancer(newValue) {
  return newValue;
}
function refStructEnhancer(v10, oldValue) {
  if (false)
    die("observable.struct should not be used with observable values");
  if (deepEqual(v10, oldValue))
    return oldValue;
  return v10;
}
var OVERRIDE = "override";
function isOverride(annotation) {
  return annotation.annotationType_ === OVERRIDE;
}
function createActionAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$1,
    extend_: extend_$1
  };
}
function make_$1(adm, key, descriptor, source) {
  var _this$options_;
  if ((_this$options_ = this.options_) != null && _this$options_.bound) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
  }
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 2;
  }
  if (isAction(descriptor.value)) {
    return 1;
  }
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false);
  defineProperty(source, key, actionDescriptor);
  return 2;
}
function extend_$1(adm, key, descriptor, proxyTrap) {
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor);
  return adm.defineProperty_(key, actionDescriptor, proxyTrap);
}
function assertActionDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;
  if (false) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on properties with a function value."));
  }
}
function createActionDescriptor(adm, annotation, key, descriptor, safeDescriptors) {
  var _annotation$options_, _annotation$options_$, _annotation$options_2, _annotation$options_$2, _annotation$options_3, _annotation$options_4, _adm$proxy_2;
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertActionDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  if ((_annotation$options_ = annotation.options_) != null && _annotation$options_.bound) {
    var _adm$proxy_;
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return {
    value: createAction((_annotation$options_$ = (_annotation$options_2 = annotation.options_) == null ? void 0 : _annotation$options_2.name) != null ? _annotation$options_$ : key.toString(), value, (_annotation$options_$2 = (_annotation$options_3 = annotation.options_) == null ? void 0 : _annotation$options_3.autoAction) != null ? _annotation$options_$2 : false, (_annotation$options_4 = annotation.options_) != null && _annotation$options_4.bound ? (_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_ : void 0),
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    enumerable: false,
    writable: safeDescriptors ? false : true
  };
}
function createFlowAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$2,
    extend_: extend_$2
  };
}
function make_$2(adm, key, descriptor, source) {
  var _this$options_;
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 2;
  }
  if ((_this$options_ = this.options_) != null && _this$options_.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {
    if (this.extend_(adm, key, descriptor, false) === null)
      return 0;
  }
  if (isFlow(descriptor.value)) {
    return 1;
  }
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false);
  defineProperty(source, key, flowDescriptor);
  return 2;
}
function extend_$2(adm, key, descriptor, proxyTrap) {
  var _this$options_2;
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, (_this$options_2 = this.options_) == null ? void 0 : _this$options_2.bound);
  return adm.defineProperty_(key, flowDescriptor, proxyTrap);
}
function assertFlowDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;
  if (false) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on properties with a generator function value."));
  }
}
function createFlowDescriptor(adm, annotation, key, descriptor, bound, safeDescriptors) {
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertFlowDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  if (!isFlow(value)) {
    value = flow(value);
  }
  if (bound) {
    var _adm$proxy_;
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
    value.isMobXFlow = true;
  }
  return {
    value,
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    enumerable: false,
    writable: safeDescriptors ? false : true
  };
}
function createComputedAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$3,
    extend_: extend_$3
  };
}
function make_$3(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
}
function extend_$3(adm, key, descriptor, proxyTrap) {
  assertComputedDescriptor(adm, this, key, descriptor);
  return adm.defineComputedProperty_(key, _extends({}, this.options_, {
    get: descriptor.get,
    set: descriptor.set
  }), proxyTrap);
}
function assertComputedDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var get4 = _ref2.get;
  if (false) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on getter(+setter) properties."));
  }
}
function createObservableAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$4,
    extend_: extend_$4
  };
}
function make_$4(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
}
function extend_$4(adm, key, descriptor, proxyTrap) {
  var _this$options_$enhanc, _this$options_;
  assertObservableDescriptor(adm, this, key, descriptor);
  return adm.defineObservableProperty_(key, descriptor.value, (_this$options_$enhanc = (_this$options_ = this.options_) == null ? void 0 : _this$options_.enhancer) != null ? _this$options_$enhanc : deepEnhancer, proxyTrap);
}
function assertObservableDescriptor(adm, _ref, key, descriptor) {
  var annotationType_ = _ref.annotationType_;
  if (false) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' cannot be used on getter/setter properties"));
  }
}
var AUTO = "true";
var autoAnnotation = /* @__PURE__ */ createAutoAnnotation();
function createAutoAnnotation(options) {
  return {
    annotationType_: AUTO,
    options_: options,
    make_: make_$5,
    extend_: extend_$5
  };
}
function make_$5(adm, key, descriptor, source) {
  var _this$options_3, _this$options_4;
  if (descriptor.get) {
    return computed.make_(adm, key, descriptor, source);
  }
  if (descriptor.set) {
    var set5 = createAction(key.toString(), descriptor.set);
    if (source === adm.target_) {
      return adm.defineProperty_(key, {
        configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
        set: set5
      }) === null ? 0 : 2;
    }
    defineProperty(source, key, {
      configurable: true,
      set: set5
    });
    return 2;
  }
  if (source !== adm.target_ && typeof descriptor.value === "function") {
    var _this$options_2;
    if (isGenerator(descriptor.value)) {
      var _this$options_;
      var flowAnnotation2 = (_this$options_ = this.options_) != null && _this$options_.autoBind ? flow.bound : flow;
      return flowAnnotation2.make_(adm, key, descriptor, source);
    }
    var actionAnnotation2 = (_this$options_2 = this.options_) != null && _this$options_2.autoBind ? autoAction.bound : autoAction;
    return actionAnnotation2.make_(adm, key, descriptor, source);
  }
  var observableAnnotation2 = ((_this$options_3 = this.options_) == null ? void 0 : _this$options_3.deep) === false ? observable.ref : observable;
  if (typeof descriptor.value === "function" && (_this$options_4 = this.options_) != null && _this$options_4.autoBind) {
    var _adm$proxy_;
    descriptor.value = descriptor.value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return observableAnnotation2.make_(adm, key, descriptor, source);
}
function extend_$5(adm, key, descriptor, proxyTrap) {
  var _this$options_5, _this$options_6;
  if (descriptor.get) {
    return computed.extend_(adm, key, descriptor, proxyTrap);
  }
  if (descriptor.set) {
    return adm.defineProperty_(key, {
      configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
      set: createAction(key.toString(), descriptor.set)
    }, proxyTrap);
  }
  if (typeof descriptor.value === "function" && (_this$options_5 = this.options_) != null && _this$options_5.autoBind) {
    var _adm$proxy_2;
    descriptor.value = descriptor.value.bind((_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_);
  }
  var observableAnnotation2 = ((_this$options_6 = this.options_) == null ? void 0 : _this$options_6.deep) === false ? observable.ref : observable;
  return observableAnnotation2.extend_(adm, key, descriptor, proxyTrap);
}
var OBSERVABLE = "observable";
var OBSERVABLE_REF = "observable.ref";
var OBSERVABLE_SHALLOW = "observable.shallow";
var OBSERVABLE_STRUCT = "observable.struct";
var defaultCreateObservableOptions = {
  deep: true,
  name: void 0,
  defaultDecorator: void 0,
  proxy: true
};
Object.freeze(defaultCreateObservableOptions);
function asCreateObservableOptions(thing) {
  return thing || defaultCreateObservableOptions;
}
var observableAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE);
var observableRefAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_REF, {
  enhancer: referenceEnhancer
});
var observableShallowAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_SHALLOW, {
  enhancer: shallowEnhancer
});
var observableStructAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_STRUCT, {
  enhancer: refStructEnhancer
});
var observableDecoratorAnnotation = /* @__PURE__ */ createDecoratorAnnotation(observableAnnotation);
function getEnhancerFromOptions(options) {
  return options.deep === true ? deepEnhancer : options.deep === false ? referenceEnhancer : getEnhancerFromAnnotation(options.defaultDecorator);
}
function getAnnotationFromOptions(options) {
  var _options$defaultDecor;
  return options ? (_options$defaultDecor = options.defaultDecorator) != null ? _options$defaultDecor : createAutoAnnotation(options) : void 0;
}
function getEnhancerFromAnnotation(annotation) {
  var _annotation$options_$, _annotation$options_;
  return !annotation ? deepEnhancer : (_annotation$options_$ = (_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.enhancer) != null ? _annotation$options_$ : deepEnhancer;
}
function createObservable(v10, arg2, arg3) {
  if (isStringish(arg2)) {
    storeAnnotation(v10, arg2, observableAnnotation);
    return;
  }
  if (isObservable(v10))
    return v10;
  if (isPlainObject(v10))
    return observable.object(v10, arg2, arg3);
  if (Array.isArray(v10))
    return observable.array(v10, arg2);
  if (isES6Map(v10))
    return observable.map(v10, arg2);
  if (isES6Set(v10))
    return observable.set(v10, arg2);
  if (typeof v10 === "object" && v10 !== null)
    return v10;
  return observable.box(v10, arg2);
}
Object.assign(createObservable, observableDecoratorAnnotation);
var observableFactories = {
  box: function box(value, options) {
    var o10 = asCreateObservableOptions(options);
    return new ObservableValue(value, getEnhancerFromOptions(o10), o10.name, true, o10.equals);
  },
  array: function array(initialValues, options) {
    var o10 = asCreateObservableOptions(options);
    return (globalState.useProxies === false || o10.proxy === false ? createLegacyArray : createObservableArray)(initialValues, getEnhancerFromOptions(o10), o10.name);
  },
  map: function map(initialValues, options) {
    var o10 = asCreateObservableOptions(options);
    return new ObservableMap(initialValues, getEnhancerFromOptions(o10), o10.name);
  },
  set: function set(initialValues, options) {
    var o10 = asCreateObservableOptions(options);
    return new ObservableSet(initialValues, getEnhancerFromOptions(o10), o10.name);
  },
  object: function object(props, decorators, options) {
    return extendObservable(globalState.useProxies === false || (options == null ? void 0 : options.proxy) === false ? asObservableObject({}, options) : asDynamicObservableObject({}, options), props, decorators);
  },
  ref: /* @__PURE__ */ createDecoratorAnnotation(observableRefAnnotation),
  shallow: /* @__PURE__ */ createDecoratorAnnotation(observableShallowAnnotation),
  deep: observableDecoratorAnnotation,
  struct: /* @__PURE__ */ createDecoratorAnnotation(observableStructAnnotation)
};
var observable = /* @__PURE__ */ assign(createObservable, observableFactories);
var COMPUTED = "computed";
var COMPUTED_STRUCT = "computed.struct";
var computedAnnotation = /* @__PURE__ */ createComputedAnnotation(COMPUTED);
var computedStructAnnotation = /* @__PURE__ */ createComputedAnnotation(COMPUTED_STRUCT, {
  equals: comparer.structural
});
var computed = function computed2(arg1, arg2) {
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, computedAnnotation);
  }
  if (isPlainObject(arg1)) {
    return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1));
  }
  if (false) {
    if (!isFunction(arg1))
      die("First argument to `computed` should be an expression.");
    if (isFunction(arg2))
      die("A setter as second argument is no longer supported, use `{ set: fn }` option instead");
  }
  var opts = isPlainObject(arg2) ? arg2 : {};
  opts.get = arg1;
  opts.name || (opts.name = arg1.name || "");
  return new ComputedValue(opts);
};
Object.assign(computed, computedAnnotation);
computed.struct = /* @__PURE__ */ createDecoratorAnnotation(computedStructAnnotation);
var _getDescriptor$config;
var _getDescriptor;
var currentActionId = 0;
var nextActionId = 1;
var isFunctionNameConfigurable = (_getDescriptor$config = (_getDescriptor = /* @__PURE__ */ getDescriptor(function() {
}, "name")) == null ? void 0 : _getDescriptor.configurable) != null ? _getDescriptor$config : false;
var tmpNameDescriptor = {
  value: "action",
  configurable: true,
  writable: false,
  enumerable: false
};
function createAction(actionName, fn, autoAction2, ref) {
  if (autoAction2 === void 0) {
    autoAction2 = false;
  }
  if (false) {
    if (!isFunction(fn))
      die("`action` can only be invoked on functions");
    if (typeof actionName !== "string" || !actionName)
      die("actions should have valid names, got: '" + actionName + "'");
  }
  function res() {
    return executeAction(actionName, autoAction2, fn, ref || this, arguments);
  }
  res.isMobxAction = true;
  if (isFunctionNameConfigurable) {
    tmpNameDescriptor.value = actionName;
    Object.defineProperty(res, "name", tmpNameDescriptor);
  }
  return res;
}
function executeAction(actionName, canRunAsDerivation, fn, scope, args) {
  var runInfo = _startAction(actionName, canRunAsDerivation, scope, args);
  try {
    return fn.apply(scope, args);
  } catch (err) {
    runInfo.error_ = err;
    throw err;
  } finally {
    _endAction(runInfo);
  }
}
function _startAction(actionName, canRunAsDerivation, scope, args) {
  var notifySpy_ = false;
  var startTime_ = 0;
  if (false) {
    startTime_ = Date.now();
    var flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY;
    spyReportStart({
      type: ACTION,
      name: actionName,
      object: scope,
      arguments: flattenedArgs
    });
  }
  var prevDerivation_ = globalState.trackingDerivation;
  var runAsAction = !canRunAsDerivation || !prevDerivation_;
  startBatch();
  var prevAllowStateChanges_ = globalState.allowStateChanges;
  if (runAsAction) {
    untrackedStart();
    prevAllowStateChanges_ = allowStateChangesStart(true);
  }
  var prevAllowStateReads_ = allowStateReadsStart(true);
  var runInfo = {
    runAsAction_: runAsAction,
    prevDerivation_,
    prevAllowStateChanges_,
    prevAllowStateReads_,
    notifySpy_,
    startTime_,
    actionId_: nextActionId++,
    parentActionId_: currentActionId
  };
  currentActionId = runInfo.actionId_;
  return runInfo;
}
function _endAction(runInfo) {
  if (currentActionId !== runInfo.actionId_) {
    die(30);
  }
  currentActionId = runInfo.parentActionId_;
  if (runInfo.error_ !== void 0) {
    globalState.suppressReactionErrors = true;
  }
  allowStateChangesEnd(runInfo.prevAllowStateChanges_);
  allowStateReadsEnd(runInfo.prevAllowStateReads_);
  endBatch();
  if (runInfo.runAsAction_)
    untrackedEnd(runInfo.prevDerivation_);
  if (false) {
    spyReportEnd({
      time: Date.now() - runInfo.startTime_
    });
  }
  globalState.suppressReactionErrors = false;
}
function allowStateChanges(allowStateChanges2, func) {
  var prev = allowStateChangesStart(allowStateChanges2);
  try {
    return func();
  } finally {
    allowStateChangesEnd(prev);
  }
}
function allowStateChangesStart(allowStateChanges2) {
  var prev = globalState.allowStateChanges;
  globalState.allowStateChanges = allowStateChanges2;
  return prev;
}
function allowStateChangesEnd(prev) {
  globalState.allowStateChanges = prev;
}
var _Symbol$toPrimitive;
_Symbol$toPrimitive = Symbol.toPrimitive;
var ObservableValue = /* @__PURE__ */ function(_Atom, _Symbol$toPrimitive2) {
  _inheritsLoose(ObservableValue2, _Atom);
  function ObservableValue2(value, enhancer, name_, notifySpy, equals) {
    var _this;
    if (name_ === void 0) {
      name_ = false ? "ObservableValue@" + getNextId() : "ObservableValue";
    }
    if (notifySpy === void 0) {
      notifySpy = true;
    }
    if (equals === void 0) {
      equals = comparer["default"];
    }
    _this = _Atom.call(this, name_) || this;
    _this.enhancer = void 0;
    _this.name_ = void 0;
    _this.equals = void 0;
    _this.hasUnreportedChange_ = false;
    _this.interceptors_ = void 0;
    _this.changeListeners_ = void 0;
    _this.value_ = void 0;
    _this.dehancer = void 0;
    _this.enhancer = enhancer;
    _this.name_ = name_;
    _this.equals = equals;
    _this.value_ = enhancer(value, void 0, name_);
    if (false) {
      spyReport({
        type: CREATE,
        object: _assertThisInitialized(_this),
        observableKind: "value",
        debugObjectName: _this.name_,
        newValue: "" + _this.value_
      });
    }
    return _this;
  }
  var _proto = ObservableValue2.prototype;
  _proto.dehanceValue = function dehanceValue(value) {
    if (this.dehancer !== void 0)
      return this.dehancer(value);
    return value;
  };
  _proto.set = function set5(newValue) {
    var oldValue = this.value_;
    newValue = this.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      if (false) {
        spyReportStart({
          type: UPDATE,
          object: this,
          observableKind: "value",
          debugObjectName: this.name_,
          newValue,
          oldValue
        });
      }
      this.setNewValue_(newValue);
      if (false)
        spyReportEnd();
    }
  };
  _proto.prepareNewValue_ = function prepareNewValue_(newValue) {
    checkIfStateModificationsAreAllowed(this);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this,
        type: UPDATE,
        newValue
      });
      if (!change)
        return globalState.UNCHANGED;
      newValue = change.newValue;
    }
    newValue = this.enhancer(newValue, this.value_, this.name_);
    return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue;
  };
  _proto.setNewValue_ = function setNewValue_(newValue) {
    var oldValue = this.value_;
    this.value_ = newValue;
    this.reportChanged();
    if (hasListeners(this)) {
      notifyListeners(this, {
        type: UPDATE,
        object: this,
        newValue,
        oldValue
      });
    }
  };
  _proto.get = function get4() {
    this.reportObserved();
    return this.dehanceValue(this.value_);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately)
      listener({
        observableKind: "value",
        debugObjectName: this.name_,
        object: this,
        type: UPDATE,
        newValue: this.value_,
        oldValue: void 0
      });
    return registerListener(this, listener);
  };
  _proto.raw = function raw() {
    return this.value_;
  };
  _proto.toJSON = function toJSON2() {
    return this.get();
  };
  _proto.toString = function toString2() {
    return this.name_ + "[" + this.value_ + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[_Symbol$toPrimitive2] = function() {
    return this.valueOf();
  };
  return ObservableValue2;
}(Atom, _Symbol$toPrimitive);
var _Symbol$toPrimitive$1;
_Symbol$toPrimitive$1 = Symbol.toPrimitive;
var ComputedValue = /* @__PURE__ */ function(_Symbol$toPrimitive2) {
  function ComputedValue2(options) {
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.observing_ = [];
    this.newObserving_ = null;
    this.isBeingObserved_ = false;
    this.isPendingUnobservation_ = false;
    this.observers_ = /* @__PURE__ */ new Set();
    this.diffValue_ = 0;
    this.runId_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    this.unboundDepsCount_ = 0;
    this.value_ = new CaughtException(null);
    this.name_ = void 0;
    this.triggeredBy_ = void 0;
    this.isComputing_ = false;
    this.isRunningSetter_ = false;
    this.derivation = void 0;
    this.setter_ = void 0;
    this.isTracing_ = TraceMode.NONE;
    this.scope_ = void 0;
    this.equals_ = void 0;
    this.requiresReaction_ = void 0;
    this.keepAlive_ = void 0;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    if (!options.get)
      die(31);
    this.derivation = options.get;
    this.name_ = options.name || (false ? "ComputedValue@" + getNextId() : "ComputedValue");
    if (options.set) {
      this.setter_ = createAction(false ? this.name_ + "-setter" : "ComputedValue-setter", options.set);
    }
    this.equals_ = options.equals || (options.compareStructural || options.struct ? comparer.structural : comparer["default"]);
    this.scope_ = options.context;
    this.requiresReaction_ = options.requiresReaction;
    this.keepAlive_ = !!options.keepAlive;
  }
  var _proto = ComputedValue2.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    propagateMaybeChanged(this);
  };
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.get = function get4() {
    if (this.isComputing_)
      die(32, this.name_, this.derivation);
    if (globalState.inBatch === 0 && this.observers_.size === 0 && !this.keepAlive_) {
      if (shouldCompute(this)) {
        this.warnAboutUntrackedRead_();
        startBatch();
        this.value_ = this.computeValue_(false);
        endBatch();
      }
    } else {
      reportObserved(this);
      if (shouldCompute(this)) {
        var prevTrackingContext = globalState.trackingContext;
        if (this.keepAlive_ && !prevTrackingContext)
          globalState.trackingContext = this;
        if (this.trackAndCompute())
          propagateChangeConfirmed(this);
        globalState.trackingContext = prevTrackingContext;
      }
    }
    var result = this.value_;
    if (isCaughtException(result))
      throw result.cause;
    return result;
  };
  _proto.set = function set5(value) {
    if (this.setter_) {
      if (this.isRunningSetter_)
        die(33, this.name_);
      this.isRunningSetter_ = true;
      try {
        this.setter_.call(this.scope_, value);
      } finally {
        this.isRunningSetter_ = false;
      }
    } else
      die(34, this.name_);
  };
  _proto.trackAndCompute = function trackAndCompute() {
    var oldValue = this.value_;
    var wasSuspended = this.dependenciesState_ === IDerivationState_.NOT_TRACKING_;
    var newValue = this.computeValue_(true);
    var changed = wasSuspended || isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals_(oldValue, newValue);
    if (changed) {
      this.value_ = newValue;
      if (false) {
        spyReport({
          observableKind: "computed",
          debugObjectName: this.name_,
          object: this.scope_,
          type: "update",
          oldValue,
          newValue
        });
      }
    }
    return changed;
  };
  _proto.computeValue_ = function computeValue_(track) {
    this.isComputing_ = true;
    var prev = allowStateChangesStart(false);
    var res;
    if (track) {
      res = trackDerivedFunction(this, this.derivation, this.scope_);
    } else {
      if (globalState.disableErrorBoundaries === true) {
        res = this.derivation.call(this.scope_);
      } else {
        try {
          res = this.derivation.call(this.scope_);
        } catch (e13) {
          res = new CaughtException(e13);
        }
      }
    }
    allowStateChangesEnd(prev);
    this.isComputing_ = false;
    return res;
  };
  _proto.suspend_ = function suspend_() {
    if (!this.keepAlive_) {
      clearObserving(this);
      this.value_ = void 0;
      if (false) {
        console.log("[mobx.trace] Computed value '" + this.name_ + "' was suspended and it will recompute on the next access.");
      }
    }
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    var _this = this;
    var firstTime = true;
    var prevValue = void 0;
    return autorun(function() {
      var newValue = _this.get();
      if (!firstTime || fireImmediately) {
        var prevU = untrackedStart();
        listener({
          observableKind: "computed",
          debugObjectName: _this.name_,
          type: UPDATE,
          object: _this,
          newValue,
          oldValue: prevValue
        });
        untrackedEnd(prevU);
      }
      firstTime = false;
      prevValue = newValue;
    });
  };
  _proto.warnAboutUntrackedRead_ = function warnAboutUntrackedRead_() {
    if (true)
      return;
    if (this.isTracing_ !== TraceMode.NONE) {
      console.log("[mobx.trace] Computed value '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute.");
    }
    if (typeof this.requiresReaction_ === "boolean" ? this.requiresReaction_ : globalState.computedRequiresReaction) {
      console.warn("[mobx] Computed value '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute.");
    }
  };
  _proto.toString = function toString2() {
    return this.name_ + "[" + this.derivation.toString() + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[_Symbol$toPrimitive2] = function() {
    return this.valueOf();
  };
  return ComputedValue2;
}(_Symbol$toPrimitive$1);
var isComputedValue = /* @__PURE__ */ createInstanceofPredicate("ComputedValue", ComputedValue);
var IDerivationState_;
(function(IDerivationState_2) {
  IDerivationState_2[IDerivationState_2["NOT_TRACKING_"] = -1] = "NOT_TRACKING_";
  IDerivationState_2[IDerivationState_2["UP_TO_DATE_"] = 0] = "UP_TO_DATE_";
  IDerivationState_2[IDerivationState_2["POSSIBLY_STALE_"] = 1] = "POSSIBLY_STALE_";
  IDerivationState_2[IDerivationState_2["STALE_"] = 2] = "STALE_";
})(IDerivationState_ || (IDerivationState_ = {}));
var TraceMode;
(function(TraceMode2) {
  TraceMode2[TraceMode2["NONE"] = 0] = "NONE";
  TraceMode2[TraceMode2["LOG"] = 1] = "LOG";
  TraceMode2[TraceMode2["BREAK"] = 2] = "BREAK";
})(TraceMode || (TraceMode = {}));
var CaughtException = function CaughtException2(cause) {
  this.cause = void 0;
  this.cause = cause;
};
function isCaughtException(e13) {
  return e13 instanceof CaughtException;
}
function shouldCompute(derivation) {
  switch (derivation.dependenciesState_) {
    case IDerivationState_.UP_TO_DATE_:
      return false;
    case IDerivationState_.NOT_TRACKING_:
    case IDerivationState_.STALE_:
      return true;
    case IDerivationState_.POSSIBLY_STALE_: {
      var prevAllowStateReads = allowStateReadsStart(true);
      var prevUntracked = untrackedStart();
      var obs = derivation.observing_, l10 = obs.length;
      for (var i10 = 0; i10 < l10; i10++) {
        var obj = obs[i10];
        if (isComputedValue(obj)) {
          if (globalState.disableErrorBoundaries) {
            obj.get();
          } else {
            try {
              obj.get();
            } catch (e13) {
              untrackedEnd(prevUntracked);
              allowStateReadsEnd(prevAllowStateReads);
              return true;
            }
          }
          if (derivation.dependenciesState_ === IDerivationState_.STALE_) {
            untrackedEnd(prevUntracked);
            allowStateReadsEnd(prevAllowStateReads);
            return true;
          }
        }
      }
      changeDependenciesStateTo0(derivation);
      untrackedEnd(prevUntracked);
      allowStateReadsEnd(prevAllowStateReads);
      return false;
    }
  }
}
function checkIfStateModificationsAreAllowed(atom) {
  if (true) {
    return;
  }
  var hasObservers = atom.observers_.size > 0;
  if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === "always"))
    console.warn("[MobX] " + (globalState.enforceActions ? "Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: " : "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: ") + atom.name_);
}
function checkIfStateReadsAreAllowed(observable2) {
  if (false) {
    console.warn("[mobx] Observable '" + observable2.name_ + "' being read outside a reactive context.");
  }
}
function trackDerivedFunction(derivation, f10, context) {
  var prevAllowStateReads = allowStateReadsStart(true);
  changeDependenciesStateTo0(derivation);
  derivation.newObserving_ = new Array(derivation.observing_.length + 100);
  derivation.unboundDepsCount_ = 0;
  derivation.runId_ = ++globalState.runId;
  var prevTracking = globalState.trackingDerivation;
  globalState.trackingDerivation = derivation;
  globalState.inBatch++;
  var result;
  if (globalState.disableErrorBoundaries === true) {
    result = f10.call(context);
  } else {
    try {
      result = f10.call(context);
    } catch (e13) {
      result = new CaughtException(e13);
    }
  }
  globalState.inBatch--;
  globalState.trackingDerivation = prevTracking;
  bindDependencies(derivation);
  warnAboutDerivationWithoutDependencies(derivation);
  allowStateReadsEnd(prevAllowStateReads);
  return result;
}
function warnAboutDerivationWithoutDependencies(derivation) {
  if (true)
    return;
  if (derivation.observing_.length !== 0)
    return;
  if (globalState.reactionRequiresObservable || derivation.requiresObservable_) {
    console.warn("[mobx] Derivation '" + derivation.name_ + "' is created/updated without reading any observable value.");
  }
}
function bindDependencies(derivation) {
  var prevObserving = derivation.observing_;
  var observing = derivation.observing_ = derivation.newObserving_;
  var lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_;
  var i02 = 0, l10 = derivation.unboundDepsCount_;
  for (var i10 = 0; i10 < l10; i10++) {
    var dep = observing[i10];
    if (dep.diffValue_ === 0) {
      dep.diffValue_ = 1;
      if (i02 !== i10)
        observing[i02] = dep;
      i02++;
    }
    if (dep.dependenciesState_ > lowestNewObservingDerivationState) {
      lowestNewObservingDerivationState = dep.dependenciesState_;
    }
  }
  observing.length = i02;
  derivation.newObserving_ = null;
  l10 = prevObserving.length;
  while (l10--) {
    var _dep = prevObserving[l10];
    if (_dep.diffValue_ === 0) {
      removeObserver(_dep, derivation);
    }
    _dep.diffValue_ = 0;
  }
  while (i02--) {
    var _dep2 = observing[i02];
    if (_dep2.diffValue_ === 1) {
      _dep2.diffValue_ = 0;
      addObserver(_dep2, derivation);
    }
  }
  if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {
    derivation.dependenciesState_ = lowestNewObservingDerivationState;
    derivation.onBecomeStale_();
  }
}
function clearObserving(derivation) {
  var obs = derivation.observing_;
  derivation.observing_ = [];
  var i10 = obs.length;
  while (i10--) {
    removeObserver(obs[i10], derivation);
  }
  derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
}
function untracked(action2) {
  var prev = untrackedStart();
  try {
    return action2();
  } finally {
    untrackedEnd(prev);
  }
}
function untrackedStart() {
  var prev = globalState.trackingDerivation;
  globalState.trackingDerivation = null;
  return prev;
}
function untrackedEnd(prev) {
  globalState.trackingDerivation = prev;
}
function allowStateReadsStart(allowStateReads) {
  var prev = globalState.allowStateReads;
  globalState.allowStateReads = allowStateReads;
  return prev;
}
function allowStateReadsEnd(prev) {
  globalState.allowStateReads = prev;
}
function changeDependenciesStateTo0(derivation) {
  if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_)
    return;
  derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_;
  var obs = derivation.observing_;
  var i10 = obs.length;
  while (i10--) {
    obs[i10].lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
  }
}
var MobXGlobals = function MobXGlobals2() {
  this.version = 6;
  this.UNCHANGED = {};
  this.trackingDerivation = null;
  this.trackingContext = null;
  this.runId = 0;
  this.mobxGuid = 0;
  this.inBatch = 0;
  this.pendingUnobservations = [];
  this.pendingReactions = [];
  this.isRunningReactions = false;
  this.allowStateChanges = false;
  this.allowStateReads = true;
  this.enforceActions = true;
  this.spyListeners = [];
  this.globalReactionErrorHandlers = [];
  this.computedRequiresReaction = false;
  this.reactionRequiresObservable = false;
  this.observableRequiresReaction = false;
  this.disableErrorBoundaries = false;
  this.suppressReactionErrors = false;
  this.useProxies = true;
  this.verifyProxies = false;
  this.safeDescriptors = true;
};
var canMergeGlobalState = true;
var isolateCalled = false;
var globalState = /* @__PURE__ */ function() {
  var global2 = /* @__PURE__ */ getGlobal();
  if (global2.__mobxInstanceCount > 0 && !global2.__mobxGlobals)
    canMergeGlobalState = false;
  if (global2.__mobxGlobals && global2.__mobxGlobals.version !== new MobXGlobals().version)
    canMergeGlobalState = false;
  if (!canMergeGlobalState) {
    setTimeout(function() {
      if (!isolateCalled) {
        die(35);
      }
    }, 1);
    return new MobXGlobals();
  } else if (global2.__mobxGlobals) {
    global2.__mobxInstanceCount += 1;
    if (!global2.__mobxGlobals.UNCHANGED)
      global2.__mobxGlobals.UNCHANGED = {};
    return global2.__mobxGlobals;
  } else {
    global2.__mobxInstanceCount = 1;
    return global2.__mobxGlobals = /* @__PURE__ */ new MobXGlobals();
  }
}();
function isolateGlobalState() {
  if (globalState.pendingReactions.length || globalState.inBatch || globalState.isRunningReactions)
    die(36);
  isolateCalled = true;
  if (canMergeGlobalState) {
    var global2 = getGlobal();
    if (--global2.__mobxInstanceCount === 0)
      global2.__mobxGlobals = void 0;
    globalState = new MobXGlobals();
  }
}
function addObserver(observable2, node) {
  observable2.observers_.add(node);
  if (observable2.lowestObserverState_ > node.dependenciesState_)
    observable2.lowestObserverState_ = node.dependenciesState_;
}
function removeObserver(observable2, node) {
  observable2.observers_["delete"](node);
  if (observable2.observers_.size === 0) {
    queueForUnobservation(observable2);
  }
}
function queueForUnobservation(observable2) {
  if (observable2.isPendingUnobservation_ === false) {
    observable2.isPendingUnobservation_ = true;
    globalState.pendingUnobservations.push(observable2);
  }
}
function startBatch() {
  globalState.inBatch++;
}
function endBatch() {
  if (--globalState.inBatch === 0) {
    runReactions();
    var list = globalState.pendingUnobservations;
    for (var i10 = 0; i10 < list.length; i10++) {
      var observable2 = list[i10];
      observable2.isPendingUnobservation_ = false;
      if (observable2.observers_.size === 0) {
        if (observable2.isBeingObserved_) {
          observable2.isBeingObserved_ = false;
          observable2.onBUO();
        }
        if (observable2 instanceof ComputedValue) {
          observable2.suspend_();
        }
      }
    }
    globalState.pendingUnobservations = [];
  }
}
function reportObserved(observable2) {
  checkIfStateReadsAreAllowed(observable2);
  var derivation = globalState.trackingDerivation;
  if (derivation !== null) {
    if (derivation.runId_ !== observable2.lastAccessedBy_) {
      observable2.lastAccessedBy_ = derivation.runId_;
      derivation.newObserving_[derivation.unboundDepsCount_++] = observable2;
      if (!observable2.isBeingObserved_ && globalState.trackingContext) {
        observable2.isBeingObserved_ = true;
        observable2.onBO();
      }
    }
    return true;
  } else if (observable2.observers_.size === 0 && globalState.inBatch > 0) {
    queueForUnobservation(observable2);
  }
  return false;
}
function propagateChanged(observable2) {
  if (observable2.lowestObserverState_ === IDerivationState_.STALE_)
    return;
  observable2.lowestObserverState_ = IDerivationState_.STALE_;
  observable2.observers_.forEach(function(d10) {
    if (d10.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      if (false) {
        logTraceInfo(d10, observable2);
      }
      d10.onBecomeStale_();
    }
    d10.dependenciesState_ = IDerivationState_.STALE_;
  });
}
function propagateChangeConfirmed(observable2) {
  if (observable2.lowestObserverState_ === IDerivationState_.STALE_)
    return;
  observable2.lowestObserverState_ = IDerivationState_.STALE_;
  observable2.observers_.forEach(function(d10) {
    if (d10.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {
      d10.dependenciesState_ = IDerivationState_.STALE_;
      if (false) {
        logTraceInfo(d10, observable2);
      }
    } else if (d10.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      observable2.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    }
  });
}
function propagateMaybeChanged(observable2) {
  if (observable2.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_)
    return;
  observable2.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_;
  observable2.observers_.forEach(function(d10) {
    if (d10.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      d10.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_;
      d10.onBecomeStale_();
    }
  });
}
var Reaction = /* @__PURE__ */ function() {
  function Reaction2(name_, onInvalidate_, errorHandler_, requiresObservable_) {
    if (name_ === void 0) {
      name_ = false ? "Reaction@" + getNextId() : "Reaction";
    }
    if (requiresObservable_ === void 0) {
      requiresObservable_ = false;
    }
    this.name_ = void 0;
    this.onInvalidate_ = void 0;
    this.errorHandler_ = void 0;
    this.requiresObservable_ = void 0;
    this.observing_ = [];
    this.newObserving_ = [];
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.diffValue_ = 0;
    this.runId_ = 0;
    this.unboundDepsCount_ = 0;
    this.isDisposed_ = false;
    this.isScheduled_ = false;
    this.isTrackPending_ = false;
    this.isRunning_ = false;
    this.isTracing_ = TraceMode.NONE;
    this.name_ = name_;
    this.onInvalidate_ = onInvalidate_;
    this.errorHandler_ = errorHandler_;
    this.requiresObservable_ = requiresObservable_;
  }
  var _proto = Reaction2.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    this.schedule_();
  };
  _proto.schedule_ = function schedule_() {
    if (!this.isScheduled_) {
      this.isScheduled_ = true;
      globalState.pendingReactions.push(this);
      runReactions();
    }
  };
  _proto.isScheduled = function isScheduled() {
    return this.isScheduled_;
  };
  _proto.runReaction_ = function runReaction_() {
    if (!this.isDisposed_) {
      startBatch();
      this.isScheduled_ = false;
      var prev = globalState.trackingContext;
      globalState.trackingContext = this;
      if (shouldCompute(this)) {
        this.isTrackPending_ = true;
        try {
          this.onInvalidate_();
          if (false) {
            spyReport({
              name: this.name_,
              type: "scheduled-reaction"
            });
          }
        } catch (e13) {
          this.reportExceptionInDerivation_(e13);
        }
      }
      globalState.trackingContext = prev;
      endBatch();
    }
  };
  _proto.track = function track(fn) {
    if (this.isDisposed_) {
      return;
    }
    startBatch();
    var notify = isSpyEnabled();
    var startTime;
    if (false) {
      startTime = Date.now();
      spyReportStart({
        name: this.name_,
        type: "reaction"
      });
    }
    this.isRunning_ = true;
    var prevReaction = globalState.trackingContext;
    globalState.trackingContext = this;
    var result = trackDerivedFunction(this, fn, void 0);
    globalState.trackingContext = prevReaction;
    this.isRunning_ = false;
    this.isTrackPending_ = false;
    if (this.isDisposed_) {
      clearObserving(this);
    }
    if (isCaughtException(result))
      this.reportExceptionInDerivation_(result.cause);
    if (false) {
      spyReportEnd({
        time: Date.now() - startTime
      });
    }
    endBatch();
  };
  _proto.reportExceptionInDerivation_ = function reportExceptionInDerivation_(error) {
    var _this = this;
    if (this.errorHandler_) {
      this.errorHandler_(error, this);
      return;
    }
    if (globalState.disableErrorBoundaries)
      throw error;
    var message = false ? "[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '" + this + "'" : "[mobx] uncaught error in '" + this + "'";
    if (!globalState.suppressReactionErrors) {
      console.error(message, error);
    } else if (false)
      console.warn("[mobx] (error in reaction '" + this.name_ + "' suppressed, fix error of causing action below)");
    if (false) {
      spyReport({
        type: "error",
        name: this.name_,
        message,
        error: "" + error
      });
    }
    globalState.globalReactionErrorHandlers.forEach(function(f10) {
      return f10(error, _this);
    });
  };
  _proto.dispose = function dispose() {
    if (!this.isDisposed_) {
      this.isDisposed_ = true;
      if (!this.isRunning_) {
        startBatch();
        clearObserving(this);
        endBatch();
      }
    }
  };
  _proto.getDisposer_ = function getDisposer_() {
    var r11 = this.dispose.bind(this);
    r11[$mobx] = this;
    return r11;
  };
  _proto.toString = function toString2() {
    return "Reaction[" + this.name_ + "]";
  };
  _proto.trace = function trace$1(enterBreakPoint) {
    if (enterBreakPoint === void 0) {
      enterBreakPoint = false;
    }
    trace(this, enterBreakPoint);
  };
  return Reaction2;
}();
var MAX_REACTION_ITERATIONS = 100;
var reactionScheduler = function reactionScheduler2(f10) {
  return f10();
};
function runReactions() {
  if (globalState.inBatch > 0 || globalState.isRunningReactions)
    return;
  reactionScheduler(runReactionsHelper);
}
function runReactionsHelper() {
  globalState.isRunningReactions = true;
  var allReactions = globalState.pendingReactions;
  var iterations = 0;
  while (allReactions.length > 0) {
    if (++iterations === MAX_REACTION_ITERATIONS) {
      console.error(false ? "Reaction doesn't converge to a stable state after " + MAX_REACTION_ITERATIONS + " iterations." + (" Probably there is a cycle in the reactive function: " + allReactions[0]) : "[mobx] cycle in reaction: " + allReactions[0]);
      allReactions.splice(0);
    }
    var remainingReactions = allReactions.splice(0);
    for (var i10 = 0, l10 = remainingReactions.length; i10 < l10; i10++) {
      remainingReactions[i10].runReaction_();
    }
  }
  globalState.isRunningReactions = false;
}
var isReaction = /* @__PURE__ */ createInstanceofPredicate("Reaction", Reaction);
function setReactionScheduler(fn) {
  var baseScheduler = reactionScheduler;
  reactionScheduler = function reactionScheduler3(f10) {
    return fn(function() {
      return baseScheduler(f10);
    });
  };
}
function isSpyEnabled() {
  return false;
}
function spy(listener) {
  if (true) {
    console.warn("[mobx.spy] Is a no-op in production builds");
    return function() {
    };
  } else {
    globalState.spyListeners.push(listener);
    return once(function() {
      globalState.spyListeners = globalState.spyListeners.filter(function(l10) {
        return l10 !== listener;
      });
    });
  }
}
var ACTION = "action";
var ACTION_BOUND = "action.bound";
var AUTOACTION = "autoAction";
var AUTOACTION_BOUND = "autoAction.bound";
var DEFAULT_ACTION_NAME = "<unnamed action>";
var actionAnnotation = /* @__PURE__ */ createActionAnnotation(ACTION);
var actionBoundAnnotation = /* @__PURE__ */ createActionAnnotation(ACTION_BOUND, {
  bound: true
});
var autoActionAnnotation = /* @__PURE__ */ createActionAnnotation(AUTOACTION, {
  autoAction: true
});
var autoActionBoundAnnotation = /* @__PURE__ */ createActionAnnotation(AUTOACTION_BOUND, {
  autoAction: true,
  bound: true
});
function createActionFactory(autoAction2) {
  var res = function action2(arg1, arg2) {
    if (isFunction(arg1))
      return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction2);
    if (isFunction(arg2))
      return createAction(arg1, arg2, autoAction2);
    if (isStringish(arg2)) {
      return storeAnnotation(arg1, arg2, autoAction2 ? autoActionAnnotation : actionAnnotation);
    }
    if (isStringish(arg1)) {
      return createDecoratorAnnotation(createActionAnnotation(autoAction2 ? AUTOACTION : ACTION, {
        name: arg1,
        autoAction: autoAction2
      }));
    }
    if (false)
      die("Invalid arguments for `action`");
  };
  return res;
}
var action = /* @__PURE__ */ createActionFactory(false);
Object.assign(action, actionAnnotation);
var autoAction = /* @__PURE__ */ createActionFactory(true);
Object.assign(autoAction, autoActionAnnotation);
action.bound = /* @__PURE__ */ createDecoratorAnnotation(actionBoundAnnotation);
autoAction.bound = /* @__PURE__ */ createDecoratorAnnotation(autoActionBoundAnnotation);
function isAction(thing) {
  return isFunction(thing) && thing.isMobxAction === true;
}
function autorun(view, opts) {
  var _opts$name, _opts;
  if (opts === void 0) {
    opts = EMPTY_OBJECT;
  }
  if (false) {
    if (!isFunction(view))
      die("Autorun expects a function as first argument");
    if (isAction(view))
      die("Autorun does not accept actions since actions are untrackable");
  }
  var name = (_opts$name = (_opts = opts) == null ? void 0 : _opts.name) != null ? _opts$name : false ? view.name || "Autorun@" + getNextId() : "Autorun";
  var runSync = !opts.scheduler && !opts.delay;
  var reaction;
  if (runSync) {
    reaction = new Reaction(name, function() {
      this.track(reactionRunner);
    }, opts.onError, opts.requiresObservable);
  } else {
    var scheduler = createSchedulerFromOptions(opts);
    var isScheduled = false;
    reaction = new Reaction(name, function() {
      if (!isScheduled) {
        isScheduled = true;
        scheduler(function() {
          isScheduled = false;
          if (!reaction.isDisposed_)
            reaction.track(reactionRunner);
        });
      }
    }, opts.onError, opts.requiresObservable);
  }
  function reactionRunner() {
    view(reaction);
  }
  reaction.schedule_();
  return reaction.getDisposer_();
}
var run = function run2(f10) {
  return f10();
};
function createSchedulerFromOptions(opts) {
  return opts.scheduler ? opts.scheduler : opts.delay ? function(f10) {
    return setTimeout(f10, opts.delay);
  } : run;
}
var ON_BECOME_OBSERVED = "onBO";
var ON_BECOME_UNOBSERVED = "onBUO";
function onBecomeObserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3);
}
function onBecomeUnobserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3);
}
function interceptHook(hook, thing, arg2, arg3) {
  var atom = typeof arg3 === "function" ? getAtom(thing, arg2) : getAtom(thing);
  var cb2 = isFunction(arg3) ? arg3 : arg2;
  var listenersKey = hook + "L";
  if (atom[listenersKey]) {
    atom[listenersKey].add(cb2);
  } else {
    atom[listenersKey] = /* @__PURE__ */ new Set([cb2]);
  }
  return function() {
    var hookListeners = atom[listenersKey];
    if (hookListeners) {
      hookListeners["delete"](cb2);
      if (hookListeners.size === 0) {
        delete atom[listenersKey];
      }
    }
  };
}
var NEVER = "never";
var ALWAYS = "always";
var OBSERVED = "observed";
function configure(options) {
  if (options.isolateGlobalState === true) {
    isolateGlobalState();
  }
  var useProxies = options.useProxies, enforceActions = options.enforceActions;
  if (useProxies !== void 0) {
    globalState.useProxies = useProxies === ALWAYS ? true : useProxies === NEVER ? false : typeof Proxy !== "undefined";
  }
  if (useProxies === "ifavailable")
    globalState.verifyProxies = true;
  if (enforceActions !== void 0) {
    var ea2 = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED;
    globalState.enforceActions = ea2;
    globalState.allowStateChanges = ea2 === true || ea2 === ALWAYS ? false : true;
  }
  ["computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "disableErrorBoundaries", "safeDescriptors"].forEach(function(key) {
    if (key in options)
      globalState[key] = !!options[key];
  });
  globalState.allowStateReads = !globalState.observableRequiresReaction;
  if (false) {
    console.warn("WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.");
  }
  if (options.reactionScheduler) {
    setReactionScheduler(options.reactionScheduler);
  }
}
function extendObservable(target, properties, annotations, options) {
  if (false) {
    if (arguments.length > 4)
      die("'extendObservable' expected 2-4 arguments");
    if (typeof target !== "object")
      die("'extendObservable' expects an object as first argument");
    if (isObservableMap(target))
      die("'extendObservable' should not be used on maps, use map.merge instead");
    if (!isPlainObject(properties))
      die("'extendObservable' only accepts plain objects as second argument");
    if (isObservable(properties) || isObservable(annotations))
      die("Extending an object with another observable (object) is not supported");
  }
  var descriptors = getOwnPropertyDescriptors(properties);
  var adm = asObservableObject(target, options)[$mobx];
  startBatch();
  try {
    ownKeys(descriptors).forEach(function(key) {
      adm.extend_(key, descriptors[key], !annotations ? true : key in annotations ? annotations[key] : true);
    });
  } finally {
    endBatch();
  }
  return target;
}
function getDependencyTree(thing, property) {
  return nodeToDependencyTree(getAtom(thing, property));
}
function nodeToDependencyTree(node) {
  var result = {
    name: node.name_
  };
  if (node.observing_ && node.observing_.length > 0)
    result.dependencies = unique(node.observing_).map(nodeToDependencyTree);
  return result;
}
function unique(list) {
  return Array.from(new Set(list));
}
var generatorId = 0;
function FlowCancellationError() {
  this.message = "FLOW_CANCELLED";
}
FlowCancellationError.prototype = /* @__PURE__ */ Object.create(Error.prototype);
var flowAnnotation = /* @__PURE__ */ createFlowAnnotation("flow");
var flowBoundAnnotation = /* @__PURE__ */ createFlowAnnotation("flow.bound", {
  bound: true
});
var flow = /* @__PURE__ */ Object.assign(function flow2(arg1, arg2) {
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, flowAnnotation);
  }
  if (false)
    die("Flow expects single argument with generator function");
  var generator = arg1;
  var name = generator.name || "<unnamed flow>";
  var res = function res2() {
    var ctx = this;
    var args = arguments;
    var runId = ++generatorId;
    var gen = action(name + " - runid: " + runId + " - init", generator).apply(ctx, args);
    var rejector;
    var pendingPromise = void 0;
    var promise = new Promise(function(resolve, reject2) {
      var stepId = 0;
      rejector = reject2;
      function onFulfilled(res3) {
        pendingPromise = void 0;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen.next).call(gen, res3);
        } catch (e13) {
          return reject2(e13);
        }
        next(ret);
      }
      function onRejected(err) {
        pendingPromise = void 0;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen["throw"]).call(gen, err);
        } catch (e13) {
          return reject2(e13);
        }
        next(ret);
      }
      function next(ret) {
        if (isFunction(ret == null ? void 0 : ret.then)) {
          ret.then(next, reject2);
          return;
        }
        if (ret.done)
          return resolve(ret.value);
        pendingPromise = Promise.resolve(ret.value);
        return pendingPromise.then(onFulfilled, onRejected);
      }
      onFulfilled(void 0);
    });
    promise.cancel = action(name + " - runid: " + runId + " - cancel", function() {
      try {
        if (pendingPromise)
          cancelPromise(pendingPromise);
        var _res = gen["return"](void 0);
        var yieldedPromise = Promise.resolve(_res.value);
        yieldedPromise.then(noop, noop);
        cancelPromise(yieldedPromise);
        rejector(new FlowCancellationError());
      } catch (e13) {
        rejector(e13);
      }
    });
    return promise;
  };
  res.isMobXFlow = true;
  return res;
}, flowAnnotation);
flow.bound = /* @__PURE__ */ createDecoratorAnnotation(flowBoundAnnotation);
function cancelPromise(promise) {
  if (isFunction(promise.cancel))
    promise.cancel();
}
function isFlow(fn) {
  return (fn == null ? void 0 : fn.isMobXFlow) === true;
}
function _isObservable(value, property) {
  if (!value)
    return false;
  if (property !== void 0) {
    if (false)
      return die("isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.");
    if (isObservableObject(value)) {
      return value[$mobx].values_.has(property);
    }
    return false;
  }
  return isObservableObject(value) || !!value[$mobx] || isAtom(value) || isReaction(value) || isComputedValue(value);
}
function isObservable(value) {
  if (false)
    die("isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property");
  return _isObservable(value);
}
function trace() {
  if (true)
    die("trace() is not available in production builds");
  var enterBreakPoint = false;
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (typeof args[args.length - 1] === "boolean")
    enterBreakPoint = args.pop();
  var derivation = getAtomFromArgs(args);
  if (!derivation) {
    return die("'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");
  }
  if (derivation.isTracing_ === TraceMode.NONE) {
    console.log("[mobx.trace] '" + derivation.name_ + "' tracing enabled");
  }
  derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;
}
function getAtomFromArgs(args) {
  switch (args.length) {
    case 0:
      return globalState.trackingDerivation;
    case 1:
      return getAtom(args[0]);
    case 2:
      return getAtom(args[0], args[1]);
  }
}
function transaction(action2, thisArg) {
  if (thisArg === void 0) {
    thisArg = void 0;
  }
  startBatch();
  try {
    return action2.apply(thisArg);
  } finally {
    endBatch();
  }
}
function getAdm(target) {
  return target[$mobx];
}
var objectProxyTraps = {
  has: function has(target, name) {
    if (false)
      warnAboutProxyRequirement("detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.");
    return getAdm(target).has_(name);
  },
  get: function get(target, name) {
    return getAdm(target).get_(name);
  },
  set: function set2(target, name, value) {
    var _getAdm$set_;
    if (!isStringish(name))
      return false;
    if (false) {
      warnAboutProxyRequirement("add a new observable property through direct assignment. Use 'set' from 'mobx' instead.");
    }
    return (_getAdm$set_ = getAdm(target).set_(name, value, true)) != null ? _getAdm$set_ : true;
  },
  deleteProperty: function deleteProperty(target, name) {
    var _getAdm$delete_;
    if (false) {
      warnAboutProxyRequirement("delete properties from an observable object. Use 'remove' from 'mobx' instead.");
    }
    if (!isStringish(name))
      return false;
    return (_getAdm$delete_ = getAdm(target).delete_(name, true)) != null ? _getAdm$delete_ : true;
  },
  defineProperty: function defineProperty2(target, name, descriptor) {
    var _getAdm$definePropert;
    if (false) {
      warnAboutProxyRequirement("define property on an observable object. Use 'defineProperty' from 'mobx' instead.");
    }
    return (_getAdm$definePropert = getAdm(target).defineProperty_(name, descriptor)) != null ? _getAdm$definePropert : true;
  },
  ownKeys: function ownKeys2(target) {
    if (false)
      warnAboutProxyRequirement("iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.");
    return getAdm(target).ownKeys_();
  },
  preventExtensions: function preventExtensions(target) {
    die(13);
  }
};
function asDynamicObservableObject(target, options) {
  var _target$$mobx, _target$$mobx$proxy_;
  assertProxies();
  target = asObservableObject(target, options);
  return (_target$$mobx$proxy_ = (_target$$mobx = target[$mobx]).proxy_) != null ? _target$$mobx$proxy_ : _target$$mobx.proxy_ = new Proxy(target, objectProxyTraps);
}
function hasInterceptors(interceptable) {
  return interceptable.interceptors_ !== void 0 && interceptable.interceptors_.length > 0;
}
function registerInterceptor(interceptable, handler) {
  var interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = []);
  interceptors.push(handler);
  return once(function() {
    var idx = interceptors.indexOf(handler);
    if (idx !== -1)
      interceptors.splice(idx, 1);
  });
}
function interceptChange(interceptable, change) {
  var prevU = untrackedStart();
  try {
    var interceptors = [].concat(interceptable.interceptors_ || []);
    for (var i10 = 0, l10 = interceptors.length; i10 < l10; i10++) {
      change = interceptors[i10](change);
      if (change && !change.type)
        die(14);
      if (!change)
        break;
    }
    return change;
  } finally {
    untrackedEnd(prevU);
  }
}
function hasListeners(listenable) {
  return listenable.changeListeners_ !== void 0 && listenable.changeListeners_.length > 0;
}
function registerListener(listenable, handler) {
  var listeners = listenable.changeListeners_ || (listenable.changeListeners_ = []);
  listeners.push(handler);
  return once(function() {
    var idx = listeners.indexOf(handler);
    if (idx !== -1)
      listeners.splice(idx, 1);
  });
}
function notifyListeners(listenable, change) {
  var prevU = untrackedStart();
  var listeners = listenable.changeListeners_;
  if (!listeners)
    return;
  listeners = listeners.slice();
  for (var i10 = 0, l10 = listeners.length; i10 < l10; i10++) {
    listeners[i10](change);
  }
  untrackedEnd(prevU);
}
function makeObservable(target, annotations, options) {
  var adm = asObservableObject(target, options)[$mobx];
  startBatch();
  try {
    var _annotations;
    if (false) {
      die("makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.");
    }
    (_annotations = annotations) != null ? _annotations : annotations = collectStoredAnnotations(target);
    ownKeys(annotations).forEach(function(key) {
      return adm.make_(key, annotations[key]);
    });
  } finally {
    endBatch();
  }
  return target;
}
var SPLICE = "splice";
var UPDATE = "update";
var MAX_SPLICE_SIZE = 1e4;
var arrayTraps = {
  get: function get2(target, name) {
    var adm = target[$mobx];
    if (name === $mobx)
      return adm;
    if (name === "length")
      return adm.getArrayLength_();
    if (typeof name === "string" && !isNaN(name)) {
      return adm.get_(parseInt(name));
    }
    if (hasProp(arrayExtensions, name)) {
      return arrayExtensions[name];
    }
    return target[name];
  },
  set: function set3(target, name, value) {
    var adm = target[$mobx];
    if (name === "length") {
      adm.setArrayLength_(value);
    }
    if (typeof name === "symbol" || isNaN(name)) {
      target[name] = value;
    } else {
      adm.set_(parseInt(name), value);
    }
    return true;
  },
  preventExtensions: function preventExtensions2() {
    die(15);
  }
};
var ObservableArrayAdministration = /* @__PURE__ */ function() {
  function ObservableArrayAdministration2(name, enhancer, owned_, legacyMode_) {
    if (name === void 0) {
      name = false ? "ObservableArray@" + getNextId() : "ObservableArray";
    }
    this.owned_ = void 0;
    this.legacyMode_ = void 0;
    this.atom_ = void 0;
    this.values_ = [];
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.enhancer_ = void 0;
    this.dehancer = void 0;
    this.proxy_ = void 0;
    this.lastKnownLength_ = 0;
    this.owned_ = owned_;
    this.legacyMode_ = legacyMode_;
    this.atom_ = new Atom(name);
    this.enhancer_ = function(newV, oldV) {
      return enhancer(newV, oldV, false ? name + "[..]" : "ObservableArray[..]");
    };
  }
  var _proto = ObservableArrayAdministration2.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0)
      return this.dehancer(value);
    return value;
  };
  _proto.dehanceValues_ = function dehanceValues_(values) {
    if (this.dehancer !== void 0 && values.length > 0)
      return values.map(this.dehancer);
    return values;
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately === void 0) {
      fireImmediately = false;
    }
    if (fireImmediately) {
      listener({
        observableKind: "array",
        object: this.proxy_,
        debugObjectName: this.atom_.name_,
        type: "splice",
        index: 0,
        added: this.values_.slice(),
        addedCount: this.values_.length,
        removed: [],
        removedCount: 0
      });
    }
    return registerListener(this, listener);
  };
  _proto.getArrayLength_ = function getArrayLength_() {
    this.atom_.reportObserved();
    return this.values_.length;
  };
  _proto.setArrayLength_ = function setArrayLength_(newLength) {
    if (typeof newLength !== "number" || isNaN(newLength) || newLength < 0)
      die("Out of range: " + newLength);
    var currentLength = this.values_.length;
    if (newLength === currentLength)
      return;
    else if (newLength > currentLength) {
      var newItems = new Array(newLength - currentLength);
      for (var i10 = 0; i10 < newLength - currentLength; i10++) {
        newItems[i10] = void 0;
      }
      this.spliceWithArray_(currentLength, 0, newItems);
    } else
      this.spliceWithArray_(newLength, currentLength - newLength);
  };
  _proto.updateArrayLength_ = function updateArrayLength_(oldLength, delta) {
    if (oldLength !== this.lastKnownLength_)
      die(16);
    this.lastKnownLength_ += delta;
    if (this.legacyMode_ && delta > 0)
      reserveArrayBuffer(oldLength + delta + 1);
  };
  _proto.spliceWithArray_ = function spliceWithArray_(index2, deleteCount, newItems) {
    var _this = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    var length = this.values_.length;
    if (index2 === void 0)
      index2 = 0;
    else if (index2 > length)
      index2 = length;
    else if (index2 < 0)
      index2 = Math.max(0, length + index2);
    if (arguments.length === 1)
      deleteCount = length - index2;
    else if (deleteCount === void 0 || deleteCount === null)
      deleteCount = 0;
    else
      deleteCount = Math.max(0, Math.min(deleteCount, length - index2));
    if (newItems === void 0)
      newItems = EMPTY_ARRAY;
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_,
        type: SPLICE,
        index: index2,
        removedCount: deleteCount,
        added: newItems
      });
      if (!change)
        return EMPTY_ARRAY;
      deleteCount = change.removedCount;
      newItems = change.added;
    }
    newItems = newItems.length === 0 ? newItems : newItems.map(function(v10) {
      return _this.enhancer_(v10, void 0);
    });
    if (this.legacyMode_ || false) {
      var lengthDelta = newItems.length - deleteCount;
      this.updateArrayLength_(length, lengthDelta);
    }
    var res = this.spliceItemsIntoValues_(index2, deleteCount, newItems);
    if (deleteCount !== 0 || newItems.length !== 0)
      this.notifyArraySplice_(index2, newItems, res);
    return this.dehanceValues_(res);
  };
  _proto.spliceItemsIntoValues_ = function spliceItemsIntoValues_(index2, deleteCount, newItems) {
    if (newItems.length < MAX_SPLICE_SIZE) {
      var _this$values_;
      return (_this$values_ = this.values_).splice.apply(_this$values_, [index2, deleteCount].concat(newItems));
    } else {
      var res = this.values_.slice(index2, index2 + deleteCount);
      var oldItems = this.values_.slice(index2 + deleteCount);
      this.values_.length += newItems.length - deleteCount;
      for (var i10 = 0; i10 < newItems.length; i10++) {
        this.values_[index2 + i10] = newItems[i10];
      }
      for (var _i2 = 0; _i2 < oldItems.length; _i2++) {
        this.values_[index2 + newItems.length + _i2] = oldItems[_i2];
      }
      return res;
    }
  };
  _proto.notifyArrayChildUpdate_ = function notifyArrayChildUpdate_(index2, newValue, oldValue) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      type: UPDATE,
      debugObjectName: this.atom_.name_,
      index: index2,
      newValue,
      oldValue
    } : null;
    if (false)
      spyReportStart(change);
    this.atom_.reportChanged();
    if (notify)
      notifyListeners(this, change);
    if (false)
      spyReportEnd();
  };
  _proto.notifyArraySplice_ = function notifyArraySplice_(index2, added, removed) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      debugObjectName: this.atom_.name_,
      type: SPLICE,
      index: index2,
      removed,
      added,
      removedCount: removed.length,
      addedCount: added.length
    } : null;
    if (false)
      spyReportStart(change);
    this.atom_.reportChanged();
    if (notify)
      notifyListeners(this, change);
    if (false)
      spyReportEnd();
  };
  _proto.get_ = function get_(index2) {
    if (index2 < this.values_.length) {
      this.atom_.reportObserved();
      return this.dehanceValue_(this.values_[index2]);
    }
    console.warn(false ? "[mobx] Out of bounds read: " + index2 : "[mobx.array] Attempt to read an array index (" + index2 + ") that is out of bounds (" + this.values_.length + "). Please check length first. Out of bound indices will not be tracked by MobX");
  };
  _proto.set_ = function set_(index2, newValue) {
    var values = this.values_;
    if (index2 < values.length) {
      checkIfStateModificationsAreAllowed(this.atom_);
      var oldValue = values[index2];
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: UPDATE,
          object: this.proxy_,
          index: index2,
          newValue
        });
        if (!change)
          return;
        newValue = change.newValue;
      }
      newValue = this.enhancer_(newValue, oldValue);
      var changed = newValue !== oldValue;
      if (changed) {
        values[index2] = newValue;
        this.notifyArrayChildUpdate_(index2, newValue, oldValue);
      }
    } else if (index2 === values.length) {
      this.spliceWithArray_(index2, 0, [newValue]);
    } else {
      die(17, index2, values.length);
    }
  };
  return ObservableArrayAdministration2;
}();
function createObservableArray(initialValues, enhancer, name, owned) {
  if (name === void 0) {
    name = false ? "ObservableArray@" + getNextId() : "ObservableArray";
  }
  if (owned === void 0) {
    owned = false;
  }
  assertProxies();
  var adm = new ObservableArrayAdministration(name, enhancer, owned, false);
  addHiddenFinalProp(adm.values_, $mobx, adm);
  var proxy = new Proxy(adm.values_, arrayTraps);
  adm.proxy_ = proxy;
  if (initialValues && initialValues.length) {
    var prev = allowStateChangesStart(true);
    adm.spliceWithArray_(0, 0, initialValues);
    allowStateChangesEnd(prev);
  }
  return proxy;
}
var arrayExtensions = {
  clear: function clear() {
    return this.splice(0);
  },
  replace: function replace(newItems) {
    var adm = this[$mobx];
    return adm.spliceWithArray_(0, adm.values_.length, newItems);
  },
  toJSON: function toJSON() {
    return this.slice();
  },
  splice: function splice(index2, deleteCount) {
    for (var _len = arguments.length, newItems = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      newItems[_key - 2] = arguments[_key];
    }
    var adm = this[$mobx];
    switch (arguments.length) {
      case 0:
        return [];
      case 1:
        return adm.spliceWithArray_(index2);
      case 2:
        return adm.spliceWithArray_(index2, deleteCount);
    }
    return adm.spliceWithArray_(index2, deleteCount, newItems);
  },
  spliceWithArray: function spliceWithArray(index2, deleteCount, newItems) {
    return this[$mobx].spliceWithArray_(index2, deleteCount, newItems);
  },
  push: function push() {
    var adm = this[$mobx];
    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      items[_key2] = arguments[_key2];
    }
    adm.spliceWithArray_(adm.values_.length, 0, items);
    return adm.values_.length;
  },
  pop: function pop() {
    return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0];
  },
  shift: function shift() {
    return this.splice(0, 1)[0];
  },
  unshift: function unshift() {
    var adm = this[$mobx];
    for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      items[_key3] = arguments[_key3];
    }
    adm.spliceWithArray_(0, 0, items);
    return adm.values_.length;
  },
  reverse: function reverse() {
    if (globalState.trackingDerivation) {
      die(37, "reverse");
    }
    this.replace(this.slice().reverse());
    return this;
  },
  sort: function sort() {
    if (globalState.trackingDerivation) {
      die(37, "sort");
    }
    var copy = this.slice();
    copy.sort.apply(copy, arguments);
    this.replace(copy);
    return this;
  },
  remove: function remove(value) {
    var adm = this[$mobx];
    var idx = adm.dehanceValues_(adm.values_).indexOf(value);
    if (idx > -1) {
      this.splice(idx, 1);
      return true;
    }
    return false;
  }
};
addArrayExtension("concat", simpleFunc);
addArrayExtension("flat", simpleFunc);
addArrayExtension("includes", simpleFunc);
addArrayExtension("indexOf", simpleFunc);
addArrayExtension("join", simpleFunc);
addArrayExtension("lastIndexOf", simpleFunc);
addArrayExtension("slice", simpleFunc);
addArrayExtension("toString", simpleFunc);
addArrayExtension("toLocaleString", simpleFunc);
addArrayExtension("every", mapLikeFunc);
addArrayExtension("filter", mapLikeFunc);
addArrayExtension("find", mapLikeFunc);
addArrayExtension("findIndex", mapLikeFunc);
addArrayExtension("flatMap", mapLikeFunc);
addArrayExtension("forEach", mapLikeFunc);
addArrayExtension("map", mapLikeFunc);
addArrayExtension("some", mapLikeFunc);
addArrayExtension("reduce", reduceLikeFunc);
addArrayExtension("reduceRight", reduceLikeFunc);
function addArrayExtension(funcName, funcFactory) {
  if (typeof Array.prototype[funcName] === "function") {
    arrayExtensions[funcName] = funcFactory(funcName);
  }
}
function simpleFunc(funcName) {
  return function() {
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
function mapLikeFunc(funcName) {
  return function(callback, thisArg) {
    var _this2 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName](function(element, index2) {
      return callback.call(thisArg, element, index2, _this2);
    });
  };
}
function reduceLikeFunc(funcName) {
  return function() {
    var _this3 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    var callback = arguments[0];
    arguments[0] = function(accumulator, currentValue, index2) {
      return callback(accumulator, currentValue, index2, _this3);
    };
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
var isObservableArrayAdministration = /* @__PURE__ */ createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);
function isObservableArray(thing) {
  return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);
}
var _Symbol$iterator;
var _Symbol$toStringTag;
var ObservableMapMarker = {};
var ADD = "add";
var DELETE = "delete";
_Symbol$iterator = Symbol.iterator;
_Symbol$toStringTag = Symbol.toStringTag;
var ObservableMap = /* @__PURE__ */ function(_Symbol$iterator2, _Symbol$toStringTag2) {
  function ObservableMap2(initialData, enhancer_, name_) {
    var _this = this;
    if (enhancer_ === void 0) {
      enhancer_ = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ = false ? "ObservableMap@" + getNextId() : "ObservableMap";
    }
    this.enhancer_ = void 0;
    this.name_ = void 0;
    this[$mobx] = ObservableMapMarker;
    this.data_ = void 0;
    this.hasMap_ = void 0;
    this.keysAtom_ = void 0;
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = enhancer_;
    this.name_ = name_;
    if (!isFunction(Map)) {
      die(18);
    }
    this.keysAtom_ = createAtom(false ? this.name_ + ".keys()" : "ObservableMap.keys()");
    this.data_ = /* @__PURE__ */ new Map();
    this.hasMap_ = /* @__PURE__ */ new Map();
    allowStateChanges(true, function() {
      _this.merge(initialData);
    });
  }
  var _proto = ObservableMap2.prototype;
  _proto.has_ = function has_(key) {
    return this.data_.has(key);
  };
  _proto.has = function has2(key) {
    var _this2 = this;
    if (!globalState.trackingDerivation)
      return this.has_(key);
    var entry = this.hasMap_.get(key);
    if (!entry) {
      var newEntry = entry = new ObservableValue(this.has_(key), referenceEnhancer, false ? this.name_ + "." + stringifyKey(key) + "?" : "ObservableMap.key?", false);
      this.hasMap_.set(key, newEntry);
      onBecomeUnobserved(newEntry, function() {
        return _this2.hasMap_["delete"](key);
      });
    }
    return entry.get();
  };
  _proto.set = function set5(key, value) {
    var hasKey = this.has_(key);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: hasKey ? UPDATE : ADD,
        object: this,
        newValue: value,
        name: key
      });
      if (!change)
        return this;
      value = change.newValue;
    }
    if (hasKey) {
      this.updateValue_(key, value);
    } else {
      this.addValue_(key, value);
    }
    return this;
  };
  _proto["delete"] = function _delete(key) {
    var _this3 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        name: key
      });
      if (!change)
        return false;
    }
    if (this.has_(key)) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: this.data_.get(key).value_,
        name: key
      } : null;
      if (false)
        spyReportStart(_change);
      transaction(function() {
        var _this3$hasMap_$get;
        _this3.keysAtom_.reportChanged();
        (_this3$hasMap_$get = _this3.hasMap_.get(key)) == null ? void 0 : _this3$hasMap_$get.setNewValue_(false);
        var observable2 = _this3.data_.get(key);
        observable2.setNewValue_(void 0);
        _this3.data_["delete"](key);
      });
      if (notify)
        notifyListeners(this, _change);
      if (false)
        spyReportEnd();
      return true;
    }
    return false;
  };
  _proto.updateValue_ = function updateValue_(key, newValue) {
    var observable2 = this.data_.get(key);
    newValue = observable2.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: UPDATE,
        object: this,
        oldValue: observable2.value_,
        name: key,
        newValue
      } : null;
      if (false)
        spyReportStart(change);
      observable2.setNewValue_(newValue);
      if (notify)
        notifyListeners(this, change);
      if (false)
        spyReportEnd();
    }
  };
  _proto.addValue_ = function addValue_(key, newValue) {
    var _this4 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    transaction(function() {
      var _this4$hasMap_$get;
      var observable2 = new ObservableValue(newValue, _this4.enhancer_, false ? _this4.name_ + "." + stringifyKey(key) : "ObservableMap.key", false);
      _this4.data_.set(key, observable2);
      newValue = observable2.value_;
      (_this4$hasMap_$get = _this4.hasMap_.get(key)) == null ? void 0 : _this4$hasMap_$get.setNewValue_(true);
      _this4.keysAtom_.reportChanged();
    });
    var notifySpy = isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "map",
      debugObjectName: this.name_,
      type: ADD,
      object: this,
      name: key,
      newValue
    } : null;
    if (false)
      spyReportStart(change);
    if (notify)
      notifyListeners(this, change);
    if (false)
      spyReportEnd();
  };
  _proto.get = function get4(key) {
    if (this.has(key))
      return this.dehanceValue_(this.data_.get(key).get());
    return this.dehanceValue_(void 0);
  };
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.keys = function keys() {
    this.keysAtom_.reportObserved();
    return this.data_.keys();
  };
  _proto.values = function values() {
    var self2 = this;
    var keys = this.keys();
    return makeIterable({
      next: function next() {
        var _keys$next = keys.next(), done = _keys$next.done, value = _keys$next.value;
        return {
          done,
          value: done ? void 0 : self2.get(value)
        };
      }
    });
  };
  _proto.entries = function entries2() {
    var self2 = this;
    var keys = this.keys();
    return makeIterable({
      next: function next() {
        var _keys$next2 = keys.next(), done = _keys$next2.done, value = _keys$next2.value;
        return {
          done,
          value: done ? void 0 : [value, self2.get(value)]
        };
      }
    });
  };
  _proto[_Symbol$iterator2] = function() {
    return this.entries();
  };
  _proto.forEach = function forEach(callback, thisArg) {
    for (var _iterator = _createForOfIteratorHelperLoose(this), _step; !(_step = _iterator()).done; ) {
      var _step$value = _step.value, key = _step$value[0], value = _step$value[1];
      callback.call(thisArg, value, key, this);
    }
  };
  _proto.merge = function merge(other) {
    var _this5 = this;
    if (isObservableMap(other)) {
      other = new Map(other);
    }
    transaction(function() {
      if (isPlainObject(other))
        getPlainObjectKeys(other).forEach(function(key) {
          return _this5.set(key, other[key]);
        });
      else if (Array.isArray(other))
        other.forEach(function(_ref) {
          var key = _ref[0], value = _ref[1];
          return _this5.set(key, value);
        });
      else if (isES6Map(other)) {
        if (other.constructor !== Map)
          die(19, other);
        other.forEach(function(value, key) {
          return _this5.set(key, value);
        });
      } else if (other !== null && other !== void 0)
        die(20, other);
    });
    return this;
  };
  _proto.clear = function clear2() {
    var _this6 = this;
    transaction(function() {
      untracked(function() {
        for (var _iterator2 = _createForOfIteratorHelperLoose(_this6.keys()), _step2; !(_step2 = _iterator2()).done; ) {
          var key = _step2.value;
          _this6["delete"](key);
        }
      });
    });
  };
  _proto.replace = function replace2(values) {
    var _this7 = this;
    transaction(function() {
      var replacementMap = convertToMap(values);
      var orderedData = /* @__PURE__ */ new Map();
      var keysReportChangedCalled = false;
      for (var _iterator3 = _createForOfIteratorHelperLoose(_this7.data_.keys()), _step3; !(_step3 = _iterator3()).done; ) {
        var key = _step3.value;
        if (!replacementMap.has(key)) {
          var deleted = _this7["delete"](key);
          if (deleted) {
            keysReportChangedCalled = true;
          } else {
            var value = _this7.data_.get(key);
            orderedData.set(key, value);
          }
        }
      }
      for (var _iterator4 = _createForOfIteratorHelperLoose(replacementMap.entries()), _step4; !(_step4 = _iterator4()).done; ) {
        var _step4$value = _step4.value, _key = _step4$value[0], _value = _step4$value[1];
        var keyExisted = _this7.data_.has(_key);
        _this7.set(_key, _value);
        if (_this7.data_.has(_key)) {
          var _value2 = _this7.data_.get(_key);
          orderedData.set(_key, _value2);
          if (!keyExisted) {
            keysReportChangedCalled = true;
          }
        }
      }
      if (!keysReportChangedCalled) {
        if (_this7.data_.size !== orderedData.size) {
          _this7.keysAtom_.reportChanged();
        } else {
          var iter1 = _this7.data_.keys();
          var iter2 = orderedData.keys();
          var next1 = iter1.next();
          var next2 = iter2.next();
          while (!next1.done) {
            if (next1.value !== next2.value) {
              _this7.keysAtom_.reportChanged();
              break;
            }
            next1 = iter1.next();
            next2 = iter2.next();
          }
        }
      }
      _this7.data_ = orderedData;
    });
    return this;
  };
  _proto.toString = function toString2() {
    return "[object ObservableMap]";
  };
  _proto.toJSON = function toJSON2() {
    return Array.from(this);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (false)
      die("`observe` doesn't support fireImmediately=true in combination with maps.");
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _createClass(ObservableMap2, [{
    key: "size",
    get: function get4() {
      this.keysAtom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: _Symbol$toStringTag2,
    get: function get4() {
      return "Map";
    }
  }]);
  return ObservableMap2;
}(_Symbol$iterator, _Symbol$toStringTag);
var isObservableMap = /* @__PURE__ */ createInstanceofPredicate("ObservableMap", ObservableMap);
function convertToMap(dataStructure) {
  if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {
    return dataStructure;
  } else if (Array.isArray(dataStructure)) {
    return new Map(dataStructure);
  } else if (isPlainObject(dataStructure)) {
    var map2 = /* @__PURE__ */ new Map();
    for (var key in dataStructure) {
      map2.set(key, dataStructure[key]);
    }
    return map2;
  } else {
    return die(21, dataStructure);
  }
}
var _Symbol$iterator$1;
var _Symbol$toStringTag$1;
var ObservableSetMarker = {};
_Symbol$iterator$1 = Symbol.iterator;
_Symbol$toStringTag$1 = Symbol.toStringTag;
var ObservableSet = /* @__PURE__ */ function(_Symbol$iterator2, _Symbol$toStringTag2) {
  function ObservableSet2(initialData, enhancer, name_) {
    if (enhancer === void 0) {
      enhancer = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ = false ? "ObservableSet@" + getNextId() : "ObservableSet";
    }
    this.name_ = void 0;
    this[$mobx] = ObservableSetMarker;
    this.data_ = /* @__PURE__ */ new Set();
    this.atom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = void 0;
    this.name_ = name_;
    if (!isFunction(Set)) {
      die(22);
    }
    this.atom_ = createAtom(this.name_);
    this.enhancer_ = function(newV, oldV) {
      return enhancer(newV, oldV, name_);
    };
    if (initialData) {
      this.replace(initialData);
    }
  }
  var _proto = ObservableSet2.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.clear = function clear2() {
    var _this = this;
    transaction(function() {
      untracked(function() {
        for (var _iterator = _createForOfIteratorHelperLoose(_this.data_.values()), _step; !(_step = _iterator()).done; ) {
          var value = _step.value;
          _this["delete"](value);
        }
      });
    });
  };
  _proto.forEach = function forEach(callbackFn, thisArg) {
    for (var _iterator2 = _createForOfIteratorHelperLoose(this), _step2; !(_step2 = _iterator2()).done; ) {
      var value = _step2.value;
      callbackFn.call(thisArg, value, value, this);
    }
  };
  _proto.add = function add(value) {
    var _this2 = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: ADD,
        object: this,
        newValue: value
      });
      if (!change)
        return this;
    }
    if (!this.has(value)) {
      transaction(function() {
        _this2.data_.add(_this2.enhancer_(value, void 0));
        _this2.atom_.reportChanged();
      });
      var notifySpy = false;
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: ADD,
        object: this,
        newValue: value
      } : null;
      if (notifySpy && false)
        spyReportStart(_change);
      if (notify)
        notifyListeners(this, _change);
      if (notifySpy && false)
        spyReportEnd();
    }
    return this;
  };
  _proto["delete"] = function _delete(value) {
    var _this3 = this;
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        oldValue: value
      });
      if (!change)
        return false;
    }
    if (this.has(value)) {
      var notifySpy = false;
      var notify = hasListeners(this);
      var _change2 = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: value
      } : null;
      if (notifySpy && false)
        spyReportStart(_change2);
      transaction(function() {
        _this3.atom_.reportChanged();
        _this3.data_["delete"](value);
      });
      if (notify)
        notifyListeners(this, _change2);
      if (notifySpy && false)
        spyReportEnd();
      return true;
    }
    return false;
  };
  _proto.has = function has2(value) {
    this.atom_.reportObserved();
    return this.data_.has(this.dehanceValue_(value));
  };
  _proto.entries = function entries2() {
    var nextIndex = 0;
    var keys = Array.from(this.keys());
    var values = Array.from(this.values());
    return makeIterable({
      next: function next() {
        var index2 = nextIndex;
        nextIndex += 1;
        return index2 < values.length ? {
          value: [keys[index2], values[index2]],
          done: false
        } : {
          done: true
        };
      }
    });
  };
  _proto.keys = function keys() {
    return this.values();
  };
  _proto.values = function values() {
    this.atom_.reportObserved();
    var self2 = this;
    var nextIndex = 0;
    var observableValues = Array.from(this.data_.values());
    return makeIterable({
      next: function next() {
        return nextIndex < observableValues.length ? {
          value: self2.dehanceValue_(observableValues[nextIndex++]),
          done: false
        } : {
          done: true
        };
      }
    });
  };
  _proto.replace = function replace2(other) {
    var _this4 = this;
    if (isObservableSet(other)) {
      other = new Set(other);
    }
    transaction(function() {
      if (Array.isArray(other)) {
        _this4.clear();
        other.forEach(function(value) {
          return _this4.add(value);
        });
      } else if (isES6Set(other)) {
        _this4.clear();
        other.forEach(function(value) {
          return _this4.add(value);
        });
      } else if (other !== null && other !== void 0) {
        die("Cannot initialize set from " + other);
      }
    });
    return this;
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (false)
      die("`observe` doesn't support fireImmediately=true in combination with sets.");
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.toJSON = function toJSON2() {
    return Array.from(this);
  };
  _proto.toString = function toString2() {
    return "[object ObservableSet]";
  };
  _proto[_Symbol$iterator2] = function() {
    return this.values();
  };
  _createClass(ObservableSet2, [{
    key: "size",
    get: function get4() {
      this.atom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: _Symbol$toStringTag2,
    get: function get4() {
      return "Set";
    }
  }]);
  return ObservableSet2;
}(_Symbol$iterator$1, _Symbol$toStringTag$1);
var isObservableSet = /* @__PURE__ */ createInstanceofPredicate("ObservableSet", ObservableSet);
var descriptorCache = /* @__PURE__ */ Object.create(null);
var REMOVE = "remove";
var ObservableObjectAdministration = /* @__PURE__ */ function() {
  function ObservableObjectAdministration2(target_, values_, name_, defaultAnnotation_) {
    if (values_ === void 0) {
      values_ = /* @__PURE__ */ new Map();
    }
    if (defaultAnnotation_ === void 0) {
      defaultAnnotation_ = autoAnnotation;
    }
    this.target_ = void 0;
    this.values_ = void 0;
    this.name_ = void 0;
    this.defaultAnnotation_ = void 0;
    this.keysAtom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.proxy_ = void 0;
    this.isPlainObject_ = void 0;
    this.appliedAnnotations_ = void 0;
    this.pendingKeys_ = void 0;
    this.target_ = target_;
    this.values_ = values_;
    this.name_ = name_;
    this.defaultAnnotation_ = defaultAnnotation_;
    this.keysAtom_ = new Atom(false ? this.name_ + ".keys" : "ObservableObject.keys");
    this.isPlainObject_ = isPlainObject(this.target_);
    if (false) {
      die("defaultAnnotation must be valid annotation");
    }
    if (false) {
      this.appliedAnnotations_ = {};
    }
  }
  var _proto = ObservableObjectAdministration2.prototype;
  _proto.getObservablePropValue_ = function getObservablePropValue_(key) {
    return this.values_.get(key).get();
  };
  _proto.setObservablePropValue_ = function setObservablePropValue_(key, newValue) {
    var observable2 = this.values_.get(key);
    if (observable2 instanceof ComputedValue) {
      observable2.set(newValue);
      return true;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: UPDATE,
        object: this.proxy_ || this.target_,
        name: key,
        newValue
      });
      if (!change)
        return null;
      newValue = change.newValue;
    }
    newValue = observable2.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notify = hasListeners(this);
      var notifySpy = false;
      var _change = notify || notifySpy ? {
        type: UPDATE,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        oldValue: observable2.value_,
        name: key,
        newValue
      } : null;
      if (false)
        spyReportStart(_change);
      observable2.setNewValue_(newValue);
      if (notify)
        notifyListeners(this, _change);
      if (false)
        spyReportEnd();
    }
    return true;
  };
  _proto.get_ = function get_(key) {
    if (globalState.trackingDerivation && !hasProp(this.target_, key)) {
      this.has_(key);
    }
    return this.target_[key];
  };
  _proto.set_ = function set_(key, value, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (hasProp(this.target_, key)) {
      if (this.values_.has(key)) {
        return this.setObservablePropValue_(key, value);
      } else if (proxyTrap) {
        return Reflect.set(this.target_, key, value);
      } else {
        this.target_[key] = value;
        return true;
      }
    } else {
      return this.extend_(key, {
        value,
        enumerable: true,
        writable: true,
        configurable: true
      }, this.defaultAnnotation_, proxyTrap);
    }
  };
  _proto.has_ = function has_(key) {
    if (!globalState.trackingDerivation) {
      return key in this.target_;
    }
    this.pendingKeys_ || (this.pendingKeys_ = /* @__PURE__ */ new Map());
    var entry = this.pendingKeys_.get(key);
    if (!entry) {
      entry = new ObservableValue(key in this.target_, referenceEnhancer, false ? this.name_ + "." + stringifyKey(key) + "?" : "ObservableObject.key?", false);
      this.pendingKeys_.set(key, entry);
    }
    return entry.get();
  };
  _proto.make_ = function make_(key, annotation) {
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return;
    }
    assertAnnotable(this, annotation, key);
    if (!(key in this.target_)) {
      var _this$target_$storedA;
      if ((_this$target_$storedA = this.target_[storedAnnotationsSymbol]) != null && _this$target_$storedA[key]) {
        return;
      } else {
        die(1, annotation.annotationType_, this.name_ + "." + key.toString());
      }
    }
    var source = this.target_;
    while (source && source !== objectPrototype) {
      var descriptor = getDescriptor(source, key);
      if (descriptor) {
        var outcome = annotation.make_(this, key, descriptor, source);
        if (outcome === 0)
          return;
        if (outcome === 1)
          break;
      }
      source = Object.getPrototypeOf(source);
    }
    recordAnnotationApplied(this, annotation, key);
  };
  _proto.extend_ = function extend_(key, descriptor, annotation, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return this.defineProperty_(key, descriptor, proxyTrap);
    }
    assertAnnotable(this, annotation, key);
    var outcome = annotation.extend_(this, key, descriptor, proxyTrap);
    if (outcome) {
      recordAnnotationApplied(this, annotation, key);
    }
    return outcome;
  };
  _proto.defineProperty_ = function defineProperty_(key, descriptor, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: descriptor.value
        });
        if (!change)
          return null;
        var newValue = change.newValue;
        if (descriptor.value !== newValue) {
          descriptor = _extends({}, descriptor, {
            value: newValue
          });
        }
      }
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      this.notifyPropertyAddition_(key, descriptor.value);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.defineObservableProperty_ = function defineObservableProperty_(key, value, enhancer, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: value
        });
        if (!change)
          return null;
        value = change.newValue;
      }
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: true,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      };
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      var observable2 = new ObservableValue(value, enhancer, false ? this.name_ + "." + key.toString() : "ObservableObject.key", false);
      this.values_.set(key, observable2);
      this.notifyPropertyAddition_(key, observable2.value_);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.defineComputedProperty_ = function defineComputedProperty_(key, options, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: void 0
        });
        if (!change)
          return null;
      }
      options.name || (options.name = false ? this.name_ + "." + key.toString() : "ObservableObject.key");
      options.context = this.proxy_ || this.target_;
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: false,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      };
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      this.values_.set(key, new ComputedValue(options));
      this.notifyPropertyAddition_(key, void 0);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.delete_ = function delete_(key, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (!hasProp(this.target_, key)) {
      return true;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_ || this.target_,
        name: key,
        type: REMOVE
      });
      if (!change)
        return null;
    }
    try {
      var _this$pendingKeys_, _this$pendingKeys_$ge;
      startBatch();
      var notify = hasListeners(this);
      var notifySpy = false;
      var observable2 = this.values_.get(key);
      var value = void 0;
      if (!observable2 && (notify || notifySpy)) {
        var _getDescriptor2;
        value = (_getDescriptor2 = getDescriptor(this.target_, key)) == null ? void 0 : _getDescriptor2.value;
      }
      if (proxyTrap) {
        if (!Reflect.deleteProperty(this.target_, key)) {
          return false;
        }
      } else {
        delete this.target_[key];
      }
      if (false) {
        delete this.appliedAnnotations_[key];
      }
      if (observable2) {
        this.values_["delete"](key);
        if (observable2 instanceof ObservableValue) {
          value = observable2.value_;
        }
        propagateChanged(observable2);
      }
      this.keysAtom_.reportChanged();
      (_this$pendingKeys_ = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_$ge = _this$pendingKeys_.get(key)) == null ? void 0 : _this$pendingKeys_$ge.set(key in this.target_);
      if (notify || notifySpy) {
        var _change2 = {
          type: REMOVE,
          observableKind: "object",
          object: this.proxy_ || this.target_,
          debugObjectName: this.name_,
          oldValue: value,
          name: key
        };
        if (false)
          spyReportStart(_change2);
        if (notify)
          notifyListeners(this, _change2);
        if (false)
          spyReportEnd();
      }
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.observe_ = function observe_(callback, fireImmediately) {
    if (false)
      die("`observe` doesn't support the fire immediately property for observable objects.");
    return registerListener(this, callback);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.notifyPropertyAddition_ = function notifyPropertyAddition_(key, value) {
    var _this$pendingKeys_2, _this$pendingKeys_2$g;
    var notify = hasListeners(this);
    var notifySpy = false;
    if (notify || notifySpy) {
      var change = notify || notifySpy ? {
        type: ADD,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: value
      } : null;
      if (false)
        spyReportStart(change);
      if (notify)
        notifyListeners(this, change);
      if (false)
        spyReportEnd();
    }
    (_this$pendingKeys_2 = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_2$g = _this$pendingKeys_2.get(key)) == null ? void 0 : _this$pendingKeys_2$g.set(true);
    this.keysAtom_.reportChanged();
  };
  _proto.ownKeys_ = function ownKeys_() {
    this.keysAtom_.reportObserved();
    return ownKeys(this.target_);
  };
  _proto.keys_ = function keys_() {
    this.keysAtom_.reportObserved();
    return Object.keys(this.target_);
  };
  return ObservableObjectAdministration2;
}();
function asObservableObject(target, options) {
  var _options$name;
  if (false) {
    die("Options can't be provided for already observable objects.");
  }
  if (hasProp(target, $mobx)) {
    if (false) {
      die("Cannot convert '" + getDebugName(target) + "' into observable object:\nThe target is already observable of different type.\nExtending builtins is not supported.");
    }
    return target;
  }
  if (false)
    die("Cannot make the designated object observable; it is not extensible");
  var name = (_options$name = options == null ? void 0 : options.name) != null ? _options$name : false ? (isPlainObject(target) ? "ObservableObject" : target.constructor.name) + "@" + getNextId() : "ObservableObject";
  var adm = new ObservableObjectAdministration(target, /* @__PURE__ */ new Map(), String(name), getAnnotationFromOptions(options));
  addHiddenProp(target, $mobx, adm);
  return target;
}
var isObservableObjectAdministration = /* @__PURE__ */ createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);
function getCachedObservablePropDescriptor(key) {
  return descriptorCache[key] || (descriptorCache[key] = {
    get: function get4() {
      return this[$mobx].getObservablePropValue_(key);
    },
    set: function set5(value) {
      return this[$mobx].setObservablePropValue_(key, value);
    }
  });
}
function isObservableObject(thing) {
  if (isObject(thing)) {
    return isObservableObjectAdministration(thing[$mobx]);
  }
  return false;
}
function recordAnnotationApplied(adm, annotation, key) {
  var _adm$target_$storedAn;
  if (false) {
    adm.appliedAnnotations_[key] = annotation;
  }
  (_adm$target_$storedAn = adm.target_[storedAnnotationsSymbol]) == null ? true : delete _adm$target_$storedAn[key];
}
function assertAnnotable(adm, annotation, key) {
  if (false) {
    die("Cannot annotate '" + adm.name_ + "." + key.toString() + "': Invalid annotation.");
  }
  if (false) {
    var fieldName = adm.name_ + "." + key.toString();
    var currentAnnotationType = adm.appliedAnnotations_[key].annotationType_;
    var requestedAnnotationType = annotation.annotationType_;
    die("Cannot apply '" + requestedAnnotationType + "' to '" + fieldName + "':" + ("\nThe field is already annotated with '" + currentAnnotationType + "'.") + "\nRe-annotating fields is not allowed.\nUse 'override' annotation for methods overriden by subclass.");
  }
}
var OBSERVABLE_ARRAY_BUFFER_SIZE = 0;
var StubArray = function StubArray2() {
};
function inherit(ctor, proto) {
  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ctor.prototype, proto);
  } else if (ctor.prototype.__proto__ !== void 0) {
    ctor.prototype.__proto__ = proto;
  } else {
    ctor.prototype = proto;
  }
}
inherit(StubArray, Array.prototype);
var LegacyObservableArray = /* @__PURE__ */ function(_StubArray, _Symbol$toStringTag2, _Symbol$iterator2) {
  _inheritsLoose(LegacyObservableArray2, _StubArray);
  function LegacyObservableArray2(initialValues, enhancer, name, owned) {
    var _this;
    if (name === void 0) {
      name = false ? "ObservableArray@" + getNextId() : "ObservableArray";
    }
    if (owned === void 0) {
      owned = false;
    }
    _this = _StubArray.call(this) || this;
    var adm = new ObservableArrayAdministration(name, enhancer, owned, true);
    adm.proxy_ = _assertThisInitialized(_this);
    addHiddenFinalProp(_assertThisInitialized(_this), $mobx, adm);
    if (initialValues && initialValues.length) {
      var prev = allowStateChangesStart(true);
      _this.spliceWithArray(0, 0, initialValues);
      allowStateChangesEnd(prev);
    }
    return _this;
  }
  var _proto = LegacyObservableArray2.prototype;
  _proto.concat = function concat() {
    this[$mobx].atom_.reportObserved();
    for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {
      arrays[_key] = arguments[_key];
    }
    return Array.prototype.concat.apply(this.slice(), arrays.map(function(a10) {
      return isObservableArray(a10) ? a10.slice() : a10;
    }));
  };
  _proto[_Symbol$iterator2] = function() {
    var self2 = this;
    var nextIndex = 0;
    return makeIterable({
      next: function next() {
        return nextIndex < self2.length ? {
          value: self2[nextIndex++],
          done: false
        } : {
          done: true,
          value: void 0
        };
      }
    });
  };
  _createClass(LegacyObservableArray2, [{
    key: "length",
    get: function get4() {
      return this[$mobx].getArrayLength_();
    },
    set: function set5(newLength) {
      this[$mobx].setArrayLength_(newLength);
    }
  }, {
    key: _Symbol$toStringTag2,
    get: function get4() {
      return "Array";
    }
  }]);
  return LegacyObservableArray2;
}(StubArray, Symbol.toStringTag, Symbol.iterator);
Object.entries(arrayExtensions).forEach(function(_ref) {
  var prop = _ref[0], fn = _ref[1];
  if (prop !== "concat")
    addHiddenProp(LegacyObservableArray.prototype, prop, fn);
});
function createArrayEntryDescriptor(index2) {
  return {
    enumerable: false,
    configurable: true,
    get: function get4() {
      return this[$mobx].get_(index2);
    },
    set: function set5(value) {
      this[$mobx].set_(index2, value);
    }
  };
}
function createArrayBufferItem(index2) {
  defineProperty(LegacyObservableArray.prototype, "" + index2, createArrayEntryDescriptor(index2));
}
function reserveArrayBuffer(max) {
  if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {
    for (var index2 = OBSERVABLE_ARRAY_BUFFER_SIZE; index2 < max + 100; index2++) {
      createArrayBufferItem(index2);
    }
    OBSERVABLE_ARRAY_BUFFER_SIZE = max;
  }
}
reserveArrayBuffer(1e3);
function createLegacyArray(initialValues, enhancer, name) {
  return new LegacyObservableArray(initialValues, enhancer, name);
}
function getAtom(thing, property) {
  if (typeof thing === "object" && thing !== null) {
    if (isObservableArray(thing)) {
      if (property !== void 0)
        die(23);
      return thing[$mobx].atom_;
    }
    if (isObservableSet(thing)) {
      return thing[$mobx];
    }
    if (isObservableMap(thing)) {
      if (property === void 0)
        return thing.keysAtom_;
      var observable2 = thing.data_.get(property) || thing.hasMap_.get(property);
      if (!observable2)
        die(25, property, getDebugName(thing));
      return observable2;
    }
    if (isObservableObject(thing)) {
      if (!property)
        return die(26);
      var _observable = thing[$mobx].values_.get(property);
      if (!_observable)
        die(27, property, getDebugName(thing));
      return _observable;
    }
    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
      return thing;
    }
  } else if (isFunction(thing)) {
    if (isReaction(thing[$mobx])) {
      return thing[$mobx];
    }
  }
  die(28);
}
function getAdministration(thing, property) {
  if (!thing)
    die(29);
  if (property !== void 0)
    return getAdministration(getAtom(thing, property));
  if (isAtom(thing) || isComputedValue(thing) || isReaction(thing))
    return thing;
  if (isObservableMap(thing) || isObservableSet(thing))
    return thing;
  if (thing[$mobx])
    return thing[$mobx];
  die(24, thing);
}
function getDebugName(thing, property) {
  var named;
  if (property !== void 0) {
    named = getAtom(thing, property);
  } else if (isAction(thing)) {
    return thing.name;
  } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {
    named = getAdministration(thing);
  } else {
    named = getAtom(thing);
  }
  return named.name_;
}
var toString = objectPrototype.toString;
function deepEqual(a10, b10, depth) {
  if (depth === void 0) {
    depth = -1;
  }
  return eq(a10, b10, depth);
}
function eq(a10, b10, depth, aStack, bStack) {
  if (a10 === b10)
    return a10 !== 0 || 1 / a10 === 1 / b10;
  if (a10 == null || b10 == null)
    return false;
  if (a10 !== a10)
    return b10 !== b10;
  var type = typeof a10;
  if (type !== "function" && type !== "object" && typeof b10 != "object")
    return false;
  var className = toString.call(a10);
  if (className !== toString.call(b10))
    return false;
  switch (className) {
    case "[object RegExp]":
    case "[object String]":
      return "" + a10 === "" + b10;
    case "[object Number]":
      if (+a10 !== +a10)
        return +b10 !== +b10;
      return +a10 === 0 ? 1 / +a10 === 1 / b10 : +a10 === +b10;
    case "[object Date]":
    case "[object Boolean]":
      return +a10 === +b10;
    case "[object Symbol]":
      return typeof Symbol !== "undefined" && Symbol.valueOf.call(a10) === Symbol.valueOf.call(b10);
    case "[object Map]":
    case "[object Set]":
      if (depth >= 0) {
        depth++;
      }
      break;
  }
  a10 = unwrap(a10);
  b10 = unwrap(b10);
  var areArrays = className === "[object Array]";
  if (!areArrays) {
    if (typeof a10 != "object" || typeof b10 != "object")
      return false;
    var aCtor = a10.constructor, bCtor = b10.constructor;
    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && "constructor" in a10 && "constructor" in b10) {
      return false;
    }
  }
  if (depth === 0) {
    return false;
  } else if (depth < 0) {
    depth = -1;
  }
  aStack = aStack || [];
  bStack = bStack || [];
  var length = aStack.length;
  while (length--) {
    if (aStack[length] === a10)
      return bStack[length] === b10;
  }
  aStack.push(a10);
  bStack.push(b10);
  if (areArrays) {
    length = a10.length;
    if (length !== b10.length)
      return false;
    while (length--) {
      if (!eq(a10[length], b10[length], depth - 1, aStack, bStack))
        return false;
    }
  } else {
    var keys = Object.keys(a10);
    var key;
    length = keys.length;
    if (Object.keys(b10).length !== length)
      return false;
    while (length--) {
      key = keys[length];
      if (!(hasProp(b10, key) && eq(a10[key], b10[key], depth - 1, aStack, bStack)))
        return false;
    }
  }
  aStack.pop();
  bStack.pop();
  return true;
}
function unwrap(a10) {
  if (isObservableArray(a10))
    return a10.slice();
  if (isES6Map(a10) || isObservableMap(a10))
    return Array.from(a10.entries());
  if (isES6Set(a10) || isObservableSet(a10))
    return Array.from(a10.entries());
  return a10;
}
function makeIterable(iterator) {
  iterator[Symbol.iterator] = getSelf;
  return iterator;
}
function getSelf() {
  return this;
}
["Symbol", "Map", "Set"].forEach(function(m10) {
  var g10 = getGlobal();
  if (typeof g10[m10] === "undefined") {
    die("MobX requires global '" + m10 + "' to be available or polyfilled");
  }
});
if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
  __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
    spy,
    extras: {
      getDebugName
    },
    $mobx
  });
}

// ../../node_modules/mobx-react-lite/es/utils/assertEnvironment.js
var import_react = __toESM(require_react());
if (!import_react.useState) {
  throw new Error("mobx-react-lite requires React with Hooks support");
}
if (!makeObservable) {
  throw new Error("mobx-react-lite@3 requires mobx at least version 6 to be available");
}

// ../../node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js
var import_react_dom = __toESM(require_react_dom());

// ../../node_modules/mobx-react-lite/es/utils/observerBatching.js
function defaultNoopBatch(callback) {
  callback();
}
function observerBatching(reactionScheduler3) {
  if (!reactionScheduler3) {
    reactionScheduler3 = defaultNoopBatch;
    if (false) {
      console.warn("[MobX] Failed to get unstable_batched updates from react-dom / react-native");
    }
  }
  configure({ reactionScheduler: reactionScheduler3 });
}

// ../../node_modules/mobx-react-lite/es/useObserver.js
var import_react2 = __toESM(require_react());

// ../../node_modules/mobx-react-lite/es/utils/printDebugValue.js
function printDebugValue(v10) {
  return getDependencyTree(v10);
}

// ../../node_modules/mobx-react-lite/es/utils/FinalizationRegistryWrapper.js
var FinalizationRegistryLocal = typeof FinalizationRegistry === "undefined" ? void 0 : FinalizationRegistry;

// ../../node_modules/mobx-react-lite/es/utils/reactionCleanupTrackingCommon.js
function createTrackingData(reaction) {
  var trackingData = {
    reaction,
    mounted: false,
    changedBeforeMount: false,
    cleanAt: Date.now() + CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS
  };
  return trackingData;
}
var CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS = 1e4;
var CLEANUP_TIMER_LOOP_MILLIS = 1e4;

// ../../node_modules/mobx-react-lite/es/utils/createReactionCleanupTrackingUsingFinalizationRegister.js
function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry2) {
  var cleanupTokenToReactionTrackingMap = /* @__PURE__ */ new Map();
  var globalCleanupTokensCounter = 1;
  var registry = new FinalizationRegistry2(function cleanupFunction(token) {
    var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);
    if (trackedReaction) {
      trackedReaction.reaction.dispose();
      cleanupTokenToReactionTrackingMap.delete(token);
    }
  });
  return {
    addReactionToTrack: function(reactionTrackingRef, reaction, objectRetainedByReact) {
      var token = globalCleanupTokensCounter++;
      registry.register(objectRetainedByReact, token, reactionTrackingRef);
      reactionTrackingRef.current = createTrackingData(reaction);
      reactionTrackingRef.current.finalizationRegistryCleanupToken = token;
      cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);
      return reactionTrackingRef.current;
    },
    recordReactionAsCommitted: function(reactionRef) {
      registry.unregister(reactionRef);
      if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {
        cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);
      }
    },
    forceCleanupTimerToRunNowForTests: function() {
    },
    resetCleanupScheduleForTests: function() {
    }
  };
}

// ../../node_modules/mobx-react-lite/es/utils/createTimerBasedReactionCleanupTracking.js
var __values = function(o10) {
  var s10 = typeof Symbol === "function" && Symbol.iterator, m10 = s10 && o10[s10], i10 = 0;
  if (m10)
    return m10.call(o10);
  if (o10 && typeof o10.length === "number")
    return {
      next: function() {
        if (o10 && i10 >= o10.length)
          o10 = void 0;
        return { value: o10 && o10[i10++], done: !o10 };
      }
    };
  throw new TypeError(s10 ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function createTimerBasedReactionCleanupTracking() {
  var uncommittedReactionRefs = /* @__PURE__ */ new Set();
  var reactionCleanupHandle;
  function forceCleanupTimerToRunNowForTests2() {
    if (reactionCleanupHandle) {
      clearTimeout(reactionCleanupHandle);
      cleanUncommittedReactions();
    }
  }
  function resetCleanupScheduleForTests2() {
    var e_1, _a4;
    if (uncommittedReactionRefs.size > 0) {
      try {
        for (var uncommittedReactionRefs_1 = __values(uncommittedReactionRefs), uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next(); !uncommittedReactionRefs_1_1.done; uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next()) {
          var ref = uncommittedReactionRefs_1_1.value;
          var tracking = ref.current;
          if (tracking) {
            tracking.reaction.dispose();
            ref.current = null;
          }
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (uncommittedReactionRefs_1_1 && !uncommittedReactionRefs_1_1.done && (_a4 = uncommittedReactionRefs_1.return))
            _a4.call(uncommittedReactionRefs_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      uncommittedReactionRefs.clear();
    }
    if (reactionCleanupHandle) {
      clearTimeout(reactionCleanupHandle);
      reactionCleanupHandle = void 0;
    }
  }
  function ensureCleanupTimerRunning() {
    if (reactionCleanupHandle === void 0) {
      reactionCleanupHandle = setTimeout(cleanUncommittedReactions, CLEANUP_TIMER_LOOP_MILLIS);
    }
  }
  function scheduleCleanupOfReactionIfLeaked(ref) {
    uncommittedReactionRefs.add(ref);
    ensureCleanupTimerRunning();
  }
  function recordReactionAsCommitted2(reactionRef) {
    uncommittedReactionRefs.delete(reactionRef);
  }
  function cleanUncommittedReactions() {
    reactionCleanupHandle = void 0;
    var now2 = Date.now();
    uncommittedReactionRefs.forEach(function(ref) {
      var tracking = ref.current;
      if (tracking) {
        if (now2 >= tracking.cleanAt) {
          tracking.reaction.dispose();
          ref.current = null;
          uncommittedReactionRefs.delete(ref);
        }
      }
    });
    if (uncommittedReactionRefs.size > 0) {
      ensureCleanupTimerRunning();
    }
  }
  return {
    addReactionToTrack: function(reactionTrackingRef, reaction, objectRetainedByReact) {
      reactionTrackingRef.current = createTrackingData(reaction);
      scheduleCleanupOfReactionIfLeaked(reactionTrackingRef);
      return reactionTrackingRef.current;
    },
    recordReactionAsCommitted: recordReactionAsCommitted2,
    forceCleanupTimerToRunNowForTests: forceCleanupTimerToRunNowForTests2,
    resetCleanupScheduleForTests: resetCleanupScheduleForTests2
  };
}

// ../../node_modules/mobx-react-lite/es/utils/reactionCleanupTracking.js
var _a = FinalizationRegistryLocal ? createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistryLocal) : createTimerBasedReactionCleanupTracking();
var addReactionToTrack = _a.addReactionToTrack;
var recordReactionAsCommitted = _a.recordReactionAsCommitted;
var resetCleanupScheduleForTests = _a.resetCleanupScheduleForTests;
var forceCleanupTimerToRunNowForTests = _a.forceCleanupTimerToRunNowForTests;

// ../../node_modules/mobx-react-lite/es/staticRendering.js
var globalIsUsingStaticRendering = false;
function isUsingStaticRendering() {
  return globalIsUsingStaticRendering;
}

// ../../node_modules/mobx-react-lite/es/useObserver.js
var __read = function(o10, n10) {
  var m10 = typeof Symbol === "function" && o10[Symbol.iterator];
  if (!m10)
    return o10;
  var i10 = m10.call(o10), r11, ar2 = [], e13;
  try {
    while ((n10 === void 0 || n10-- > 0) && !(r11 = i10.next()).done)
      ar2.push(r11.value);
  } catch (error) {
    e13 = { error };
  } finally {
    try {
      if (r11 && !r11.done && (m10 = i10["return"]))
        m10.call(i10);
    } finally {
      if (e13)
        throw e13.error;
    }
  }
  return ar2;
};
function observerComponentNameFor(baseComponentName) {
  return "observer".concat(baseComponentName);
}
var ObjectToBeRetainedByReact = function() {
  function ObjectToBeRetainedByReact2() {
  }
  return ObjectToBeRetainedByReact2;
}();
function objectToBeRetainedByReactFactory() {
  return new ObjectToBeRetainedByReact();
}
function useObserver(fn, baseComponentName) {
  if (baseComponentName === void 0) {
    baseComponentName = "observed";
  }
  if (isUsingStaticRendering()) {
    return fn();
  }
  var _a4 = __read(import_react2.default.useState(objectToBeRetainedByReactFactory), 1), objectRetainedByReact = _a4[0];
  var _b2 = __read(import_react2.default.useState(), 2), setState = _b2[1];
  var forceUpdate = function() {
    return setState([]);
  };
  var reactionTrackingRef = import_react2.default.useRef(null);
  if (!reactionTrackingRef.current) {
    var newReaction = new Reaction(observerComponentNameFor(baseComponentName), function() {
      if (trackingData_1.mounted) {
        forceUpdate();
      } else {
        trackingData_1.changedBeforeMount = true;
      }
    });
    var trackingData_1 = addReactionToTrack(reactionTrackingRef, newReaction, objectRetainedByReact);
  }
  var reaction = reactionTrackingRef.current.reaction;
  import_react2.default.useDebugValue(reaction, printDebugValue);
  import_react2.default.useEffect(function() {
    recordReactionAsCommitted(reactionTrackingRef);
    if (reactionTrackingRef.current) {
      reactionTrackingRef.current.mounted = true;
      if (reactionTrackingRef.current.changedBeforeMount) {
        reactionTrackingRef.current.changedBeforeMount = false;
        forceUpdate();
      }
    } else {
      reactionTrackingRef.current = {
        reaction: new Reaction(observerComponentNameFor(baseComponentName), function() {
          forceUpdate();
        }),
        mounted: true,
        changedBeforeMount: false,
        cleanAt: Infinity
      };
      forceUpdate();
    }
    return function() {
      reactionTrackingRef.current.reaction.dispose();
      reactionTrackingRef.current = null;
    };
  }, []);
  var rendering;
  var exception;
  reaction.track(function() {
    try {
      rendering = fn();
    } catch (e13) {
      exception = e13;
    }
  });
  if (exception) {
    throw exception;
  }
  return rendering;
}

// ../../node_modules/mobx-react-lite/es/observer.js
var import_react3 = __toESM(require_react());
var __assign = function() {
  __assign = Object.assign || function(t12) {
    for (var s10, i10 = 1, n10 = arguments.length; i10 < n10; i10++) {
      s10 = arguments[i10];
      for (var p10 in s10)
        if (Object.prototype.hasOwnProperty.call(s10, p10))
          t12[p10] = s10[p10];
    }
    return t12;
  };
  return __assign.apply(this, arguments);
};
function observer(baseComponent, options) {
  if (isUsingStaticRendering()) {
    return baseComponent;
  }
  var realOptions = __assign({ forwardRef: false }, options);
  var baseComponentName = baseComponent.displayName || baseComponent.name;
  var wrappedComponent = function(props, ref) {
    return useObserver(function() {
      return baseComponent(props, ref);
    }, baseComponentName);
  };
  if (baseComponentName !== "") {
    wrappedComponent.displayName = baseComponentName;
  }
  if (baseComponent.contextTypes) {
    wrappedComponent.contextTypes = baseComponent.contextTypes;
  }
  var memoComponent;
  if (realOptions.forwardRef) {
    memoComponent = (0, import_react3.memo)((0, import_react3.forwardRef)(wrappedComponent));
  } else {
    memoComponent = (0, import_react3.memo)(wrappedComponent);
  }
  copyStaticProperties(baseComponent, memoComponent);
  if (false) {
    Object.defineProperty(memoComponent, "contextTypes", {
      set: function() {
        var _a4;
        throw new Error("[mobx-react-lite] `".concat(this.displayName || ((_a4 = this.type) === null || _a4 === void 0 ? void 0 : _a4.displayName) || "Component", ".contextTypes` must be set before applying `observer`."));
      }
    });
  }
  return memoComponent;
}
var hoistBlackList = {
  $$typeof: true,
  render: true,
  compare: true,
  type: true,
  displayName: true
};
function copyStaticProperties(base, target) {
  Object.keys(base).forEach(function(key) {
    if (!hoistBlackList[key]) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));
    }
  });
}

// ../../node_modules/mobx-react-lite/es/ObserverComponent.js
function ObserverComponent(_a4) {
  var children = _a4.children, render = _a4.render;
  var component = children || render;
  if (typeof component !== "function") {
    return null;
  }
  return useObserver(component);
}
if (false) {
  ObserverComponent.propTypes = {
    children: ObserverPropsCheck,
    render: ObserverPropsCheck
  };
}
ObserverComponent.displayName = "Observer";

// ../../node_modules/mobx-react-lite/es/useLocalObservable.js
var import_react4 = __toESM(require_react());

// ../../node_modules/mobx-react-lite/es/useLocalStore.js
var import_react6 = __toESM(require_react());

// ../../node_modules/mobx-react-lite/es/useAsObservableSource.js
var import_react5 = __toESM(require_react());

// ../../node_modules/mobx-react-lite/es/index.js
observerBatching(import_react_dom.unstable_batchedUpdates);

// ../../packages/core/dist/index.mjs
var React45 = __toESM(require_react(), 1);
var React44 = __toESM(require_react(), 1);
var React3 = __toESM(require_react(), 1);
var React22 = __toESM(require_react(), 1);

// ../../node_modules/@use-gesture/core/dist/maths-b2a210f4.esm.js
function clamp(v10, min, max) {
  return Math.max(min, Math.min(v10, max));
}
var V = {
  toVector(v10, fallback) {
    if (v10 === void 0)
      v10 = fallback;
    return Array.isArray(v10) ? v10 : [v10, v10];
  },
  add(v12, v23) {
    return [v12[0] + v23[0], v12[1] + v23[1]];
  },
  sub(v12, v23) {
    return [v12[0] - v23[0], v12[1] - v23[1]];
  },
  addTo(v12, v23) {
    v12[0] += v23[0];
    v12[1] += v23[1];
  },
  subTo(v12, v23) {
    v12[0] -= v23[0];
    v12[1] -= v23[1];
  }
};
function rubberband(distance, dimension, constant) {
  if (dimension === 0 || Math.abs(dimension) === Infinity)
    return Math.pow(distance, constant * 5);
  return distance * dimension * constant / (dimension + constant * distance);
}
function rubberbandIfOutOfBounds(position, min, max, constant = 0.15) {
  if (constant === 0)
    return clamp(position, min, max);
  if (position < min)
    return -rubberband(min - position, max - min, constant) + min;
  if (position > max)
    return +rubberband(position - max, max - min, constant) + max;
  return position;
}
function computeRubberband(bounds, [Vx2, Vy2], [Rx2, Ry2]) {
  const [[X02, X12], [Y02, Y12]] = bounds;
  return [rubberbandIfOutOfBounds(Vx2, X02, X12, Rx2), rubberbandIfOutOfBounds(Vy2, Y02, Y12, Ry2)];
}

// ../../node_modules/@use-gesture/core/dist/actions-e2a59bb9.esm.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function ownKeys3(object2, enumerableOnly) {
  var keys = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i10 = 1; i10 < arguments.length; i10++) {
    var source = arguments[i10] != null ? arguments[i10] : {};
    i10 % 2 ? ownKeys3(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys3(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
var EVENT_TYPE_MAP = {
  pointer: {
    start: "down",
    change: "move",
    end: "up"
  },
  mouse: {
    start: "down",
    change: "move",
    end: "up"
  },
  touch: {
    start: "start",
    change: "move",
    end: "end"
  },
  gesture: {
    start: "start",
    change: "change",
    end: "end"
  }
};
function capitalize(string) {
  if (!string)
    return "";
  return string[0].toUpperCase() + string.slice(1);
}
var actionsWithoutCaptureSupported = ["enter", "leave"];
function hasCapture(capture = false, actionKey) {
  return capture && !actionsWithoutCaptureSupported.includes(actionKey);
}
function toHandlerProp(device, action2 = "", capture = false) {
  const deviceProps = EVENT_TYPE_MAP[device];
  const actionKey = deviceProps ? deviceProps[action2] || action2 : action2;
  return "on" + capitalize(device) + capitalize(actionKey) + (hasCapture(capture, actionKey) ? "Capture" : "");
}
var pointerCaptureEvents = ["gotpointercapture", "lostpointercapture"];
function parseProp(prop) {
  let eventKey = prop.substring(2).toLowerCase();
  const passive = !!~eventKey.indexOf("passive");
  if (passive)
    eventKey = eventKey.replace("passive", "");
  const captureKey = pointerCaptureEvents.includes(eventKey) ? "capturecapture" : "capture";
  const capture = !!~eventKey.indexOf(captureKey);
  if (capture)
    eventKey = eventKey.replace("capture", "");
  return {
    device: eventKey,
    capture,
    passive
  };
}
function toDomEventType(device, action2 = "") {
  const deviceProps = EVENT_TYPE_MAP[device];
  const actionKey = deviceProps ? deviceProps[action2] || action2 : action2;
  return device + actionKey;
}
function isTouch(event) {
  return "touches" in event;
}
function getPointerType(event) {
  if (isTouch(event))
    return "touch";
  if ("pointerType" in event)
    return event.pointerType;
  return "mouse";
}
function getCurrentTargetTouchList(event) {
  return Array.from(event.touches).filter((e13) => {
    var _event$currentTarget, _event$currentTarget$;
    return e13.target === event.currentTarget || ((_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 ? void 0 : (_event$currentTarget$ = _event$currentTarget.contains) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.call(_event$currentTarget, e13.target));
  });
}
function getTouchList(event) {
  return event.type === "touchend" || event.type === "touchcancel" ? event.changedTouches : event.targetTouches;
}
function getValueEvent(event) {
  return isTouch(event) ? getTouchList(event)[0] : event;
}
function distanceAngle(P12, P23) {
  const dx2 = P23.clientX - P12.clientX;
  const dy2 = P23.clientY - P12.clientY;
  const cx2 = (P23.clientX + P12.clientX) / 2;
  const cy2 = (P23.clientY + P12.clientY) / 2;
  const distance = Math.hypot(dx2, dy2);
  const angle = -(Math.atan2(dx2, dy2) * 180) / Math.PI;
  const origin = [cx2, cy2];
  return {
    angle,
    distance,
    origin
  };
}
function touchIds(event) {
  return getCurrentTargetTouchList(event).map((touch) => touch.identifier);
}
function touchDistanceAngle(event, ids) {
  const [P12, P23] = Array.from(event.touches).filter((touch) => ids.includes(touch.identifier));
  return distanceAngle(P12, P23);
}
function pointerId(event) {
  const valueEvent = getValueEvent(event);
  return isTouch(event) ? valueEvent.identifier : valueEvent.pointerId;
}
function pointerValues(event) {
  const valueEvent = getValueEvent(event);
  return [valueEvent.clientX, valueEvent.clientY];
}
var LINE_HEIGHT = 40;
var PAGE_HEIGHT = 800;
function wheelValues(event) {
  let {
    deltaX,
    deltaY,
    deltaMode
  } = event;
  if (deltaMode === 1) {
    deltaX *= LINE_HEIGHT;
    deltaY *= LINE_HEIGHT;
  } else if (deltaMode === 2) {
    deltaX *= PAGE_HEIGHT;
    deltaY *= PAGE_HEIGHT;
  }
  return [deltaX, deltaY];
}
function scrollValues(event) {
  var _ref, _ref2;
  const {
    scrollX,
    scrollY,
    scrollLeft,
    scrollTop
  } = event.currentTarget;
  return [(_ref = scrollX !== null && scrollX !== void 0 ? scrollX : scrollLeft) !== null && _ref !== void 0 ? _ref : 0, (_ref2 = scrollY !== null && scrollY !== void 0 ? scrollY : scrollTop) !== null && _ref2 !== void 0 ? _ref2 : 0];
}
function getEventDetails(event) {
  const payload = {};
  if ("buttons" in event)
    payload.buttons = event.buttons;
  if ("shiftKey" in event) {
    const {
      shiftKey,
      altKey,
      metaKey,
      ctrlKey
    } = event;
    Object.assign(payload, {
      shiftKey,
      altKey,
      metaKey,
      ctrlKey
    });
  }
  return payload;
}
function call(v10, ...args) {
  if (typeof v10 === "function") {
    return v10(...args);
  } else {
    return v10;
  }
}
function noop3() {
}
function chain(...fns) {
  if (fns.length === 0)
    return noop3;
  if (fns.length === 1)
    return fns[0];
  return function() {
    let result;
    for (const fn of fns) {
      result = fn.apply(this, arguments) || result;
    }
    return result;
  };
}
function assignDefault(value, fallback) {
  return Object.assign({}, fallback, value || {});
}
var BEFORE_LAST_KINEMATICS_DELAY = 32;
var Engine = class {
  constructor(ctrl, args, key) {
    this.ctrl = ctrl;
    this.args = args;
    this.key = key;
    if (!this.state) {
      this.state = {};
      this.computeValues([0, 0]);
      this.computeInitial();
      if (this.init)
        this.init();
      this.reset();
    }
  }
  get state() {
    return this.ctrl.state[this.key];
  }
  set state(state) {
    this.ctrl.state[this.key] = state;
  }
  get shared() {
    return this.ctrl.state.shared;
  }
  get eventStore() {
    return this.ctrl.gestureEventStores[this.key];
  }
  get timeoutStore() {
    return this.ctrl.gestureTimeoutStores[this.key];
  }
  get config() {
    return this.ctrl.config[this.key];
  }
  get sharedConfig() {
    return this.ctrl.config.shared;
  }
  get handler() {
    return this.ctrl.handlers[this.key];
  }
  reset() {
    const {
      state,
      shared,
      ingKey,
      args
    } = this;
    shared[ingKey] = state._active = state.active = state._blocked = state._force = false;
    state._step = [false, false];
    state.intentional = false;
    state._movement = [0, 0];
    state._distance = [0, 0];
    state._direction = [0, 0];
    state._delta = [0, 0];
    state._bounds = [[-Infinity, Infinity], [-Infinity, Infinity]];
    state.args = args;
    state.axis = void 0;
    state.memo = void 0;
    state.elapsedTime = 0;
    state.direction = [0, 0];
    state.distance = [0, 0];
    state.overflow = [0, 0];
    state._movementBound = [false, false];
    state.velocity = [0, 0];
    state.movement = [0, 0];
    state.delta = [0, 0];
    state.timeStamp = 0;
  }
  start(event) {
    const state = this.state;
    const config = this.config;
    if (!state._active) {
      this.reset();
      this.computeInitial();
      state._active = true;
      state.target = event.target;
      state.currentTarget = event.currentTarget;
      state.lastOffset = config.from ? call(config.from, state) : state.offset;
      state.offset = state.lastOffset;
    }
    state.startTime = state.timeStamp = event.timeStamp;
  }
  computeValues(values) {
    const state = this.state;
    state._values = values;
    state.values = this.config.transform(values);
  }
  computeInitial() {
    const state = this.state;
    state._initial = state._values;
    state.initial = state.values;
  }
  compute(event) {
    const {
      state,
      config,
      shared
    } = this;
    state.args = this.args;
    let dt2 = 0;
    if (event) {
      state.event = event;
      if (config.preventDefault && event.cancelable)
        state.event.preventDefault();
      state.type = event.type;
      shared.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size;
      shared.locked = !!document.pointerLockElement;
      Object.assign(shared, getEventDetails(event));
      shared.down = shared.pressed = shared.buttons % 2 === 1 || shared.touches > 0;
      dt2 = event.timeStamp - state.timeStamp;
      state.timeStamp = event.timeStamp;
      state.elapsedTime = state.timeStamp - state.startTime;
    }
    if (state._active) {
      const _absoluteDelta = state._delta.map(Math.abs);
      V.addTo(state._distance, _absoluteDelta);
    }
    if (this.axisIntent)
      this.axisIntent(event);
    const [_m0, _m1] = state._movement;
    const [t02, t12] = config.threshold;
    const {
      _step,
      values
    } = state;
    if (config.hasCustomTransform) {
      if (_step[0] === false)
        _step[0] = Math.abs(_m0) >= t02 && values[0];
      if (_step[1] === false)
        _step[1] = Math.abs(_m1) >= t12 && values[1];
    } else {
      if (_step[0] === false)
        _step[0] = Math.abs(_m0) >= t02 && Math.sign(_m0) * t02;
      if (_step[1] === false)
        _step[1] = Math.abs(_m1) >= t12 && Math.sign(_m1) * t12;
    }
    state.intentional = _step[0] !== false || _step[1] !== false;
    if (!state.intentional)
      return;
    const movement = [0, 0];
    if (config.hasCustomTransform) {
      const [v02, v12] = values;
      movement[0] = _step[0] !== false ? v02 - _step[0] : 0;
      movement[1] = _step[1] !== false ? v12 - _step[1] : 0;
    } else {
      movement[0] = _step[0] !== false ? _m0 - _step[0] : 0;
      movement[1] = _step[1] !== false ? _m1 - _step[1] : 0;
    }
    if (this.restrictToAxis && !state._blocked)
      this.restrictToAxis(movement);
    const previousOffset = state.offset;
    const gestureIsActive = state._active && !state._blocked || state.active;
    if (gestureIsActive) {
      state.first = state._active && !state.active;
      state.last = !state._active && state.active;
      state.active = shared[this.ingKey] = state._active;
      if (event) {
        if (state.first) {
          if ("bounds" in config)
            state._bounds = call(config.bounds, state);
          if (this.setup)
            this.setup();
        }
        state.movement = movement;
        this.computeOffset();
      }
    }
    const [ox2, oy2] = state.offset;
    const [[x02, x12], [y02, y12]] = state._bounds;
    state.overflow = [ox2 < x02 ? -1 : ox2 > x12 ? 1 : 0, oy2 < y02 ? -1 : oy2 > y12 ? 1 : 0];
    state._movementBound[0] = state.overflow[0] ? state._movementBound[0] === false ? state._movement[0] : state._movementBound[0] : false;
    state._movementBound[1] = state.overflow[1] ? state._movementBound[1] === false ? state._movement[1] : state._movementBound[1] : false;
    const rubberband2 = state._active ? config.rubberband || [0, 0] : [0, 0];
    state.offset = computeRubberband(state._bounds, state.offset, rubberband2);
    state.delta = V.sub(state.offset, previousOffset);
    this.computeMovement();
    if (gestureIsActive && (!state.last || dt2 > BEFORE_LAST_KINEMATICS_DELAY)) {
      state.delta = V.sub(state.offset, previousOffset);
      const absoluteDelta = state.delta.map(Math.abs);
      V.addTo(state.distance, absoluteDelta);
      state.direction = state.delta.map(Math.sign);
      state._direction = state._delta.map(Math.sign);
      if (!state.first && dt2 > 0) {
        state.velocity = [absoluteDelta[0] / dt2, absoluteDelta[1] / dt2];
      }
    }
  }
  emit() {
    const state = this.state;
    const shared = this.shared;
    const config = this.config;
    if (!state._active)
      this.clean();
    if ((state._blocked || !state.intentional) && !state._force && !config.triggerAllEvents)
      return;
    const memo23 = this.handler(_objectSpread2(_objectSpread2(_objectSpread2({}, shared), state), {}, {
      [this.aliasKey]: state.values
    }));
    if (memo23 !== void 0)
      state.memo = memo23;
  }
  clean() {
    this.eventStore.clean();
    this.timeoutStore.clean();
  }
};
function selectAxis([dx2, dy2], threshold) {
  const absDx = Math.abs(dx2);
  const absDy = Math.abs(dy2);
  if (absDx > absDy && absDx > threshold) {
    return "x";
  }
  if (absDy > absDx && absDy > threshold) {
    return "y";
  }
  return void 0;
}
var CoordinatesEngine = class extends Engine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "aliasKey", "xy");
  }
  reset() {
    super.reset();
    this.state.axis = void 0;
  }
  init() {
    this.state.offset = [0, 0];
    this.state.lastOffset = [0, 0];
  }
  computeOffset() {
    this.state.offset = V.add(this.state.lastOffset, this.state.movement);
  }
  computeMovement() {
    this.state.movement = V.sub(this.state.offset, this.state.lastOffset);
  }
  axisIntent(event) {
    const state = this.state;
    const config = this.config;
    if (!state.axis && event) {
      const threshold = typeof config.axisThreshold === "object" ? config.axisThreshold[getPointerType(event)] : config.axisThreshold;
      state.axis = selectAxis(state._movement, threshold);
    }
    state._blocked = (config.lockDirection || !!config.axis) && !state.axis || !!config.axis && config.axis !== state.axis;
  }
  restrictToAxis(v10) {
    if (this.config.axis || this.config.lockDirection) {
      switch (this.state.axis) {
        case "x":
          v10[1] = 0;
          break;
        case "y":
          v10[0] = 0;
          break;
      }
    }
  }
};
var identity = (v10) => v10;
var DEFAULT_RUBBERBAND = 0.15;
var commonConfigResolver = {
  enabled(value = true) {
    return value;
  },
  eventOptions(value, _k2, config) {
    return _objectSpread2(_objectSpread2({}, config.shared.eventOptions), value);
  },
  preventDefault(value = false) {
    return value;
  },
  triggerAllEvents(value = false) {
    return value;
  },
  rubberband(value = 0) {
    switch (value) {
      case true:
        return [DEFAULT_RUBBERBAND, DEFAULT_RUBBERBAND];
      case false:
        return [0, 0];
      default:
        return V.toVector(value);
    }
  },
  from(value) {
    if (typeof value === "function")
      return value;
    if (value != null)
      return V.toVector(value);
  },
  transform(value, _k2, config) {
    const transform = value || config.shared.transform;
    this.hasCustomTransform = !!transform;
    if (false) {
      const originalTransform = transform || identity;
      return (v10) => {
        const r11 = originalTransform(v10);
        if (!isFinite(r11[0]) || !isFinite(r11[1])) {
          console.warn(`[@use-gesture]: config.transform() must produce a valid result, but it was: [${r11[0]},${[1]}]`);
        }
        return r11;
      };
    }
    return transform || identity;
  },
  threshold(value) {
    return V.toVector(value, 0);
  }
};
if (false) {
  Object.assign(commonConfigResolver, {
    domTarget(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`domTarget\` option has been renamed to \`target\`.`);
      }
      return NaN;
    },
    lockDirection(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`lockDirection\` option has been merged with \`axis\`. Use it as in \`{ axis: 'lock' }\``);
      }
      return NaN;
    },
    initial(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`initial\` option has been renamed to \`from\`.`);
      }
      return NaN;
    }
  });
}
var DEFAULT_AXIS_THRESHOLD = 0;
var coordinatesConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {
  axis(_v2, _k2, {
    axis
  }) {
    this.lockDirection = axis === "lock";
    if (!this.lockDirection)
      return axis;
  },
  axisThreshold(value = DEFAULT_AXIS_THRESHOLD) {
    return value;
  },
  bounds(value = {}) {
    if (typeof value === "function") {
      return (state) => coordinatesConfigResolver.bounds(value(state));
    }
    if ("current" in value) {
      return () => value.current;
    }
    if (typeof HTMLElement === "function" && value instanceof HTMLElement) {
      return value;
    }
    const {
      left = -Infinity,
      right = Infinity,
      top: top2 = -Infinity,
      bottom = Infinity
    } = value;
    return [[left, right], [top2, bottom]];
  }
});
var DISPLACEMENT = 10;
var KEYS_DELTA_MAP = {
  ArrowRight: (factor = 1) => [DISPLACEMENT * factor, 0],
  ArrowLeft: (factor = 1) => [-DISPLACEMENT * factor, 0],
  ArrowUp: (factor = 1) => [0, -DISPLACEMENT * factor],
  ArrowDown: (factor = 1) => [0, DISPLACEMENT * factor]
};
var DragEngine = class extends CoordinatesEngine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "dragging");
  }
  reset() {
    super.reset();
    const state = this.state;
    state._pointerId = void 0;
    state._pointerActive = false;
    state._keyboardActive = false;
    state._preventScroll = false;
    state._delayed = false;
    state.swipe = [0, 0];
    state.tap = false;
    state.canceled = false;
    state.cancel = this.cancel.bind(this);
  }
  setup() {
    const state = this.state;
    if (state._bounds instanceof HTMLElement) {
      const boundRect = state._bounds.getBoundingClientRect();
      const targetRect = state.currentTarget.getBoundingClientRect();
      const _bounds = {
        left: boundRect.left - targetRect.left + state.offset[0],
        right: boundRect.right - targetRect.right + state.offset[0],
        top: boundRect.top - targetRect.top + state.offset[1],
        bottom: boundRect.bottom - targetRect.bottom + state.offset[1]
      };
      state._bounds = coordinatesConfigResolver.bounds(_bounds);
    }
  }
  cancel() {
    const state = this.state;
    if (state.canceled)
      return;
    state.canceled = true;
    state._active = false;
    setTimeout(() => {
      this.compute();
      this.emit();
    }, 0);
  }
  setActive() {
    this.state._active = this.state._pointerActive || this.state._keyboardActive;
  }
  clean() {
    this.pointerClean();
    this.state._pointerActive = false;
    this.state._keyboardActive = false;
    super.clean();
  }
  pointerDown(event) {
    const config = this.config;
    const state = this.state;
    if (event.buttons != null && (Array.isArray(config.pointerButtons) ? !config.pointerButtons.includes(event.buttons) : config.pointerButtons !== -1 && config.pointerButtons !== event.buttons))
      return;
    const ctrlIds = this.ctrl.setEventIds(event);
    if (config.pointerCapture) {
      event.target.setPointerCapture(event.pointerId);
    }
    if (ctrlIds && ctrlIds.size > 1 && state._pointerActive)
      return;
    this.start(event);
    this.setupPointer(event);
    state._pointerId = pointerId(event);
    state._pointerActive = true;
    this.computeValues(pointerValues(event));
    this.computeInitial();
    if (config.preventScrollAxis && getPointerType(event) !== "mouse") {
      state._active = false;
      this.setupScrollPrevention(event);
    } else if (config.delay > 0) {
      this.setupDelayTrigger(event);
      if (config.triggerAllEvents) {
        this.compute(event);
        this.emit();
      }
    } else {
      this.startPointerDrag(event);
    }
  }
  startPointerDrag(event) {
    const state = this.state;
    state._active = true;
    state._preventScroll = true;
    state._delayed = false;
    this.compute(event);
    this.emit();
  }
  pointerMove(event) {
    const state = this.state;
    const config = this.config;
    if (!state._pointerActive)
      return;
    if (state.type === event.type && event.timeStamp === state.timeStamp)
      return;
    const id2 = pointerId(event);
    if (state._pointerId !== void 0 && id2 !== state._pointerId)
      return;
    const _values = pointerValues(event);
    if (document.pointerLockElement === event.target) {
      state._delta = [event.movementX, event.movementY];
    } else {
      state._delta = V.sub(_values, state._values);
      this.computeValues(_values);
    }
    V.addTo(state._movement, state._delta);
    this.compute(event);
    if (state._delayed && state.intentional) {
      this.timeoutStore.remove("dragDelay");
      state.active = false;
      this.startPointerDrag(event);
      return;
    }
    if (config.preventScrollAxis && !state._preventScroll) {
      if (state.axis) {
        if (state.axis === config.preventScrollAxis || config.preventScrollAxis === "xy") {
          state._active = false;
          this.clean();
          return;
        } else {
          this.timeoutStore.remove("startPointerDrag");
          this.startPointerDrag(event);
          return;
        }
      } else {
        return;
      }
    }
    this.emit();
  }
  pointerUp(event) {
    this.ctrl.setEventIds(event);
    try {
      if (this.config.pointerCapture && event.target.hasPointerCapture(event.pointerId)) {
        ;
        event.target.releasePointerCapture(event.pointerId);
      }
    } catch (_unused) {
      if (false) {
        console.warn(`[@use-gesture]: If you see this message, it's likely that you're using an outdated version of \`@react-three/fiber\`. 

Please upgrade to the latest version.`);
      }
    }
    const state = this.state;
    const config = this.config;
    if (!state._active || !state._pointerActive)
      return;
    const id2 = pointerId(event);
    if (state._pointerId !== void 0 && id2 !== state._pointerId)
      return;
    this.state._pointerActive = false;
    this.setActive();
    this.compute(event);
    const [dx2, dy2] = state._distance;
    state.tap = dx2 <= config.tapsThreshold && dy2 <= config.tapsThreshold;
    if (state.tap && config.filterTaps) {
      state._force = true;
    } else {
      const [dirx, diry] = state.direction;
      const [vx2, vy2] = state.velocity;
      const [mx2, my2] = state.movement;
      const [svx, svy] = config.swipe.velocity;
      const [sx2, sy2] = config.swipe.distance;
      const sdt = config.swipe.duration;
      if (state.elapsedTime < sdt) {
        if (Math.abs(vx2) > svx && Math.abs(mx2) > sx2)
          state.swipe[0] = dirx;
        if (Math.abs(vy2) > svy && Math.abs(my2) > sy2)
          state.swipe[1] = diry;
      }
    }
    this.emit();
  }
  pointerClick(event) {
    if (!this.state.tap) {
      event.preventDefault();
      event.stopPropagation();
    }
  }
  setupPointer(event) {
    const config = this.config;
    const device = config.device;
    if (false) {
      try {
        if (device === "pointer" && config.preventScrollDelay === void 0) {
          const currentTarget = "uv" in event ? event.sourceEvent.currentTarget : event.currentTarget;
          const style = window.getComputedStyle(currentTarget);
          if (style.touchAction === "auto") {
            console.warn(`[@use-gesture]: The drag target has its \`touch-action\` style property set to \`auto\`. It is recommended to add \`touch-action: 'none'\` so that the drag gesture behaves correctly on touch-enabled devices. For more information read this: https://use-gesture.netlify.app/docs/extras/#touch-action.

This message will only show in development mode. It won't appear in production. If this is intended, you can ignore it.`, currentTarget);
          }
        }
      } catch (_unused2) {
      }
    }
    if (config.pointerLock) {
      event.currentTarget.requestPointerLock();
    }
    if (!config.pointerCapture) {
      this.eventStore.add(this.sharedConfig.window, device, "change", this.pointerMove.bind(this));
      this.eventStore.add(this.sharedConfig.window, device, "end", this.pointerUp.bind(this));
      this.eventStore.add(this.sharedConfig.window, device, "cancel", this.pointerUp.bind(this));
    }
  }
  pointerClean() {
    if (this.config.pointerLock && document.pointerLockElement === this.state.currentTarget) {
      document.exitPointerLock();
    }
  }
  preventScroll(event) {
    if (this.state._preventScroll && event.cancelable) {
      event.preventDefault();
    }
  }
  setupScrollPrevention(event) {
    persistEvent(event);
    const remove3 = this.eventStore.add(this.sharedConfig.window, "touch", "change", this.preventScroll.bind(this), {
      passive: false
    });
    this.eventStore.add(this.sharedConfig.window, "touch", "end", remove3);
    this.eventStore.add(this.sharedConfig.window, "touch", "cancel", remove3);
    this.timeoutStore.add("startPointerDrag", this.startPointerDrag.bind(this), this.config.preventScrollDelay, event);
  }
  setupDelayTrigger(event) {
    this.state._delayed = true;
    this.timeoutStore.add("dragDelay", () => {
      this.state._step = [0, 0];
      this.startPointerDrag(event);
    }, this.config.delay);
  }
  keyDown(event) {
    const deltaFn = KEYS_DELTA_MAP[event.key];
    if (deltaFn) {
      const state = this.state;
      const factor = event.shiftKey ? 10 : event.altKey ? 0.1 : 1;
      this.start(event);
      state._delta = deltaFn(factor);
      state._keyboardActive = true;
      V.addTo(state._movement, state._delta);
      this.compute(event);
      this.emit();
    }
  }
  keyUp(event) {
    if (!(event.key in KEYS_DELTA_MAP))
      return;
    this.state._keyboardActive = false;
    this.setActive();
    this.compute(event);
    this.emit();
  }
  bind(bindFunction) {
    const device = this.config.device;
    bindFunction(device, "start", this.pointerDown.bind(this));
    if (this.config.pointerCapture) {
      bindFunction(device, "change", this.pointerMove.bind(this));
      bindFunction(device, "end", this.pointerUp.bind(this));
      bindFunction(device, "cancel", this.pointerUp.bind(this));
      bindFunction("lostPointerCapture", "", this.pointerUp.bind(this));
    }
    bindFunction("key", "down", this.keyDown.bind(this));
    bindFunction("key", "up", this.keyUp.bind(this));
    if (this.config.filterTaps) {
      bindFunction("click", "", this.pointerClick.bind(this), {
        capture: true,
        passive: false
      });
    }
  }
};
function persistEvent(event) {
  "persist" in event && typeof event.persist === "function" && event.persist();
}
var isBrowser = typeof window !== "undefined" && window.document && window.document.createElement;
function supportsTouchEvents() {
  return isBrowser && "ontouchstart" in window;
}
function isTouchScreen() {
  return supportsTouchEvents() || isBrowser && window.navigator.maxTouchPoints > 1;
}
function supportsPointerEvents() {
  return isBrowser && "onpointerdown" in window;
}
function supportsPointerLock() {
  return isBrowser && "exitPointerLock" in window.document;
}
function supportsGestureEvents() {
  try {
    return "constructor" in GestureEvent;
  } catch (e13) {
    return false;
  }
}
var SUPPORT = {
  isBrowser,
  gesture: supportsGestureEvents(),
  touch: isTouchScreen(),
  touchscreen: isTouchScreen(),
  pointer: supportsPointerEvents(),
  pointerLock: supportsPointerLock()
};
var DEFAULT_PREVENT_SCROLL_DELAY = 250;
var DEFAULT_DRAG_DELAY = 180;
var DEFAULT_SWIPE_VELOCITY = 0.5;
var DEFAULT_SWIPE_DISTANCE = 50;
var DEFAULT_SWIPE_DURATION = 250;
var DEFAULT_DRAG_AXIS_THRESHOLD = {
  mouse: 0,
  touch: 0,
  pen: 8
};
var dragConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {
  device(_v2, _k2, {
    pointer: {
      touch = false,
      lock = false,
      mouse = false
    } = {}
  }) {
    this.pointerLock = lock && SUPPORT.pointerLock;
    if (SUPPORT.touch && touch)
      return "touch";
    if (this.pointerLock)
      return "mouse";
    if (SUPPORT.pointer && !mouse)
      return "pointer";
    if (SUPPORT.touch)
      return "touch";
    return "mouse";
  },
  preventScrollAxis(value, _k2, {
    preventScroll
  }) {
    this.preventScrollDelay = typeof preventScroll === "number" ? preventScroll : preventScroll || preventScroll === void 0 && value ? DEFAULT_PREVENT_SCROLL_DELAY : void 0;
    if (!SUPPORT.touchscreen || preventScroll === false)
      return void 0;
    return value ? value : preventScroll !== void 0 ? "y" : void 0;
  },
  pointerCapture(_v2, _k2, {
    pointer: {
      capture = true,
      buttons = 1
    } = {}
  }) {
    this.pointerButtons = buttons;
    return !this.pointerLock && this.device === "pointer" && capture;
  },
  threshold(value, _k2, {
    filterTaps = false,
    tapsThreshold = 3,
    axis = void 0
  }) {
    const threshold = V.toVector(value, filterTaps ? tapsThreshold : axis ? 1 : 0);
    this.filterTaps = filterTaps;
    this.tapsThreshold = tapsThreshold;
    return threshold;
  },
  swipe({
    velocity = DEFAULT_SWIPE_VELOCITY,
    distance = DEFAULT_SWIPE_DISTANCE,
    duration = DEFAULT_SWIPE_DURATION
  } = {}) {
    return {
      velocity: this.transform(V.toVector(velocity)),
      distance: this.transform(V.toVector(distance)),
      duration
    };
  },
  delay(value = 0) {
    switch (value) {
      case true:
        return DEFAULT_DRAG_DELAY;
      case false:
        return 0;
      default:
        return value;
    }
  },
  axisThreshold(value) {
    if (!value)
      return DEFAULT_DRAG_AXIS_THRESHOLD;
    return _objectSpread2(_objectSpread2({}, DEFAULT_DRAG_AXIS_THRESHOLD), value);
  }
});
if (false) {
  Object.assign(dragConfigResolver, {
    useTouch(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`useTouch\` option has been renamed to \`pointer.touch\`. Use it as in \`{ pointer: { touch: true } }\`.`);
      }
      return NaN;
    },
    experimental_preventWindowScrollY(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`experimental_preventWindowScrollY\` option has been renamed to \`preventScroll\`.`);
      }
      return NaN;
    },
    swipeVelocity(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`swipeVelocity\` option has been renamed to \`swipe.velocity\`. Use it as in \`{ swipe: { velocity: 0.5 } }\`.`);
      }
      return NaN;
    },
    swipeDistance(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`swipeDistance\` option has been renamed to \`swipe.distance\`. Use it as in \`{ swipe: { distance: 50 } }\`.`);
      }
      return NaN;
    },
    swipeDuration(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`swipeDuration\` option has been renamed to \`swipe.duration\`. Use it as in \`{ swipe: { duration: 250 } }\`.`);
      }
      return NaN;
    }
  });
}
var SCALE_ANGLE_RATIO_INTENT_DEG = 30;
var PINCH_WHEEL_RATIO = 100;
var PinchEngine = class extends Engine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "pinching");
    _defineProperty(this, "aliasKey", "da");
  }
  init() {
    this.state.offset = [1, 0];
    this.state.lastOffset = [1, 0];
    this.state._pointerEvents = /* @__PURE__ */ new Map();
  }
  reset() {
    super.reset();
    const state = this.state;
    state._touchIds = [];
    state.canceled = false;
    state.cancel = this.cancel.bind(this);
    state.turns = 0;
  }
  computeOffset() {
    const {
      type,
      movement,
      lastOffset
    } = this.state;
    if (type === "wheel") {
      this.state.offset = V.add(movement, lastOffset);
    } else {
      this.state.offset = [(1 + movement[0]) * lastOffset[0], movement[1] + lastOffset[1]];
    }
  }
  computeMovement() {
    const {
      offset,
      lastOffset
    } = this.state;
    this.state.movement = [offset[0] / lastOffset[0], offset[1] - lastOffset[1]];
  }
  axisIntent() {
    const state = this.state;
    const [_m0, _m1] = state._movement;
    if (!state.axis) {
      const axisMovementDifference = Math.abs(_m0) * SCALE_ANGLE_RATIO_INTENT_DEG - Math.abs(_m1);
      if (axisMovementDifference < 0)
        state.axis = "angle";
      else if (axisMovementDifference > 0)
        state.axis = "scale";
    }
  }
  restrictToAxis(v10) {
    if (this.config.lockDirection) {
      if (this.state.axis === "scale")
        v10[1] = 0;
      else if (this.state.axis === "angle")
        v10[0] = 0;
    }
  }
  cancel() {
    const state = this.state;
    if (state.canceled)
      return;
    setTimeout(() => {
      state.canceled = true;
      state._active = false;
      this.compute();
      this.emit();
    }, 0);
  }
  touchStart(event) {
    this.ctrl.setEventIds(event);
    const state = this.state;
    const ctrlTouchIds = this.ctrl.touchIds;
    if (state._active) {
      if (state._touchIds.every((id2) => ctrlTouchIds.has(id2)))
        return;
    }
    if (ctrlTouchIds.size < 2)
      return;
    this.start(event);
    state._touchIds = Array.from(ctrlTouchIds).slice(0, 2);
    const payload = touchDistanceAngle(event, state._touchIds);
    this.pinchStart(event, payload);
  }
  pointerStart(event) {
    if (event.buttons != null && event.buttons % 2 !== 1)
      return;
    this.ctrl.setEventIds(event);
    event.target.setPointerCapture(event.pointerId);
    const state = this.state;
    const _pointerEvents = state._pointerEvents;
    const ctrlPointerIds = this.ctrl.pointerIds;
    if (state._active) {
      if (Array.from(_pointerEvents.keys()).every((id2) => ctrlPointerIds.has(id2)))
        return;
    }
    if (_pointerEvents.size < 2) {
      _pointerEvents.set(event.pointerId, event);
    }
    if (state._pointerEvents.size < 2)
      return;
    this.start(event);
    const payload = distanceAngle(...Array.from(_pointerEvents.values()));
    this.pinchStart(event, payload);
  }
  pinchStart(event, payload) {
    const state = this.state;
    state.origin = payload.origin;
    this.computeValues([payload.distance, payload.angle]);
    this.computeInitial();
    this.compute(event);
    this.emit();
  }
  touchMove(event) {
    if (!this.state._active)
      return;
    const payload = touchDistanceAngle(event, this.state._touchIds);
    this.pinchMove(event, payload);
  }
  pointerMove(event) {
    const _pointerEvents = this.state._pointerEvents;
    if (_pointerEvents.has(event.pointerId)) {
      _pointerEvents.set(event.pointerId, event);
    }
    if (!this.state._active)
      return;
    const payload = distanceAngle(...Array.from(_pointerEvents.values()));
    this.pinchMove(event, payload);
  }
  pinchMove(event, payload) {
    const state = this.state;
    const prev_a = state._values[1];
    const delta_a = payload.angle - prev_a;
    let delta_turns = 0;
    if (Math.abs(delta_a) > 270)
      delta_turns += Math.sign(delta_a);
    this.computeValues([payload.distance, payload.angle - 360 * delta_turns]);
    state.origin = payload.origin;
    state.turns = delta_turns;
    state._movement = [state._values[0] / state._initial[0] - 1, state._values[1] - state._initial[1]];
    this.compute(event);
    this.emit();
  }
  touchEnd(event) {
    this.ctrl.setEventIds(event);
    if (!this.state._active)
      return;
    if (this.state._touchIds.some((id2) => !this.ctrl.touchIds.has(id2))) {
      this.state._active = false;
      this.compute(event);
      this.emit();
    }
  }
  pointerEnd(event) {
    const state = this.state;
    this.ctrl.setEventIds(event);
    try {
      event.target.releasePointerCapture(event.pointerId);
    } catch (_unused) {
    }
    if (state._pointerEvents.has(event.pointerId)) {
      state._pointerEvents.delete(event.pointerId);
    }
    if (!state._active)
      return;
    if (state._pointerEvents.size < 2) {
      state._active = false;
      this.compute(event);
      this.emit();
    }
  }
  gestureStart(event) {
    if (event.cancelable)
      event.preventDefault();
    const state = this.state;
    if (state._active)
      return;
    this.start(event);
    this.computeValues([event.scale, event.rotation]);
    state.origin = [event.clientX, event.clientY];
    this.compute(event);
    this.emit();
  }
  gestureMove(event) {
    if (event.cancelable)
      event.preventDefault();
    if (!this.state._active)
      return;
    const state = this.state;
    this.computeValues([event.scale, event.rotation]);
    state.origin = [event.clientX, event.clientY];
    const _previousMovement = state._movement;
    state._movement = [event.scale - 1, event.rotation];
    state._delta = V.sub(state._movement, _previousMovement);
    this.compute(event);
    this.emit();
  }
  gestureEnd(event) {
    if (!this.state._active)
      return;
    this.state._active = false;
    this.compute(event);
    this.emit();
  }
  wheel(event) {
    const modifierKey = this.config.modifierKey;
    if (modifierKey && !event[modifierKey])
      return;
    if (!this.state._active)
      this.wheelStart(event);
    else
      this.wheelChange(event);
    this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this));
  }
  wheelStart(event) {
    this.start(event);
    this.wheelChange(event);
  }
  wheelChange(event) {
    const isR3f = "uv" in event;
    if (!isR3f) {
      if (event.cancelable) {
        event.preventDefault();
      }
      if (false) {
        console.warn(`[@use-gesture]: To properly support zoom on trackpads, try using the \`target\` option.

This message will only appear in development mode.`);
      }
    }
    const state = this.state;
    state._delta = [-wheelValues(event)[1] / PINCH_WHEEL_RATIO * state.offset[0], 0];
    V.addTo(state._movement, state._delta);
    this.state.origin = [event.clientX, event.clientY];
    this.compute(event);
    this.emit();
  }
  wheelEnd() {
    if (!this.state._active)
      return;
    this.state._active = false;
    this.compute();
    this.emit();
  }
  bind(bindFunction) {
    const device = this.config.device;
    if (!!device) {
      bindFunction(device, "start", this[device + "Start"].bind(this));
      bindFunction(device, "change", this[device + "Move"].bind(this));
      bindFunction(device, "end", this[device + "End"].bind(this));
      bindFunction(device, "cancel", this[device + "End"].bind(this));
    } else {
      bindFunction("wheel", "", this.wheel.bind(this), {
        passive: false
      });
    }
  }
};
var pinchConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {
  device(_v2, _k2, {
    shared,
    pointer: {
      touch = false
    } = {}
  }) {
    const sharedConfig = shared;
    if (sharedConfig.target && !SUPPORT.touch && SUPPORT.gesture)
      return "gesture";
    if (SUPPORT.touch && touch)
      return "touch";
    if (SUPPORT.touchscreen) {
      if (SUPPORT.pointer)
        return "pointer";
      if (SUPPORT.touch)
        return "touch";
    }
  },
  bounds(_v2, _k2, {
    scaleBounds = {},
    angleBounds = {}
  }) {
    const _scaleBounds = (state) => {
      const D10 = assignDefault(call(scaleBounds, state), {
        min: -Infinity,
        max: Infinity
      });
      return [D10.min, D10.max];
    };
    const _angleBounds = (state) => {
      const A10 = assignDefault(call(angleBounds, state), {
        min: -Infinity,
        max: Infinity
      });
      return [A10.min, A10.max];
    };
    if (typeof scaleBounds !== "function" && typeof angleBounds !== "function")
      return [_scaleBounds(), _angleBounds()];
    return (state) => [_scaleBounds(state), _angleBounds(state)];
  },
  threshold(value, _k2, config) {
    this.lockDirection = config.axis === "lock";
    const threshold = V.toVector(value, this.lockDirection ? [0.1, 3] : 0);
    return threshold;
  },
  modifierKey(value) {
    if (value === void 0)
      return "ctrlKey";
    return value;
  }
});
var MoveEngine = class extends CoordinatesEngine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "moving");
  }
  move(event) {
    if (this.config.mouseOnly && event.pointerType !== "mouse")
      return;
    if (!this.state._active)
      this.moveStart(event);
    else
      this.moveChange(event);
    this.timeoutStore.add("moveEnd", this.moveEnd.bind(this));
  }
  moveStart(event) {
    this.start(event);
    this.computeValues(pointerValues(event));
    this.compute(event);
    this.computeInitial();
    this.emit();
  }
  moveChange(event) {
    if (!this.state._active)
      return;
    const values = pointerValues(event);
    const state = this.state;
    state._delta = V.sub(values, state._values);
    V.addTo(state._movement, state._delta);
    this.computeValues(values);
    this.compute(event);
    this.emit();
  }
  moveEnd(event) {
    if (!this.state._active)
      return;
    this.state._active = false;
    this.compute(event);
    this.emit();
  }
  bind(bindFunction) {
    bindFunction("pointer", "change", this.move.bind(this));
    bindFunction("pointer", "leave", this.moveEnd.bind(this));
  }
};
var moveConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {
  mouseOnly: (value = true) => value
});
var ScrollEngine = class extends CoordinatesEngine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "scrolling");
  }
  scroll(event) {
    if (!this.state._active)
      this.start(event);
    this.scrollChange(event);
    this.timeoutStore.add("scrollEnd", this.scrollEnd.bind(this));
  }
  scrollChange(event) {
    if (event.cancelable)
      event.preventDefault();
    const state = this.state;
    const values = scrollValues(event);
    state._delta = V.sub(values, state._values);
    V.addTo(state._movement, state._delta);
    this.computeValues(values);
    this.compute(event);
    this.emit();
  }
  scrollEnd() {
    if (!this.state._active)
      return;
    this.state._active = false;
    this.compute();
    this.emit();
  }
  bind(bindFunction) {
    bindFunction("scroll", "", this.scroll.bind(this));
  }
};
var scrollConfigResolver = coordinatesConfigResolver;
var WheelEngine = class extends CoordinatesEngine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "wheeling");
  }
  wheel(event) {
    if (!this.state._active)
      this.start(event);
    this.wheelChange(event);
    this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this));
  }
  wheelChange(event) {
    const state = this.state;
    state._delta = wheelValues(event);
    V.addTo(state._movement, state._delta);
    const [ox2, oy2] = state.overflow;
    const [dx2, dy2] = state._delta;
    const [dirx, diry] = state._direction;
    if (ox2 < 0 && dx2 > 0 && dirx < 0 || ox2 > 0 && dx2 < 0 && dirx > 0) {
      state._movement[0] = state._movementBound[0];
    }
    if (oy2 < 0 && dy2 > 0 && diry < 0 || oy2 > 0 && dy2 < 0 && diry > 0) {
      state._movement[1] = state._movementBound[1];
    }
    this.compute(event);
    this.emit();
  }
  wheelEnd() {
    if (!this.state._active)
      return;
    this.state._active = false;
    this.compute();
    this.emit();
  }
  bind(bindFunction) {
    bindFunction("wheel", "", this.wheel.bind(this));
  }
};
var wheelConfigResolver = coordinatesConfigResolver;
var HoverEngine = class extends CoordinatesEngine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "hovering");
  }
  enter(event) {
    if (this.config.mouseOnly && event.pointerType !== "mouse")
      return;
    this.start(event);
    this.computeValues(pointerValues(event));
    this.compute(event);
    this.emit();
  }
  leave(event) {
    if (this.config.mouseOnly && event.pointerType !== "mouse")
      return;
    const state = this.state;
    if (!state._active)
      return;
    state._active = false;
    const values = pointerValues(event);
    state._movement = state._delta = V.sub(values, state._values);
    this.computeValues(values);
    this.compute(event);
    state.delta = state.movement;
    this.emit();
  }
  bind(bindFunction) {
    bindFunction("pointer", "enter", this.enter.bind(this));
    bindFunction("pointer", "leave", this.leave.bind(this));
  }
};
var hoverConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {
  mouseOnly: (value = true) => value
});
var EngineMap = /* @__PURE__ */ new Map();
var ConfigResolverMap = /* @__PURE__ */ new Map();
function registerAction(action2) {
  EngineMap.set(action2.key, action2.engine);
  ConfigResolverMap.set(action2.key, action2.resolver);
}
var dragAction = {
  key: "drag",
  engine: DragEngine,
  resolver: dragConfigResolver
};
var hoverAction = {
  key: "hover",
  engine: HoverEngine,
  resolver: hoverConfigResolver
};
var moveAction = {
  key: "move",
  engine: MoveEngine,
  resolver: moveConfigResolver
};
var pinchAction = {
  key: "pinch",
  engine: PinchEngine,
  resolver: pinchConfigResolver
};
var scrollAction = {
  key: "scroll",
  engine: ScrollEngine,
  resolver: scrollConfigResolver
};
var wheelAction = {
  key: "wheel",
  engine: WheelEngine,
  resolver: wheelConfigResolver
};

// ../../node_modules/@use-gesture/react/dist/use-gesture-react.esm.js
var import_react7 = __toESM(require_react());

// ../../node_modules/@use-gesture/core/dist/use-gesture-core.esm.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i10;
  for (i10 = 0; i10 < sourceKeys.length; i10++) {
    key = sourceKeys[i10];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i10;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i10 = 0; i10 < sourceSymbolKeys.length; i10++) {
      key = sourceSymbolKeys[i10];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var sharedConfigResolver = {
  target(value) {
    if (value) {
      return () => "current" in value ? value.current : value;
    }
    return void 0;
  },
  enabled(value = true) {
    return value;
  },
  window(value = SUPPORT.isBrowser ? window : void 0) {
    return value;
  },
  eventOptions({
    passive = true,
    capture = false
  } = {}) {
    return {
      passive,
      capture
    };
  },
  transform(value) {
    return value;
  }
};
var _excluded = ["target", "eventOptions", "window", "enabled", "transform"];
function resolveWith(config = {}, resolvers) {
  const result = {};
  for (const [key, resolver] of Object.entries(resolvers)) {
    switch (typeof resolver) {
      case "function":
        if (false) {
          const r11 = resolver.call(result, config[key], key, config);
          if (!Number.isNaN(r11))
            result[key] = r11;
        } else {
          result[key] = resolver.call(result, config[key], key, config);
        }
        break;
      case "object":
        result[key] = resolveWith(config[key], resolver);
        break;
      case "boolean":
        if (resolver)
          result[key] = config[key];
        break;
    }
  }
  return result;
}
function parse(config, gestureKey) {
  const _ref = config, {
    target,
    eventOptions,
    window: window2,
    enabled,
    transform
  } = _ref, rest = _objectWithoutProperties(_ref, _excluded);
  const _config = {
    shared: resolveWith({
      target,
      eventOptions,
      window: window2,
      enabled,
      transform
    }, sharedConfigResolver)
  };
  if (gestureKey) {
    const resolver = ConfigResolverMap.get(gestureKey);
    _config[gestureKey] = resolveWith(_objectSpread2({
      shared: _config.shared
    }, rest), resolver);
  } else {
    for (const key in rest) {
      const resolver = ConfigResolverMap.get(key);
      if (resolver) {
        _config[key] = resolveWith(_objectSpread2({
          shared: _config.shared
        }, rest[key]), resolver);
      } else if (false) {
        if (!["drag", "pinch", "scroll", "wheel", "move", "hover"].includes(key)) {
          if (key === "domTarget") {
            throw Error(`[@use-gesture]: \`domTarget\` option has been renamed to \`target\`.`);
          }
          console.warn(`[@use-gesture]: Unknown config key \`${key}\` was used. Please read the documentation for further information.`);
        }
      }
    }
  }
  return _config;
}
var EventStore = class {
  constructor(ctrl, gestureKey) {
    _defineProperty(this, "_listeners", /* @__PURE__ */ new Set());
    this._ctrl = ctrl;
    this._gestureKey = gestureKey;
  }
  add(element, device, action2, handler, options) {
    const listeners = this._listeners;
    const type = toDomEventType(device, action2);
    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};
    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);
    element.addEventListener(type, handler, eventOptions);
    const remove3 = () => {
      element.removeEventListener(type, handler, eventOptions);
      listeners.delete(remove3);
    };
    listeners.add(remove3);
    return remove3;
  }
  clean() {
    this._listeners.forEach((remove3) => remove3());
    this._listeners.clear();
  }
};
var TimeoutStore = class {
  constructor() {
    _defineProperty(this, "_timeouts", /* @__PURE__ */ new Map());
  }
  add(key, callback, ms2 = 140, ...args) {
    this.remove(key);
    this._timeouts.set(key, window.setTimeout(callback, ms2, ...args));
  }
  remove(key) {
    const timeout = this._timeouts.get(key);
    if (timeout)
      window.clearTimeout(timeout);
  }
  clean() {
    this._timeouts.forEach((timeout) => void window.clearTimeout(timeout));
    this._timeouts.clear();
  }
};
var Controller = class {
  constructor(handlers) {
    _defineProperty(this, "gestures", /* @__PURE__ */ new Set());
    _defineProperty(this, "_targetEventStore", new EventStore(this));
    _defineProperty(this, "gestureEventStores", {});
    _defineProperty(this, "gestureTimeoutStores", {});
    _defineProperty(this, "handlers", {});
    _defineProperty(this, "config", {});
    _defineProperty(this, "pointerIds", /* @__PURE__ */ new Set());
    _defineProperty(this, "touchIds", /* @__PURE__ */ new Set());
    _defineProperty(this, "state", {
      shared: {
        shiftKey: false,
        metaKey: false,
        ctrlKey: false,
        altKey: false
      }
    });
    resolveGestures(this, handlers);
  }
  setEventIds(event) {
    if (isTouch(event)) {
      this.touchIds = new Set(touchIds(event));
      return this.touchIds;
    } else if ("pointerId" in event) {
      if (event.type === "pointerup" || event.type === "pointercancel")
        this.pointerIds.delete(event.pointerId);
      else if (event.type === "pointerdown")
        this.pointerIds.add(event.pointerId);
      return this.pointerIds;
    }
  }
  applyHandlers(handlers, nativeHandlers) {
    this.handlers = handlers;
    this.nativeHandlers = nativeHandlers;
  }
  applyConfig(config, gestureKey) {
    this.config = parse(config, gestureKey);
  }
  clean() {
    this._targetEventStore.clean();
    for (const key of this.gestures) {
      this.gestureEventStores[key].clean();
      this.gestureTimeoutStores[key].clean();
    }
  }
  effect() {
    if (this.config.shared.target)
      this.bind();
    return () => this._targetEventStore.clean();
  }
  bind(...args) {
    const sharedConfig = this.config.shared;
    const props = {};
    let target;
    if (sharedConfig.target) {
      target = sharedConfig.target();
      if (!target)
        return;
    }
    if (sharedConfig.enabled) {
      for (const gestureKey of this.gestures) {
        const gestureConfig = this.config[gestureKey];
        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);
        if (gestureConfig.enabled) {
          const Engine2 = EngineMap.get(gestureKey);
          new Engine2(this, args, gestureKey).bind(bindFunction);
        }
      }
      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);
      for (const eventKey in this.nativeHandlers) {
        nativeBindFunction(eventKey, "", (event) => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {
          event,
          args
        })), void 0, true);
      }
    }
    for (const handlerProp in props) {
      props[handlerProp] = chain(...props[handlerProp]);
    }
    if (!target)
      return props;
    for (const handlerProp in props) {
      const {
        device,
        capture,
        passive
      } = parseProp(handlerProp);
      this._targetEventStore.add(target, device, "", props[handlerProp], {
        capture,
        passive
      });
    }
  }
};
function setupGesture(ctrl, gestureKey) {
  ctrl.gestures.add(gestureKey);
  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);
  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();
}
function resolveGestures(ctrl, internalHandlers) {
  if (internalHandlers.drag)
    setupGesture(ctrl, "drag");
  if (internalHandlers.wheel)
    setupGesture(ctrl, "wheel");
  if (internalHandlers.scroll)
    setupGesture(ctrl, "scroll");
  if (internalHandlers.move)
    setupGesture(ctrl, "move");
  if (internalHandlers.pinch)
    setupGesture(ctrl, "pinch");
  if (internalHandlers.hover)
    setupGesture(ctrl, "hover");
}
var bindToProps = (props, eventOptions, withPassiveOption) => (device, action2, handler, options = {}, isNative = false) => {
  var _options$capture, _options$passive;
  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;
  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;
  let handlerProp = isNative ? device : toHandlerProp(device, action2, capture);
  if (withPassiveOption && passive)
    handlerProp += "Passive";
  props[handlerProp] = props[handlerProp] || [];
  props[handlerProp].push(handler);
};
var RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;
function sortHandlers(_handlers2) {
  const native = {};
  const handlers = {};
  const actions = /* @__PURE__ */ new Set();
  for (let key in _handlers2) {
    if (RE_NOT_NATIVE.test(key)) {
      actions.add(RegExp.lastMatch);
      handlers[key] = _handlers2[key];
    } else {
      native[key] = _handlers2[key];
    }
  }
  return [handlers, native, actions];
}
function registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {
  if (!actions.has(handlerKey))
    return;
  if (!EngineMap.has(key)) {
    if (false) {
      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \`${key}\` gesture but isn't properly configured.

Please add \`${key}Action\` when creating your handler.`);
    }
    return;
  }
  const startKey = handlerKey + "Start";
  const endKey = handlerKey + "End";
  const fn = (state) => {
    let memo23 = void 0;
    if (state.first && startKey in handlers)
      handlers[startKey](state);
    if (handlerKey in handlers)
      memo23 = handlers[handlerKey](state);
    if (state.last && endKey in handlers)
      handlers[endKey](state);
    return memo23;
  };
  internalHandlers[key] = fn;
  config[key] = config[key] || {};
}
function parseMergedHandlers(mergedHandlers, mergedConfig) {
  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);
  const internalHandlers = {};
  registerGesture(actions, handlers, "onDrag", "drag", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onWheel", "wheel", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onScroll", "scroll", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onPinch", "pinch", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onMove", "move", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onHover", "hover", internalHandlers, mergedConfig);
  return {
    handlers: internalHandlers,
    config: mergedConfig,
    nativeHandlers
  };
}

// ../../node_modules/@use-gesture/react/dist/use-gesture-react.esm.js
function useRecognizers(handlers, config = {}, gestureKey, nativeHandlers) {
  const ctrl = import_react7.default.useMemo(() => new Controller(handlers), []);
  ctrl.applyHandlers(handlers, nativeHandlers);
  ctrl.applyConfig(config, gestureKey);
  import_react7.default.useEffect(ctrl.effect.bind(ctrl));
  import_react7.default.useEffect(() => {
    return ctrl.clean.bind(ctrl);
  }, []);
  if (config.target === void 0) {
    return ctrl.bind.bind(ctrl);
  }
  return void 0;
}
function createUseGesture(actions) {
  actions.forEach(registerAction);
  return function useGesture2(_handlers2, _config) {
    const {
      handlers,
      nativeHandlers,
      config
    } = parseMergedHandlers(_handlers2, _config || {});
    return useRecognizers(handlers, config, void 0, nativeHandlers);
  };
}
function useGesture(handlers, config) {
  const hook = createUseGesture([dragAction, pinchAction, scrollAction, wheelAction, moveAction, hoverAction]);
  return hook(handlers, config || {});
}

// ../../packages/vec/dist/index.mjs
var h = Object.defineProperty;
var d = (s10, n10, r11) => n10 in s10 ? h(s10, n10, { enumerable: true, configurable: true, writable: true, value: r11 }) : s10[n10] = r11;
var m = (s10, n10, r11) => (d(s10, typeof n10 != "symbol" ? n10 + "" : n10, r11), r11);
var t = class {
  static clamp(n10, r11, u10) {
    return Math.max(r11, typeof u10 != "undefined" ? Math.min(n10, u10) : n10);
  }
  static clampV(n10, r11, u10) {
    return n10.map((b10) => u10 ? t.clamp(b10, r11, u10) : t.clamp(b10, r11));
  }
  static cross(n10, r11, u10) {
    return (r11[0] - n10[0]) * (u10[1] - n10[1]) - (u10[0] - n10[0]) * (r11[1] - n10[1]);
  }
  static snap(n10, r11 = 1) {
    return [Math.round(n10[0] / r11) * r11, Math.round(n10[1] / r11) * r11];
  }
};
var e = t;
m(e, "neg", (n10) => [-n10[0], -n10[1]]), m(e, "add", (n10, r11) => [n10[0] + r11[0], n10[1] + r11[1]]), m(e, "addScalar", (n10, r11) => [n10[0] + r11, n10[1] + r11]), m(e, "sub", (n10, r11) => [n10[0] - r11[0], n10[1] - r11[1]]), m(e, "subScalar", (n10, r11) => [n10[0] - r11, n10[1] - r11]), m(e, "vec", (n10, r11) => [r11[0] - n10[0], r11[1] - n10[1]]), m(e, "mul", (n10, r11) => [n10[0] * r11, n10[1] * r11]), m(e, "mulV", (n10, r11) => [n10[0] * r11[0], n10[1] * r11[1]]), m(e, "div", (n10, r11) => [n10[0] / r11, n10[1] / r11]), m(e, "divV", (n10, r11) => [n10[0] / r11[0], n10[1] / r11[1]]), m(e, "per", (n10) => [n10[1], -n10[0]]), m(e, "dpr", (n10, r11) => n10[0] * r11[0] + n10[1] * r11[1]), m(e, "cpr", (n10, r11) => n10[0] * r11[1] - r11[0] * n10[1]), m(e, "len2", (n10) => n10[0] * n10[0] + n10[1] * n10[1]), m(e, "len", (n10) => Math.hypot(n10[0], n10[1])), m(e, "pry", (n10, r11) => t.dpr(n10, r11) / t.len(r11)), m(e, "uni", (n10) => t.div(n10, t.len(n10))), m(e, "normalize", (n10) => t.uni(n10)), m(e, "tangent", (n10, r11) => t.uni(t.sub(n10, r11))), m(e, "dist2", (n10, r11) => t.len2(t.sub(n10, r11))), m(e, "dist", (n10, r11) => Math.hypot(n10[1] - r11[1], n10[0] - r11[0])), m(e, "fastDist", (n10, r11) => {
  let u10 = [r11[0] - n10[0], r11[1] - n10[1]], b10 = [Math.abs(u10[0]), Math.abs(u10[1])], a10 = 1 / Math.max(b10[0], b10[1]);
  return a10 = a10 * (1.29289 - (b10[0] + b10[1]) * a10 * 0.29289), [u10[0] * a10, u10[1] * a10];
}), m(e, "ang", (n10, r11) => Math.atan2(t.cpr(n10, r11), t.dpr(n10, r11))), m(e, "angle", (n10, r11) => Math.atan2(r11[1] - n10[1], r11[0] - n10[0])), m(e, "med", (n10, r11) => t.mul(t.add(n10, r11), 0.5)), m(e, "rot", (n10, r11 = 0) => [n10[0] * Math.cos(r11) - n10[1] * Math.sin(r11), n10[0] * Math.sin(r11) + n10[1] * Math.cos(r11)]), m(e, "rotWith", (n10, r11, u10 = 0) => {
  if (u10 === 0)
    return n10;
  let b10 = Math.sin(u10), a10 = Math.cos(u10), i10 = n10[0] - r11[0], o10 = n10[1] - r11[1], c10 = i10 * a10 - o10 * b10, l10 = i10 * b10 + o10 * a10;
  return [c10 + r11[0], l10 + r11[1]];
}), m(e, "isEqual", (n10, r11) => n10[0] === r11[0] && n10[1] === r11[1]), m(e, "lrp", (n10, r11, u10) => t.add(n10, t.mul(t.sub(r11, n10), u10))), m(e, "int", (n10, r11, u10, b10, a10 = 1) => {
  let i10 = (t.clamp(u10, b10) - u10) / (b10 - u10);
  return t.add(t.mul(n10, 1 - i10), t.mul(r11, a10));
}), m(e, "ang3", (n10, r11, u10) => {
  let b10 = t.vec(r11, n10), a10 = t.vec(r11, u10);
  return t.ang(b10, a10);
}), m(e, "abs", (n10) => [Math.abs(n10[0]), Math.abs(n10[1])]), m(e, "rescale", (n10, r11) => {
  let u10 = t.len(n10);
  return [r11 * n10[0] / u10, r11 * n10[1] / u10];
}), m(e, "isLeft", (n10, r11, u10) => (r11[0] - n10[0]) * (u10[1] - n10[1]) - (u10[0] - n10[0]) * (r11[1] - n10[1])), m(e, "clockwise", (n10, r11, u10) => t.isLeft(n10, r11, u10) > 0), m(e, "toFixed", (n10) => n10.map((r11) => Math.round(r11 * 100) / 100)), m(e, "nearestPointOnLineThroughPoint", (n10, r11, u10) => t.add(n10, t.mul(r11, t.pry(t.sub(u10, n10), r11)))), m(e, "distanceToLineThroughPoint", (n10, r11, u10) => t.dist(u10, t.nearestPointOnLineThroughPoint(n10, r11, u10))), m(e, "nearestPointOnLineSegment", (n10, r11, u10, b10 = true) => {
  let a10 = t.uni(t.sub(r11, n10)), i10 = t.add(n10, t.mul(a10, t.pry(t.sub(u10, n10), a10)));
  if (b10) {
    if (i10[0] < Math.min(n10[0], r11[0]))
      return n10[0] < r11[0] ? n10 : r11;
    if (i10[0] > Math.max(n10[0], r11[0]))
      return n10[0] > r11[0] ? n10 : r11;
    if (i10[1] < Math.min(n10[1], r11[1]))
      return n10[1] < r11[1] ? n10 : r11;
    if (i10[1] > Math.max(n10[1], r11[1]))
      return n10[1] > r11[1] ? n10 : r11;
  }
  return i10;
}), m(e, "distanceToLineSegment", (n10, r11, u10, b10 = true) => t.dist(u10, t.nearestPointOnLineSegment(n10, r11, u10, b10))), m(e, "nearestPointOnBounds", (n10, r11) => [t.clamp(r11[0], n10.minX, n10.maxX), t.clamp(r11[1], n10.minY, n10.maxY)]), m(e, "distanceToBounds", (n10, r11) => t.dist(r11, t.nearestPointOnBounds(n10, r11))), m(e, "nudge", (n10, r11, u10) => t.isEqual(n10, r11) ? n10 : t.add(n10, t.mul(t.uni(t.sub(r11, n10)), u10))), m(e, "nudgeAtAngle", (n10, r11, u10) => [Math.cos(r11) * u10 + n10[0], Math.sin(r11) * u10 + n10[1]]), m(e, "toPrecision", (n10, r11 = 4) => [+n10[0].toPrecision(r11), +n10[1].toPrecision(r11)]), m(e, "pointsBetween", (n10, r11, u10 = 6) => Array.from(Array(u10)).map((b10, a10) => {
  let i10 = a10 / (u10 - 1), o10 = Math.min(1, 0.5 + Math.abs(0.5 - i10));
  return [...t.lrp(n10, r11, i10), o10];
})), m(e, "slope", (n10, r11) => n10[0] === r11[0] ? NaN : (n10[1] - r11[1]) / (n10[0] - r11[0])), m(e, "max", (...n10) => [Math.max(...n10.map((r11) => r11[0])), Math.max(...n10.map((r11) => r11[1]))]), m(e, "min", (...n10) => [Math.min(...n10.map((r11) => r11[0])), Math.min(...n10.map((r11) => r11[1]))]);
var p = e;

// ../../packages/core/dist/index.mjs
var import_react9 = __toESM(require_react(), 1);
var React32 = __toESM(require_react(), 1);
var React4 = __toESM(require_react(), 1);
var React5 = __toESM(require_react(), 1);
var React6 = __toESM(require_react(), 1);
var React7 = __toESM(require_react(), 1);
var React8 = __toESM(require_react(), 1);
var React9 = __toESM(require_react(), 1);
var React10 = __toESM(require_react(), 1);
var React11 = __toESM(require_react(), 1);
var React12 = __toESM(require_react(), 1);
var React13 = __toESM(require_react(), 1);
var React14 = __toESM(require_react(), 1);
var React15 = __toESM(require_react(), 1);
var React16 = __toESM(require_react(), 1);
var React17 = __toESM(require_react(), 1);
var React18 = __toESM(require_react(), 1);
var React35 = __toESM(require_react(), 1);
var React27 = __toESM(require_react(), 1);
var React19 = __toESM(require_react(), 1);
var React20 = __toESM(require_react(), 1);
var React21 = __toESM(require_react(), 1);
var React222 = __toESM(require_react(), 1);
var React23 = __toESM(require_react(), 1);
var React25 = __toESM(require_react(), 1);
var React24 = __toESM(require_react(), 1);
var React26 = __toESM(require_react(), 1);
var React28 = __toESM(require_react(), 1);
var React30 = __toESM(require_react(), 1);
var React29 = __toESM(require_react(), 1);
var React33 = __toESM(require_react(), 1);
var React322 = __toESM(require_react(), 1);
var React31 = __toESM(require_react(), 1);
var React34 = __toESM(require_react(), 1);
var React37 = __toESM(require_react(), 1);
var React36 = __toESM(require_react(), 1);

// ../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var MapShim = function() {
  if (typeof Map !== "undefined") {
    return Map;
  }
  function getIndex(arr, key) {
    var result = -1;
    arr.some(function(entry, index2) {
      if (entry[0] === key) {
        result = index2;
        return true;
      }
      return false;
    });
    return result;
  }
  return function() {
    function class_1() {
      this.__entries__ = [];
    }
    Object.defineProperty(class_1.prototype, "size", {
      get: function() {
        return this.__entries__.length;
      },
      enumerable: true,
      configurable: true
    });
    class_1.prototype.get = function(key) {
      var index2 = getIndex(this.__entries__, key);
      var entry = this.__entries__[index2];
      return entry && entry[1];
    };
    class_1.prototype.set = function(key, value) {
      var index2 = getIndex(this.__entries__, key);
      if (~index2) {
        this.__entries__[index2][1] = value;
      } else {
        this.__entries__.push([key, value]);
      }
    };
    class_1.prototype.delete = function(key) {
      var entries2 = this.__entries__;
      var index2 = getIndex(entries2, key);
      if (~index2) {
        entries2.splice(index2, 1);
      }
    };
    class_1.prototype.has = function(key) {
      return !!~getIndex(this.__entries__, key);
    };
    class_1.prototype.clear = function() {
      this.__entries__.splice(0);
    };
    class_1.prototype.forEach = function(callback, ctx) {
      if (ctx === void 0) {
        ctx = null;
      }
      for (var _i2 = 0, _a4 = this.__entries__; _i2 < _a4.length; _i2++) {
        var entry = _a4[_i2];
        callback.call(ctx, entry[1], entry[0]);
      }
    };
    return class_1;
  }();
}();
var isBrowser2 = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function() {
  if (typeof global !== "undefined" && global.Math === Math) {
    return global;
  }
  if (typeof self !== "undefined" && self.Math === Math) {
    return self;
  }
  if (typeof window !== "undefined" && window.Math === Math) {
    return window;
  }
  return Function("return this")();
}();
var requestAnimationFrame$1 = function() {
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame.bind(global$1);
  }
  return function(callback) {
    return setTimeout(function() {
      return callback(Date.now());
    }, 1e3 / 60);
  };
}();
var trailingTimeout = 2;
function throttle(callback, delay) {
  var leadingCall = false, trailingCall = false, lastCallTime = 0;
  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }
    if (trailingCall) {
      proxy();
    }
  }
  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      }
      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }
    lastCallTime = timeStamp;
  }
  return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = function() {
  function ResizeObserverController2() {
    this.connected_ = false;
    this.mutationEventsAdded_ = false;
    this.mutationsObserver_ = null;
    this.observers_ = [];
    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
  }
  ResizeObserverController2.prototype.addObserver = function(observer2) {
    if (!~this.observers_.indexOf(observer2)) {
      this.observers_.push(observer2);
    }
    if (!this.connected_) {
      this.connect_();
    }
  };
  ResizeObserverController2.prototype.removeObserver = function(observer2) {
    var observers2 = this.observers_;
    var index2 = observers2.indexOf(observer2);
    if (~index2) {
      observers2.splice(index2, 1);
    }
    if (!observers2.length && this.connected_) {
      this.disconnect_();
    }
  };
  ResizeObserverController2.prototype.refresh = function() {
    var changesDetected = this.updateObservers_();
    if (changesDetected) {
      this.refresh();
    }
  };
  ResizeObserverController2.prototype.updateObservers_ = function() {
    var activeObservers = this.observers_.filter(function(observer2) {
      return observer2.gatherActive(), observer2.hasActive();
    });
    activeObservers.forEach(function(observer2) {
      return observer2.broadcastActive();
    });
    return activeObservers.length > 0;
  };
  ResizeObserverController2.prototype.connect_ = function() {
    if (!isBrowser2 || this.connected_) {
      return;
    }
    document.addEventListener("transitionend", this.onTransitionEnd_);
    window.addEventListener("resize", this.refresh);
    if (mutationObserverSupported) {
      this.mutationsObserver_ = new MutationObserver(this.refresh);
      this.mutationsObserver_.observe(document, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    } else {
      document.addEventListener("DOMSubtreeModified", this.refresh);
      this.mutationEventsAdded_ = true;
    }
    this.connected_ = true;
  };
  ResizeObserverController2.prototype.disconnect_ = function() {
    if (!isBrowser2 || !this.connected_) {
      return;
    }
    document.removeEventListener("transitionend", this.onTransitionEnd_);
    window.removeEventListener("resize", this.refresh);
    if (this.mutationsObserver_) {
      this.mutationsObserver_.disconnect();
    }
    if (this.mutationEventsAdded_) {
      document.removeEventListener("DOMSubtreeModified", this.refresh);
    }
    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
  };
  ResizeObserverController2.prototype.onTransitionEnd_ = function(_a4) {
    var _b2 = _a4.propertyName, propertyName = _b2 === void 0 ? "" : _b2;
    var isReflowProperty = transitionKeys.some(function(key) {
      return !!~propertyName.indexOf(key);
    });
    if (isReflowProperty) {
      this.refresh();
    }
  };
  ResizeObserverController2.getInstance = function() {
    if (!this.instance_) {
      this.instance_ = new ResizeObserverController2();
    }
    return this.instance_;
  };
  ResizeObserverController2.instance_ = null;
  return ResizeObserverController2;
}();
var defineConfigurable = function(target, props) {
  for (var _i2 = 0, _a4 = Object.keys(props); _i2 < _a4.length; _i2++) {
    var key = _a4[_i2];
    Object.defineProperty(target, key, {
      value: props[key],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }
  return target;
};
var getWindowOf = function(target) {
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
  return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value) {
  return parseFloat(value) || 0;
}
function getBordersSize(styles2) {
  var positions = [];
  for (var _i2 = 1; _i2 < arguments.length; _i2++) {
    positions[_i2 - 1] = arguments[_i2];
  }
  return positions.reduce(function(size, position) {
    var value = styles2["border-" + position + "-width"];
    return size + toFloat(value);
  }, 0);
}
function getPaddings(styles2) {
  var positions = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var _i2 = 0, positions_1 = positions; _i2 < positions_1.length; _i2++) {
    var position = positions_1[_i2];
    var value = styles2["padding-" + position];
    paddings[position] = toFloat(value);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles2 = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles2);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width = toFloat(styles2.width), height = toFloat(styles2.height);
  if (styles2.boxSizing === "border-box") {
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles2, "left", "right") + horizPad;
    }
    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles2, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width, height);
}
var isSVGGraphicsElement = function() {
  if (typeof SVGGraphicsElement !== "undefined") {
    return function(target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  }
  return function(target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
  };
}();
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  if (!isBrowser2) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }
  return getHTMLElementContentRect(target);
}
function createReadOnlyRect(_a4) {
  var x10 = _a4.x, y10 = _a4.y, width = _a4.width, height = _a4.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x: x10,
    y: y10,
    width,
    height,
    top: y10,
    right: x10 + width,
    bottom: height + y10,
    left: x10
  });
  return rect;
}
function createRectInit(x10, y10, width, height) {
  return { x: x10, y: y10, width, height };
}
var ResizeObservation = function() {
  function ResizeObservation2(target) {
    this.broadcastWidth = 0;
    this.broadcastHeight = 0;
    this.contentRect_ = createRectInit(0, 0, 0, 0);
    this.target = target;
  }
  ResizeObservation2.prototype.isActive = function() {
    var rect = getContentRect(this.target);
    this.contentRect_ = rect;
    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
  };
  ResizeObservation2.prototype.broadcastRect = function() {
    var rect = this.contentRect_;
    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;
    return rect;
  };
  return ResizeObservation2;
}();
var ResizeObserverEntry = function() {
  function ResizeObserverEntry2(target, rectInit) {
    var contentRect = createReadOnlyRect(rectInit);
    defineConfigurable(this, { target, contentRect });
  }
  return ResizeObserverEntry2;
}();
var ResizeObserverSPI = function() {
  function ResizeObserverSPI2(callback, controller, callbackCtx) {
    this.activeObservations_ = [];
    this.observations_ = new MapShim();
    if (typeof callback !== "function") {
      throw new TypeError("The callback provided as parameter 1 is not a function.");
    }
    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
  }
  ResizeObserverSPI2.prototype.observe = function(target) {
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    if (typeof Element === "undefined" || !(Element instanceof Object)) {
      return;
    }
    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }
    var observations = this.observations_;
    if (observations.has(target)) {
      return;
    }
    observations.set(target, new ResizeObservation(target));
    this.controller_.addObserver(this);
    this.controller_.refresh();
  };
  ResizeObserverSPI2.prototype.unobserve = function(target) {
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    if (typeof Element === "undefined" || !(Element instanceof Object)) {
      return;
    }
    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }
    var observations = this.observations_;
    if (!observations.has(target)) {
      return;
    }
    observations.delete(target);
    if (!observations.size) {
      this.controller_.removeObserver(this);
    }
  };
  ResizeObserverSPI2.prototype.disconnect = function() {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
  };
  ResizeObserverSPI2.prototype.gatherActive = function() {
    var _this = this;
    this.clearActive();
    this.observations_.forEach(function(observation) {
      if (observation.isActive()) {
        _this.activeObservations_.push(observation);
      }
    });
  };
  ResizeObserverSPI2.prototype.broadcastActive = function() {
    if (!this.hasActive()) {
      return;
    }
    var ctx = this.callbackCtx_;
    var entries2 = this.activeObservations_.map(function(observation) {
      return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });
    this.callback_.call(ctx, entries2, ctx);
    this.clearActive();
  };
  ResizeObserverSPI2.prototype.clearActive = function() {
    this.activeObservations_.splice(0);
  };
  ResizeObserverSPI2.prototype.hasActive = function() {
    return this.activeObservations_.length > 0;
  };
  return ResizeObserverSPI2;
}();
var observers = typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : new MapShim();
var ResizeObserver2 = function() {
  function ResizeObserver3(callback) {
    if (!(this instanceof ResizeObserver3)) {
      throw new TypeError("Cannot call a class as a function.");
    }
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    var controller = ResizeObserverController.getInstance();
    var observer2 = new ResizeObserverSPI(callback, controller, this);
    observers.set(this, observer2);
  }
  return ResizeObserver3;
}();
[
  "observe",
  "unobserve",
  "disconnect"
].forEach(function(method) {
  ResizeObserver2.prototype[method] = function() {
    var _a4;
    return (_a4 = observers.get(this))[method].apply(_a4, arguments);
  };
});
var index = function() {
  if (typeof global$1.ResizeObserver !== "undefined") {
    return global$1.ResizeObserver;
  }
  return ResizeObserver2;
}();
var ResizeObserver_es_default = index;

// ../../packages/core/dist/index.mjs
var React38 = __toESM(require_react(), 1);
var React39 = __toESM(require_react(), 1);
var React40 = __toESM(require_react(), 1);
var React41 = __toESM(require_react(), 1);
var React42 = __toESM(require_react(), 1);
var React43 = __toESM(require_react(), 1);

// ../../node_modules/perfect-freehand/dist/esm/index.js
function W(e13, t12, u10, x10 = (g10) => g10) {
  return e13 * x10(0.5 - t12 * (0.5 - u10));
}
function re(e13) {
  return [-e13[0], -e13[1]];
}
function l(e13, t12) {
  return [e13[0] + t12[0], e13[1] + t12[1]];
}
function a(e13, t12) {
  return [e13[0] - t12[0], e13[1] - t12[1]];
}
function b(e13, t12) {
  return [e13[0] * t12, e13[1] * t12];
}
function le(e13, t12) {
  return [e13[0] / t12, e13[1] / t12];
}
function R(e13) {
  return [e13[1], -e13[0]];
}
function ne(e13, t12) {
  return e13[0] * t12[0] + e13[1] * t12[1];
}
function oe(e13, t12) {
  return e13[0] === t12[0] && e13[1] === t12[1];
}
function fe(e13) {
  return Math.hypot(e13[0], e13[1]);
}
function be(e13) {
  return e13[0] * e13[0] + e13[1] * e13[1];
}
function Y(e13, t12) {
  return be(a(e13, t12));
}
function H(e13) {
  return le(e13, fe(e13));
}
function ue(e13, t12) {
  return Math.hypot(e13[1] - t12[1], e13[0] - t12[0]);
}
function L(e13, t12, u10) {
  let x10 = Math.sin(u10), g10 = Math.cos(u10), y10 = e13[0] - t12[0], n10 = e13[1] - t12[1], f10 = y10 * g10 - n10 * x10, d10 = y10 * x10 + n10 * g10;
  return [f10 + t12[0], d10 + t12[1]];
}
function V2(e13, t12, u10) {
  return l(e13, b(a(t12, e13), u10));
}
function Z(e13, t12, u10) {
  return l(e13, b(t12, u10));
}
var { min: T, PI: ge } = Math;
var se = 0.275;
var j = ge + 1e-4;
function ie(e13, t12 = {}) {
  let { size: u10 = 16, smoothing: x10 = 0.5, thinning: g10 = 0.5, simulatePressure: y10 = true, easing: n10 = (r11) => r11, start: f10 = {}, end: d10 = {}, last: _10 = false } = t12, { cap: S10 = true, easing: q10 = (r11) => r11 * (2 - r11) } = f10, { cap: C10 = true, easing: p10 = (r11) => --r11 * r11 * r11 + 1 } = d10;
  if (e13.length === 0 || u10 <= 0)
    return [];
  let m10 = e13[e13.length - 1].runningLength, h10 = f10.taper === false ? 0 : f10.taper === true ? Math.max(u10, m10) : f10.taper, z10 = d10.taper === false ? 0 : d10.taper === true ? Math.max(u10, m10) : d10.taper, $10 = Math.pow(u10 * x10, 2), D10 = [], M10 = [], N10 = e13.slice(0, 10).reduce((r11, i10) => {
    let o10 = i10.pressure;
    if (y10) {
      let s10 = T(1, i10.distance / u10), J10 = T(1, 1 - s10);
      o10 = T(1, r11 + (J10 - r11) * (s10 * se));
    }
    return (r11 + o10) / 2;
  }, e13[0].pressure), c10 = W(u10, g10, e13[e13.length - 1].pressure, n10), U10, B10 = e13[0].vector, I10 = e13[0].point, F10 = I10, O10 = I10, E10 = F10;
  for (let r11 = 0; r11 < e13.length; r11++) {
    let { pressure: i10 } = e13[r11], { point: o10, vector: s10, distance: J10, runningLength: K10 } = e13[r11];
    if (r11 < e13.length - 1 && m10 - K10 < 3)
      continue;
    if (g10) {
      if (y10) {
        let v10 = T(1, J10 / u10), Q = T(1, 1 - v10);
        i10 = T(1, N10 + (Q - N10) * (v10 * se));
      }
      c10 = W(u10, g10, i10, n10);
    } else
      c10 = u10 / 2;
    U10 === void 0 && (U10 = c10);
    let ce = K10 < h10 ? q10(K10 / h10) : 1, ae2 = m10 - K10 < z10 ? p10((m10 - K10) / z10) : 1;
    if (c10 = Math.max(0.01, c10 * Math.min(ce, ae2)), r11 === e13.length - 1) {
      let v10 = b(R(s10), c10);
      D10.push(a(o10, v10)), M10.push(l(o10, v10));
      continue;
    }
    let A10 = e13[r11 + 1].vector, ee2 = ne(s10, A10);
    if (ee2 < 0) {
      let v10 = b(R(B10), c10);
      for (let Q = 1 / 13, G10 = 0; G10 <= 1; G10 += Q)
        O10 = L(a(o10, v10), o10, j * G10), D10.push(O10), E10 = L(l(o10, v10), o10, j * -G10), M10.push(E10);
      I10 = O10, F10 = E10;
      continue;
    }
    let te = b(R(V2(A10, s10, ee2)), c10);
    O10 = a(o10, te), (r11 <= 1 || Y(I10, O10) > $10) && (D10.push(O10), I10 = O10), E10 = l(o10, te), (r11 <= 1 || Y(F10, E10) > $10) && (M10.push(E10), F10 = E10), N10 = i10, B10 = s10;
  }
  let k10 = e13[0].point.slice(0, 2), P10 = e13.length > 1 ? e13[e13.length - 1].point.slice(0, 2) : l(e13[0].point, [1, 1]), X10 = [], w10 = [];
  if (e13.length === 1) {
    if (!(h10 || z10) || _10) {
      let r11 = Z(k10, H(R(a(k10, P10))), -(U10 || c10)), i10 = [];
      for (let o10 = 1 / 13, s10 = o10; s10 <= 1; s10 += o10)
        i10.push(L(r11, k10, j * 2 * s10));
      return i10;
    }
  } else {
    if (!(h10 || z10 && e13.length === 1))
      if (S10)
        for (let i10 = 1 / 13, o10 = i10; o10 <= 1; o10 += i10) {
          let s10 = L(M10[0], k10, j * o10);
          X10.push(s10);
        }
      else {
        let i10 = a(D10[0], M10[0]), o10 = b(i10, 0.5), s10 = b(i10, 0.51);
        X10.push(a(k10, o10), a(k10, s10), l(k10, s10), l(k10, o10));
      }
    let r11 = R(re(e13[e13.length - 1].vector));
    if (z10 || h10 && e13.length === 1)
      w10.push(P10);
    else if (C10) {
      let i10 = Z(P10, r11, c10);
      for (let o10 = 1 / 29, s10 = o10; s10 < 1; s10 += o10)
        w10.push(L(i10, P10, j * 3 * s10));
    } else
      w10.push(l(P10, b(r11, c10)), l(P10, b(r11, c10 * 0.99)), a(P10, b(r11, c10 * 0.99)), a(P10, b(r11, c10)));
  }
  return D10.concat(w10, M10.reverse(), X10);
}
function me(e13, t12 = {}) {
  var C10;
  let { streamline: u10 = 0.5, size: x10 = 16, last: g10 = false } = t12;
  if (e13.length === 0)
    return [];
  let y10 = 0.15 + (1 - u10) * 0.85, n10 = Array.isArray(e13[0]) ? e13 : e13.map(({ x: p10, y: m10, pressure: h10 = 0.5 }) => [p10, m10, h10]);
  if (n10.length === 2) {
    let p10 = n10[1];
    n10 = n10.slice(0, -1);
    for (let m10 = 1; m10 < 5; m10++)
      n10.push(V2(n10[0], p10, m10 / 4));
  }
  n10.length === 1 && (n10 = [...n10, [...l(n10[0], [1, 1]), ...n10[0].slice(2)]]);
  let f10 = [{ point: [n10[0][0], n10[0][1]], pressure: n10[0][2] >= 0 ? n10[0][2] : 0.25, vector: [1, 1], distance: 0, runningLength: 0 }], d10 = false, _10 = 0, S10 = f10[0], q10 = n10.length - 1;
  for (let p10 = 1; p10 < n10.length; p10++) {
    let m10 = g10 && p10 === q10 ? n10[p10].slice(0, 2) : V2(S10.point, n10[p10], y10);
    if (oe(S10.point, m10))
      continue;
    let h10 = ue(m10, S10.point);
    if (_10 += h10, p10 < q10 && !d10) {
      if (_10 < x10)
        continue;
      d10 = true;
    }
    S10 = { point: m10, pressure: n10[p10][2] >= 0 ? n10[p10][2] : 0.5, vector: H(a(S10.point, m10)), distance: h10, runningLength: _10 }, f10.push(S10);
  }
  return f10[0].vector = ((C10 = f10[1]) == null ? void 0 : C10.vector) || [0, 0], f10;
}
function pe(e13, t12 = {}) {
  return ie(me(e13, t12), t12);
}
var Te = pe;

// ../../packages/core/dist/index.mjs
var React46 = __toESM(require_react(), 1);
var React47 = __toESM(require_react(), 1);

// ../../packages/intersect/dist/index.mjs
var __defProp2 = Object.defineProperty;
var __defProps2 = Object.defineProperties;
var __getOwnPropDescs2 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols2 = Object.getOwnPropertySymbols;
var __hasOwnProp2 = Object.prototype.hasOwnProperty;
var __propIsEnum2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp2 = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues2 = (a10, b10) => {
  for (var prop in b10 || (b10 = {}))
    if (__hasOwnProp2.call(b10, prop))
      __defNormalProp2(a10, prop, b10[prop]);
  if (__getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(b10)) {
      if (__propIsEnum2.call(b10, prop))
        __defNormalProp2(a10, prop, b10[prop]);
    }
  return a10;
};
var __spreadProps2 = (a10, b10) => __defProps2(a10, __getOwnPropDescs2(b10));
function createIntersection(message, ...points) {
  const didIntersect = points.length > 0;
  return { didIntersect, message, points };
}
function getRectangleSides(point, size, rotation = 0) {
  const center = [point[0] + size[0] / 2, point[1] + size[1] / 2];
  const tl2 = e.rotWith(point, center, rotation);
  const tr2 = e.rotWith(e.add(point, [size[0], 0]), center, rotation);
  const br2 = e.rotWith(e.add(point, size), center, rotation);
  const bl2 = e.rotWith(e.add(point, [0, size[1]]), center, rotation);
  return [
    ["top", [tl2, tr2]],
    ["right", [tr2, br2]],
    ["bottom", [br2, bl2]],
    ["left", [bl2, tl2]]
  ];
}
function isAngleBetween(a10, b10, c10) {
  if (c10 === a10 || c10 === b10)
    return true;
  const PI2 = Math.PI * 2;
  const AB2 = (b10 - a10 + PI2) % PI2;
  const AC2 = (c10 - a10 + PI2) % PI2;
  return AB2 <= Math.PI !== AC2 > AB2;
}
function intersectLineLine(AB2, PQ) {
  const slopeAB = e.slope(AB2[0], AB2[1]);
  const slopePQ = e.slope(PQ[0], PQ[1]);
  if (slopeAB === slopePQ)
    return void 0;
  if (Number.isNaN(slopeAB) && !Number.isNaN(slopePQ)) {
    return [AB2[0][0], (AB2[0][0] - PQ[0][0]) * slopePQ + PQ[0][1]];
  }
  if (Number.isNaN(slopePQ) && !Number.isNaN(slopeAB)) {
    return [PQ[0][0], (PQ[0][0] - AB2[0][0]) * slopeAB + AB2[0][1]];
  }
  const x10 = (slopeAB * AB2[0][0] - slopePQ * PQ[0][0] + PQ[0][1] - AB2[0][1]) / (slopeAB - slopePQ);
  const y10 = slopePQ * (x10 - PQ[0][0]) + PQ[0][1];
  return [x10, y10];
}
function intersectRayLineSegment(origin, direction, a12, a23) {
  const [x10, y10] = origin;
  const [dx2, dy2] = direction;
  const [x12, y12] = a12;
  const [x23, y23] = a23;
  if (dy2 / dx2 !== (y23 - y12) / (x23 - x12)) {
    const d10 = dx2 * (y23 - y12) - dy2 * (x23 - x12);
    if (d10 !== 0) {
      const r11 = ((y10 - y12) * (x23 - x12) - (x10 - x12) * (y23 - y12)) / d10;
      const s10 = ((y10 - y12) * dx2 - (x10 - x12) * dy2) / d10;
      if (r11 >= 0 && s10 >= 0 && s10 <= 1) {
        return createIntersection("intersection", [x10 + r11 * dx2, y10 + r11 * dy2]);
      }
    }
  }
  return createIntersection("no intersection");
}
function intersectRayRectangle(origin, direction, point, size, rotation = 0) {
  return intersectRectangleRay(point, size, rotation, origin, direction);
}
function intersectRayEllipse(origin, direction, center, rx2, ry2, rotation) {
  const a12 = origin;
  const a23 = e.mul(direction, 999999999);
  return intersectLineSegmentEllipse(a12, a23, center, rx2, ry2, rotation);
}
function intersectRayBounds(origin, direction, bounds, rotation = 0) {
  const { minX, minY, width, height } = bounds;
  return intersectRayRectangle(origin, direction, [minX, minY], [width, height], rotation);
}
function intersectLineSegmentLineSegment(a12, a23, b12, b23) {
  const AB2 = e.sub(a12, b12);
  const BV = e.sub(b23, b12);
  const AV = e.sub(a23, a12);
  const ua_t = BV[0] * AB2[1] - BV[1] * AB2[0];
  const ub_t = AV[0] * AB2[1] - AV[1] * AB2[0];
  const u_b = BV[1] * AV[0] - BV[0] * AV[1];
  if (ua_t === 0 || ub_t === 0) {
    return createIntersection("coincident");
  }
  if (u_b === 0) {
    return createIntersection("parallel");
  }
  if (u_b !== 0) {
    const ua2 = ua_t / u_b;
    const ub2 = ub_t / u_b;
    if (0 <= ua2 && ua2 <= 1 && 0 <= ub2 && ub2 <= 1) {
      return createIntersection("intersection", e.add(a12, e.mul(AV, ua2)));
    }
  }
  return createIntersection("no intersection");
}
function intersectLineSegmentRectangle(a12, a23, point, size) {
  return intersectRectangleLineSegment(point, size, a12, a23);
}
function intersectLineSegmentArc(a12, a23, center, radius, start, end) {
  const sa2 = e.angle(center, start);
  const ea2 = e.angle(center, end);
  const ellipseTest = intersectEllipseLineSegment(center, radius, radius, 0, a12, a23);
  if (!ellipseTest.didIntersect)
    return createIntersection("no intersection");
  const points = ellipseTest.points.filter((point) => isAngleBetween(sa2, ea2, e.angle(center, point)));
  if (points.length === 0) {
    return createIntersection("no intersection");
  }
  return createIntersection("intersection", ...points);
}
function intersectLineSegmentCircle(a12, a23, c10, r11) {
  const a10 = (a23[0] - a12[0]) * (a23[0] - a12[0]) + (a23[1] - a12[1]) * (a23[1] - a12[1]);
  const b10 = 2 * ((a23[0] - a12[0]) * (a12[0] - c10[0]) + (a23[1] - a12[1]) * (a12[1] - c10[1]));
  const cc2 = c10[0] * c10[0] + c10[1] * c10[1] + a12[0] * a12[0] + a12[1] * a12[1] - 2 * (c10[0] * a12[0] + c10[1] * a12[1]) - r11 * r11;
  const deter = b10 * b10 - 4 * a10 * cc2;
  if (deter < 0) {
    return createIntersection("outside");
  }
  if (deter === 0) {
    return createIntersection("tangent");
  }
  const e13 = Math.sqrt(deter);
  const u12 = (-b10 + e13) / (2 * a10);
  const u23 = (-b10 - e13) / (2 * a10);
  if ((u12 < 0 || u12 > 1) && (u23 < 0 || u23 > 1)) {
    if (u12 < 0 && u23 < 0 || u12 > 1 && u23 > 1) {
      return createIntersection("outside");
    } else {
      return createIntersection("inside");
    }
  }
  const results = [];
  if (0 <= u12 && u12 <= 1)
    results.push(e.lrp(a12, a23, u12));
  if (0 <= u23 && u23 <= 1)
    results.push(e.lrp(a12, a23, u23));
  return createIntersection("intersection", ...results);
}
function intersectLineSegmentEllipse(a12, a23, center, rx2, ry2, rotation = 0) {
  if (rx2 === 0 || ry2 === 0 || e.isEqual(a12, a23)) {
    return createIntersection("no intersection");
  }
  rx2 = rx2 < 0 ? rx2 : -rx2;
  ry2 = ry2 < 0 ? ry2 : -ry2;
  a12 = e.sub(e.rotWith(a12, center, -rotation), center);
  a23 = e.sub(e.rotWith(a23, center, -rotation), center);
  const diff = e.sub(a23, a12);
  const A10 = diff[0] * diff[0] / rx2 / rx2 + diff[1] * diff[1] / ry2 / ry2;
  const B10 = 2 * a12[0] * diff[0] / rx2 / rx2 + 2 * a12[1] * diff[1] / ry2 / ry2;
  const C10 = a12[0] * a12[0] / rx2 / rx2 + a12[1] * a12[1] / ry2 / ry2 - 1;
  const tValues = [];
  const discriminant = B10 * B10 - 4 * A10 * C10;
  if (discriminant === 0) {
    tValues.push(-B10 / 2 / A10);
  } else if (discriminant > 0) {
    const root2 = Math.sqrt(discriminant);
    tValues.push((-B10 + root2) / 2 / A10);
    tValues.push((-B10 - root2) / 2 / A10);
  }
  const points = tValues.filter((t12) => t12 >= 0 && t12 <= 1).map((t12) => e.add(center, e.add(a12, e.mul(e.sub(a23, a12), t12)))).map((p10) => e.rotWith(p10, center, rotation));
  return createIntersection("intersection", ...points);
}
function intersectLineSegmentBounds(a12, a23, bounds) {
  return intersectBoundsLineSegment(bounds, a12, a23);
}
function intersectLineSegmentPolyline(a12, a23, points) {
  const pts = [];
  for (let i10 = 1; i10 < points.length; i10++) {
    const int = intersectLineSegmentLineSegment(a12, a23, points[i10 - 1], points[i10]);
    if (int) {
      pts.push(...int.points);
    }
  }
  if (pts.length === 0) {
    return createIntersection("no intersection");
  }
  return createIntersection("intersection", ...points);
}
function intersectLineSegmentPolygon(a12, a23, points) {
  const pts = [];
  for (let i10 = 1; i10 < points.length + 1; i10++) {
    const int = intersectLineSegmentLineSegment(a12, a23, points[i10 - 1], points[i10 % points.length]);
    if (int) {
      pts.push(...int.points);
    }
  }
  if (pts.length === 0) {
    return createIntersection("no intersection");
  }
  return createIntersection("intersection", ...points);
}
function intersectRectangleRay(point, size, rotation, origin, direction) {
  const sideIntersections = getRectangleSides(point, size, rotation).reduce((acc, [message, [a12, a23]]) => {
    const intersection = intersectRayLineSegment(origin, direction, a12, a23);
    if (intersection) {
      acc.push(createIntersection(message, ...intersection.points));
    }
    return acc;
  }, []);
  return sideIntersections.filter((int) => int.didIntersect);
}
function intersectRectangleLineSegment(point, size, a12, a23) {
  const sideIntersections = getRectangleSides(point, size).reduce((acc, [message, [b12, b23]]) => {
    const intersection = intersectLineSegmentLineSegment(a12, a23, b12, b23);
    if (intersection) {
      acc.push(createIntersection(message, ...intersection.points));
    }
    return acc;
  }, []);
  return sideIntersections.filter((int) => int.didIntersect);
}
function intersectRectangleRectangle(point1, size1, point2, size2) {
  const sideIntersections = getRectangleSides(point1, size1).reduce((acc, [message, [a12, a23]]) => {
    const intersections = intersectRectangleLineSegment(point2, size2, a12, a23);
    acc.push(...intersections.map((int) => createIntersection(`${message} ${int.message}`, ...int.points)));
    return acc;
  }, []);
  return sideIntersections.filter((int) => int.didIntersect);
}
function intersectRectangleArc(point, size, center, radius, start, end) {
  const sideIntersections = getRectangleSides(point, size).reduce((acc, [message, [a12, a23]]) => {
    const intersection = intersectArcLineSegment(center, radius, start, end, a12, a23);
    if (intersection) {
      acc.push(__spreadProps2(__spreadValues2({}, intersection), { message }));
    }
    return acc;
  }, []);
  return sideIntersections.filter((int) => int.didIntersect);
}
function intersectRectangleCircle(point, size, c10, r11) {
  const sideIntersections = getRectangleSides(point, size).reduce((acc, [message, [a12, a23]]) => {
    const intersection = intersectLineSegmentCircle(a12, a23, c10, r11);
    if (intersection) {
      acc.push(__spreadProps2(__spreadValues2({}, intersection), { message }));
    }
    return acc;
  }, []);
  return sideIntersections.filter((int) => int.didIntersect);
}
function intersectRectangleEllipse(point, size, c10, rx2, ry2, rotation = 0) {
  const sideIntersections = getRectangleSides(point, size).reduce((acc, [message, [a12, a23]]) => {
    const intersection = intersectLineSegmentEllipse(a12, a23, c10, rx2, ry2, rotation);
    if (intersection) {
      acc.push(__spreadProps2(__spreadValues2({}, intersection), { message }));
    }
    return acc;
  }, []);
  return sideIntersections.filter((int) => int.didIntersect);
}
function intersectRectanglePolyline(point, size, points) {
  const sideIntersections = getRectangleSides(point, size).reduce((acc, [message, [a12, a23]]) => {
    const intersection = intersectLineSegmentPolyline(a12, a23, points);
    if (intersection.didIntersect) {
      acc.push(createIntersection(message, ...intersection.points));
    }
    return acc;
  }, []);
  return sideIntersections.filter((int) => int.didIntersect);
}
function intersectRectanglePolygon(point, size, points) {
  const sideIntersections = getRectangleSides(point, size).reduce((acc, [message, [a12, a23]]) => {
    const intersection = intersectLineSegmentPolygon(a12, a23, points);
    if (intersection.didIntersect) {
      acc.push(createIntersection(message, ...intersection.points));
    }
    return acc;
  }, []);
  return sideIntersections.filter((int) => int.didIntersect);
}
function intersectArcLineSegment(center, radius, start, end, a12, a23) {
  return intersectLineSegmentArc(a12, a23, center, radius, start, end);
}
function intersectArcRectangle(center, radius, start, end, point, size) {
  return intersectRectangleArc(point, size, center, radius, start, end);
}
function intersectArcBounds(center, radius, start, end, bounds) {
  const { minX, minY, width, height } = bounds;
  return intersectArcRectangle(center, radius, start, end, [minX, minY], [width, height]);
}
function intersectCircleLineSegment(c10, r11, a12, a23) {
  return intersectLineSegmentCircle(a12, a23, c10, r11);
}
function intersectCircleCircle(c12, r12, c23, r23) {
  let dx2 = c23[0] - c12[0], dy2 = c23[1] - c12[1];
  const d10 = Math.sqrt(dx2 * dx2 + dy2 * dy2), x10 = (d10 * d10 - r23 * r23 + r12 * r12) / (2 * d10), y10 = Math.sqrt(r12 * r12 - x10 * x10);
  dx2 /= d10;
  dy2 /= d10;
  return createIntersection("intersection", [c12[0] + dx2 * x10 - dy2 * y10, c12[1] + dy2 * x10 + dx2 * y10], [c12[0] + dx2 * x10 + dy2 * y10, c12[1] + dy2 * x10 - dx2 * y10]);
}
function intersectEllipseLineSegment(center, rx2, ry2, rotation = 0, a12, a23) {
  if (rx2 === ry2) {
    return intersectLineSegmentCircle(a12, a23, center, rx2);
  }
  return intersectLineSegmentEllipse(a12, a23, center, rx2, ry2, rotation);
}
function intersectEllipseRectangle(center, rx2, ry2, rotation = 0, point, size) {
  if (rx2 === ry2) {
    return intersectRectangleCircle(point, size, center, rx2);
  }
  return intersectRectangleEllipse(point, size, center, rx2, ry2, rotation);
}
function intersectEllipseBounds(c10, rx2, ry2, rotation, bounds) {
  const { minX, minY, width, height } = bounds;
  return intersectEllipseRectangle(c10, rx2, ry2, rotation, [minX, minY], [width, height]);
}
function intersectBoundsLineSegment(bounds, a12, a23) {
  const { minX, minY, width, height } = bounds;
  return intersectLineSegmentRectangle(a12, a23, [minX, minY], [width, height]);
}
function intersectBoundsBounds(bounds1, bounds2) {
  return intersectRectangleRectangle([bounds1.minX, bounds1.minY], [bounds1.width, bounds1.height], [bounds2.minX, bounds2.minY], [bounds2.width, bounds2.height]);
}
function intersectBoundsPolyline(bounds, points) {
  return intersectPolylineBounds(points, bounds);
}
function intersectBoundsPolygon(bounds, points) {
  return intersectPolygonBounds(points, bounds);
}
function intersectPolylineBounds(points, bounds) {
  return intersectRectanglePolyline([bounds.minX, bounds.minY], [bounds.width, bounds.height], points);
}
function intersectPolygonBounds(points, bounds) {
  return intersectRectanglePolygon([bounds.minX, bounds.minY], [bounds.width, bounds.height], points);
}

// ../../packages/core/dist/index.mjs
var __defProp3 = Object.defineProperty;
var __defProps3 = Object.defineProperties;
var __getOwnPropDescs3 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols3 = Object.getOwnPropertySymbols;
var __hasOwnProp3 = Object.prototype.hasOwnProperty;
var __propIsEnum3 = Object.prototype.propertyIsEnumerable;
var __defNormalProp3 = (obj, key, value) => key in obj ? __defProp3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues3 = (a10, b10) => {
  for (var prop in b10 || (b10 = {}))
    if (__hasOwnProp3.call(b10, prop))
      __defNormalProp3(a10, prop, b10[prop]);
  if (__getOwnPropSymbols3)
    for (var prop of __getOwnPropSymbols3(b10)) {
      if (__propIsEnum3.call(b10, prop))
        __defNormalProp3(a10, prop, b10[prop]);
    }
  return a10;
};
var __spreadProps3 = (a10, b10) => __defProps3(a10, __getOwnPropDescs3(b10));
var __objRest2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp3.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols3)
    for (var prop of __getOwnPropSymbols3(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum3.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __publicField = (obj, key, value) => {
  __defNormalProp3(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var TLContext = React3.createContext({});
function useTLContext() {
  const context = React3.useContext(TLContext);
  return context;
}
var TLBoundsCorner = /* @__PURE__ */ ((TLBoundsCorner2) => {
  TLBoundsCorner2["TopLeft"] = "top_left_corner";
  TLBoundsCorner2["TopRight"] = "top_right_corner";
  TLBoundsCorner2["BottomRight"] = "bottom_right_corner";
  TLBoundsCorner2["BottomLeft"] = "bottom_left_corner";
  return TLBoundsCorner2;
})(TLBoundsCorner || {});
if (!String.prototype.replaceAll) {
  String.prototype.replaceAll = function(str, newStr) {
    if (Object.prototype.toString.call(str).toLowerCase() === "[object regexp]") {
      return this.replace(str, newStr);
    }
    return this.replace(new RegExp(str, "g"), newStr);
  };
}
var TAU = Math.PI * 2;
var _Utils = class {
  static lerp(y12, y23, mu) {
    mu = _Utils.clamp(mu, 0, 1);
    return y12 * (1 - mu) + y23 * mu;
  }
  static lerpColor(color1, color2, factor = 0.5) {
    function h2r(hex) {
      const result2 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
      return [parseInt(result2[1], 16), parseInt(result2[2], 16), parseInt(result2[3], 16)];
    }
    function r2h(rgb) {
      return "#" + ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2]).toString(16).slice(1);
    }
    const c12 = h2r(color1) || [0, 0, 0];
    const c23 = h2r(color2) || [0, 0, 0];
    const result = c12.slice();
    for (let i10 = 0; i10 < 3; i10++) {
      result[i10] = Math.round(result[i10] + factor * (c23[i10] - c12[i10]));
    }
    return r2h(result);
  }
  static modulate(value, rangeA, rangeB, clamp2 = false) {
    const [fromLow, fromHigh] = rangeA;
    const [v02, v12] = rangeB;
    const result = v02 + (value - fromLow) / (fromHigh - fromLow) * (v12 - v02);
    return clamp2 ? v02 < v12 ? Math.max(Math.min(result, v12), v02) : Math.max(Math.min(result, v02), v12) : result;
  }
  static clamp(n10, min, max) {
    return Math.max(min, typeof max !== "undefined" ? Math.min(n10, max) : n10);
  }
  static deepClone(obj) {
    if (obj === null)
      return obj;
    if (Array.isArray(obj)) {
      return [...obj];
    }
    if (typeof obj === "object") {
      const clone = __spreadValues3({}, obj);
      Object.keys(clone).forEach((key) => clone[key] = typeof obj[key] === "object" ? _Utils.deepClone(obj[key]) : obj[key]);
      return clone;
    }
    return obj;
  }
  static rng(seed = "") {
    let x10 = 0;
    let y10 = 0;
    let z10 = 0;
    let w10 = 0;
    function next() {
      const t12 = x10 ^ x10 << 11;
      x10 = y10;
      y10 = z10;
      z10 = w10;
      w10 ^= (w10 >>> 19 ^ t12 ^ t12 >>> 8) >>> 0;
      return w10 / 4294967296;
    }
    for (let k10 = 0; k10 < seed.length + 64; k10++) {
      x10 ^= seed.charCodeAt(k10) | 0;
      next();
    }
    return next;
  }
  static pointsToLineSegments(points, closed = false) {
    const segments = [];
    for (let i10 = 1; i10 < points.length; i10++)
      segments.push([points[i10 - 1], points[i10]]);
    if (closed)
      segments.push([points[points.length - 1], points[0]]);
    return segments;
  }
  static getRectangleSides(point, size, rotation = 0) {
    const center = [point[0] + size[0] / 2, point[1] + size[1] / 2];
    const tl2 = e.rotWith(point, center, rotation);
    const tr2 = e.rotWith(e.add(point, [size[0], 0]), center, rotation);
    const br2 = e.rotWith(e.add(point, size), center, rotation);
    const bl2 = e.rotWith(e.add(point, [0, size[1]]), center, rotation);
    return [
      ["top", [tl2, tr2]],
      ["right", [tr2, br2]],
      ["bottom", [br2, bl2]],
      ["left", [bl2, tl2]]
    ];
  }
  static circleFromThreePoints(A10, B10, C10) {
    const [x12, y12] = A10;
    const [x23, y23] = B10;
    const [x33, y33] = C10;
    const a10 = x12 * (y23 - y33) - y12 * (x23 - x33) + x23 * y33 - x33 * y23;
    const b10 = (x12 * x12 + y12 * y12) * (y33 - y23) + (x23 * x23 + y23 * y23) * (y12 - y33) + (x33 * x33 + y33 * y33) * (y23 - y12);
    const c10 = (x12 * x12 + y12 * y12) * (x23 - x33) + (x23 * x23 + y23 * y23) * (x33 - x12) + (x33 * x33 + y33 * y33) * (x12 - x23);
    const x10 = -b10 / (2 * a10);
    const y10 = -c10 / (2 * a10);
    return [x10, y10, Math.hypot(x10 - x12, y10 - y12)];
  }
  static perimeterOfEllipse(rx2, ry2) {
    const h10 = Math.pow(rx2 - ry2, 2) / Math.pow(rx2 + ry2, 2);
    const p10 = Math.PI * (rx2 + ry2) * (1 + 3 * h10 / (10 + Math.sqrt(4 - 3 * h10)));
    return p10;
  }
  static shortAngleDist(a02, a12) {
    const max = Math.PI * 2;
    const da2 = (a12 - a02) % max;
    return 2 * da2 % max - da2;
  }
  static longAngleDist(a02, a12) {
    return Math.PI * 2 - _Utils.shortAngleDist(a02, a12);
  }
  static lerpAngles(a02, a12, t12) {
    return a02 + _Utils.shortAngleDist(a02, a12) * t12;
  }
  static angleDelta(a02, a12) {
    return _Utils.shortAngleDist(a02, a12);
  }
  static getSweep(C10, A10, B10) {
    return _Utils.angleDelta(e.angle(C10, A10), e.angle(C10, B10));
  }
  static clampRadians(r11) {
    return (Math.PI * 2 + r11) % (Math.PI * 2);
  }
  static snapAngleToSegments(r11, segments) {
    const seg = Math.PI * 2 / segments;
    return Math.floor((_Utils.clampRadians(r11) + seg / 2) / seg) * seg;
  }
  static isAngleBetween(a10, b10, c10) {
    if (c10 === a10 || c10 === b10)
      return true;
    const AB2 = (b10 - a10 + TAU) % TAU;
    const AC2 = (c10 - a10 + TAU) % TAU;
    return AB2 <= Math.PI !== AC2 > AB2;
  }
  static degreesToRadians(d10) {
    return d10 * Math.PI / 180;
  }
  static radiansToDegrees(r11) {
    return r11 * 180 / Math.PI;
  }
  static getArcLength(C10, r11, A10, B10) {
    const sweep = _Utils.getSweep(C10, A10, B10);
    return r11 * (2 * Math.PI) * (sweep / (2 * Math.PI));
  }
  static getSweepFlag(A10, B10, C10) {
    const angleAC = e.angle(A10, C10);
    const angleAB = e.angle(A10, B10);
    const angleCAB = (angleAB - angleAC + 3 * Math.PI) % (2 * Math.PI) - Math.PI;
    return angleCAB > 0 ? 0 : 1;
  }
  static getLargeArcFlag(A10, C10, P10) {
    const anglePA = e.angle(P10, A10);
    const anglePC = e.angle(P10, C10);
    const angleAPC = (anglePC - anglePA + 3 * Math.PI) % (2 * Math.PI) - Math.PI;
    return Math.abs(angleAPC) > Math.PI / 2 ? 0 : 1;
  }
  static getArcDashOffset(C10, r11, A10, B10, step) {
    const del0 = _Utils.getSweepFlag(C10, A10, B10);
    const len0 = _Utils.getArcLength(C10, r11, A10, B10);
    const off0 = del0 < 0 ? len0 : 2 * Math.PI * C10[2] - len0;
    return -off0 / 2 + step;
  }
  static getEllipseDashOffset(A10, step) {
    const c10 = 2 * Math.PI * A10[2];
    return -c10 / 2 + -step;
  }
  static pointInCircle(A10, C10, r11) {
    return e.dist(A10, C10) <= r11;
  }
  static pointInEllipse(A10, C10, rx2, ry2, rotation = 0) {
    rotation = rotation || 0;
    const cos = Math.cos(rotation);
    const sin = Math.sin(rotation);
    const delta = e.sub(A10, C10);
    const tdx = cos * delta[0] + sin * delta[1];
    const tdy = sin * delta[0] - cos * delta[1];
    return tdx * tdx / (rx2 * rx2) + tdy * tdy / (ry2 * ry2) <= 1;
  }
  static pointInRect(point, size) {
    return !(point[0] < size[0] || point[0] > point[0] + size[0] || point[1] < size[1] || point[1] > point[1] + size[1]);
  }
  static pointInPolygon(p10, points) {
    let wn2 = 0;
    points.forEach((a10, i10) => {
      const b10 = points[(i10 + 1) % points.length];
      if (a10[1] <= p10[1]) {
        if (b10[1] > p10[1] && e.cross(a10, b10, p10) > 0) {
          wn2 += 1;
        }
      } else if (b10[1] <= p10[1] && e.cross(a10, b10, p10) < 0) {
        wn2 -= 1;
      }
    });
    return wn2 !== 0;
  }
  static pointInBounds(A10, b10) {
    return !(A10[0] < b10.minX || A10[0] > b10.maxX || A10[1] < b10.minY || A10[1] > b10.maxY);
  }
  static pointInPolyline(A10, points, distance = 3) {
    for (let i10 = 1; i10 < points.length; i10++) {
      if (e.distanceToLineSegment(points[i10 - 1], points[i10], A10) < distance) {
        return true;
      }
    }
    return false;
  }
  static getBoundsSides(bounds) {
    return this.getRectangleSides([bounds.minX, bounds.minY], [bounds.width, bounds.height]);
  }
  static expandBounds(bounds, delta) {
    return {
      minX: bounds.minX - delta,
      minY: bounds.minY - delta,
      maxX: bounds.maxX + delta,
      maxY: bounds.maxY + delta,
      width: bounds.width + delta * 2,
      height: bounds.height + delta * 2
    };
  }
  static boundsCollide(a10, b10) {
    return !(a10.maxX < b10.minX || a10.minX > b10.maxX || a10.maxY < b10.minY || a10.minY > b10.maxY);
  }
  static boundsContain(a10, b10) {
    return a10.minX < b10.minX && a10.minY < b10.minY && a10.maxY > b10.maxY && a10.maxX > b10.maxX;
  }
  static boundsContained(a10, b10) {
    return _Utils.boundsContain(b10, a10);
  }
  static boundsAreEqual(a10, b10) {
    return !(b10.maxX !== a10.maxX || b10.minX !== a10.minX || b10.maxY !== a10.maxY || b10.minY !== a10.minY);
  }
  static getBoundsFromPoints(points, rotation = 0) {
    let minX = Infinity;
    let minY = Infinity;
    let maxX = -Infinity;
    let maxY = -Infinity;
    if (points.length < 2) {
      minX = 0;
      minY = 0;
      maxX = 1;
      maxY = 1;
    } else {
      for (const [x10, y10] of points) {
        minX = Math.min(x10, minX);
        minY = Math.min(y10, minY);
        maxX = Math.max(x10, maxX);
        maxY = Math.max(y10, maxY);
      }
    }
    if (rotation !== 0) {
      return _Utils.getBoundsFromPoints(points.map((pt2) => e.rotWith(pt2, [(minX + maxX) / 2, (minY + maxY) / 2], rotation)));
    }
    return {
      minX,
      minY,
      maxX,
      maxY,
      width: Math.max(1, maxX - minX),
      height: Math.max(1, maxY - minY)
    };
  }
  static centerBounds(bounds, point) {
    const boundsCenter = this.getBoundsCenter(bounds);
    const dx2 = point[0] - boundsCenter[0];
    const dy2 = point[1] - boundsCenter[1];
    return this.translateBounds(bounds, [dx2, dy2]);
  }
  static snapBoundsToGrid(bounds, gridSize) {
    const minX = Math.round(bounds.minX / gridSize) * gridSize;
    const minY = Math.round(bounds.minY / gridSize) * gridSize;
    const maxX = Math.round(bounds.maxX / gridSize) * gridSize;
    const maxY = Math.round(bounds.maxY / gridSize) * gridSize;
    return {
      minX,
      minY,
      maxX,
      maxY,
      width: Math.max(1, maxX - minX),
      height: Math.max(1, maxY - minY)
    };
  }
  static translateBounds(bounds, delta) {
    return {
      minX: bounds.minX + delta[0],
      minY: bounds.minY + delta[1],
      maxX: bounds.maxX + delta[0],
      maxY: bounds.maxY + delta[1],
      width: bounds.width,
      height: bounds.height
    };
  }
  static rotateBounds(bounds, center, rotation) {
    const [minX, minY] = e.rotWith([bounds.minX, bounds.minY], center, rotation);
    const [maxX, maxY] = e.rotWith([bounds.maxX, bounds.maxY], center, rotation);
    return {
      minX,
      minY,
      maxX,
      maxY,
      width: bounds.width,
      height: bounds.height
    };
  }
  static getRotatedEllipseBounds(x10, y10, rx2, ry2, rotation = 0) {
    const c10 = Math.cos(rotation);
    const s10 = Math.sin(rotation);
    const w10 = Math.hypot(rx2 * c10, ry2 * s10);
    const h10 = Math.hypot(rx2 * s10, ry2 * c10);
    return {
      minX: x10 + rx2 - w10,
      minY: y10 + ry2 - h10,
      maxX: x10 + rx2 + w10,
      maxY: y10 + ry2 + h10,
      width: w10 * 2,
      height: h10 * 2
    };
  }
  static getExpandedBounds(a10, b10) {
    const minX = Math.min(a10.minX, b10.minX);
    const minY = Math.min(a10.minY, b10.minY);
    const maxX = Math.max(a10.maxX, b10.maxX);
    const maxY = Math.max(a10.maxY, b10.maxY);
    const width = Math.abs(maxX - minX);
    const height = Math.abs(maxY - minY);
    return { minX, minY, maxX, maxY, width, height };
  }
  static getCommonBounds(bounds) {
    if (bounds.length < 2)
      return bounds[0];
    let result = bounds[0];
    for (let i10 = 1; i10 < bounds.length; i10++) {
      result = _Utils.getExpandedBounds(result, bounds[i10]);
    }
    return result;
  }
  static getRotatedCorners(b10, rotation = 0) {
    const center = [b10.minX + b10.width / 2, b10.minY + b10.height / 2];
    return [
      [b10.minX, b10.minY],
      [b10.maxX, b10.minY],
      [b10.maxX, b10.maxY],
      [b10.minX, b10.maxY]
    ].map((point) => e.rotWith(point, center, rotation));
  }
  static getTransformedBoundingBox(bounds, handle, delta, rotation = 0, isAspectRatioLocked = false) {
    const [ax0, ay0] = [bounds.minX, bounds.minY];
    const [ax1, ay1] = [bounds.maxX, bounds.maxY];
    let [bx0, by0] = [bounds.minX, bounds.minY];
    let [bx1, by1] = [bounds.maxX, bounds.maxY];
    if (handle === "center") {
      return {
        minX: bx0 + delta[0],
        minY: by0 + delta[1],
        maxX: bx1 + delta[0],
        maxY: by1 + delta[1],
        width: bx1 - bx0,
        height: by1 - by0,
        scaleX: 1,
        scaleY: 1
      };
    }
    const [dx2, dy2] = e.rot(delta, -rotation);
    switch (handle) {
      case "top_edge":
      case "top_left_corner":
      case "top_right_corner": {
        by0 += dy2;
        break;
      }
      case "bottom_edge":
      case "bottom_left_corner":
      case "bottom_right_corner": {
        by1 += dy2;
        break;
      }
    }
    switch (handle) {
      case "left_edge":
      case "top_left_corner":
      case "bottom_left_corner": {
        bx0 += dx2;
        break;
      }
      case "right_edge":
      case "top_right_corner":
      case "bottom_right_corner": {
        bx1 += dx2;
        break;
      }
    }
    const aw2 = ax1 - ax0;
    const ah2 = ay1 - ay0;
    const scaleX = (bx1 - bx0) / aw2;
    const scaleY = (by1 - by0) / ah2;
    const flipX = scaleX < 0;
    const flipY = scaleY < 0;
    const bw2 = Math.abs(bx1 - bx0);
    const bh2 = Math.abs(by1 - by0);
    if (isAspectRatioLocked) {
      const ar2 = aw2 / ah2;
      const isTall = ar2 < bw2 / bh2;
      const tw2 = bw2 * (scaleY < 0 ? 1 : -1) * (1 / ar2);
      const th2 = bh2 * (scaleX < 0 ? 1 : -1) * ar2;
      switch (handle) {
        case "top_left_corner": {
          if (isTall)
            by0 = by1 + tw2;
          else
            bx0 = bx1 + th2;
          break;
        }
        case "top_right_corner": {
          if (isTall)
            by0 = by1 + tw2;
          else
            bx1 = bx0 - th2;
          break;
        }
        case "bottom_right_corner": {
          if (isTall)
            by1 = by0 - tw2;
          else
            bx1 = bx0 - th2;
          break;
        }
        case "bottom_left_corner": {
          if (isTall)
            by1 = by0 - tw2;
          else
            bx0 = bx1 + th2;
          break;
        }
        case "bottom_edge":
        case "top_edge": {
          const m10 = (bx0 + bx1) / 2;
          const w10 = bh2 * ar2;
          bx0 = m10 - w10 / 2;
          bx1 = m10 + w10 / 2;
          break;
        }
        case "left_edge":
        case "right_edge": {
          const m10 = (by0 + by1) / 2;
          const h10 = bw2 / ar2;
          by0 = m10 - h10 / 2;
          by1 = m10 + h10 / 2;
          break;
        }
      }
    }
    if (rotation % (Math.PI * 2) !== 0) {
      let cv2 = [0, 0];
      const c02 = e.med([ax0, ay0], [ax1, ay1]);
      const c12 = e.med([bx0, by0], [bx1, by1]);
      switch (handle) {
        case "top_left_corner": {
          cv2 = e.sub(e.rotWith([bx1, by1], c12, rotation), e.rotWith([ax1, ay1], c02, rotation));
          break;
        }
        case "top_right_corner": {
          cv2 = e.sub(e.rotWith([bx0, by1], c12, rotation), e.rotWith([ax0, ay1], c02, rotation));
          break;
        }
        case "bottom_right_corner": {
          cv2 = e.sub(e.rotWith([bx0, by0], c12, rotation), e.rotWith([ax0, ay0], c02, rotation));
          break;
        }
        case "bottom_left_corner": {
          cv2 = e.sub(e.rotWith([bx1, by0], c12, rotation), e.rotWith([ax1, ay0], c02, rotation));
          break;
        }
        case "top_edge": {
          cv2 = e.sub(e.rotWith(e.med([bx0, by1], [bx1, by1]), c12, rotation), e.rotWith(e.med([ax0, ay1], [ax1, ay1]), c02, rotation));
          break;
        }
        case "left_edge": {
          cv2 = e.sub(e.rotWith(e.med([bx1, by0], [bx1, by1]), c12, rotation), e.rotWith(e.med([ax1, ay0], [ax1, ay1]), c02, rotation));
          break;
        }
        case "bottom_edge": {
          cv2 = e.sub(e.rotWith(e.med([bx0, by0], [bx1, by0]), c12, rotation), e.rotWith(e.med([ax0, ay0], [ax1, ay0]), c02, rotation));
          break;
        }
        case "right_edge": {
          cv2 = e.sub(e.rotWith(e.med([bx0, by0], [bx0, by1]), c12, rotation), e.rotWith(e.med([ax0, ay0], [ax0, ay1]), c02, rotation));
          break;
        }
      }
      ;
      [bx0, by0] = e.sub([bx0, by0], cv2);
      [bx1, by1] = e.sub([bx1, by1], cv2);
    }
    if (bx1 < bx0) {
      ;
      [bx1, bx0] = [bx0, bx1];
    }
    if (by1 < by0) {
      ;
      [by1, by0] = [by0, by1];
    }
    return {
      minX: bx0,
      minY: by0,
      maxX: bx1,
      maxY: by1,
      width: bx1 - bx0,
      height: by1 - by0,
      scaleX: (bx1 - bx0) / (ax1 - ax0 || 1) * (flipX ? -1 : 1),
      scaleY: (by1 - by0) / (ay1 - ay0 || 1) * (flipY ? -1 : 1)
    };
  }
  static getTransformAnchor(type, isFlippedX, isFlippedY) {
    let anchor = type;
    switch (type) {
      case "top_left_corner": {
        if (isFlippedX && isFlippedY) {
          anchor = "bottom_right_corner";
        } else if (isFlippedX) {
          anchor = "top_right_corner";
        } else if (isFlippedY) {
          anchor = "bottom_left_corner";
        } else {
          anchor = "bottom_right_corner";
        }
        break;
      }
      case "top_right_corner": {
        if (isFlippedX && isFlippedY) {
          anchor = "bottom_left_corner";
        } else if (isFlippedX) {
          anchor = "top_left_corner";
        } else if (isFlippedY) {
          anchor = "bottom_right_corner";
        } else {
          anchor = "bottom_left_corner";
        }
        break;
      }
      case "bottom_right_corner": {
        if (isFlippedX && isFlippedY) {
          anchor = "top_left_corner";
        } else if (isFlippedX) {
          anchor = "bottom_left_corner";
        } else if (isFlippedY) {
          anchor = "top_right_corner";
        } else {
          anchor = "top_left_corner";
        }
        break;
      }
      case "bottom_left_corner": {
        if (isFlippedX && isFlippedY) {
          anchor = "top_right_corner";
        } else if (isFlippedX) {
          anchor = "bottom_right_corner";
        } else if (isFlippedY) {
          anchor = "top_left_corner";
        } else {
          anchor = "top_right_corner";
        }
        break;
      }
    }
    return anchor;
  }
  static getRelativeTransformedBoundingBox(bounds, initialBounds, initialShapeBounds, isFlippedX, isFlippedY) {
    const nx2 = (isFlippedX ? initialBounds.maxX - initialShapeBounds.maxX : initialShapeBounds.minX - initialBounds.minX) / initialBounds.width;
    const ny2 = (isFlippedY ? initialBounds.maxY - initialShapeBounds.maxY : initialShapeBounds.minY - initialBounds.minY) / initialBounds.height;
    const nw2 = initialShapeBounds.width / initialBounds.width;
    const nh2 = initialShapeBounds.height / initialBounds.height;
    const minX = bounds.minX + bounds.width * nx2;
    const minY = bounds.minY + bounds.height * ny2;
    const width = bounds.width * nw2;
    const height = bounds.height * nh2;
    return {
      minX,
      minY,
      maxX: minX + width,
      maxY: minY + height,
      width,
      height
    };
  }
  static getRotatedSize(size, rotation) {
    const center = e.div(size, 2);
    const points = [[0, 0], [size[0], 0], size, [0, size[1]]].map((point) => e.rotWith(point, center, rotation));
    const bounds = _Utils.getBoundsFromPoints(points);
    return [bounds.width, bounds.height];
  }
  static getBoundsCenter(bounds) {
    return [bounds.minX + bounds.width / 2, bounds.minY + bounds.height / 2];
  }
  static getBoundsWithCenter(bounds) {
    const center = _Utils.getBoundsCenter(bounds);
    return __spreadProps3(__spreadValues3({}, bounds), {
      midX: center[0],
      midY: center[1]
    });
  }
  static getCommonTopLeft(points) {
    const min = [Infinity, Infinity];
    points.forEach((point) => {
      min[0] = Math.min(min[0], point[0]);
      min[1] = Math.min(min[1], point[1]);
    });
    return min;
  }
  static getFromCache(cache, item, getNext) {
    let value = cache.get(item);
    if (value === void 0) {
      cache.set(item, getNext());
      value = cache.get(item);
      if (value === void 0) {
        throw Error("Cache did not include item!");
      }
    }
    return value;
  }
  static uniqueId(a10 = "") {
    return a10 ? ((Number(a10) ^ Math.random() * 16) >> Number(a10) / 4).toString(16) : `${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`.replace(/[018]/g, _Utils.uniqueId);
  }
  static rotateArray(arr, offset) {
    return arr.map((_10, i10) => arr[(i10 + offset) % arr.length]);
  }
  static debounce(fn, ms2 = 0) {
    let timeoutId;
    return function(...args) {
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => fn.apply(args), ms2);
    };
  }
  static getSvgPathFromStroke(points, closed = true) {
    if (!points.length) {
      return "";
    }
    const max = points.length - 1;
    return points.reduce((acc, point, i10, arr) => {
      if (i10 === max) {
        if (closed)
          acc.push("Z");
      } else
        acc.push(point, e.med(point, arr[i10 + 1]));
      return acc;
    }, ["M", points[0], "Q"]).join(" ").replaceAll(this.TRIM_NUMBERS, "$1");
  }
  static getPerfectDashProps(length, strokeWidth, style, snap = 1, outset = true, lengthRatio = 2) {
    let dashLength;
    let strokeDashoffset;
    let ratio;
    if (style.toLowerCase() === "dashed") {
      dashLength = strokeWidth * lengthRatio;
      ratio = 1;
      strokeDashoffset = outset ? (dashLength / 2).toString() : "0";
    } else if (style.toLowerCase() === "dotted") {
      dashLength = strokeWidth / 100;
      ratio = 100;
      strokeDashoffset = "0";
    } else {
      return {
        strokeDasharray: "none",
        strokeDashoffset: "none"
      };
    }
    let dashes = Math.floor(length / dashLength / (2 * ratio));
    dashes -= dashes % snap;
    dashes = Math.max(dashes, 4);
    const gapLength = Math.max(dashLength, (length - dashes * dashLength) / (outset ? dashes : dashes - 1));
    return {
      strokeDasharray: [dashLength, gapLength].join(" "),
      strokeDashoffset
    };
  }
  static isMobileSize() {
    if (typeof window === "undefined")
      return false;
    return window.innerWidth < 768;
  }
  static isMobileSafari() {
    if (typeof window === "undefined")
      return false;
    const ua2 = window.navigator.userAgent;
    const iOS = !!ua2.match(/iPad/i) || !!ua2.match(/iPhone/i);
    const webkit = !!ua2.match(/WebKit/i);
    return iOS && webkit && !ua2.match(/CriOS/i);
  }
  static throttle(func, limit) {
    let inThrottle;
    let lastResult;
    return function(...args) {
      if (!inThrottle) {
        inThrottle = true;
        setTimeout(() => inThrottle = false, limit);
        lastResult = func(...args);
      }
      return lastResult;
    };
  }
  static isDarwin() {
    return /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
  }
  static metaKey(e13) {
    return _Utils.isDarwin() ? e13.metaKey : e13.ctrlKey;
  }
  static lns(str) {
    const result = str.split("");
    result.push(...result.splice(0, Math.round(result.length / 5)));
    result.push(...result.splice(0, Math.round(result.length / 4)));
    result.push(...result.splice(0, Math.round(result.length / 3)));
    result.push(...result.splice(0, Math.round(result.length / 2)));
    return result.reverse().map((n10) => +n10 ? +n10 < 5 ? 5 + +n10 : +n10 > 5 ? +n10 - 5 : n10 : n10).join("");
  }
};
var Utils = _Utils;
__publicField(Utils, "getSnapPoints", (bounds, others, snapDistance) => {
  const A10 = __spreadValues3({}, bounds);
  const offset = [0, 0];
  const snapLines = [];
  const snaps = {
    ["minX"]: { id: "minX", isSnapped: false },
    ["midX"]: { id: "midX", isSnapped: false },
    ["maxX"]: { id: "maxX", isSnapped: false },
    ["minY"]: { id: "minY", isSnapped: false },
    ["midY"]: { id: "midY", isSnapped: false },
    ["maxY"]: { id: "maxY", isSnapped: false }
  };
  const xs2 = ["midX", "minX", "maxX"];
  const ys2 = ["midY", "minY", "maxY"];
  const snapResults = others.map((B10) => {
    const rx2 = xs2.flatMap((f10, i10) => xs2.map((t12, k10) => {
      const gap = A10[f10] - B10[t12];
      const distance = Math.abs(gap);
      return {
        f: f10,
        t: t12,
        gap,
        distance,
        isCareful: i10 === 0 || i10 + k10 === 3
      };
    }));
    const ry2 = ys2.flatMap((f10, i10) => ys2.map((t12, k10) => {
      const gap = A10[f10] - B10[t12];
      const distance = Math.abs(gap);
      return {
        f: f10,
        t: t12,
        gap,
        distance,
        isCareful: i10 === 0 || i10 + k10 === 3
      };
    }));
    return [B10, rx2, ry2];
  });
  let gapX = Infinity;
  let gapY = Infinity;
  let minX = Infinity;
  let minY = Infinity;
  snapResults.forEach(([_10, rx2, ry2]) => {
    rx2.forEach((r11) => {
      if (r11.distance < snapDistance && r11.distance < minX) {
        minX = r11.distance;
        gapX = r11.gap;
      }
    });
    ry2.forEach((r11) => {
      if (r11.distance < snapDistance && r11.distance < minY) {
        minY = r11.distance;
        gapY = r11.gap;
      }
    });
  });
  snapResults.forEach(([B10, rx2, ry2]) => {
    if (gapX !== Infinity) {
      rx2.forEach((r11) => {
        if (Math.abs(r11.gap - gapX) < 2) {
          snaps[r11.f] = __spreadProps3(__spreadValues3({}, snaps[r11.f]), {
            isSnapped: true,
            to: B10[r11.t],
            B: B10,
            distance: r11.distance
          });
        }
      });
    }
    if (gapY !== Infinity) {
      ry2.forEach((r11) => {
        if (Math.abs(r11.gap - gapY) < 2) {
          snaps[r11.f] = __spreadProps3(__spreadValues3({}, snaps[r11.f]), {
            isSnapped: true,
            to: B10[r11.t],
            B: B10,
            distance: r11.distance
          });
        }
      });
    }
  });
  offset[0] = gapX === Infinity ? 0 : gapX;
  offset[1] = gapY === Infinity ? 0 : gapY;
  A10.minX -= offset[0];
  A10.midX -= offset[0];
  A10.maxX -= offset[0];
  A10.minY -= offset[1];
  A10.midY -= offset[1];
  A10.maxY -= offset[1];
  xs2.forEach((from) => {
    const snap = snaps[from];
    if (!snap.isSnapped)
      return;
    const { id: id2, B: B10 } = snap;
    const x10 = A10[id2];
    snapLines.push(id2 === "minX" ? [
      [x10, A10.midY],
      [x10, B10.minY],
      [x10, B10.maxY]
    ] : [
      [x10, A10.minY],
      [x10, A10.maxY],
      [x10, B10.minY],
      [x10, B10.maxY]
    ]);
  });
  ys2.forEach((from) => {
    const snap = snaps[from];
    if (!snap.isSnapped)
      return;
    const { id: id2, B: B10 } = snap;
    const y10 = A10[id2];
    snapLines.push(id2 === "midY" ? [
      [A10.midX, y10],
      [B10.minX, y10],
      [B10.maxX, y10]
    ] : [
      [A10.minX, y10],
      [A10.maxX, y10],
      [B10.minX, y10],
      [B10.maxX, y10]
    ]);
  });
  return { offset, snapLines };
});
__publicField(Utils, "deepMerge", (target, patch) => {
  const result = __spreadValues3({}, target);
  const entries2 = Object.entries(patch);
  for (const [key, value] of entries2)
    result[key] = value === Object(value) && !Array.isArray(value) ? _Utils.deepMerge(result[key], value) : value;
  return result;
});
__publicField(Utils, "TRIM_NUMBERS", /(\s?[A-Z]?,?-?[0-9]*\.[0-9]{0,2})(([0-9]|e|-)*)/g);
var utils_default = Utils;
function useZoomEvents(zoomRef, ref) {
  const rOriginPoint = React22.useRef(void 0);
  const rPinchPoint = React22.useRef(void 0);
  const rDelta = React22.useRef([0, 0]);
  const { inputs: inputs2, bounds, callbacks } = useTLContext();
  React22.useEffect(() => {
    const preventGesture = (event) => event.preventDefault();
    document.addEventListener("gesturestart", preventGesture);
    document.addEventListener("gesturechange", preventGesture);
    return () => {
      document.removeEventListener("gesturestart", preventGesture);
      document.removeEventListener("gesturechange", preventGesture);
    };
  }, []);
  const handleWheel = React22.useCallback(({ event: e13 }) => {
    var _a4, _b2, _c, _d2;
    e13.preventDefault();
    if (inputs2.isPinching)
      return;
    const { offset } = normalizeWheel(e13);
    if ((e13.altKey || e13.ctrlKey || e13.metaKey) && e13.buttons === 0) {
      const point = (_b2 = (_a4 = inputs2.pointer) == null ? void 0 : _a4.point) != null ? _b2 : [bounds.width / 2, bounds.height / 2];
      const delta2 = [...point, offset[1] * 0.618];
      const info2 = inputs2.pan(delta2, e13);
      (_c = callbacks.onZoom) == null ? void 0 : _c.call(callbacks, __spreadProps3(__spreadValues3({}, info2), { delta: delta2 }), e13);
      return;
    }
    const delta = e.mul(e13.shiftKey && !utils_default.isDarwin ? [offset[1], 0] : [...offset], 0.5);
    if (e.isEqual(delta, [0, 0]))
      return;
    const info = inputs2.pan(delta, e13);
    (_d2 = callbacks.onPan) == null ? void 0 : _d2.call(callbacks, info, e13);
  }, [callbacks, inputs2, bounds]);
  const handlePinchStart = React22.useCallback(({ origin, event }) => {
    var _a4;
    if (event instanceof WheelEvent)
      return;
    const elm = ref.current;
    if (!elm || !(event.target === elm || elm.contains(event.target)))
      return;
    const info = inputs2.pinch(origin, origin);
    inputs2.isPinching = true;
    (_a4 = callbacks.onPinchStart) == null ? void 0 : _a4.call(callbacks, info, event);
    rPinchPoint.current = info.point;
    rOriginPoint.current = info.origin;
    rDelta.current = [0, 0];
  }, [callbacks, inputs2, bounds]);
  const handlePinch = React22.useCallback(({ origin, offset, event }) => {
    var _a4;
    if (event instanceof WheelEvent)
      return;
    const elm = ref.current;
    if (!(event.target === elm || (elm == null ? void 0 : elm.contains(event.target))))
      return;
    if (!rOriginPoint.current)
      return;
    const info = inputs2.pinch(origin, rOriginPoint.current);
    const trueDelta = e.sub(info.delta, rDelta.current);
    rDelta.current = info.delta;
    (_a4 = callbacks.onPinch) == null ? void 0 : _a4.call(callbacks, __spreadProps3(__spreadValues3({}, info), {
      point: info.point,
      origin: rOriginPoint.current,
      delta: [...trueDelta, offset[0]]
    }), event);
    rPinchPoint.current = origin;
  }, [callbacks, inputs2, bounds]);
  const handlePinchEnd = React22.useCallback(({ origin, event }) => {
    var _a4;
    const elm = ref.current;
    if (!(event.target === elm || (elm == null ? void 0 : elm.contains(event.target))))
      return;
    const info = inputs2.pinch(origin, origin);
    inputs2.isPinching = false;
    (_a4 = callbacks.onPinchEnd) == null ? void 0 : _a4.call(callbacks, info, event);
    rPinchPoint.current = void 0;
    rOriginPoint.current = void 0;
    rDelta.current = [0, 0];
  }, []);
  useGesture({
    onWheel: handleWheel,
    onPinchStart: handlePinchStart,
    onPinch: handlePinch,
    onPinchEnd: handlePinchEnd
  }, {
    target: ref,
    eventOptions: { passive: false },
    pinch: {
      from: [zoomRef.current, 0],
      scaleBounds: () => {
        return { from: zoomRef.current, max: 5, min: 0.1 };
      }
    }
  });
}
var PIXEL_STEP = 10;
var LINE_HEIGHT2 = 40;
var PAGE_HEIGHT2 = 800;
function normalizeWheel(event) {
  let sX = 0, sY = 0, pX = 0, pY = 0;
  if ("detail" in event)
    sY = event.detail;
  if ("wheelDelta" in event)
    sY = -event.wheelDelta / 120;
  if ("wheelDeltaY" in event)
    sY = -event.wheelDeltaY / 120;
  if ("wheelDeltaX" in event)
    sX = -event.wheelDeltaX / 120;
  if ("axis" in event && event.axis === event.HORIZONTAL_AXIS) {
    sX = sY;
    sY = 0;
  }
  pX = "deltaX" in event ? event.deltaX : sX * PIXEL_STEP;
  pY = "deltaY" in event ? event.deltaY : sY * PIXEL_STEP;
  if ((pX || pY) && event.deltaMode) {
    if (event.deltaMode == 1) {
      pX *= LINE_HEIGHT2;
      pY *= LINE_HEIGHT2;
    } else {
      pX *= PAGE_HEIGHT2;
      pY *= PAGE_HEIGHT2;
    }
  }
  if (pX && !sX)
    sX = pX < 1 ? -1 : 1;
  if (pY && !sY)
    sY = pY < 1 ? -1 : 1;
  return { spin: [sX, sY], offset: [pX, pY] };
}
function useSafariFocusOutFix() {
  const { callbacks } = useTLContext();
  (0, import_react9.useEffect)(() => {
    function handleFocusOut() {
      var _a4;
      (_a4 = callbacks.onShapeBlur) == null ? void 0 : _a4.call(callbacks);
    }
    if (utils_default.isMobileSafari()) {
      document.addEventListener("focusout", handleFocusOut);
      return () => document.removeEventListener("focusout", handleFocusOut);
    }
    return () => null;
  }, [callbacks]);
}
function useCanvasEvents() {
  const { callbacks, inputs: inputs2 } = useTLContext();
  return React32.useMemo(() => {
    return {
      onPointerDown: (e13) => {
        var _a4, _b2;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (!inputs2.pointerIsValid(e13))
          return;
        if (e13.button !== 0 && e13.button !== 1)
          return;
        if (!inputs2.pointerIsValid(e13))
          return;
        e13.currentTarget.setPointerCapture(e13.pointerId);
        const info = inputs2.pointerDown(e13, "canvas");
        if (e13.button === 0 || e13.button === 1) {
          (_a4 = callbacks.onPointCanvas) == null ? void 0 : _a4.call(callbacks, info, e13);
          (_b2 = callbacks.onPointerDown) == null ? void 0 : _b2.call(callbacks, info, e13);
        }
      },
      onPointerMove: (e13) => {
        var _a4, _b2;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (!inputs2.pointerIsValid(e13))
          return;
        const info = inputs2.pointerMove(e13, "canvas");
        if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
          (_a4 = callbacks.onDragCanvas) == null ? void 0 : _a4.call(callbacks, info, e13);
        }
        (_b2 = callbacks.onPointerMove) == null ? void 0 : _b2.call(callbacks, info, e13);
      },
      onPointerUp: (e13) => {
        var _a4, _b2, _c, _d2;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (e13.button !== 0 && e13.button !== 1)
          return;
        inputs2.activePointer = void 0;
        if (!inputs2.pointerIsValid(e13))
          return;
        const isDoubleClick = inputs2.isDoubleClick();
        const info = inputs2.pointerUp(e13, "canvas");
        if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
          (_a4 = e13.currentTarget) == null ? void 0 : _a4.releasePointerCapture(e13.pointerId);
        }
        if (isDoubleClick && !(info.altKey || info.metaKey)) {
          (_b2 = callbacks.onDoubleClickCanvas) == null ? void 0 : _b2.call(callbacks, info, e13);
        }
        (_c = callbacks.onReleaseCanvas) == null ? void 0 : _c.call(callbacks, info, e13);
        (_d2 = callbacks.onPointerUp) == null ? void 0 : _d2.call(callbacks, info, e13);
      },
      onDrop: callbacks.onDrop,
      onDragOver: callbacks.onDragOver
    };
  }, [callbacks, inputs2]);
}
function useShapeEvents(id2) {
  const { rPageState, rSelectionBounds, callbacks, inputs: inputs2 } = React4.useContext(TLContext);
  return React4.useMemo(() => ({
    onPointerDown: (e13) => {
      var _a4, _b2, _c, _d2, _e, _f2, _g2;
      if (e13.dead)
        return;
      else
        e13.dead = true;
      if (!inputs2.pointerIsValid(e13))
        return;
      if (e13.button === 2) {
        (_a4 = callbacks.onRightPointShape) == null ? void 0 : _a4.call(callbacks, inputs2.pointerDown(e13, id2), e13);
        return;
      }
      if (e13.button !== 0)
        return;
      const info = inputs2.pointerDown(e13, id2);
      (_b2 = e13.currentTarget) == null ? void 0 : _b2.setPointerCapture(e13.pointerId);
      if (rSelectionBounds.current && Utils.pointInBounds(info.point, rSelectionBounds.current) && !rPageState.current.selectedIds.includes(id2)) {
        (_c = callbacks.onPointBounds) == null ? void 0 : _c.call(callbacks, inputs2.pointerDown(e13, "bounds"), e13);
        (_d2 = callbacks.onPointShape) == null ? void 0 : _d2.call(callbacks, info, e13);
        (_e = callbacks.onPointerDown) == null ? void 0 : _e.call(callbacks, info, e13);
        return;
      }
      (_f2 = callbacks.onPointShape) == null ? void 0 : _f2.call(callbacks, info, e13);
      (_g2 = callbacks.onPointerDown) == null ? void 0 : _g2.call(callbacks, info, e13);
    },
    onPointerUp: (e13) => {
      var _a4, _b2, _c, _d2;
      if (e13.dead)
        return;
      else
        e13.dead = true;
      if (e13.button !== 0)
        return;
      inputs2.activePointer = void 0;
      if (!inputs2.pointerIsValid(e13))
        return;
      const isDoubleClick = inputs2.isDoubleClick();
      const info = inputs2.pointerUp(e13, id2);
      if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
        (_a4 = e13.currentTarget) == null ? void 0 : _a4.releasePointerCapture(e13.pointerId);
      }
      if (isDoubleClick && !(info.altKey || info.metaKey)) {
        (_b2 = callbacks.onDoubleClickShape) == null ? void 0 : _b2.call(callbacks, info, e13);
      }
      (_c = callbacks.onReleaseShape) == null ? void 0 : _c.call(callbacks, info, e13);
      (_d2 = callbacks.onPointerUp) == null ? void 0 : _d2.call(callbacks, info, e13);
    },
    onPointerMove: (e13) => {
      var _a4, _b2;
      if (e13.dead)
        return;
      else
        e13.dead = true;
      if (!inputs2.pointerIsValid(e13))
        return;
      if (inputs2.pointer && e13.pointerId !== inputs2.pointer.pointerId)
        return;
      const info = inputs2.pointerMove(e13, id2);
      if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
        (_a4 = callbacks.onDragShape) == null ? void 0 : _a4.call(callbacks, info, e13);
      }
      (_b2 = callbacks.onPointerMove) == null ? void 0 : _b2.call(callbacks, info, e13);
    },
    onPointerEnter: (e13) => {
      var _a4;
      if (!inputs2.pointerIsValid(e13))
        return;
      const info = inputs2.pointerEnter(e13, id2);
      (_a4 = callbacks.onHoverShape) == null ? void 0 : _a4.call(callbacks, info, e13);
    },
    onPointerLeave: (e13) => {
      var _a4;
      if (!inputs2.pointerIsValid(e13))
        return;
      const info = inputs2.pointerEnter(e13, id2);
      (_a4 = callbacks.onUnhoverShape) == null ? void 0 : _a4.call(callbacks, info, e13);
    }
  }), [inputs2, callbacks, id2]);
}
function addToShapeTree(shape, branch, shapes, pageState, assets, isChildOfGhost = false, isChildOfSelected = false, meta) {
  const node = {
    shape,
    asset: shape.assetId ? assets[shape.assetId] : void 0,
    meta,
    isChildOfSelected,
    isGhost: shape.isGhost || isChildOfGhost,
    isEditing: pageState.editingId === shape.id,
    isBinding: pageState.bindingTargetId === shape.id,
    isSelected: pageState.selectedIds.includes(shape.id),
    isHovered: pageState.hoveredId === shape.id || shape.children !== void 0 && (pageState.hoveredId && shape.children.includes(pageState.hoveredId) || shape.children.some((childId) => pageState.selectedIds.includes(childId)))
  };
  branch.push(node);
  if (shape.children) {
    node.children = [];
    shape.children.map((id2) => shapes[id2]).filter(Boolean).sort((a10, b10) => a10.childIndex - b10.childIndex).forEach((childShape) => addToShapeTree(childShape, node.children, shapes, pageState, assets, node.isGhost, node.isSelected || node.isChildOfSelected, meta));
  }
}
function shapeIsInViewport(bounds, viewport) {
  return Utils.boundsContain(viewport, bounds) || Utils.boundsCollide(viewport, bounds);
}
function useShapeTree(page, pageState, assets, meta) {
  const { callbacks, shapeUtils, bounds } = useTLContext();
  const rTimeout = React5.useRef();
  const rPreviousCount = React5.useRef(-1);
  const rShapesIdsToRender = React5.useRef(/* @__PURE__ */ new Set());
  const rShapesToRender = React5.useRef(/* @__PURE__ */ new Set());
  const { selectedIds, camera } = pageState;
  const [minX, minY] = e.sub(e.div([0, 0], camera.zoom), camera.point);
  const [maxX, maxY] = e.sub(e.div([bounds.width, bounds.height], camera.zoom), camera.point);
  const viewport = {
    minX,
    minY,
    maxX,
    maxY,
    height: maxX - minX,
    width: maxY - minY
  };
  const shapesToRender = rShapesToRender.current;
  const shapesIdsToRender = rShapesIdsToRender.current;
  shapesToRender.clear();
  shapesIdsToRender.clear();
  const allShapes = Object.values(page.shapes);
  allShapes.filter((shape) => shapeUtils[shape.type].isStateful || selectedIds.includes(shape.id) || shapeIsInViewport(shapeUtils[shape.type].getBounds(shape), viewport)).forEach((shape) => {
    if (shape.parentId === page.id) {
      shapesIdsToRender.add(shape.id);
      shapesToRender.add(shape);
      return;
    }
    const parent = page.shapes[shape.parentId];
    if (parent === void 0) {
      throw Error(`A shape (${shape.id}) has a parent (${shape.parentId}) that does not exist!`);
    } else {
      shapesIdsToRender.add(parent.id);
      shapesToRender.add(parent);
    }
  });
  if (shapesToRender.size !== rPreviousCount.current) {
    if (rTimeout.current) {
      clearTimeout(rTimeout.current);
    }
    rTimeout.current = requestAnimationFrame(() => {
      var _a4;
      (_a4 = callbacks.onRenderCountChange) == null ? void 0 : _a4.call(callbacks, Array.from(shapesIdsToRender.values()));
    });
    rPreviousCount.current = shapesToRender.size;
  }
  const bindingTargetId = pageState.bindingId ? page.bindings[pageState.bindingId].toId : void 0;
  const tree = [];
  shapesToRender.forEach((shape) => {
    if (shape === void 0) {
      throw Error("Rendered shapes included a missing shape");
    }
    addToShapeTree(shape, tree, page.shapes, __spreadProps3(__spreadValues3({}, pageState), { bindingTargetId }), assets, shape.isGhost, false, meta);
  });
  tree.sort((a10, b10) => a10.shape.childIndex - b10.shape.childIndex);
  return tree;
}
var styles = /* @__PURE__ */ new Map();
function makeCssTheme(prefix, theme) {
  return Object.keys(theme).reduce((acc, key) => {
    const value = theme[key];
    if (value) {
      return acc + `${`--${prefix}-${key}`}: ${value};
`;
    }
    return acc;
  }, "");
}
function useTheme(prefix, theme, selector = ":root") {
  React6.useLayoutEffect(() => {
    const style = document.createElement("style");
    const cssTheme = makeCssTheme(prefix, theme);
    style.setAttribute("id", `${prefix}-theme`);
    style.setAttribute("data-selector", selector);
    style.innerHTML = `
        ${selector} {
          ${cssTheme}
        }
      `;
    document.head.appendChild(style);
    return () => {
      if (style && document.head.contains(style)) {
        document.head.removeChild(style);
      }
    };
  }, [prefix, theme, selector]);
}
function useStyle(uid, rules) {
  React6.useLayoutEffect(() => {
    if (styles.get(uid)) {
      return () => void 0;
    }
    const style = document.createElement("style");
    style.innerHTML = rules;
    style.setAttribute("id", uid);
    document.head.appendChild(style);
    styles.set(uid, style);
    return () => {
      if (style && document.head.contains(style)) {
        document.head.removeChild(style);
        styles.delete(uid);
      }
    };
  }, [uid, rules]);
}
var css = (strings, ...args) => strings.reduce((acc, string, index2) => acc + string + (index2 < args.length ? args[index2] : ""), "");
var defaultTheme = {
  accent: "rgb(255, 0, 0)",
  brushFill: "rgba(0,0,0,.05)",
  brushStroke: "rgba(0,0,0,.25)",
  brushDashStroke: "rgba(0,0,0,.6)",
  selectStroke: "rgb(66, 133, 244)",
  selectFill: "rgba(65, 132, 244, 0.05)",
  binding: "rgba(65, 132, 244, 0.12)",
  background: "rgb(248, 249, 250)",
  foreground: "rgb(51, 51, 51)",
  grid: "rgba(144, 144, 144, 1)"
};
var TLCSS = css`
  .tl-container {
    --tl-zoom: 1;
    --tl-scale: calc(1 / var(--tl-zoom));
    --tl-padding: calc(64px * max(1, var(--tl-scale)));
    --tl-performance-all: auto;
    --tl-performance-selected: auto;
    position: relative;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    box-sizing: border-box;
    padding: 0px;
    margin: 0px;
    z-index: 100;
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
    background-color: var(--tl-background);
  }
  .tl-container * {
    box-sizing: border-box;
  }
  .tl-overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    touch-action: none;
    pointer-events: none;
  }
  .tl-grid {
    position: absolute;
    width: 100%;
    height: 100%;
    touch-action: none;
    pointer-events: none;
    user-select: none;
  }
  .tl-snap-line {
    stroke: var(--tl-accent);
    stroke-width: calc(1px * var(--tl-scale));
  }
  .tl-snap-point {
    stroke: var(--tl-accent);
    stroke-width: calc(1px * var(--tl-scale));
  }
  .tl-canvas {
    position: absolute;
    width: 100%;
    height: 100%;
    touch-action: none;
    pointer-events: all;
    overflow: clip;
  }
  .tl-layer {
    position: absolute;
    top: 0px;
    left: 0px;
    height: 0px;
    width: 0px;
    contain: layout style size;
  }
  .tl-absolute {
    position: absolute;
    top: 0px;
    left: 0px;
    transform-origin: center center;
    contain: layout style size;
  }
  .tl-positioned {
    position: absolute;
    top: 0px;
    left: 0px;
    transform-origin: center center;
    pointer-events: none;
    display: flex;
    align-items: center;
    justify-content: center;
    contain: layout style size;
    will-change: var(--tl-performance-all);
  }
  .tl-positioned-svg {
    width: 100%;
    height: 100%;
    overflow: hidden;
    contain: layout style size;
  }
  .tl-positioned-div {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    padding: var(--tl-padding);
    overflow: hidden;
    contain: layout style size;
  }
  .tl-positioned-selected {
    will-change: var(--tl-performance-selected);
  }
  .tl-inner-div {
    position: relative;
    width: 100%;
    height: 100%;
  }
  .tl-stroke-hitarea {
    fill: none;
    stroke: transparent;
    stroke-width: calc(24px * var(--tl-scale));
    pointer-events: stroke;
    stroke-linecap: round;
    stroke-linejoin: round;
  }
  .tl-fill-hitarea {
    fill: transparent;
    stroke: transparent;
    stroke-width: calc(24px * var(--tl-scale));
    pointer-events: all;
    stroke-linecap: round;
    stroke-linejoin: round;
  }
  .tl-counter-scaled {
    transform: scale(var(--tl-scale));
  }
  .tl-dashed {
    stroke-dasharray: calc(2px * var(--tl-scale)), calc(2px * var(--tl-scale));
  }
  .tl-transparent {
    fill: transparent;
    stroke: transparent;
  }
  .tl-cursor-ns {
    cursor: ns-resize;
  }
  .tl-cursor-ew {
    cursor: ew-resize;
  }
  .tl-cursor-nesw {
    cursor: nesw-resize;
  }
  .tl-cursor-nwse {
    cursor: nwse-resize;
  }
  .tl-corner-handle {
    stroke: var(--tl-selectStroke);
    fill: var(--tl-background);
    stroke-width: calc(1.5px * var(--tl-scale));
  }
  .tl-rotate-handle {
    stroke: var(--tl-selectStroke);
    fill: var(--tl-background);
    stroke-width: calc(1.5px * var(--tl-scale));
    cursor: grab;
  }
  .tl-binding {
    fill: var(--tl-selectFill);
    stroke: var(--tl-selectStroke);
    stroke-width: calc(1px * var(--tl-scale));
    pointer-events: none;
  }
  .tl-user {
    left: calc(-15px * var(--tl-scale));
    top: calc(-15px * var(--tl-scale));
    height: calc(35px * var(--tl-scale));
    width: calc(35px * var(--tl-scale));
    transform: scale(var(--tl-scale));
    pointer-events: none;
    will-change: transform;
  }
  .tl-indicator {
    fill: transparent;
    stroke-width: calc(1.5px * var(--tl-scale));
    pointer-events: none;
  }
  .tl-user-indicator-bounds {
    border-style: solid;
    border-width: calc(1px * var(--tl-scale));
  }
  .tl-hovered {
    stroke: var(--tl-selectStroke);
  }
  .tl-selected {
    stroke: var(--tl-selectStroke);
  }
  .tl-locked {
    stroke-dasharray: calc(3px * var(--tl-scale)) calc(3px * var(--tl-scale));
  }
  .tl-editing {
    stroke-width: calc(2.5px * min(5, var(--tl-scale)));
  }
  .tl-performance {
    will-change: transform, contents;
  }
  .tl-clone-target {
    pointer-events: all;
  }
  .tl-clone-target:hover .tl-clone-button {
    opacity: 1;
  }
  .tl-clone-button-target {
    cursor: pointer;
    pointer-events: all;
  }
  .tl-clone-button-target:hover .tl-clone-button {
    fill: var(--tl-selectStroke);
  }
  .tl-clone-button {
    opacity: 0;
    r: calc(8px * var(--tl-scale));
    stroke-width: calc(1.5px * var(--tl-scale));
    stroke: var(--tl-selectStroke);
    fill: var(--tl-background);
  }
  .tl-bounds {
    pointer-events: none;
    contain: layout style size;
  }
  .tl-bounds-bg {
    stroke: none;
    fill: var(--tl-selectFill);
    pointer-events: all;
    contain: layout style size;
  }
  .tl-bounds-center {
    fill: transparent;
    stroke: var(--tl-selectStroke);
    stroke-width: calc(1.5px * var(--tl-scale));
  }
  .tl-brush {
    fill: var(--tl-brushFill);
    stroke: var(--tl-brushStroke);
    stroke-width: calc(1px * var(--tl-scale));
    pointer-events: none;
    contain: layout style size;
  }
  .tl-dashed-brush-line {
    fill: none;
    stroke: var(--tl-brushDashStroke);
    stroke-width: calc(1px * var(--tl-scale));
    pointer-events: none;
  }
  .tl-brush.dashed {
    stroke: none;
  }
  .tl-handle {
    pointer-events: all;
    cursor: grab;
  }
  .tl-handle:hover .tl-handle-bg {
    fill: var(--tl-selectFill);
  }
  .tl-handle:hover .tl-handle-bg > * {
    stroke: var(--tl-selectFill);
  }
  .tl-handle:active .tl-handle-bg {
    cursor: grabbing;
    fill: var(--tl-selectFill);
  }
  .tl-handle:active .tl-handle-bg > * {
    stroke: var(--tl-selectFill);
  }
  .tl-handle {
    fill: var(--tl-background);
    stroke: var(--tl-selectStroke);
    stroke-width: 1.5px;
  }
  .tl-handle-bg {
    fill: transparent;
    stroke: none;
    pointer-events: all;
    r: calc(16px / max(1, var(--tl-zoom)));
  }
  .tl-binding-indicator {
    fill: transparent;
    stroke: var(--tl-binding);
  }
  .tl-centered-g {
    transform: translate(var(--tl-padding), var(--tl-padding));
  }
  .tl-current-parent > *[data-shy='true'] {
    opacity: 1;
  }
  .tl-binding {
    fill: none;
    stroke: var(--tl-selectStroke);
    stroke-width: calc(2px * var(--tl-scale));
  }
  .tl-grid-dot {
    fill: var(--tl-grid);
  }
  .tl-erase-line {
    stroke-linejoin: round;
    stroke-linecap: round;
    pointer-events: none;
    fill: var(--tl-grid);
    opacity: 0.32;
  }
`;
function useTLTheme(theme, selector) {
  const tltheme = React6.useMemo(() => __spreadValues3(__spreadValues3({}, defaultTheme), theme), [theme]);
  useTheme("tl", tltheme, selector);
  useStyle("tl-canvas", TLCSS);
}
function useBoundsHandleEvents(id2) {
  const { callbacks, inputs: inputs2 } = useTLContext();
  const onPointerDown = React7.useCallback((e13) => {
    var _a4, _b2, _c;
    if (e13.dead)
      return;
    else
      e13.dead = true;
    if (e13.button !== 0)
      return;
    if (!inputs2.pointerIsValid(e13))
      return;
    const info = inputs2.pointerDown(e13, id2);
    if (inputs2.isDoubleClick() && !(info.altKey || info.metaKey)) {
      (_a4 = callbacks.onDoubleClickBoundsHandle) == null ? void 0 : _a4.call(callbacks, info, e13);
    }
    (_b2 = callbacks.onPointBoundsHandle) == null ? void 0 : _b2.call(callbacks, info, e13);
    (_c = callbacks.onPointerDown) == null ? void 0 : _c.call(callbacks, info, e13);
  }, [inputs2, callbacks, id2]);
  const onPointerUp = React7.useCallback((e13) => {
    var _a4, _b2;
    if (e13.dead)
      return;
    else
      e13.dead = true;
    if (e13.button !== 0)
      return;
    if (!inputs2.pointerIsValid(e13))
      return;
    const info = inputs2.pointerUp(e13, id2);
    (_a4 = callbacks.onReleaseBoundsHandle) == null ? void 0 : _a4.call(callbacks, info, e13);
    (_b2 = callbacks.onPointerUp) == null ? void 0 : _b2.call(callbacks, info, e13);
  }, [inputs2, callbacks, id2]);
  const onPointerMove = React7.useCallback((e13) => {
    var _a4, _b2;
    if (e13.dead)
      return;
    else
      e13.dead = true;
    if (!inputs2.pointerIsValid(e13))
      return;
    if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
      (_a4 = callbacks.onDragBoundsHandle) == null ? void 0 : _a4.call(callbacks, inputs2.pointerMove(e13, id2), e13);
    }
    const info = inputs2.pointerMove(e13, id2);
    (_b2 = callbacks.onPointerMove) == null ? void 0 : _b2.call(callbacks, info, e13);
  }, [inputs2, callbacks, id2]);
  const onPointerEnter = React7.useCallback((e13) => {
    var _a4;
    if (!inputs2.pointerIsValid(e13))
      return;
    (_a4 = callbacks.onHoverBoundsHandle) == null ? void 0 : _a4.call(callbacks, inputs2.pointerEnter(e13, id2), e13);
  }, [inputs2, callbacks, id2]);
  const onPointerLeave = React7.useCallback((e13) => {
    var _a4;
    if (!inputs2.pointerIsValid(e13))
      return;
    (_a4 = callbacks.onUnhoverBoundsHandle) == null ? void 0 : _a4.call(callbacks, inputs2.pointerEnter(e13, id2), e13);
  }, [inputs2, callbacks, id2]);
  return {
    onPointerDown,
    onPointerUp,
    onPointerEnter,
    onPointerMove,
    onPointerLeave
  };
}
function useCameraCss(layerRef, containerRef, pageState) {
  const rZoom = React8.useRef();
  const rPoint = React8.useRef();
  React8.useLayoutEffect(() => {
    return autorun(() => {
      const { zoom, point } = pageState.camera;
      const didZoom = zoom !== rZoom.current;
      const didPan = point !== rPoint.current;
      rZoom.current = zoom;
      rPoint.current = point;
      if (didZoom || didPan) {
        const layer = layerRef.current;
        if (containerRef && "current" in containerRef) {
          const container2 = containerRef.current;
          if (didZoom) {
            if (container2) {
              container2.style.setProperty("--tl-zoom", zoom.toString());
            }
          }
          if (layer) {
            layer.style.setProperty("transform", `scale(${zoom}) translateX(${point[0]}px) translateY(${point[1]}px)`);
          }
        }
      }
    });
  }, [pageState]);
}
function canvasToScreen(point, camera) {
  return [(point[0] + camera.point[0]) * camera.zoom, (point[1] + camera.point[1]) * camera.zoom];
}
function getShapeUtils(shapeUtils, shape) {
  return shapeUtils[shape.type];
}
function useSelection(page, pageState, shapeUtils) {
  const { rSelectionBounds } = useTLContext();
  const { selectedIds } = pageState;
  const rPrevBounds = React9.useRef();
  let bounds = void 0;
  let rotation = 0;
  let isLocked = false;
  let isLinked = false;
  if (selectedIds.length === 1) {
    const id2 = selectedIds[0];
    const shape = page.shapes[id2];
    if (!shape) {
      throw Error(`selectedIds is set to the id of a shape that doesn't exist: ${id2}`);
    }
    rotation = shape.rotation || 0;
    isLocked = shape.isLocked || false;
    const utils = getShapeUtils(shapeUtils, shape);
    bounds = utils.hideBounds ? void 0 : utils.getBounds(shape);
  } else if (selectedIds.length > 1) {
    const selectedShapes = selectedIds.map((id2) => page.shapes[id2]);
    rotation = 0;
    isLocked = selectedShapes.every((shape) => shape.isLocked);
    bounds = selectedShapes.reduce((acc, shape, i10) => {
      if (i10 === 0) {
        return getShapeUtils(shapeUtils, shape).getRotatedBounds(shape);
      }
      return utils_default.getExpandedBounds(acc, getShapeUtils(shapeUtils, shape).getRotatedBounds(shape));
    }, {});
  }
  if (bounds) {
    const [minX, minY] = canvasToScreen([bounds.minX, bounds.minY], pageState.camera);
    const [maxX, maxY] = canvasToScreen([bounds.maxX, bounds.maxY], pageState.camera);
    isLinked = !!Object.values(page.bindings).find((binding) => selectedIds.includes(binding.toId) || selectedIds.includes(binding.fromId));
    rSelectionBounds.current = {
      minX,
      minY,
      maxX,
      maxY,
      width: maxX - minX,
      height: maxY - minY
    };
  } else {
    rSelectionBounds.current = null;
  }
  const prevBounds = rPrevBounds.current;
  if (!prevBounds || !bounds) {
    rPrevBounds.current = bounds;
  } else if (bounds) {
    if (prevBounds.minX === bounds.minX && prevBounds.minY === bounds.minY && prevBounds.maxX === bounds.maxX && prevBounds.maxY === bounds.maxY) {
      bounds = rPrevBounds.current;
    }
  }
  return { bounds, rotation, isLocked, isLinked };
}
function useHandleEvents(id2) {
  const { inputs: inputs2, callbacks } = useTLContext();
  return React10.useMemo(() => {
    return {
      onPointerDown: (e13) => {
        var _a4, _b2, _c;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (!inputs2.pointerIsValid(e13))
          return;
        if (e13.button !== 0)
          return;
        if (!inputs2.pointerIsValid(e13))
          return;
        (_a4 = e13.currentTarget) == null ? void 0 : _a4.setPointerCapture(e13.pointerId);
        const info = inputs2.pointerDown(e13, id2);
        (_b2 = callbacks.onPointHandle) == null ? void 0 : _b2.call(callbacks, info, e13);
        (_c = callbacks.onPointerDown) == null ? void 0 : _c.call(callbacks, info, e13);
      },
      onPointerUp: (e13) => {
        var _a4, _b2, _c, _d2;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (e13.button !== 0)
          return;
        if (!inputs2.pointerIsValid(e13))
          return;
        const isDoubleClick = inputs2.isDoubleClick();
        const info = inputs2.pointerUp(e13, id2);
        if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
          (_a4 = e13.currentTarget) == null ? void 0 : _a4.releasePointerCapture(e13.pointerId);
          if (isDoubleClick && !(info.altKey || info.metaKey)) {
            (_b2 = callbacks.onDoubleClickHandle) == null ? void 0 : _b2.call(callbacks, info, e13);
          }
          (_c = callbacks.onReleaseHandle) == null ? void 0 : _c.call(callbacks, info, e13);
        }
        (_d2 = callbacks.onPointerUp) == null ? void 0 : _d2.call(callbacks, info, e13);
      },
      onPointerMove: (e13) => {
        var _a4, _b2;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (!inputs2.pointerIsValid(e13))
          return;
        const info = inputs2.pointerMove(e13, id2);
        if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
          (_a4 = callbacks.onDragHandle) == null ? void 0 : _a4.call(callbacks, info, e13);
        }
        (_b2 = callbacks.onPointerMove) == null ? void 0 : _b2.call(callbacks, info, e13);
      },
      onPointerEnter: (e13) => {
        var _a4;
        if (!inputs2.pointerIsValid(e13))
          return;
        const info = inputs2.pointerEnter(e13, id2);
        (_a4 = callbacks.onHoverHandle) == null ? void 0 : _a4.call(callbacks, info, e13);
      },
      onPointerLeave: (e13) => {
        var _a4;
        if (!inputs2.pointerIsValid(e13))
          return;
        const info = inputs2.pointerEnter(e13, id2);
        (_a4 = callbacks.onUnhoverHandle) == null ? void 0 : _a4.call(callbacks, info, e13);
      }
    };
  }, [inputs2, callbacks, id2]);
}
function usePreventNavigationCss(rCanvas) {
  const { bounds } = useTLContext();
  React11.useEffect(() => {
    const preventGestureNavigation = (event) => {
      event.preventDefault();
    };
    const preventNavigation = (event) => {
      const touchXPosition = event.touches[0].pageX;
      const touchXRadius = event.touches[0].radiusX || 0;
      if (touchXPosition - touchXRadius < 10 || touchXPosition + touchXRadius > bounds.width - 10) {
        event.preventDefault();
      }
    };
    const elm = rCanvas.current;
    if (!elm)
      return () => void 0;
    elm.addEventListener("touchstart", preventGestureNavigation);
    elm.addEventListener("gestureend", preventGestureNavigation);
    elm.addEventListener("gesturechange", preventGestureNavigation);
    elm.addEventListener("gesturestart", preventGestureNavigation);
    elm.addEventListener("touchstart", preventNavigation);
    return () => {
      if (elm) {
        elm.removeEventListener("touchstart", preventGestureNavigation);
        elm.removeEventListener("gestureend", preventGestureNavigation);
        elm.removeEventListener("gesturechange", preventGestureNavigation);
        elm.removeEventListener("gesturestart", preventGestureNavigation);
        elm.removeEventListener("touchstart", preventNavigation);
      }
    };
  }, [rCanvas, bounds.width]);
}
function useBoundsEvents() {
  const { callbacks, inputs: inputs2 } = useTLContext();
  return React12.useMemo(() => {
    return {
      onPointerDown: (e13) => {
        var _a4, _b2, _c, _d2;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (!inputs2.pointerIsValid(e13))
          return;
        if (e13.button === 2) {
          (_a4 = callbacks.onRightPointBounds) == null ? void 0 : _a4.call(callbacks, inputs2.pointerDown(e13, "bounds"), e13);
          return;
        }
        if (e13.button !== 0)
          return;
        (_b2 = e13.currentTarget) == null ? void 0 : _b2.setPointerCapture(e13.pointerId);
        const info = inputs2.pointerDown(e13, "bounds");
        (_c = callbacks.onPointBounds) == null ? void 0 : _c.call(callbacks, info, e13);
        (_d2 = callbacks.onPointerDown) == null ? void 0 : _d2.call(callbacks, info, e13);
      },
      onPointerUp: (e13) => {
        var _a4, _b2, _c, _d2;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (e13.button !== 0)
          return;
        inputs2.activePointer = void 0;
        if (!inputs2.pointerIsValid(e13))
          return;
        const isDoubleClick = inputs2.isDoubleClick();
        const info = inputs2.pointerUp(e13, "bounds");
        if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
          (_a4 = e13.currentTarget) == null ? void 0 : _a4.releasePointerCapture(e13.pointerId);
        }
        if (isDoubleClick && !(info.altKey || info.metaKey)) {
          (_b2 = callbacks.onDoubleClickBounds) == null ? void 0 : _b2.call(callbacks, info, e13);
        }
        (_c = callbacks.onReleaseBounds) == null ? void 0 : _c.call(callbacks, info, e13);
        (_d2 = callbacks.onPointerUp) == null ? void 0 : _d2.call(callbacks, info, e13);
      },
      onPointerMove: (e13) => {
        var _a4, _b2;
        if (e13.dead)
          return;
        else
          e13.dead = true;
        if (!inputs2.pointerIsValid(e13))
          return;
        if (e13.currentTarget.hasPointerCapture(e13.pointerId)) {
          (_a4 = callbacks.onDragBounds) == null ? void 0 : _a4.call(callbacks, inputs2.pointerMove(e13, "bounds"), e13);
        }
        const info = inputs2.pointerMove(e13, "bounds");
        (_b2 = callbacks.onPointerMove) == null ? void 0 : _b2.call(callbacks, info, e13);
      },
      onPointerEnter: (e13) => {
        var _a4;
        if (!inputs2.pointerIsValid(e13))
          return;
        (_a4 = callbacks.onHoverBounds) == null ? void 0 : _a4.call(callbacks, inputs2.pointerEnter(e13, "bounds"), e13);
      },
      onPointerLeave: (e13) => {
        var _a4;
        if (!inputs2.pointerIsValid(e13))
          return;
        (_a4 = callbacks.onUnhoverBounds) == null ? void 0 : _a4.call(callbacks, inputs2.pointerEnter(e13, "bounds"), e13);
      }
    };
  }, [inputs2, callbacks]);
}
function usePosition(bounds, rotation = 0) {
  const rBounds = React13.useRef(null);
  React13.useLayoutEffect(() => {
    return autorun(() => {
      const elm = rBounds.current;
      const transform = `
    translate(
      calc(${bounds.minX}px - var(--tl-padding)),
      calc(${bounds.minY}px - var(--tl-padding))
    )
    rotate(${rotation + (bounds.rotation || 0)}rad)`;
      elm.style.setProperty("transform", transform);
      elm.style.setProperty("width", `calc(${Math.floor(bounds.width)}px + (var(--tl-padding) * 2))`);
      elm.style.setProperty("height", `calc(${Math.floor(bounds.height)}px + (var(--tl-padding) * 2))`);
    });
  }, [bounds, rotation]);
  return rBounds;
}
function useKeyEvents() {
  const { inputs: inputs2, callbacks } = useTLContext();
  React14.useEffect(() => {
    const handleKeyDown = (e13) => {
      var _a4;
      (_a4 = callbacks.onKeyDown) == null ? void 0 : _a4.call(callbacks, e13.key, inputs2.keydown(e13), e13);
    };
    const handleKeyUp = (e13) => {
      var _a4;
      inputs2.keyup(e13);
      (_a4 = callbacks.onKeyUp) == null ? void 0 : _a4.call(callbacks, e13.key, inputs2.keyup(e13), e13);
    };
    window.addEventListener("keydown", handleKeyDown);
    window.addEventListener("keyup", handleKeyUp);
    return () => {
      window.removeEventListener("keydown", handleKeyDown);
      window.removeEventListener("keyup", handleKeyUp);
    };
  }, [inputs2, callbacks]);
}
function useCursorAnimation(ref, point, skip = false) {
  const rState = React15.useRef("idle");
  const rPrevPoint = React15.useRef(point);
  const rQueue = React15.useRef([]);
  const rTimestamp = React15.useRef(performance.now());
  const rLastRequestId = React15.useRef(0);
  const rTimeoutId = React15.useRef(0);
  const [spline] = React15.useState(() => new Spline());
  React15.useLayoutEffect(() => {
    if (skip) {
      const elm = ref.current;
      if (!elm)
        return;
      rState.current = "stopped";
      rPrevPoint.current = point;
      elm.style.setProperty("transform", `translate(${point[0]}px, ${point[1]}px)`);
      return;
    }
    const animateNext = (animation2) => {
      const start = performance.now();
      function loop() {
        const t12 = (performance.now() - start) / animation2.duration;
        if (t12 <= 1) {
          const elm = ref.current;
          if (!elm)
            return;
          const point2 = animation2.curve ? spline.getSplinePoint(t12 + animation2.start) : p.lrp(animation2.from, animation2.to, t12);
          elm.style.setProperty("transform", `translate(${point2[0]}px, ${point2[1]}px)`);
          rLastRequestId.current = requestAnimationFrame(loop);
          return;
        }
        const next = rQueue.current.shift();
        if (next) {
          rState.current = "animating";
          animateNext(next);
        } else {
          rState.current = "idle";
          rTimeoutId.current = setTimeout(() => {
            rState.current = "stopped";
          }, 250);
        }
      }
      loop();
    };
    const now2 = performance.now();
    if (rState.current === "stopped") {
      rTimestamp.current = now2;
      rPrevPoint.current = point;
      spline.clear();
    }
    spline.addPoint(point);
    const animation = {
      distance: spline.totalLength,
      curve: spline.points.length > 3,
      start: spline.points.length - 3,
      from: rPrevPoint.current,
      to: point,
      timeStamp: now2,
      duration: Math.min(now2 - rTimestamp.current, 300)
    };
    rTimestamp.current = now2;
    switch (rState.current) {
      case "stopped": {
        rPrevPoint.current = point;
        rState.current = "idle";
        break;
      }
      case "idle": {
        rState.current = "animating";
        animateNext(animation);
        break;
      }
      case "animating": {
        rPrevPoint.current = point;
        rQueue.current.push(animation);
        break;
      }
    }
    return () => clearTimeout(rTimeoutId.current);
  }, [skip, point, spline]);
}
var Spline = class {
  constructor() {
    __publicField(this, "points", []);
    __publicField(this, "lengths", []);
    __publicField(this, "totalLength", 0);
    __publicField(this, "prev");
  }
  addPoint(point) {
    if (this.prev) {
      const length = p.dist(this.prev, point);
      this.lengths.push(length);
      this.totalLength += length;
      this.points.push(point);
    }
    this.prev = point;
  }
  getSplinePoint(t12) {
    const { points } = this;
    const l10 = points.length - 1;
    const d10 = Math.trunc(t12);
    const p12 = Math.min(d10 + 1, l10);
    const p23 = Math.min(p12 + 1, l10);
    const p33 = Math.min(p23 + 1, l10);
    const p02 = p12 - 1;
    t12 = t12 - d10;
    const tt = t12 * t12, ttt = tt * t12, q12 = -ttt + 2 * tt - t12, q23 = 3 * ttt - 5 * tt + 2, q32 = -3 * ttt + 4 * tt + t12, q42 = ttt - tt;
    if (!(points[p02] && points[p12] && points[p23] && points[p33])) {
      return [0, 0];
    }
    return [
      0.5 * (points[p02][0] * q12 + points[p12][0] * q23 + points[p23][0] * q32 + points[p33][0] * q42),
      0.5 * (points[p02][1] * q12 + points[p12][1] * q23 + points[p23][1] * q32 + points[p33][1] * q42)
    ];
  }
  clear() {
    this.points = [];
    this.totalLength = 0;
  }
};
function usePerformanceCss(performanceMode, rContainer) {
  React16.useLayoutEffect(() => {
    if (rContainer && "current" in rContainer) {
      const container2 = rContainer == null ? void 0 : rContainer.current;
      if (!container2)
        return;
      switch (performanceMode) {
        case "transform_selected": {
          container2.style.setProperty("--tl-performance-all", "auto");
          container2.style.setProperty("--tl-performance-selected", "transform, contents");
          break;
        }
        case "transform_all": {
          container2.style.setProperty("--tl-performance-all", "transform, contents");
          container2.style.setProperty("--tl-performance-selected", "transform, contents");
          break;
        }
        case "translate_selected": {
          container2.style.setProperty("--tl-performance-all", "auto");
          container2.style.setProperty("--tl-performance-selected", "transform");
          break;
        }
        case "translate_all": {
          container2.style.setProperty("--tl-performance-all", "transform");
          container2.style.setProperty("--tl-performance-selected", "transform");
          break;
        }
        default: {
          container2.style.setProperty("--tl-performance-all", "auto");
          container2.style.setProperty("--tl-performance-selected", "auto");
        }
      }
    }
  }, [performanceMode]);
}
var Container = observer(function Container2(_a4) {
  var _b2 = _a4, {
    id: id2,
    bounds,
    rotation = 0,
    isGhost = false,
    isSelected = false,
    children
  } = _b2, props = __objRest2(_b2, [
    "id",
    "bounds",
    "rotation",
    "isGhost",
    "isSelected",
    "children"
  ]);
  const rPositioned = usePosition(bounds, rotation);
  return /* @__PURE__ */ React17.createElement("div", __spreadValues3({
    id: id2,
    ref: rPositioned,
    className: `tl-positioned${isGhost ? " tl-ghost" : ""}${isSelected ? ` tl-positioned-selected` : ""}`,
    "aria-label": "container",
    "data-testid": "container"
  }, props), children);
});
var Brush = observer(function Brush2({ brush, zoom, dashed }) {
  return /* @__PURE__ */ React18.createElement(Container, {
    bounds: brush,
    rotation: 0
  }, /* @__PURE__ */ React18.createElement(SVGContainer, null, /* @__PURE__ */ React18.createElement("rect", {
    className: "tl-brush" + (dashed ? " dashed" : ""),
    opacity: 1,
    x: 0,
    y: 0,
    width: brush.width,
    height: brush.height,
    "aria-label": "brush"
  }), dashed && /* @__PURE__ */ React18.createElement("g", {
    className: "tl-dashed-brush-line"
  }, /* @__PURE__ */ React18.createElement(PerfectDashLine, {
    x1: 0,
    y1: 0,
    x2: brush.width,
    y2: 0,
    zoom
  }), /* @__PURE__ */ React18.createElement(PerfectDashLine, {
    x1: brush.width,
    y1: 0,
    x2: brush.width,
    y2: brush.height,
    zoom
  }), /* @__PURE__ */ React18.createElement(PerfectDashLine, {
    x1: 0,
    y1: brush.height,
    x2: brush.width,
    y2: brush.height,
    zoom
  }), /* @__PURE__ */ React18.createElement(PerfectDashLine, {
    x1: 0,
    y1: 0,
    x2: 0,
    y2: brush.height,
    zoom
  }))));
});
function PerfectDashLine({ x1: x12, y1: y12, x2: x23, y2: y23, zoom }) {
  const dash = utils_default.getPerfectDashProps(Math.hypot(x23 - x12, y23 - y12), 1 / zoom, "dashed", 1, true, 3);
  return /* @__PURE__ */ React18.createElement("line", {
    x1: x12,
    y1: y12,
    x2: x23,
    y2: y23,
    strokeWidth: 1 / zoom,
    strokeDasharray: dash.strokeDasharray,
    strokeDashoffset: dash.strokeDashoffset
  });
}
var CenterHandle = observer(function CenterHandle2({
  bounds,
  isLocked,
  isHidden
}) {
  return /* @__PURE__ */ React19.createElement("rect", {
    className: ["tl-bounds-center", isLocked ? "tl-dashed" : ""].join(" "),
    x: -1,
    y: -1,
    width: bounds.width + 2,
    height: bounds.height + 2,
    opacity: isHidden ? 0 : 1,
    pointerEvents: "none",
    "aria-label": "center handle"
  });
});
var RotateHandle = observer(function RotateHandle2({
  bounds,
  targetSize,
  size,
  isHidden
}) {
  const events = useBoundsHandleEvents("rotate");
  return /* @__PURE__ */ React20.createElement("g", {
    cursor: "grab",
    opacity: isHidden ? 0 : 1
  }, /* @__PURE__ */ React20.createElement("circle", __spreadValues3({
    className: "tl-transparent",
    "aria-label": "rotate handle transparent",
    cx: bounds.width / 2,
    cy: size * -2,
    r: targetSize,
    pointerEvents: isHidden ? "none" : "all"
  }, events)), /* @__PURE__ */ React20.createElement("circle", {
    className: "tl-rotate-handle",
    "aria-label": "rotate handle",
    cx: bounds.width / 2,
    cy: size * -2,
    r: size / 2,
    pointerEvents: "none"
  }));
});
var cornerBgClassnames = {
  ["top_left_corner"]: "tl-cursor-nwse",
  ["top_right_corner"]: "tl-cursor-nesw",
  ["bottom_right_corner"]: "tl-cursor-nwse",
  ["bottom_left_corner"]: "tl-cursor-nesw"
};
var CornerHandle = observer(function CornerHandle2({
  size,
  targetSize,
  isHidden,
  corner,
  bounds
}) {
  const events = useBoundsHandleEvents(corner);
  const isTop = corner === "top_left_corner" || corner === "top_right_corner";
  const isLeft = corner === "top_left_corner" || corner === "bottom_left_corner";
  return /* @__PURE__ */ React21.createElement("g", {
    opacity: isHidden ? 0 : 1
  }, /* @__PURE__ */ React21.createElement("rect", __spreadValues3({
    className: "tl-transparent " + (isHidden ? "" : cornerBgClassnames[corner]),
    "aria-label": "corner transparent",
    x: (isLeft ? -1 : bounds.width + 1) - targetSize,
    y: (isTop ? -1 : bounds.height + 1) - targetSize,
    width: targetSize * 2,
    height: targetSize * 2,
    pointerEvents: isHidden ? "none" : "all"
  }, events)), /* @__PURE__ */ React21.createElement("rect", {
    className: "tl-corner-handle",
    "aria-label": "corner handle",
    x: (isLeft ? -1 : bounds.width + 1) - size / 2,
    y: (isTop ? -1 : bounds.height + 1) - size / 2,
    width: size,
    height: size,
    pointerEvents: "none"
  }));
});
function LinkHandle({ size, bounds, isHidden }) {
  const leftEvents = useBoundsHandleEvents("left");
  const centerEvents = useBoundsHandleEvents("center");
  const rightEvents = useBoundsHandleEvents("right");
  return /* @__PURE__ */ React222.createElement("g", {
    cursor: "grab",
    transform: `translate(${bounds.width / 2 - size * 4}, ${bounds.height + size * 2})`,
    "aria-label": "link handle"
  }, /* @__PURE__ */ React222.createElement("g", {
    className: "tl-transparent",
    pointerEvents: isHidden ? "none" : "all"
  }, /* @__PURE__ */ React222.createElement("rect", __spreadValues3({
    x: 0,
    y: 0,
    width: size * 2,
    height: size * 2
  }, leftEvents)), /* @__PURE__ */ React222.createElement("rect", __spreadValues3({
    x: size * 3,
    y: 0,
    width: size * 2,
    height: size * 2
  }, centerEvents)), /* @__PURE__ */ React222.createElement("rect", __spreadValues3({
    x: size * 6,
    y: 0,
    width: size * 2,
    height: size * 2
  }, rightEvents))), /* @__PURE__ */ React222.createElement("g", {
    className: "tl-rotate-handle",
    transform: `translate(${size / 2}, ${size / 2})`,
    "aria-label": "link rotate handle"
  }, /* @__PURE__ */ React222.createElement("path", {
    d: `M 0,${size / 2} L ${size},${size} ${size},0 Z`,
    pointerEvents: "none",
    opacity: isHidden ? 0 : 1
  }), /* @__PURE__ */ React222.createElement("path", {
    transform: `translate(${size * 3}, 0)`,
    d: `M 0,0 L ${size},0 ${size / 2},${size} Z`,
    pointerEvents: "none",
    opacity: isHidden ? 0 : 1
  }), /* @__PURE__ */ React222.createElement("path", {
    transform: `translate(${size * 6}, 0)`,
    d: `M ${size},${size / 2} L 0,0 0,${size} Z`,
    pointerEvents: "none",
    opacity: isHidden ? 0 : 1
  })));
}
var edgeClassnames = {
  ["top_edge"]: "tl-cursor-ns",
  ["right_edge"]: "tl-cursor-ew",
  ["bottom_edge"]: "tl-cursor-ns",
  ["left_edge"]: "tl-cursor-ew"
};
var EdgeHandle = observer(function EdgeHandle2({
  size,
  isHidden,
  bounds,
  edge
}) {
  const events = useBoundsHandleEvents(edge);
  const isHorizontal = edge === "top_edge" || edge === "bottom_edge";
  const isFarEdge = edge === "right_edge" || edge === "bottom_edge";
  const { height, width } = bounds;
  return /* @__PURE__ */ React23.createElement("rect", __spreadValues3({
    pointerEvents: isHidden ? "none" : "all",
    className: "tl-transparent tl-edge-handle " + (isHidden ? "" : edgeClassnames[edge]),
    "aria-label": `${edge} handle`,
    opacity: isHidden ? 0 : 1,
    x: isHorizontal ? size / 2 : (isFarEdge ? width + 1 : -1) - size / 2,
    y: isHorizontal ? (isFarEdge ? height + 1 : -1) - size / 2 : size / 2,
    width: isHorizontal ? Math.max(0, width + 1 - size) : size,
    height: isHorizontal ? size : Math.max(0, height + 1 - size)
  }, events));
});
var ROTATIONS = {
  right: 0,
  bottomRight: 45,
  bottom: 90,
  bottomLeft: 135,
  left: 180,
  topLeft: 225,
  top: 270,
  topRight: 315
};
var CloneButton = observer(function CloneButton2({
  bounds,
  side,
  targetSize,
  size
}) {
  const s10 = targetSize * 2;
  const x10 = {
    left: -s10,
    topLeft: -s10,
    bottomLeft: -s10,
    right: bounds.width,
    topRight: bounds.width,
    bottomRight: bounds.width,
    top: bounds.width / 2 - s10 / 2,
    bottom: bounds.width / 2 - s10 / 2
  }[side];
  const y10 = {
    left: bounds.height / 2 - s10 / 2,
    right: bounds.height / 2 - s10 / 2,
    top: -s10 * 2,
    topLeft: -s10,
    topRight: -s10,
    bottom: bounds.height,
    bottomLeft: bounds.height,
    bottomRight: bounds.height
  }[side];
  const { callbacks, inputs: inputs2 } = useTLContext();
  const handleClick = React24.useCallback((e13) => {
    var _a4;
    e13.stopPropagation();
    const info = inputs2.pointerDown(e13, side);
    (_a4 = callbacks.onShapeClone) == null ? void 0 : _a4.call(callbacks, info, e13);
  }, [callbacks.onShapeClone]);
  return /* @__PURE__ */ React24.createElement("g", {
    className: "tl-clone-target",
    transform: `translate(${x10}, ${y10})`,
    "aria-label": "clone button"
  }, /* @__PURE__ */ React24.createElement("rect", {
    className: "tl-transparent",
    width: targetSize * 2,
    height: targetSize * 2
  }), /* @__PURE__ */ React24.createElement("g", {
    className: "tl-clone-button-target",
    onPointerDown: handleClick,
    transform: `translate(${targetSize}, ${targetSize}) rotate(${ROTATIONS[side]})`
  }, /* @__PURE__ */ React24.createElement("circle", {
    className: "tl-transparent ",
    r: targetSize
  }), /* @__PURE__ */ React24.createElement("path", {
    className: "tl-clone-button",
    d: `M -${size / 2},-${size / 2} L ${size / 2},0 -${size / 2},${size / 2} Z`,
    strokeLinejoin: "round"
  })));
});
function CloneButtons({ targetSize, size, bounds }) {
  return /* @__PURE__ */ React25.createElement(React25.Fragment, null, /* @__PURE__ */ React25.createElement(CloneButton, {
    targetSize,
    size,
    bounds,
    side: "top"
  }), /* @__PURE__ */ React25.createElement(CloneButton, {
    targetSize,
    size,
    bounds,
    side: "right"
  }), /* @__PURE__ */ React25.createElement(CloneButton, {
    targetSize,
    size,
    bounds,
    side: "bottom"
  }), /* @__PURE__ */ React25.createElement(CloneButton, {
    targetSize,
    size,
    bounds,
    side: "left"
  }), /* @__PURE__ */ React25.createElement(CloneButton, {
    targetSize,
    size,
    bounds,
    side: "topLeft"
  }), /* @__PURE__ */ React25.createElement(CloneButton, {
    targetSize,
    size,
    bounds,
    side: "topRight"
  }), /* @__PURE__ */ React25.createElement(CloneButton, {
    targetSize,
    size,
    bounds,
    side: "bottomLeft"
  }), /* @__PURE__ */ React25.createElement(CloneButton, {
    targetSize,
    size,
    bounds,
    side: "bottomRight"
  }));
}
var SVGContainer = React26.forwardRef(function SVGContainer2(_a4, ref) {
  var _b2 = _a4, { id: id2, className = "", children } = _b2, rest = __objRest2(_b2, ["id", "className", "children"]);
  return /* @__PURE__ */ React26.createElement(ObserverComponent, null, () => /* @__PURE__ */ React26.createElement("svg", __spreadValues3({
    ref,
    className: `tl-positioned-svg ${className}`
  }, rest), /* @__PURE__ */ React26.createElement("g", {
    id: id2,
    className: "tl-centered-g"
  }, children)));
});
var Bounds = observer(function Bounds2({
  zoom,
  bounds,
  viewportWidth,
  rotation,
  isHidden,
  isLocked,
  hideCloneHandles,
  hideResizeHandles,
  hideRotateHandle,
  hideBindingHandles
}) {
  const targetSize = (viewportWidth < 768 ? 16 : 8) / zoom;
  const size = 8 / zoom;
  const smallDimension = Math.min(bounds.width, bounds.height) * zoom;
  const showRotateHandle = !hideRotateHandle && !isHidden && !isLocked && smallDimension > 32;
  const showEdgeHandles = !isHidden && !isLocked && smallDimension > 24;
  const showCornerHandles = !isHidden && !isLocked && smallDimension > 20;
  const showCloneHandles = !hideCloneHandles && smallDimension > 24;
  const showResizeHandles = !hideResizeHandles && !isLocked;
  return /* @__PURE__ */ React27.createElement(Container, {
    bounds,
    rotation
  }, /* @__PURE__ */ React27.createElement(SVGContainer, null, /* @__PURE__ */ React27.createElement(CenterHandle, {
    bounds,
    isLocked,
    isHidden
  }), showResizeHandles ? /* @__PURE__ */ React27.createElement(React27.Fragment, null, /* @__PURE__ */ React27.createElement(EdgeHandle, {
    targetSize,
    size,
    bounds,
    edge: "top_edge",
    isHidden: !showEdgeHandles
  }), /* @__PURE__ */ React27.createElement(EdgeHandle, {
    targetSize,
    size,
    bounds,
    edge: "right_edge",
    isHidden: !showEdgeHandles
  }), /* @__PURE__ */ React27.createElement(EdgeHandle, {
    targetSize,
    size,
    bounds,
    edge: "bottom_edge",
    isHidden: !showEdgeHandles
  }), /* @__PURE__ */ React27.createElement(EdgeHandle, {
    targetSize,
    size,
    bounds,
    edge: "left_edge",
    isHidden: !showEdgeHandles
  }), /* @__PURE__ */ React27.createElement(CornerHandle, {
    targetSize,
    size,
    bounds,
    isHidden: isHidden || !showCornerHandles,
    corner: "top_left_corner"
  }), /* @__PURE__ */ React27.createElement(CornerHandle, {
    targetSize,
    size,
    bounds,
    isHidden: isHidden || !showCornerHandles,
    corner: "top_right_corner"
  }), /* @__PURE__ */ React27.createElement(CornerHandle, {
    targetSize,
    size,
    bounds,
    isHidden: isHidden || !showCornerHandles,
    corner: "bottom_right_corner"
  }), /* @__PURE__ */ React27.createElement(CornerHandle, {
    targetSize,
    size,
    bounds,
    isHidden: isHidden || !showCornerHandles,
    corner: "bottom_left_corner"
  })) : null, showRotateHandle && /* @__PURE__ */ React27.createElement(RotateHandle, {
    targetSize,
    size,
    bounds,
    isHidden: !showEdgeHandles
  }), showCloneHandles && /* @__PURE__ */ React27.createElement(CloneButtons, {
    bounds,
    targetSize,
    size
  }), !hideBindingHandles && /* @__PURE__ */ React27.createElement(LinkHandle, {
    targetSize,
    size,
    bounds,
    isHidden: !showEdgeHandles
  })));
});
var BoundsBg = observer(function BoundsBg2({ bounds, rotation, isHidden }) {
  const events = useBoundsEvents();
  return /* @__PURE__ */ React28.createElement(Container, {
    bounds,
    rotation
  }, /* @__PURE__ */ React28.createElement(SVGContainer, null, /* @__PURE__ */ React28.createElement("rect", __spreadValues3({
    className: "tl-bounds-bg",
    "aria-label": "bounds bg",
    width: bounds.width,
    height: bounds.height,
    opacity: isHidden ? 0 : 1
  }, events))));
});
var Handle = observer(function Handle2({ id: id2, point }) {
  const events = useHandleEvents(id2);
  return /* @__PURE__ */ React29.createElement(Container, {
    bounds: utils_default.translateBounds({
      minX: 0,
      minY: 0,
      maxX: 0,
      maxY: 0,
      width: 0,
      height: 0
    }, point)
  }, /* @__PURE__ */ React29.createElement(SVGContainer, null, /* @__PURE__ */ React29.createElement("g", __spreadValues3({
    className: "tl-handle",
    "aria-label": "handle"
  }, events), /* @__PURE__ */ React29.createElement("circle", {
    className: "tl-handle-bg",
    pointerEvents: "all"
  }), /* @__PURE__ */ React29.createElement("circle", {
    className: "tl-counter-scaled tl-handle",
    pointerEvents: "none",
    r: 4
  }))));
});
var Handles = observer(function Handles2({ shape, zoom }) {
  if (shape.handles === void 0) {
    return null;
  }
  let prev = null;
  const handlesToShow = Object.values(shape.handles).reduce((acc, cur) => {
    const point = e.add(cur.point, shape.point);
    if (!prev || e.dist(point, prev) * zoom >= 32) {
      acc.push(cur);
      prev = point;
    }
    return acc;
  }, []);
  if (handlesToShow.length === 1)
    return null;
  return /* @__PURE__ */ React30.createElement(React30.Fragment, null, handlesToShow.map((handle) => /* @__PURE__ */ React30.createElement(Handle, {
    key: shape.id + "_" + handle.id,
    id: handle.id,
    point: e.add(handle.point, shape.point)
  })));
});
var _RenderedShape = observer(function RenderedShape(props) {
  const ref = props.utils.getRef(props.shape);
  return /* @__PURE__ */ React31.createElement(props.utils.Component, __spreadValues3({
    ref
  }, props));
});
var RenderedShape2 = React31.memo(_RenderedShape, (prev, next) => {
  if (prev.isHovered !== next.isHovered || prev.isSelected !== next.isSelected || prev.isEditing !== next.isEditing || prev.isBinding !== next.isBinding || prev.isGhost !== next.isGhost || prev.meta !== next.meta) {
    return false;
  }
  if (next.shape !== prev.shape) {
    return !next.utils.shouldRender(next.shape, prev.shape);
  }
  return true;
});
var Shape = observer(function Shape2(_a4) {
  var _b2 = _a4, {
    shape,
    utils,
    meta
  } = _b2, rest = __objRest2(_b2, [
    "shape",
    "utils",
    "meta"
  ]);
  const { callbacks } = useTLContext();
  const bounds = utils.getBounds(shape);
  const events = useShapeEvents(shape.id);
  return /* @__PURE__ */ React322.createElement(Container, {
    id: shape.id,
    bounds,
    rotation: shape.rotation,
    "data-shape": shape.type,
    isGhost: rest.isGhost,
    isSelected: rest.isSelected
  }, /* @__PURE__ */ React322.createElement(RenderedShape2, __spreadValues3({
    shape,
    utils,
    meta,
    events,
    bounds,
    onShapeChange: callbacks.onShapeChange,
    onShapeBlur: callbacks.onShapeBlur
  }, rest)));
});
var ShapeNode = observer(function ShapeNode2(_a4) {
  var _b2 = _a4, {
    shape,
    utils,
    meta,
    children
  } = _b2, rest = __objRest2(_b2, [
    "shape",
    "utils",
    "meta",
    "children"
  ]);
  return /* @__PURE__ */ React33.createElement(React33.Fragment, null, /* @__PURE__ */ React33.createElement(Shape, __spreadValues3({
    shape,
    utils: utils[shape.type],
    meta
  }, rest)), children && children.map((childNode) => /* @__PURE__ */ React33.createElement(ShapeNode2, __spreadValues3({
    key: childNode.shape.id,
    utils
  }, childNode))));
});
var ShapeIndicator = observer(function ShapeIndicator2({
  isHovered = false,
  isSelected = false,
  isEditing = false,
  shape,
  user,
  meta
}) {
  const { shapeUtils } = useTLContext();
  const utils = shapeUtils[shape.type];
  const bounds = utils.getBounds(shape);
  const rPositioned = usePosition(bounds, shape.rotation);
  return /* @__PURE__ */ React34.createElement("div", {
    ref: rPositioned,
    draggable: false,
    className: [
      "tl-indicator",
      "tl-absolute",
      isSelected && !user ? "tl-selected" : "tl-hovered",
      isEditing ? "tl-editing" : "",
      shape.isLocked ? "tl-locked" : ""
    ].join(" ")
  }, /* @__PURE__ */ React34.createElement("svg", {
    width: "100%",
    height: "100%"
  }, /* @__PURE__ */ React34.createElement("g", {
    className: "tl-centered-g",
    stroke: user == null ? void 0 : user.color
  }, /* @__PURE__ */ React34.createElement(utils.Indicator, {
    shape,
    meta,
    user,
    bounds,
    isSelected,
    isHovered
  }))));
});
var Page = observer(function _Page({
  page,
  pageState,
  assets,
  hideBounds,
  hideHandles,
  hideIndicators,
  hideBindingHandles,
  hideCloneHandles,
  hideRotateHandle,
  hideResizeHandles,
  meta
}) {
  const { bounds: rendererBounds, shapeUtils } = useTLContext();
  const shapeTree = useShapeTree(page, pageState, assets, meta);
  const { bounds, isLinked, isLocked, rotation } = useSelection(page, pageState, shapeUtils);
  const {
    selectedIds,
    hoveredId,
    editingId,
    camera: { zoom }
  } = pageState;
  let _hideIndicators = hideIndicators;
  let _hideCloneHandles = true;
  let _isEditing = false;
  let shapeWithHandles = void 0;
  const selectedShapes = selectedIds.map((id2) => page.shapes[id2]);
  if (selectedShapes.length === 1) {
    const shape = selectedShapes[0];
    _isEditing = editingId === shape.id;
    if (_isEditing)
      _hideIndicators = true;
    const utils = shapeUtils[shape.type];
    _hideCloneHandles = hideCloneHandles || !utils.showCloneHandles;
    if (shape.handles !== void 0 && !_isEditing) {
      shapeWithHandles = shape;
    }
  }
  return /* @__PURE__ */ React35.createElement(React35.Fragment, null, bounds && /* @__PURE__ */ React35.createElement(BoundsBg, {
    bounds,
    rotation,
    isHidden: hideBounds
  }), shapeTree.map((node) => /* @__PURE__ */ React35.createElement(ShapeNode, __spreadValues3({
    key: node.shape.id,
    utils: shapeUtils
  }, node))), !_hideIndicators && selectedShapes.map((shape) => /* @__PURE__ */ React35.createElement(ShapeIndicator, {
    key: "selected_" + shape.id,
    shape,
    meta,
    isSelected: true,
    isEditing: _isEditing
  })), !_hideIndicators && hoveredId && hoveredId !== editingId && /* @__PURE__ */ React35.createElement(ShapeIndicator, {
    key: "hovered_" + hoveredId,
    shape: page.shapes[hoveredId],
    meta,
    isHovered: true
  }), bounds && /* @__PURE__ */ React35.createElement(Bounds, {
    zoom,
    bounds,
    viewportWidth: rendererBounds.width,
    isLocked,
    rotation,
    isHidden: hideBounds,
    hideRotateHandle,
    hideResizeHandles,
    hideBindingHandles: hideBindingHandles || !isLinked,
    hideCloneHandles: _hideCloneHandles
  }), !hideHandles && shapeWithHandles && /* @__PURE__ */ React35.createElement(Handles, {
    shape: shapeWithHandles,
    zoom
  }));
});
function User({ user }) {
  const rCursor = React36.useRef(null);
  useCursorAnimation(rCursor, user.point, user.session);
  return /* @__PURE__ */ React36.createElement("svg", {
    ref: rCursor,
    className: "tl-absolute tl-user tl-counter-scaled",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 35 35",
    fill: "none",
    fillRule: "evenodd"
  }, /* @__PURE__ */ React36.createElement("g", {
    fill: "rgba(0,0,0,.2)",
    transform: "translate(1,1)"
  }, /* @__PURE__ */ React36.createElement("path", {
    d: "m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z"
  }), /* @__PURE__ */ React36.createElement("path", {
    d: "m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z"
  })), /* @__PURE__ */ React36.createElement("g", {
    fill: "white"
  }, /* @__PURE__ */ React36.createElement("path", {
    d: "m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z"
  }), /* @__PURE__ */ React36.createElement("path", {
    d: "m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z"
  })), /* @__PURE__ */ React36.createElement("g", {
    fill: user.color
  }, /* @__PURE__ */ React36.createElement("path", {
    d: "m19.751 24.4155-1.844.774-3.1-7.374 1.841-.775z"
  }), /* @__PURE__ */ React36.createElement("path", {
    d: "m13 10.814v11.188l2.969-2.866.428-.139h4.768z"
  })));
}
function Users({ userId, users }) {
  return /* @__PURE__ */ React37.createElement(React37.Fragment, null, Object.values(users).filter((user) => user && user.id !== userId).map((user) => /* @__PURE__ */ React37.createElement(User, {
    key: user.id,
    user
  })));
}
var getNearestScrollableContainer = (element) => {
  let parent = element.parentElement;
  while (parent) {
    if (parent === document.body) {
      return document;
    }
    const { overflowY } = window.getComputedStyle(parent);
    const hasScrollableContent = parent.scrollHeight > parent.clientHeight;
    if (hasScrollableContent && (overflowY === "auto" || overflowY === "scroll" || overflowY === "overlay")) {
      return parent;
    }
    parent = parent.parentElement;
  }
  return document;
};
function useResizeObserver(ref, onBoundsChange) {
  const { inputs: inputs2, callbacks } = useTLContext();
  const rIsMounted = React38.useRef(false);
  const updateBounds = React38.useCallback(() => {
    var _a4, _b2;
    if (rIsMounted.current) {
      const rect = (_a4 = ref.current) == null ? void 0 : _a4.getBoundingClientRect();
      if (rect) {
        const bounds = {
          minX: rect.left,
          maxX: rect.left + rect.width,
          minY: rect.top,
          maxY: rect.top + rect.height,
          width: rect.width,
          height: rect.height
        };
        inputs2.bounds = bounds;
        onBoundsChange(bounds);
        (_b2 = callbacks.onBoundsChange) == null ? void 0 : _b2.call(callbacks, bounds);
      }
    } else {
      rIsMounted.current = true;
    }
  }, [ref, inputs2, callbacks.onBoundsChange]);
  React38.useEffect(() => {
    const scrollingAnchor = ref.current ? getNearestScrollableContainer(ref.current) : document;
    const debouncedupdateBounds = Utils.debounce(updateBounds, 100);
    scrollingAnchor.addEventListener("scroll", debouncedupdateBounds);
    window.addEventListener("resize", debouncedupdateBounds);
    return () => {
      scrollingAnchor.removeEventListener("scroll", debouncedupdateBounds);
      window.removeEventListener("resize", debouncedupdateBounds);
    };
  }, []);
  React38.useEffect(() => {
    const resizeObserver = new ResizeObserver_es_default((entries2) => {
      if (inputs2.isPinching) {
        return;
      }
      if (entries2[0].contentRect) {
        updateBounds();
      }
    });
    if (ref.current) {
      resizeObserver.observe(ref.current);
    }
    return () => {
      resizeObserver.disconnect();
    };
  }, [ref, inputs2]);
  React38.useEffect(() => {
    updateBounds();
  }, [ref]);
}
function UsersIndicators({
  userId,
  users,
  meta,
  page
}) {
  const { shapeUtils } = useTLContext();
  return /* @__PURE__ */ React39.createElement(React39.Fragment, null, Object.values(users).filter(Boolean).filter((user) => user.id !== userId && user.selectedIds.length > 0).map((user) => {
    const shapes = user.selectedIds.map((id2) => page.shapes[id2]).filter(Boolean);
    if (shapes.length === 0)
      return null;
    const bounds = utils_default.getCommonBounds(shapes.map((shape) => shapeUtils[shape.type].getBounds(shape)));
    return /* @__PURE__ */ React39.createElement(React39.Fragment, {
      key: user.id + "_shapes"
    }, /* @__PURE__ */ React39.createElement("div", {
      className: "tl-absolute tl-user-indicator-bounds",
      style: {
        backgroundColor: user.color + "0d",
        borderColor: user.color + "78",
        transform: `translate(${bounds.minX}px, ${bounds.minY}px)`,
        width: bounds.width,
        height: bounds.height,
        pointerEvents: "none"
      }
    }), shapes.map((shape) => /* @__PURE__ */ React39.createElement(ShapeIndicator, {
      key: `${user.id}_${shape.id}_indicator`,
      shape,
      user,
      meta,
      isHovered: true
    })));
  }));
}
var SnapLines = observer(function SnapLines2({ snapLines }) {
  return /* @__PURE__ */ React40.createElement(React40.Fragment, null, snapLines.map((snapLine, i10) => /* @__PURE__ */ React40.createElement(SnapLine, {
    key: i10,
    snapLine
  })));
});
var SnapLine = observer(function SnapLine2({ snapLine }) {
  const bounds = utils_default.getBoundsFromPoints(snapLine);
  return /* @__PURE__ */ React40.createElement(React40.Fragment, null, /* @__PURE__ */ React40.createElement("line", {
    className: "tl-snap-line",
    x1: bounds.minX,
    y1: bounds.minY,
    x2: bounds.maxX,
    y2: bounds.maxY
  }), snapLine.map(([x10, y10], i10) => /* @__PURE__ */ React40.createElement("use", {
    key: i10,
    href: "#tl-snap-point",
    x: x10,
    y: y10
  })));
});
var STEPS = [
  [-1, 0.15, 64],
  [0.05, 0.375, 16],
  [0.15, 1, 4],
  [0.7, 2.5, 1]
];
function Grid({ grid, camera }) {
  return /* @__PURE__ */ React41.createElement("svg", {
    className: "tl-grid",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, /* @__PURE__ */ React41.createElement("defs", null, STEPS.map(([min, mid, size], i10) => {
    const s10 = size * grid * camera.zoom;
    const xo2 = camera.point[0] * camera.zoom;
    const yo2 = camera.point[1] * camera.zoom;
    const gxo = xo2 > 0 ? xo2 % s10 : s10 + xo2 % s10;
    const gyo = yo2 > 0 ? yo2 % s10 : s10 + yo2 % s10;
    const opacity = camera.zoom < mid ? utils_default.modulate(camera.zoom, [min, mid], [0, 1]) : 1;
    return /* @__PURE__ */ React41.createElement("pattern", {
      key: `grid-pattern-${i10}`,
      id: `grid-${i10}`,
      width: s10,
      height: s10,
      patternUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ React41.createElement("circle", {
      className: `tl-grid-dot`,
      cx: gxo,
      cy: gyo,
      r: 1,
      opacity
    }));
  })), STEPS.map((_10, i10) => /* @__PURE__ */ React41.createElement("rect", {
    key: `grid-rect-${i10}`,
    width: "100%",
    height: "100%",
    fill: `url(#grid-${i10})`
  })));
}
var Overlay = observer(function Overlay2({ camera: { zoom, point }, children }) {
  const l10 = 2.5 / zoom;
  return /* @__PURE__ */ React42.createElement("svg", {
    className: "tl-overlay"
  }, /* @__PURE__ */ React42.createElement("defs", null, /* @__PURE__ */ React42.createElement("g", {
    id: "tl-snap-point"
  }, /* @__PURE__ */ React42.createElement("path", {
    className: "tl-snap-point",
    d: `M ${-l10},${-l10} L ${l10},${l10} M ${-l10},${l10} L ${l10},${-l10}`
  }))), /* @__PURE__ */ React42.createElement("g", {
    transform: `scale(${zoom}) translate(${point})`
  }, children));
});
var EraseLine = observer(function EraserLine({ points, zoom }) {
  if (points.length === 0)
    return null;
  const d10 = utils_default.getSvgPathFromStroke(Te(points, { size: 16 / zoom, start: { taper: true } }));
  return /* @__PURE__ */ React43.createElement("path", {
    d: d10,
    className: "tl-erase-line"
  });
});
var Canvas = observer(function _Canvas({
  id: id2,
  page,
  pageState,
  assets,
  snapLines,
  eraseLine,
  grid,
  users,
  userId,
  meta,
  performanceMode,
  externalContainerRef,
  showDashedBrush,
  hideHandles,
  hideBounds,
  hideIndicators,
  hideBindingHandles,
  hideCloneHandles,
  hideResizeHandles,
  hideRotateHandle,
  hideGrid,
  onBoundsChange
}) {
  const rCanvas = React44.useRef(null);
  const rZoomRef = React44.useRef(pageState.camera.zoom);
  rZoomRef.current = pageState.camera.zoom;
  useZoomEvents(rZoomRef, externalContainerRef || rCanvas);
  useResizeObserver(rCanvas, onBoundsChange);
  useSafariFocusOutFix();
  usePreventNavigationCss(rCanvas);
  const rContainer = React44.useRef(null);
  const rLayer = React44.useRef(null);
  useCameraCss(rLayer, rContainer, pageState);
  usePerformanceCss(performanceMode, rContainer);
  useKeyEvents();
  const events = useCanvasEvents();
  return /* @__PURE__ */ React44.createElement("div", {
    id: id2,
    className: "tl-container",
    ref: rContainer
  }, /* @__PURE__ */ React44.createElement("div", __spreadValues3({
    id: "canvas",
    className: "tl-absolute tl-canvas",
    ref: rCanvas
  }, events), !hideGrid && grid && /* @__PURE__ */ React44.createElement(Grid, {
    grid,
    camera: pageState.camera
  }), /* @__PURE__ */ React44.createElement("div", {
    ref: rLayer,
    className: "tl-absolute tl-layer",
    "data-testid": "layer"
  }, /* @__PURE__ */ React44.createElement(Page, {
    page,
    pageState,
    assets,
    hideBounds,
    hideIndicators,
    hideHandles,
    hideBindingHandles,
    hideCloneHandles,
    hideResizeHandles,
    hideRotateHandle,
    meta
  }), users && userId && /* @__PURE__ */ React44.createElement(UsersIndicators, {
    userId,
    users,
    page,
    meta
  }), pageState.brush && /* @__PURE__ */ React44.createElement(Brush, {
    brush: pageState.brush,
    dashed: showDashedBrush,
    zoom: pageState.camera.zoom
  }), users && /* @__PURE__ */ React44.createElement(Users, {
    userId,
    users
  })), /* @__PURE__ */ React44.createElement(Overlay, {
    camera: pageState.camera
  }, eraseLine && /* @__PURE__ */ React44.createElement(EraseLine, {
    points: eraseLine,
    zoom: pageState.camera.zoom
  }), snapLines && /* @__PURE__ */ React44.createElement(SnapLines, {
    snapLines
  }))));
});
var DOUBLE_CLICK_DURATION = 250;
var Inputs = class {
  constructor() {
    __publicField(this, "pointer");
    __publicField(this, "keyboard");
    __publicField(this, "keys", {});
    __publicField(this, "isPinching", false);
    __publicField(this, "bounds", {
      minX: 0,
      maxX: 640,
      minY: 0,
      maxY: 480,
      width: 640,
      height: 480
    });
    __publicField(this, "pointerUpTime", 0);
    __publicField(this, "activePointer");
    __publicField(this, "panStart", (e13) => {
      var _a4, _b2;
      const { shiftKey, ctrlKey, metaKey, altKey } = e13;
      const info = {
        target: "wheel",
        pointerId: ((_a4 = this.pointer) == null ? void 0 : _a4.pointerId) || 0,
        origin: ((_b2 = this.pointer) == null ? void 0 : _b2.origin) || [0, 0],
        delta: [0, 0],
        pressure: 0.5,
        point: Inputs.getPoint(e13, this.bounds),
        shiftKey,
        ctrlKey,
        metaKey,
        altKey,
        spaceKey: this.keys[" "]
      };
      this.pointer = info;
      return info;
    });
    __publicField(this, "pan", (delta, e13) => {
      if (!this.pointer || this.pointer.target !== "wheel") {
        return this.panStart(e13);
      }
      const { shiftKey, ctrlKey, metaKey, altKey } = e13;
      const prev = this.pointer;
      const point = Inputs.getPoint(e13, this.bounds);
      const info = __spreadProps3(__spreadValues3({}, prev), {
        target: "wheel",
        delta,
        point,
        shiftKey,
        ctrlKey,
        metaKey,
        altKey,
        spaceKey: this.keys[" "]
      });
      this.pointer = info;
      return info;
    });
    __publicField(this, "keydown", (e13) => {
      var _a4, _b2;
      const { shiftKey, ctrlKey, metaKey, altKey } = e13;
      this.keys[e13.key] = true;
      return {
        point: ((_a4 = this.pointer) == null ? void 0 : _a4.point) || [0, 0],
        origin: ((_b2 = this.pointer) == null ? void 0 : _b2.origin) || [0, 0],
        key: e13.key,
        keys: Object.keys(this.keys),
        shiftKey,
        ctrlKey,
        metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
        altKey
      };
    });
    __publicField(this, "keyup", (e13) => {
      var _a4, _b2;
      const { shiftKey, ctrlKey, metaKey, altKey } = e13;
      delete this.keys[e13.key];
      return {
        point: ((_a4 = this.pointer) == null ? void 0 : _a4.point) || [0, 0],
        origin: ((_b2 = this.pointer) == null ? void 0 : _b2.origin) || [0, 0],
        key: e13.key,
        keys: Object.keys(this.keys),
        shiftKey,
        ctrlKey,
        metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
        altKey
      };
    });
  }
  pointerIsValid(e13) {
    if ("pointerId" in e13) {
      if (this.activePointer && this.activePointer !== e13.pointerId) {
        return false;
      }
    }
    if ("touches" in e13) {
      const touch = e13.changedTouches[0];
      if (this.activePointer && this.activePointer !== touch.identifier) {
        return false;
      }
    }
    return true;
  }
  touchStart(e13, target) {
    const { shiftKey, ctrlKey, metaKey, altKey } = e13;
    const touch = e13.changedTouches[0];
    this.activePointer = touch.identifier;
    const info = {
      target,
      pointerId: touch.identifier,
      origin: Inputs.getPoint(touch, this.bounds),
      delta: [0, 0],
      point: Inputs.getPoint(touch, this.bounds),
      pressure: Inputs.getPressure(touch),
      shiftKey,
      ctrlKey,
      metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
      altKey,
      spaceKey: this.keys[" "]
    };
    this.pointer = info;
    return info;
  }
  touchEnd(e13, target) {
    const { shiftKey, ctrlKey, metaKey, altKey } = e13;
    const touch = e13.changedTouches[0];
    const info = {
      target,
      pointerId: touch.identifier,
      origin: Inputs.getPoint(touch, this.bounds),
      delta: [0, 0],
      point: Inputs.getPoint(touch, this.bounds),
      pressure: Inputs.getPressure(touch),
      shiftKey,
      ctrlKey,
      metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
      altKey,
      spaceKey: this.keys[" "]
    };
    this.pointer = info;
    this.activePointer = void 0;
    return info;
  }
  touchMove(e13, target) {
    const { shiftKey, ctrlKey, metaKey, altKey } = e13;
    const touch = e13.changedTouches[0];
    const prev = this.pointer;
    const point = Inputs.getPoint(touch, this.bounds);
    const delta = (prev == null ? void 0 : prev.point) ? e.sub(point, prev.point) : [0, 0];
    const info = __spreadProps3(__spreadValues3({
      origin: point
    }, prev), {
      target,
      pointerId: touch.identifier,
      point,
      delta,
      pressure: Inputs.getPressure(touch),
      shiftKey,
      ctrlKey,
      metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
      altKey,
      spaceKey: this.keys[" "]
    });
    this.pointer = info;
    return info;
  }
  pointerDown(e13, target) {
    const { shiftKey, ctrlKey, metaKey, altKey } = e13;
    const point = Inputs.getPoint(e13, this.bounds);
    this.activePointer = e13.pointerId;
    const info = {
      target,
      pointerId: e13.pointerId,
      origin: point,
      point,
      delta: [0, 0],
      pressure: Inputs.getPressure(e13),
      shiftKey,
      ctrlKey,
      metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
      altKey,
      spaceKey: this.keys[" "]
    };
    this.pointer = info;
    return info;
  }
  pointerEnter(e13, target) {
    const { shiftKey, ctrlKey, metaKey, altKey } = e13;
    const point = Inputs.getPoint(e13, this.bounds);
    const info = {
      target,
      pointerId: e13.pointerId,
      origin: point,
      delta: [0, 0],
      point,
      pressure: Inputs.getPressure(e13),
      shiftKey,
      ctrlKey,
      metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
      altKey,
      spaceKey: this.keys[" "]
    };
    this.pointer = info;
    return info;
  }
  pointerMove(e13, target) {
    const { shiftKey, ctrlKey, metaKey, altKey } = e13;
    const prev = this.pointer;
    const point = Inputs.getPoint(e13, this.bounds);
    const delta = (prev == null ? void 0 : prev.point) ? e.sub(point, prev.point) : [0, 0];
    const info = __spreadProps3(__spreadValues3({
      origin: point
    }, prev), {
      target,
      pointerId: e13.pointerId,
      point,
      delta,
      pressure: Inputs.getPressure(e13),
      shiftKey,
      ctrlKey,
      metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
      altKey,
      spaceKey: this.keys[" "]
    });
    this.pointer = info;
    return info;
  }
  pointerUp(e13, target) {
    const { shiftKey, ctrlKey, metaKey, altKey } = e13;
    const prev = this.pointer;
    const point = Inputs.getPoint(e13, this.bounds);
    const delta = (prev == null ? void 0 : prev.point) ? e.sub(point, prev.point) : [0, 0];
    this.activePointer = void 0;
    const info = __spreadProps3(__spreadValues3({
      origin: point
    }, prev), {
      target,
      pointerId: e13.pointerId,
      point,
      delta,
      pressure: Inputs.getPressure(e13),
      shiftKey,
      ctrlKey,
      metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
      altKey,
      spaceKey: this.keys[" "]
    });
    this.pointer = info;
    this.pointerUpTime = performance.now();
    return info;
  }
  isDoubleClick() {
    if (!this.pointer)
      return false;
    const { origin, point } = this.pointer;
    const isDoubleClick = performance.now() - this.pointerUpTime < DOUBLE_CLICK_DURATION && e.dist(origin, point) < 4;
    if (isDoubleClick)
      this.activePointer = void 0;
    return isDoubleClick;
  }
  clear() {
    this.pointer = void 0;
  }
  resetDoubleClick() {
    this.pointerUpTime = 0;
  }
  pinch(point, origin) {
    const { shiftKey, ctrlKey, metaKey, altKey } = this.keys;
    const delta = e.sub(origin, point);
    const info = {
      pointerId: 0,
      target: "pinch",
      origin,
      delta,
      point: e.sub(e.toFixed(point), [this.bounds.minX, this.bounds.minY]),
      pressure: 0.5,
      shiftKey,
      ctrlKey,
      metaKey: Utils.isDarwin() ? metaKey : ctrlKey,
      altKey,
      spaceKey: this.keys[" "]
    };
    this.pointer = info;
    return info;
  }
  reset() {
    this.pointerUpTime = 0;
    this.pointer = void 0;
    this.keyboard = void 0;
    this.activePointer = void 0;
    this.keys = {};
  }
  static getPoint(e13, bounds) {
    return [+e13.clientX.toFixed(2) - bounds.minX, +e13.clientY.toFixed(2) - bounds.minY];
  }
  static getPressure(e13) {
    return "pressure" in e13 ? +e13.pressure.toFixed(2) || 0.5 : 0.5;
  }
  static commandKey() {
    return Utils.isDarwin() ? "\u2318" : "Ctrl";
  }
};
var inputs = new Inputs();
var Renderer = observer(function _Renderer(_a4) {
  var _b2 = _a4, {
    id: id2 = "tl",
    shapeUtils,
    page,
    pageState,
    assets = EMPTY_OBJECT2,
    users,
    userId,
    theme,
    meta,
    snapLines,
    eraseLine,
    grid,
    containerRef,
    performanceMode,
    hideHandles = false,
    hideIndicators = false,
    hideCloneHandles = false,
    hideBindingHandles = false,
    hideResizeHandles = false,
    hideRotateHandles = false,
    hideBounds = false,
    hideGrid = true,
    showDashedBrush = false
  } = _b2, rest = __objRest2(_b2, [
    "id",
    "shapeUtils",
    "page",
    "pageState",
    "assets",
    "users",
    "userId",
    "theme",
    "meta",
    "snapLines",
    "eraseLine",
    "grid",
    "containerRef",
    "performanceMode",
    "hideHandles",
    "hideIndicators",
    "hideCloneHandles",
    "hideBindingHandles",
    "hideResizeHandles",
    "hideRotateHandles",
    "hideBounds",
    "hideGrid",
    "showDashedBrush"
  ]);
  useTLTheme(theme, "#" + id2);
  const rSelectionBounds = React45.useRef(null);
  const rPageState = React45.useRef(pageState);
  React45.useEffect(() => {
    rPageState.current = pageState;
  }, [pageState]);
  const [context, setContext] = React45.useState(() => ({
    callbacks: rest,
    shapeUtils,
    rSelectionBounds,
    rPageState,
    bounds: {
      minX: 0,
      minY: 0,
      maxX: Infinity,
      maxY: Infinity,
      width: Infinity,
      height: Infinity
    },
    inputs: new Inputs()
  }));
  const onBoundsChange = React45.useCallback((bounds) => {
    setContext((context2) => __spreadProps3(__spreadValues3({}, context2), {
      bounds
    }));
  }, []);
  return /* @__PURE__ */ React45.createElement(TLContext.Provider, {
    value: context
  }, /* @__PURE__ */ React45.createElement(Canvas, {
    id: id2,
    page,
    pageState,
    assets,
    snapLines,
    eraseLine,
    grid,
    users,
    userId,
    externalContainerRef: containerRef,
    hideBounds,
    hideIndicators,
    hideHandles,
    hideCloneHandles,
    hideBindingHandles,
    hideRotateHandle: hideRotateHandles,
    hideResizeHandles,
    hideGrid,
    showDashedBrush,
    onBoundsChange,
    performanceMode,
    meta
  }));
});
var EMPTY_OBJECT2 = {};
var HTMLContainer = React46.forwardRef(function HTMLContainer2(_a4, ref) {
  var _b2 = _a4, { children, className = "" } = _b2, rest = __objRest2(_b2, ["children", "className"]);
  return /* @__PURE__ */ React46.createElement(ObserverComponent, null, () => /* @__PURE__ */ React46.createElement("div", __spreadValues3({
    ref,
    className: `tl-positioned-div ${className}`,
    draggable: false
  }, rest), /* @__PURE__ */ React46.createElement("div", {
    className: "tl-inner-div"
  }, children)));
});
var TLShapeUtil = class {
  constructor() {
    __publicField(this, "refMap", /* @__PURE__ */ new Map());
    __publicField(this, "boundsCache", /* @__PURE__ */ new WeakMap());
    __publicField(this, "showCloneHandles", false);
    __publicField(this, "hideBounds", false);
    __publicField(this, "isStateful", false);
    __publicField(this, "shouldRender", (prev, next) => true);
    __publicField(this, "getRef", (shape) => {
      if (!this.refMap.has(shape.id)) {
        this.refMap.set(shape.id, React47.createRef());
      }
      return this.refMap.get(shape.id);
    });
    __publicField(this, "hitTestBounds", (shape, bounds) => {
      const shapeBounds = this.getBounds(shape);
      const corners = utils_default.getRotatedCorners(shapeBounds, shape.rotation);
      return corners.every((point) => utils_default.pointInBounds(point, bounds)) || intersectPolygonBounds(corners, bounds).length > 0;
    });
    __publicField(this, "getRotatedBounds", (shape) => {
      return utils_default.getBoundsFromPoints(utils_default.getRotatedCorners(this.getBounds(shape), shape.rotation));
    });
  }
};
__publicField(TLShapeUtil, "Component", (component) => {
  return React47.forwardRef(component);
});
__publicField(TLShapeUtil, "Indicator", (component) => component);

// ../../node_modules/tslib/modules/index.js
var import_tslib = __toESM(require_tslib(), 1);
var {
  __extends,
  __assign: __assign2,
  __rest,
  __decorate,
  __param,
  __metadata,
  __awaiter,
  __generator,
  __exportStar,
  __createBinding,
  __values: __values2,
  __read: __read2,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn
} = import_tslib.default;

// ../../node_modules/react-intl/lib/src/components/createFormattedComponent.js
var React51 = __toESM(require_react());

// ../../node_modules/react-intl/lib/src/components/useIntl.js
var React50 = __toESM(require_react());

// ../../node_modules/react-intl/lib/src/components/injectIntl.js
var React49 = __toESM(require_react());
var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());

// ../../node_modules/react-intl/lib/src/utils.js
var React48 = __toESM(require_react());

// ../../node_modules/@formatjs/ecma402-abstract/lib/utils.js
function invariant(condition, message, Err) {
  if (Err === void 0) {
    Err = Error;
  }
  if (!condition) {
    throw new Err(message);
  }
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/error.js
var ErrorKind;
(function(ErrorKind2) {
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
  ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
  ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
  ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
  ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
  ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
  ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/types.js
var TYPE;
(function(TYPE2) {
  TYPE2[TYPE2["literal"] = 0] = "literal";
  TYPE2[TYPE2["argument"] = 1] = "argument";
  TYPE2[TYPE2["number"] = 2] = "number";
  TYPE2[TYPE2["date"] = 3] = "date";
  TYPE2[TYPE2["time"] = 4] = "time";
  TYPE2[TYPE2["select"] = 5] = "select";
  TYPE2[TYPE2["plural"] = 6] = "plural";
  TYPE2[TYPE2["pound"] = 7] = "pound";
  TYPE2[TYPE2["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function(SKELETON_TYPE2) {
  SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
  SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
function isLiteralElement(el2) {
  return el2.type === TYPE.literal;
}
function isArgumentElement(el2) {
  return el2.type === TYPE.argument;
}
function isNumberElement(el2) {
  return el2.type === TYPE.number;
}
function isDateElement(el2) {
  return el2.type === TYPE.date;
}
function isTimeElement(el2) {
  return el2.type === TYPE.time;
}
function isSelectElement(el2) {
  return el2.type === TYPE.select;
}
function isPluralElement(el2) {
  return el2.type === TYPE.plural;
}
function isPoundElement(el2) {
  return el2.type === TYPE.pound;
}
function isTagElement(el2) {
  return el2.type === TYPE.tag;
}
function isNumberSkeleton(el2) {
  return !!(el2 && typeof el2 === "object" && el2.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el2) {
  return !!(el2 && typeof el2 === "object" && el2.type === SKELETON_TYPE.dateTime);
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;

// ../../node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function parseDateTimeSkeleton(skeleton) {
  var result = {};
  skeleton.replace(DATE_TIME_REGEX, function(match) {
    var len = match.length;
    switch (match[0]) {
      case "G":
        result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "y":
        result.year = len === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      case "M":
      case "L":
        result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
        break;
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        result.day = ["numeric", "2-digit"][len - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      case "E":
        result.weekday = len === 4 ? "short" : len === 5 ? "narrow" : "short";
        break;
      case "e":
        if (len < 4) {
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "c":
        if (len < 4) {
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "a":
        result.hour12 = true;
        break;
      case "b":
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      case "h":
        result.hourCycle = "h12";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "H":
        result.hourCycle = "h23";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "K":
        result.hourCycle = "h11";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "k":
        result.hourCycle = "h24";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      case "m":
        result.minute = ["numeric", "2-digit"][len - 1];
        break;
      case "s":
        result.second = ["numeric", "2-digit"][len - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      case "z":
        result.timeZoneName = len < 4 ? "short" : "long";
        break;
      case "Z":
      case "O":
      case "v":
      case "V":
      case "X":
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  });
  return result;
}

// ../../node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;

// ../../node_modules/@formatjs/icu-skeleton-parser/lib/number.js
function parseNumberSkeletonFromString(skeleton) {
  if (skeleton.length === 0) {
    throw new Error("Number skeleton cannot be empty");
  }
  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x10) {
    return x10.length > 0;
  });
  var tokens = [];
  for (var _i2 = 0, stringTokens_1 = stringTokens; _i2 < stringTokens_1.length; _i2++) {
    var stringToken = stringTokens_1[_i2];
    var stemAndOptions = stringToken.split("/");
    if (stemAndOptions.length === 0) {
      throw new Error("Invalid number skeleton");
    }
    var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
    for (var _a4 = 0, options_1 = options; _a4 < options_1.length; _a4++) {
      var option = options_1[_a4];
      if (option.length === 0) {
        throw new Error("Invalid number skeleton");
      }
    }
    tokens.push({ stem, options });
  }
  return tokens;
}
function icuUnitToEcma(unit) {
  return unit.replace(/^(.*?)-/, "");
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
  var result = {};
  if (str[str.length - 1] === "r") {
    result.roundingPriority = "morePrecision";
  } else if (str[str.length - 1] === "s") {
    result.roundingPriority = "lessPrecision";
  }
  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_10, g12, g23) {
    if (typeof g23 !== "string") {
      result.minimumSignificantDigits = g12.length;
      result.maximumSignificantDigits = g12.length;
    } else if (g23 === "+") {
      result.minimumSignificantDigits = g12.length;
    } else if (g12[0] === "#") {
      result.maximumSignificantDigits = g12.length;
    } else {
      result.minimumSignificantDigits = g12.length;
      result.maximumSignificantDigits = g12.length + (typeof g23 === "string" ? g23.length : 0);
    }
    return "";
  });
  return result;
}
function parseSign(str) {
  switch (str) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function parseConciseScientificAndEngineeringStem(stem) {
  var result;
  if (stem[0] === "E" && stem[1] === "E") {
    result = {
      notation: "engineering"
    };
    stem = stem.slice(2);
  } else if (stem[0] === "E") {
    result = {
      notation: "scientific"
    };
    stem = stem.slice(1);
  }
  if (result) {
    var signDisplay = stem.slice(0, 2);
    if (signDisplay === "+!") {
      result.signDisplay = "always";
      stem = stem.slice(2);
    } else if (signDisplay === "+?") {
      result.signDisplay = "exceptZero";
      stem = stem.slice(2);
    }
    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
      throw new Error("Malformed concise eng/scientific notation");
    }
    result.minimumIntegerDigits = stem.length;
  }
  return result;
}
function parseNotationOptions(opt) {
  var result = {};
  var signOpts = parseSign(opt);
  if (signOpts) {
    return signOpts;
  }
  return result;
}
function parseNumberSkeleton(tokens) {
  var result = {};
  for (var _i2 = 0, tokens_1 = tokens; _i2 < tokens_1.length; _i2++) {
    var token = tokens_1[_i2];
    switch (token.stem) {
      case "percent":
      case "%":
        result.style = "percent";
        continue;
      case "%x100":
        result.style = "percent";
        result.scale = 100;
        continue;
      case "currency":
        result.style = "currency";
        result.currency = token.options[0];
        continue;
      case "group-off":
      case ",_":
        result.useGrouping = false;
        continue;
      case "precision-integer":
      case ".":
        result.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        result.style = "unit";
        result.unit = icuUnitToEcma(token.options[0]);
        continue;
      case "compact-short":
      case "K":
        result.notation = "compact";
        result.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        result.notation = "compact";
        result.compactDisplay = "long";
        continue;
      case "scientific":
        result = __assign2(__assign2(__assign2({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
          return __assign2(__assign2({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "engineering":
        result = __assign2(__assign2(__assign2({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
          return __assign2(__assign2({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "notation-simple":
        result.notation = "standard";
        continue;
      case "unit-width-narrow":
        result.currencyDisplay = "narrowSymbol";
        result.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        result.currencyDisplay = "code";
        result.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        result.currencyDisplay = "name";
        result.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        result.currencyDisplay = "symbol";
        continue;
      case "scale":
        result.scale = parseFloat(token.options[0]);
        continue;
      case "integer-width":
        if (token.options.length > 1) {
          throw new RangeError("integer-width stems only accept a single optional option");
        }
        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_10, g12, g23, g33, g43, g53) {
          if (g12) {
            result.minimumIntegerDigits = g23.length;
          } else if (g33 && g43) {
            throw new Error("We currently do not support maximum integer digits");
          } else if (g53) {
            throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
      result.minimumIntegerDigits = token.stem.length;
      continue;
    }
    if (FRACTION_PRECISION_REGEX.test(token.stem)) {
      if (token.options.length > 1) {
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      }
      token.stem.replace(FRACTION_PRECISION_REGEX, function(_10, g12, g23, g33, g43, g53) {
        if (g23 === "*") {
          result.minimumFractionDigits = g12.length;
        } else if (g33 && g33[0] === "#") {
          result.maximumFractionDigits = g33.length;
        } else if (g43 && g53) {
          result.minimumFractionDigits = g43.length;
          result.maximumFractionDigits = g43.length + g53.length;
        } else {
          result.minimumFractionDigits = g12.length;
          result.maximumFractionDigits = g12.length;
        }
        return "";
      });
      var opt = token.options[0];
      if (opt === "w") {
        result = __assign2(__assign2({}, result), { trailingZeroDisplay: "stripIfInteger" });
      } else if (opt) {
        result = __assign2(__assign2({}, result), parseSignificantPrecision(opt));
      }
      continue;
    }
    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
      result = __assign2(__assign2({}, result), parseSignificantPrecision(token.stem));
      continue;
    }
    var signOpts = parseSign(token.stem);
    if (signOpts) {
      result = __assign2(__assign2({}, result), signOpts);
    }
    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
    if (conciseScientificAndEngineeringOpts) {
      result = __assign2(__assign2({}, result), conciseScientificAndEngineeringOpts);
    }
  }
  return result;
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js
var timeData = {
  "AX": [
    "H"
  ],
  "BQ": [
    "H"
  ],
  "CP": [
    "H"
  ],
  "CZ": [
    "H"
  ],
  "DK": [
    "H"
  ],
  "FI": [
    "H"
  ],
  "ID": [
    "H"
  ],
  "IS": [
    "H"
  ],
  "ML": [
    "H"
  ],
  "NE": [
    "H"
  ],
  "RU": [
    "H"
  ],
  "SE": [
    "H"
  ],
  "SJ": [
    "H"
  ],
  "SK": [
    "H"
  ],
  "AS": [
    "h",
    "H"
  ],
  "BT": [
    "h",
    "H"
  ],
  "DJ": [
    "h",
    "H"
  ],
  "ER": [
    "h",
    "H"
  ],
  "GH": [
    "h",
    "H"
  ],
  "IN": [
    "h",
    "H"
  ],
  "LS": [
    "h",
    "H"
  ],
  "PG": [
    "h",
    "H"
  ],
  "PW": [
    "h",
    "H"
  ],
  "SO": [
    "h",
    "H"
  ],
  "TO": [
    "h",
    "H"
  ],
  "VU": [
    "h",
    "H"
  ],
  "WS": [
    "h",
    "H"
  ],
  "001": [
    "H",
    "h"
  ],
  "AL": [
    "h",
    "H",
    "hB"
  ],
  "TD": [
    "h",
    "H",
    "hB"
  ],
  "ca-ES": [
    "H",
    "h",
    "hB"
  ],
  "CF": [
    "H",
    "h",
    "hB"
  ],
  "CM": [
    "H",
    "h",
    "hB"
  ],
  "fr-CA": [
    "H",
    "h",
    "hB"
  ],
  "gl-ES": [
    "H",
    "h",
    "hB"
  ],
  "it-CH": [
    "H",
    "h",
    "hB"
  ],
  "it-IT": [
    "H",
    "h",
    "hB"
  ],
  "LU": [
    "H",
    "h",
    "hB"
  ],
  "NP": [
    "H",
    "h",
    "hB"
  ],
  "PF": [
    "H",
    "h",
    "hB"
  ],
  "SC": [
    "H",
    "h",
    "hB"
  ],
  "SM": [
    "H",
    "h",
    "hB"
  ],
  "SN": [
    "H",
    "h",
    "hB"
  ],
  "TF": [
    "H",
    "h",
    "hB"
  ],
  "VA": [
    "H",
    "h",
    "hB"
  ],
  "CY": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "GR": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "CO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "DO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KP": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "VE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "AC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BW": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BZ": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "DG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "FK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GB": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IM": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IO": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "JE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "LT": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MS": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NF": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NR": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NU": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "PN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SH": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "TA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ZA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "af-ZA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "AR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CL": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CU": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "EA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-BO": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-BR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-EC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-ES": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-GQ": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-PE": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "GT": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "HN": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "IC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KG": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KM": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "LK": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MX": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "NI": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "PY": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "SV": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "UY": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "JP": [
    "H",
    "h",
    "K"
  ],
  "AD": [
    "H",
    "hB"
  ],
  "AM": [
    "H",
    "hB"
  ],
  "AO": [
    "H",
    "hB"
  ],
  "AT": [
    "H",
    "hB"
  ],
  "AW": [
    "H",
    "hB"
  ],
  "BE": [
    "H",
    "hB"
  ],
  "BF": [
    "H",
    "hB"
  ],
  "BJ": [
    "H",
    "hB"
  ],
  "BL": [
    "H",
    "hB"
  ],
  "BR": [
    "H",
    "hB"
  ],
  "CG": [
    "H",
    "hB"
  ],
  "CI": [
    "H",
    "hB"
  ],
  "CV": [
    "H",
    "hB"
  ],
  "DE": [
    "H",
    "hB"
  ],
  "EE": [
    "H",
    "hB"
  ],
  "FR": [
    "H",
    "hB"
  ],
  "GA": [
    "H",
    "hB"
  ],
  "GF": [
    "H",
    "hB"
  ],
  "GN": [
    "H",
    "hB"
  ],
  "GP": [
    "H",
    "hB"
  ],
  "GW": [
    "H",
    "hB"
  ],
  "HR": [
    "H",
    "hB"
  ],
  "IL": [
    "H",
    "hB"
  ],
  "IT": [
    "H",
    "hB"
  ],
  "KZ": [
    "H",
    "hB"
  ],
  "MC": [
    "H",
    "hB"
  ],
  "MD": [
    "H",
    "hB"
  ],
  "MF": [
    "H",
    "hB"
  ],
  "MQ": [
    "H",
    "hB"
  ],
  "MZ": [
    "H",
    "hB"
  ],
  "NC": [
    "H",
    "hB"
  ],
  "NL": [
    "H",
    "hB"
  ],
  "PM": [
    "H",
    "hB"
  ],
  "PT": [
    "H",
    "hB"
  ],
  "RE": [
    "H",
    "hB"
  ],
  "RO": [
    "H",
    "hB"
  ],
  "SI": [
    "H",
    "hB"
  ],
  "SR": [
    "H",
    "hB"
  ],
  "ST": [
    "H",
    "hB"
  ],
  "TG": [
    "H",
    "hB"
  ],
  "TR": [
    "H",
    "hB"
  ],
  "WF": [
    "H",
    "hB"
  ],
  "YT": [
    "H",
    "hB"
  ],
  "BD": [
    "h",
    "hB",
    "H"
  ],
  "PK": [
    "h",
    "hB",
    "H"
  ],
  "AZ": [
    "H",
    "hB",
    "h"
  ],
  "BA": [
    "H",
    "hB",
    "h"
  ],
  "BG": [
    "H",
    "hB",
    "h"
  ],
  "CH": [
    "H",
    "hB",
    "h"
  ],
  "GE": [
    "H",
    "hB",
    "h"
  ],
  "LI": [
    "H",
    "hB",
    "h"
  ],
  "ME": [
    "H",
    "hB",
    "h"
  ],
  "RS": [
    "H",
    "hB",
    "h"
  ],
  "UA": [
    "H",
    "hB",
    "h"
  ],
  "UZ": [
    "H",
    "hB",
    "h"
  ],
  "XK": [
    "H",
    "hB",
    "h"
  ],
  "AG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "CA": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "DM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-001": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FJ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GD": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "JM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KN": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LR": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MH": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MP": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MW": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "NZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SL": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TT": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "UM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "US": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ZM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BO": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "EC": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "ES": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "GQ": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "PE": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "AE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ar-001": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "BH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "DZ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EG": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "HK": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "IQ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "JO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "KW": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LB": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MR": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "OM": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PS": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "QA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SD": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "TN": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "YE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "AF": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "LA": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "CN": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "LV": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "TL": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "zu-ZA": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "CD": [
    "hB",
    "H"
  ],
  "IR": [
    "hB",
    "H"
  ],
  "hi-IN": [
    "hB",
    "h",
    "H"
  ],
  "kn-IN": [
    "hB",
    "h",
    "H"
  ],
  "ml-IN": [
    "hB",
    "h",
    "H"
  ],
  "te-IN": [
    "hB",
    "h",
    "H"
  ],
  "KH": [
    "hB",
    "h",
    "H",
    "hb"
  ],
  "ta-IN": [
    "hB",
    "h",
    "hb",
    "H"
  ],
  "BN": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "MY": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "ET": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "gu-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "mr-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "pa-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "TW": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "KE": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "MM": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "TZ": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UG": [
    "hB",
    "hb",
    "H",
    "h"
  ]
};

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js
function getBestPattern(skeleton, locale) {
  var skeletonCopy = "";
  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
    var patternChar = skeleton.charAt(patternPos);
    if (patternChar === "j") {
      var extraLength = 0;
      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {
        extraLength++;
        patternPos++;
      }
      var hourLen = 1 + (extraLength & 1);
      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
      var dayPeriodChar = "a";
      var hourChar = getDefaultHourSymbolFromLocale(locale);
      if (hourChar == "H" || hourChar == "k") {
        dayPeriodLen = 0;
      }
      while (dayPeriodLen-- > 0) {
        skeletonCopy += dayPeriodChar;
      }
      while (hourLen-- > 0) {
        skeletonCopy = hourChar + skeletonCopy;
      }
    } else if (patternChar === "J") {
      skeletonCopy += "H";
    } else {
      skeletonCopy += patternChar;
    }
  }
  return skeletonCopy;
}
function getDefaultHourSymbolFromLocale(locale) {
  var hourCycle = locale.hourCycle;
  if (hourCycle === void 0 && locale.hourCycles && locale.hourCycles.length) {
    hourCycle = locale.hourCycles[0];
  }
  if (hourCycle) {
    switch (hourCycle) {
      case "h24":
        return "k";
      case "h23":
        return "H";
      case "h12":
        return "h";
      case "h11":
        return "K";
      default:
        throw new Error("Invalid hourCycle");
    }
  }
  var languageTag = locale.language;
  var regionTag;
  if (languageTag !== "root") {
    regionTag = locale.maximize().region;
  }
  var hourCycles = timeData[regionTag || ""] || timeData[languageTag || ""] || timeData["".concat(languageTag, "-001")] || timeData["001"];
  return hourCycles[0];
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
var _a2;
var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
  return { start, end };
}
var hasNativeStartsWith = !!String.prototype.startsWith;
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n10) {
  return typeof n10 === "number" && isFinite(n10) && Math.floor(n10) === n10 && Math.abs(n10) <= 9007199254740991;
};
var REGEX_SUPPORTS_U_AND_Y = true;
try {
  re3 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  REGEX_SUPPORTS_U_AND_Y = ((_a2 = re3.exec("a")) === null || _a2 === void 0 ? void 0 : _a2[0]) === "a";
} catch (_10) {
  REGEX_SUPPORTS_U_AND_Y = false;
}
var re3;
var startsWith = hasNativeStartsWith ? function startsWith2(s10, search, position) {
  return s10.startsWith(search, position);
} : function startsWith3(s10, search, position) {
  return s10.slice(position, position + search.length) === search;
};
var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : function fromCodePoint2() {
  var codePoints = [];
  for (var _i2 = 0; _i2 < arguments.length; _i2++) {
    codePoints[_i2] = arguments[_i2];
  }
  var elements = "";
  var length = codePoints.length;
  var i10 = 0;
  var code3;
  while (length > i10) {
    code3 = codePoints[i10++];
    if (code3 > 1114111)
      throw RangeError(code3 + " is not a valid code point");
    elements += code3 < 65536 ? String.fromCharCode(code3) : String.fromCharCode(((code3 -= 65536) >> 10) + 55296, code3 % 1024 + 56320);
  }
  return elements;
};
var fromEntries = hasNativeFromEntries ? Object.fromEntries : function fromEntries2(entries2) {
  var obj = {};
  for (var _i2 = 0, entries_1 = entries2; _i2 < entries_1.length; _i2++) {
    var _a4 = entries_1[_i2], k10 = _a4[0], v10 = _a4[1];
    obj[k10] = v10;
  }
  return obj;
};
var codePointAt = hasNativeCodePointAt ? function codePointAt2(s10, index2) {
  return s10.codePointAt(index2);
} : function codePointAt3(s10, index2) {
  var size = s10.length;
  if (index2 < 0 || index2 >= size) {
    return void 0;
  }
  var first = s10.charCodeAt(index2);
  var second;
  return first < 55296 || first > 56319 || index2 + 1 === size || (second = s10.charCodeAt(index2 + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
};
var trimStart = hasTrimStart ? function trimStart2(s10) {
  return s10.trimStart();
} : function trimStart3(s10) {
  return s10.replace(SPACE_SEPARATOR_START_REGEX, "");
};
var trimEnd = hasTrimEnd ? function trimEnd2(s10) {
  return s10.trimEnd();
} : function trimEnd3(s10) {
  return s10.replace(SPACE_SEPARATOR_END_REGEX, "");
};
function RE(s10, flag) {
  return new RegExp(s10, flag);
}
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
  IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s10, index2) {
    var _a4;
    IDENTIFIER_PREFIX_RE_1.lastIndex = index2;
    var match = IDENTIFIER_PREFIX_RE_1.exec(s10);
    return (_a4 = match[1]) !== null && _a4 !== void 0 ? _a4 : "";
  };
} else {
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s10, index2) {
    var match = [];
    while (true) {
      var c10 = codePointAt(s10, index2);
      if (c10 === void 0 || _isWhiteSpace(c10) || _isPatternSyntax(c10)) {
        break;
      }
      match.push(c10);
      index2 += c10 >= 65536 ? 2 : 1;
    }
    return fromCodePoint.apply(void 0, match);
  };
}
var IDENTIFIER_PREFIX_RE_1;
var Parser = function() {
  function Parser2(message, options) {
    if (options === void 0) {
      options = {};
    }
    this.message = message;
    this.position = { offset: 0, line: 1, column: 1 };
    this.ignoreTag = !!options.ignoreTag;
    this.locale = options.locale;
    this.requiresOtherClause = !!options.requiresOtherClause;
    this.shouldParseSkeletons = !!options.shouldParseSkeletons;
  }
  Parser2.prototype.parse = function() {
    if (this.offset() !== 0) {
      throw Error("parser can only be used once");
    }
    return this.parseMessage(0, "", false);
  };
  Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
    var elements = [];
    while (!this.isEOF()) {
      var char = this.char();
      if (char === 123) {
        var result = this.parseArgument(nestingLevel, expectingCloseTag);
        if (result.err) {
          return result;
        }
        elements.push(result.val);
      } else if (char === 125 && nestingLevel > 0) {
        break;
      } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
        var position = this.clonePosition();
        this.bump();
        elements.push({
          type: TYPE.pound,
          location: createLocation(position, this.clonePosition())
        });
      } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
        if (expectingCloseTag) {
          break;
        } else {
          return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
        }
      } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
        var result = this.parseTag(nestingLevel, parentArgType);
        if (result.err) {
          return result;
        }
        elements.push(result.val);
      } else {
        var result = this.parseLiteral(nestingLevel, parentArgType);
        if (result.err) {
          return result;
        }
        elements.push(result.val);
      }
    }
    return { val: elements, err: null };
  };
  Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
    var startPosition = this.clonePosition();
    this.bump();
    var tagName = this.parseTagName();
    this.bumpSpace();
    if (this.bumpIf("/>")) {
      return {
        val: {
          type: TYPE.literal,
          value: "<".concat(tagName, "/>"),
          location: createLocation(startPosition, this.clonePosition())
        },
        err: null
      };
    } else if (this.bumpIf(">")) {
      var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
      if (childrenResult.err) {
        return childrenResult;
      }
      var children = childrenResult.val;
      var endTagStartPosition = this.clonePosition();
      if (this.bumpIf("</")) {
        if (this.isEOF() || !_isAlpha(this.char())) {
          return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
        }
        var closingTagNameStartPosition = this.clonePosition();
        var closingTagName = this.parseTagName();
        if (tagName !== closingTagName) {
          return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
        }
        this.bumpSpace();
        if (!this.bumpIf(">")) {
          return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
        }
        return {
          val: {
            type: TYPE.tag,
            value: tagName,
            children,
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else {
        return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
      }
    } else {
      return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
    }
  };
  Parser2.prototype.parseTagName = function() {
    var startOffset = this.offset();
    this.bump();
    while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
      this.bump();
    }
    return this.message.slice(startOffset, this.offset());
  };
  Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
    var start = this.clonePosition();
    var value = "";
    while (true) {
      var parseQuoteResult = this.tryParseQuote(parentArgType);
      if (parseQuoteResult) {
        value += parseQuoteResult;
        continue;
      }
      var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
      if (parseUnquotedResult) {
        value += parseUnquotedResult;
        continue;
      }
      var parseLeftAngleResult = this.tryParseLeftAngleBracket();
      if (parseLeftAngleResult) {
        value += parseLeftAngleResult;
        continue;
      }
      break;
    }
    var location2 = createLocation(start, this.clonePosition());
    return {
      val: { type: TYPE.literal, value, location: location2 },
      err: null
    };
  };
  Parser2.prototype.tryParseLeftAngleBracket = function() {
    if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || !_isAlphaOrSlash(this.peek() || 0))) {
      this.bump();
      return "<";
    }
    return null;
  };
  Parser2.prototype.tryParseQuote = function(parentArgType) {
    if (this.isEOF() || this.char() !== 39) {
      return null;
    }
    switch (this.peek()) {
      case 39:
        this.bump();
        this.bump();
        return "'";
      case 123:
      case 60:
      case 62:
      case 125:
        break;
      case 35:
        if (parentArgType === "plural" || parentArgType === "selectordinal") {
          break;
        }
        return null;
      default:
        return null;
    }
    this.bump();
    var codePoints = [this.char()];
    this.bump();
    while (!this.isEOF()) {
      var ch2 = this.char();
      if (ch2 === 39) {
        if (this.peek() === 39) {
          codePoints.push(39);
          this.bump();
        } else {
          this.bump();
          break;
        }
      } else {
        codePoints.push(ch2);
      }
      this.bump();
    }
    return fromCodePoint.apply(void 0, codePoints);
  };
  Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
    if (this.isEOF()) {
      return null;
    }
    var ch2 = this.char();
    if (ch2 === 60 || ch2 === 123 || ch2 === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch2 === 125 && nestingLevel > 0) {
      return null;
    } else {
      this.bump();
      return fromCodePoint(ch2);
    }
  };
  Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
    var openingBracePosition = this.clonePosition();
    this.bump();
    this.bumpSpace();
    if (this.isEOF()) {
      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
    }
    if (this.char() === 125) {
      this.bump();
      return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
    }
    var value = this.parseIdentifierIfPossible().value;
    if (!value) {
      return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
    }
    this.bumpSpace();
    if (this.isEOF()) {
      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
    }
    switch (this.char()) {
      case 125: {
        this.bump();
        return {
          val: {
            type: TYPE.argument,
            value,
            location: createLocation(openingBracePosition, this.clonePosition())
          },
          err: null
        };
      }
      case 44: {
        this.bump();
        this.bumpSpace();
        if (this.isEOF()) {
          return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
      }
      default:
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
    }
  };
  Parser2.prototype.parseIdentifierIfPossible = function() {
    var startingPosition = this.clonePosition();
    var startOffset = this.offset();
    var value = matchIdentifierAtIndex(this.message, startOffset);
    var endOffset = startOffset + value.length;
    this.bumpTo(endOffset);
    var endPosition = this.clonePosition();
    var location2 = createLocation(startingPosition, endPosition);
    return { value, location: location2 };
  };
  Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {
    var _a4;
    var typeStartPosition = this.clonePosition();
    var argType = this.parseIdentifierIfPossible().value;
    var typeEndPosition = this.clonePosition();
    switch (argType) {
      case "":
        return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      case "number":
      case "date":
      case "time": {
        this.bumpSpace();
        var styleAndLocation = null;
        if (this.bumpIf(",")) {
          this.bumpSpace();
          var styleStartPosition = this.clonePosition();
          var result = this.parseSimpleArgStyleIfPossible();
          if (result.err) {
            return result;
          }
          var style = trimEnd(result.val);
          if (style.length === 0) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
          }
          var styleLocation = createLocation(styleStartPosition, this.clonePosition());
          styleAndLocation = { style, styleLocation };
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        var location_1 = createLocation(openingBracePosition, this.clonePosition());
        if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
          var skeleton = trimStart(styleAndLocation.style.slice(2));
          if (argType === "number") {
            var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
            if (result.err) {
              return result;
            }
            return {
              val: { type: TYPE.number, value, location: location_1, style: result.val },
              err: null
            };
          } else {
            if (skeleton.length === 0) {
              return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
            }
            var dateTimePattern = skeleton;
            if (this.locale) {
              dateTimePattern = getBestPattern(skeleton, this.locale);
            }
            var style = {
              type: SKELETON_TYPE.dateTime,
              pattern: dateTimePattern,
              location: styleAndLocation.styleLocation,
              parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}
            };
            var type = argType === "date" ? TYPE.date : TYPE.time;
            return {
              val: { type, value, location: location_1, style },
              err: null
            };
          }
        }
        return {
          val: {
            type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
            value,
            location: location_1,
            style: (_a4 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a4 !== void 0 ? _a4 : null
          },
          err: null
        };
      }
      case "plural":
      case "selectordinal":
      case "select": {
        var typeEndPosition_1 = this.clonePosition();
        this.bumpSpace();
        if (!this.bumpIf(",")) {
          return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign2({}, typeEndPosition_1)));
        }
        this.bumpSpace();
        var identifierAndLocation = this.parseIdentifierIfPossible();
        var pluralOffset = 0;
        if (argType !== "select" && identifierAndLocation.value === "offset") {
          if (!this.bumpIf(":")) {
            return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
          }
          this.bumpSpace();
          var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
          if (result.err) {
            return result;
          }
          this.bumpSpace();
          identifierAndLocation = this.parseIdentifierIfPossible();
          pluralOffset = result.val;
        }
        var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
        if (optionsResult.err) {
          return optionsResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        var location_2 = createLocation(openingBracePosition, this.clonePosition());
        if (argType === "select") {
          return {
            val: {
              type: TYPE.select,
              value,
              options: fromEntries(optionsResult.val),
              location: location_2
            },
            err: null
          };
        } else {
          return {
            val: {
              type: TYPE.plural,
              value,
              options: fromEntries(optionsResult.val),
              offset: pluralOffset,
              pluralType: argType === "plural" ? "cardinal" : "ordinal",
              location: location_2
            },
            err: null
          };
        }
      }
      default:
        return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
    }
  };
  Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
    if (this.isEOF() || this.char() !== 125) {
      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
    }
    this.bump();
    return { val: true, err: null };
  };
  Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
    var nestedBraces = 0;
    var startPosition = this.clonePosition();
    while (!this.isEOF()) {
      var ch2 = this.char();
      switch (ch2) {
        case 39: {
          this.bump();
          var apostrophePosition = this.clonePosition();
          if (!this.bumpUntil("'")) {
            return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
          }
          this.bump();
          break;
        }
        case 123: {
          nestedBraces += 1;
          this.bump();
          break;
        }
        case 125: {
          if (nestedBraces > 0) {
            nestedBraces -= 1;
          } else {
            return {
              val: this.message.slice(startPosition.offset, this.offset()),
              err: null
            };
          }
          break;
        }
        default:
          this.bump();
          break;
      }
    }
    return {
      val: this.message.slice(startPosition.offset, this.offset()),
      err: null
    };
  };
  Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location2) {
    var tokens = [];
    try {
      tokens = parseNumberSkeletonFromString(skeleton);
    } catch (e13) {
      return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location2);
    }
    return {
      val: {
        type: SKELETON_TYPE.number,
        tokens,
        location: location2,
        parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
      },
      err: null
    };
  };
  Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
    var _a4;
    var hasOtherClause = false;
    var options = [];
    var parsedSelectors = /* @__PURE__ */ new Set();
    var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
    while (true) {
      if (selector.length === 0) {
        var startPosition = this.clonePosition();
        if (parentArgType !== "select" && this.bumpIf("=")) {
          var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
          if (result.err) {
            return result;
          }
          selectorLocation = createLocation(startPosition, this.clonePosition());
          selector = this.message.slice(startPosition.offset, this.offset());
        } else {
          break;
        }
      }
      if (parsedSelectors.has(selector)) {
        return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
      }
      if (selector === "other") {
        hasOtherClause = true;
      }
      this.bumpSpace();
      var openingBracePosition = this.clonePosition();
      if (!this.bumpIf("{")) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
      }
      var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
      if (fragmentResult.err) {
        return fragmentResult;
      }
      var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
      if (argCloseResult.err) {
        return argCloseResult;
      }
      options.push([
        selector,
        {
          value: fragmentResult.val,
          location: createLocation(openingBracePosition, this.clonePosition())
        }
      ]);
      parsedSelectors.add(selector);
      this.bumpSpace();
      _a4 = this.parseIdentifierIfPossible(), selector = _a4.value, selectorLocation = _a4.location;
    }
    if (options.length === 0) {
      return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
    }
    if (this.requiresOtherClause && !hasOtherClause) {
      return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
    }
    return { val: options, err: null };
  };
  Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
    var sign = 1;
    var startingPosition = this.clonePosition();
    if (this.bumpIf("+")) {
    } else if (this.bumpIf("-")) {
      sign = -1;
    }
    var hasDigits = false;
    var decimal = 0;
    while (!this.isEOF()) {
      var ch2 = this.char();
      if (ch2 >= 48 && ch2 <= 57) {
        hasDigits = true;
        decimal = decimal * 10 + (ch2 - 48);
        this.bump();
      } else {
        break;
      }
    }
    var location2 = createLocation(startingPosition, this.clonePosition());
    if (!hasDigits) {
      return this.error(expectNumberError, location2);
    }
    decimal *= sign;
    if (!isSafeInteger(decimal)) {
      return this.error(invalidNumberError, location2);
    }
    return { val: decimal, err: null };
  };
  Parser2.prototype.offset = function() {
    return this.position.offset;
  };
  Parser2.prototype.isEOF = function() {
    return this.offset() === this.message.length;
  };
  Parser2.prototype.clonePosition = function() {
    return {
      offset: this.position.offset,
      line: this.position.line,
      column: this.position.column
    };
  };
  Parser2.prototype.char = function() {
    var offset = this.position.offset;
    if (offset >= this.message.length) {
      throw Error("out of bound");
    }
    var code3 = codePointAt(this.message, offset);
    if (code3 === void 0) {
      throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
    }
    return code3;
  };
  Parser2.prototype.error = function(kind, location2) {
    return {
      val: null,
      err: {
        kind,
        message: this.message,
        location: location2
      }
    };
  };
  Parser2.prototype.bump = function() {
    if (this.isEOF()) {
      return;
    }
    var code3 = this.char();
    if (code3 === 10) {
      this.position.line += 1;
      this.position.column = 1;
      this.position.offset += 1;
    } else {
      this.position.column += 1;
      this.position.offset += code3 < 65536 ? 1 : 2;
    }
  };
  Parser2.prototype.bumpIf = function(prefix) {
    if (startsWith(this.message, prefix, this.offset())) {
      for (var i10 = 0; i10 < prefix.length; i10++) {
        this.bump();
      }
      return true;
    }
    return false;
  };
  Parser2.prototype.bumpUntil = function(pattern) {
    var currentOffset = this.offset();
    var index2 = this.message.indexOf(pattern, currentOffset);
    if (index2 >= 0) {
      this.bumpTo(index2);
      return true;
    } else {
      this.bumpTo(this.message.length);
      return false;
    }
  };
  Parser2.prototype.bumpTo = function(targetOffset) {
    if (this.offset() > targetOffset) {
      throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
    }
    targetOffset = Math.min(targetOffset, this.message.length);
    while (true) {
      var offset = this.offset();
      if (offset === targetOffset) {
        break;
      }
      if (offset > targetOffset) {
        throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
      }
      this.bump();
      if (this.isEOF()) {
        break;
      }
    }
  };
  Parser2.prototype.bumpSpace = function() {
    while (!this.isEOF() && _isWhiteSpace(this.char())) {
      this.bump();
    }
  };
  Parser2.prototype.peek = function() {
    if (this.isEOF()) {
      return null;
    }
    var code3 = this.char();
    var offset = this.offset();
    var nextCode = this.message.charCodeAt(offset + (code3 >= 65536 ? 2 : 1));
    return nextCode !== null && nextCode !== void 0 ? nextCode : null;
  };
  return Parser2;
}();
function _isAlpha(codepoint) {
  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
}
function _isAlphaOrSlash(codepoint) {
  return _isAlpha(codepoint) || codepoint === 47;
}
function _isPotentialElementNameChar(c10) {
  return c10 === 45 || c10 === 46 || c10 >= 48 && c10 <= 57 || c10 === 95 || c10 >= 97 && c10 <= 122 || c10 >= 65 && c10 <= 90 || c10 == 183 || c10 >= 192 && c10 <= 214 || c10 >= 216 && c10 <= 246 || c10 >= 248 && c10 <= 893 || c10 >= 895 && c10 <= 8191 || c10 >= 8204 && c10 <= 8205 || c10 >= 8255 && c10 <= 8256 || c10 >= 8304 && c10 <= 8591 || c10 >= 11264 && c10 <= 12271 || c10 >= 12289 && c10 <= 55295 || c10 >= 63744 && c10 <= 64975 || c10 >= 65008 && c10 <= 65533 || c10 >= 65536 && c10 <= 983039;
}
function _isWhiteSpace(c10) {
  return c10 >= 9 && c10 <= 13 || c10 === 32 || c10 === 133 || c10 >= 8206 && c10 <= 8207 || c10 === 8232 || c10 === 8233;
}
function _isPatternSyntax(c10) {
  return c10 >= 33 && c10 <= 35 || c10 === 36 || c10 >= 37 && c10 <= 39 || c10 === 40 || c10 === 41 || c10 === 42 || c10 === 43 || c10 === 44 || c10 === 45 || c10 >= 46 && c10 <= 47 || c10 >= 58 && c10 <= 59 || c10 >= 60 && c10 <= 62 || c10 >= 63 && c10 <= 64 || c10 === 91 || c10 === 92 || c10 === 93 || c10 === 94 || c10 === 96 || c10 === 123 || c10 === 124 || c10 === 125 || c10 === 126 || c10 === 161 || c10 >= 162 && c10 <= 165 || c10 === 166 || c10 === 167 || c10 === 169 || c10 === 171 || c10 === 172 || c10 === 174 || c10 === 176 || c10 === 177 || c10 === 182 || c10 === 187 || c10 === 191 || c10 === 215 || c10 === 247 || c10 >= 8208 && c10 <= 8213 || c10 >= 8214 && c10 <= 8215 || c10 === 8216 || c10 === 8217 || c10 === 8218 || c10 >= 8219 && c10 <= 8220 || c10 === 8221 || c10 === 8222 || c10 === 8223 || c10 >= 8224 && c10 <= 8231 || c10 >= 8240 && c10 <= 8248 || c10 === 8249 || c10 === 8250 || c10 >= 8251 && c10 <= 8254 || c10 >= 8257 && c10 <= 8259 || c10 === 8260 || c10 === 8261 || c10 === 8262 || c10 >= 8263 && c10 <= 8273 || c10 === 8274 || c10 === 8275 || c10 >= 8277 && c10 <= 8286 || c10 >= 8592 && c10 <= 8596 || c10 >= 8597 && c10 <= 8601 || c10 >= 8602 && c10 <= 8603 || c10 >= 8604 && c10 <= 8607 || c10 === 8608 || c10 >= 8609 && c10 <= 8610 || c10 === 8611 || c10 >= 8612 && c10 <= 8613 || c10 === 8614 || c10 >= 8615 && c10 <= 8621 || c10 === 8622 || c10 >= 8623 && c10 <= 8653 || c10 >= 8654 && c10 <= 8655 || c10 >= 8656 && c10 <= 8657 || c10 === 8658 || c10 === 8659 || c10 === 8660 || c10 >= 8661 && c10 <= 8691 || c10 >= 8692 && c10 <= 8959 || c10 >= 8960 && c10 <= 8967 || c10 === 8968 || c10 === 8969 || c10 === 8970 || c10 === 8971 || c10 >= 8972 && c10 <= 8991 || c10 >= 8992 && c10 <= 8993 || c10 >= 8994 && c10 <= 9e3 || c10 === 9001 || c10 === 9002 || c10 >= 9003 && c10 <= 9083 || c10 === 9084 || c10 >= 9085 && c10 <= 9114 || c10 >= 9115 && c10 <= 9139 || c10 >= 9140 && c10 <= 9179 || c10 >= 9180 && c10 <= 9185 || c10 >= 9186 && c10 <= 9254 || c10 >= 9255 && c10 <= 9279 || c10 >= 9280 && c10 <= 9290 || c10 >= 9291 && c10 <= 9311 || c10 >= 9472 && c10 <= 9654 || c10 === 9655 || c10 >= 9656 && c10 <= 9664 || c10 === 9665 || c10 >= 9666 && c10 <= 9719 || c10 >= 9720 && c10 <= 9727 || c10 >= 9728 && c10 <= 9838 || c10 === 9839 || c10 >= 9840 && c10 <= 10087 || c10 === 10088 || c10 === 10089 || c10 === 10090 || c10 === 10091 || c10 === 10092 || c10 === 10093 || c10 === 10094 || c10 === 10095 || c10 === 10096 || c10 === 10097 || c10 === 10098 || c10 === 10099 || c10 === 10100 || c10 === 10101 || c10 >= 10132 && c10 <= 10175 || c10 >= 10176 && c10 <= 10180 || c10 === 10181 || c10 === 10182 || c10 >= 10183 && c10 <= 10213 || c10 === 10214 || c10 === 10215 || c10 === 10216 || c10 === 10217 || c10 === 10218 || c10 === 10219 || c10 === 10220 || c10 === 10221 || c10 === 10222 || c10 === 10223 || c10 >= 10224 && c10 <= 10239 || c10 >= 10240 && c10 <= 10495 || c10 >= 10496 && c10 <= 10626 || c10 === 10627 || c10 === 10628 || c10 === 10629 || c10 === 10630 || c10 === 10631 || c10 === 10632 || c10 === 10633 || c10 === 10634 || c10 === 10635 || c10 === 10636 || c10 === 10637 || c10 === 10638 || c10 === 10639 || c10 === 10640 || c10 === 10641 || c10 === 10642 || c10 === 10643 || c10 === 10644 || c10 === 10645 || c10 === 10646 || c10 === 10647 || c10 === 10648 || c10 >= 10649 && c10 <= 10711 || c10 === 10712 || c10 === 10713 || c10 === 10714 || c10 === 10715 || c10 >= 10716 && c10 <= 10747 || c10 === 10748 || c10 === 10749 || c10 >= 10750 && c10 <= 11007 || c10 >= 11008 && c10 <= 11055 || c10 >= 11056 && c10 <= 11076 || c10 >= 11077 && c10 <= 11078 || c10 >= 11079 && c10 <= 11084 || c10 >= 11085 && c10 <= 11123 || c10 >= 11124 && c10 <= 11125 || c10 >= 11126 && c10 <= 11157 || c10 === 11158 || c10 >= 11159 && c10 <= 11263 || c10 >= 11776 && c10 <= 11777 || c10 === 11778 || c10 === 11779 || c10 === 11780 || c10 === 11781 || c10 >= 11782 && c10 <= 11784 || c10 === 11785 || c10 === 11786 || c10 === 11787 || c10 === 11788 || c10 === 11789 || c10 >= 11790 && c10 <= 11798 || c10 === 11799 || c10 >= 11800 && c10 <= 11801 || c10 === 11802 || c10 === 11803 || c10 === 11804 || c10 === 11805 || c10 >= 11806 && c10 <= 11807 || c10 === 11808 || c10 === 11809 || c10 === 11810 || c10 === 11811 || c10 === 11812 || c10 === 11813 || c10 === 11814 || c10 === 11815 || c10 === 11816 || c10 === 11817 || c10 >= 11818 && c10 <= 11822 || c10 === 11823 || c10 >= 11824 && c10 <= 11833 || c10 >= 11834 && c10 <= 11835 || c10 >= 11836 && c10 <= 11839 || c10 === 11840 || c10 === 11841 || c10 === 11842 || c10 >= 11843 && c10 <= 11855 || c10 >= 11856 && c10 <= 11857 || c10 === 11858 || c10 >= 11859 && c10 <= 11903 || c10 >= 12289 && c10 <= 12291 || c10 === 12296 || c10 === 12297 || c10 === 12298 || c10 === 12299 || c10 === 12300 || c10 === 12301 || c10 === 12302 || c10 === 12303 || c10 === 12304 || c10 === 12305 || c10 >= 12306 && c10 <= 12307 || c10 === 12308 || c10 === 12309 || c10 === 12310 || c10 === 12311 || c10 === 12312 || c10 === 12313 || c10 === 12314 || c10 === 12315 || c10 === 12316 || c10 === 12317 || c10 >= 12318 && c10 <= 12319 || c10 === 12320 || c10 === 12336 || c10 === 64830 || c10 === 64831 || c10 >= 65093 && c10 <= 65094;
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/index.js
function pruneLocation(els) {
  els.forEach(function(el2) {
    delete el2.location;
    if (isSelectElement(el2) || isPluralElement(el2)) {
      for (var k10 in el2.options) {
        delete el2.options[k10].location;
        pruneLocation(el2.options[k10].value);
      }
    } else if (isNumberElement(el2) && isNumberSkeleton(el2.style)) {
      delete el2.style.location;
    } else if ((isDateElement(el2) || isTimeElement(el2)) && isDateTimeSkeleton(el2.style)) {
      delete el2.style.location;
    } else if (isTagElement(el2)) {
      pruneLocation(el2.children);
    }
  });
}
function parse2(message, opts) {
  if (opts === void 0) {
    opts = {};
  }
  opts = __assign2({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
  var result = new Parser(message, opts).parse();
  if (result.err) {
    var error = SyntaxError(ErrorKind[result.err.kind]);
    error.location = result.err.location;
    error.originalMessage = result.err.message;
    throw error;
  }
  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
    pruneLocation(result.val);
  }
  return result.val;
}

// ../../node_modules/@formatjs/fast-memoize/lib/index.js
function memoize(fn, options) {
  var cache = options && options.cache ? options.cache : cacheDefault;
  var serializer = options && options.serializer ? options.serializer : serializerDefault;
  var strategy = options && options.strategy ? options.strategy : strategyDefault;
  return strategy(fn, {
    cache,
    serializer
  });
}
function isPrimitive(value) {
  return value == null || typeof value === "number" || typeof value === "boolean";
}
function monadic(fn, cache, serializer, arg) {
  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
  var computedValue = cache.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.call(this, arg);
    cache.set(cacheKey, computedValue);
  }
  return computedValue;
}
function variadic(fn, cache, serializer) {
  var args = Array.prototype.slice.call(arguments, 3);
  var cacheKey = serializer(args);
  var computedValue = cache.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.apply(this, args);
    cache.set(cacheKey, computedValue);
  }
  return computedValue;
}
function assemble(fn, context, strategy, cache, serialize) {
  return strategy.bind(context, fn, cache, serialize);
}
function strategyDefault(fn, options) {
  var strategy = fn.length === 1 ? monadic : variadic;
  return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
  return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
  return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
var serializerDefault = function() {
  return JSON.stringify(arguments);
};
function ObjectWithoutPrototypeCache() {
  this.cache = /* @__PURE__ */ Object.create(null);
}
ObjectWithoutPrototypeCache.prototype.get = function(key) {
  return this.cache[key];
};
ObjectWithoutPrototypeCache.prototype.set = function(key, value) {
  this.cache[key] = value;
};
var cacheDefault = {
  create: function create() {
    return new ObjectWithoutPrototypeCache();
  }
};
var strategies = {
  variadic: strategyVariadic,
  monadic: strategyMonadic
};

// ../../node_modules/intl-messageformat/lib/src/error.js
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
  ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
  ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = function(_super) {
  __extends(FormatError2, _super);
  function FormatError2(msg, code3, originalMessage) {
    var _this = _super.call(this, msg) || this;
    _this.code = code3;
    _this.originalMessage = originalMessage;
    return _this;
  }
  FormatError2.prototype.toString = function() {
    return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
  };
  return FormatError2;
}(Error);
var InvalidValueError = function(_super) {
  __extends(InvalidValueError2, _super);
  function InvalidValueError2(variableId, value, options, originalMessage) {
    return _super.call(this, 'Invalid values for "'.concat(variableId, '": "').concat(value, '". Options are "').concat(Object.keys(options).join('", "'), '"'), ErrorCode.INVALID_VALUE, originalMessage) || this;
  }
  return InvalidValueError2;
}(FormatError);
var InvalidValueTypeError = function(_super) {
  __extends(InvalidValueTypeError2, _super);
  function InvalidValueTypeError2(value, type, originalMessage) {
    return _super.call(this, 'Value for "'.concat(value, '" must be of type ').concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
  }
  return InvalidValueTypeError2;
}(FormatError);
var MissingValueError = function(_super) {
  __extends(MissingValueError2, _super);
  function MissingValueError2(variableId, originalMessage) {
    return _super.call(this, 'The intl string context variable "'.concat(variableId, '" was not provided to the string "').concat(originalMessage, '"'), ErrorCode.MISSING_VALUE, originalMessage) || this;
  }
  return MissingValueError2;
}(FormatError);

// ../../node_modules/intl-messageformat/lib/src/formatters.js
var PART_TYPE;
(function(PART_TYPE2) {
  PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
  PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
  if (parts.length < 2) {
    return parts;
  }
  return parts.reduce(function(all, part) {
    var lastPart = all[all.length - 1];
    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
      all.push(part);
    } else {
      lastPart.value += part.value;
    }
    return all;
  }, []);
}
function isFormatXMLElementFn(el2) {
  return typeof el2 === "function";
}
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
  if (els.length === 1 && isLiteralElement(els[0])) {
    return [
      {
        type: PART_TYPE.literal,
        value: els[0].value
      }
    ];
  }
  var result = [];
  for (var _i2 = 0, els_1 = els; _i2 < els_1.length; _i2++) {
    var el2 = els_1[_i2];
    if (isLiteralElement(el2)) {
      result.push({
        type: PART_TYPE.literal,
        value: el2.value
      });
      continue;
    }
    if (isPoundElement(el2)) {
      if (typeof currentPluralValue === "number") {
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales).format(currentPluralValue)
        });
      }
      continue;
    }
    var varName = el2.value;
    if (!(values && varName in values)) {
      throw new MissingValueError(varName, originalMessage);
    }
    var value = values[varName];
    if (isArgumentElement(el2)) {
      if (!value || typeof value === "string" || typeof value === "number") {
        value = typeof value === "string" || typeof value === "number" ? String(value) : "";
      }
      result.push({
        type: typeof value === "string" ? PART_TYPE.literal : PART_TYPE.object,
        value
      });
      continue;
    }
    if (isDateElement(el2)) {
      var style = typeof el2.style === "string" ? formats.date[el2.style] : isDateTimeSkeleton(el2.style) ? el2.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTimeElement(el2)) {
      var style = typeof el2.style === "string" ? formats.time[el2.style] : isDateTimeSkeleton(el2.style) ? el2.style.parsedOptions : formats.time.medium;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isNumberElement(el2)) {
      var style = typeof el2.style === "string" ? formats.number[el2.style] : isNumberSkeleton(el2.style) ? el2.style.parsedOptions : void 0;
      if (style && style.scale) {
        value = value * (style.scale || 1);
      }
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getNumberFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTagElement(el2)) {
      var children = el2.children, value_1 = el2.value;
      var formatFn = values[value_1];
      if (!isFormatXMLElementFn(formatFn)) {
        throw new InvalidValueTypeError(value_1, "function", originalMessage);
      }
      var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
      var chunks = formatFn(parts.map(function(p10) {
        return p10.value;
      }));
      if (!Array.isArray(chunks)) {
        chunks = [chunks];
      }
      result.push.apply(result, chunks.map(function(c10) {
        return {
          type: typeof c10 === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: c10
        };
      }));
    }
    if (isSelectElement(el2)) {
      var opt = el2.options[value] || el2.options.other;
      if (!opt) {
        throw new InvalidValueError(el2.value, value, Object.keys(el2.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
      continue;
    }
    if (isPluralElement(el2)) {
      var opt = el2.options["=".concat(value)];
      if (!opt) {
        if (!Intl.PluralRules) {
          throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
        }
        var rule = formatters.getPluralRules(locales, { type: el2.pluralType }).select(value - (el2.offset || 0));
        opt = el2.options[rule] || el2.options.other;
      }
      if (!opt) {
        throw new InvalidValueError(el2.value, value, Object.keys(el2.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el2.offset || 0)));
      continue;
    }
  }
  return mergeLiteral(result);
}

// ../../node_modules/intl-messageformat/lib/src/core.js
function mergeConfig(c12, c23) {
  if (!c23) {
    return c12;
  }
  return __assign2(__assign2(__assign2({}, c12 || {}), c23 || {}), Object.keys(c12).reduce(function(all, k10) {
    all[k10] = __assign2(__assign2({}, c12[k10]), c23[k10] || {});
    return all;
  }, {}));
}
function mergeConfigs(defaultConfig, configs) {
  if (!configs) {
    return defaultConfig;
  }
  return Object.keys(defaultConfig).reduce(function(all, k10) {
    all[k10] = mergeConfig(defaultConfig[k10], configs[k10]);
    return all;
  }, __assign2({}, defaultConfig));
}
function createFastMemoizeCache(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value) {
          store[key] = value;
        }
      };
    }
  };
}
function createDefaultFormatters(cache) {
  if (cache === void 0) {
    cache = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
  }
  return {
    getNumberFormat: memoize(function() {
      var _a4;
      var args = [];
      for (var _i2 = 0; _i2 < arguments.length; _i2++) {
        args[_i2] = arguments[_i2];
      }
      return new ((_a4 = Intl.NumberFormat).bind.apply(_a4, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.number),
      strategy: strategies.variadic
    }),
    getDateTimeFormat: memoize(function() {
      var _a4;
      var args = [];
      for (var _i2 = 0; _i2 < arguments.length; _i2++) {
        args[_i2] = arguments[_i2];
      }
      return new ((_a4 = Intl.DateTimeFormat).bind.apply(_a4, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.dateTime),
      strategy: strategies.variadic
    }),
    getPluralRules: memoize(function() {
      var _a4;
      var args = [];
      for (var _i2 = 0; _i2 < arguments.length; _i2++) {
        args[_i2] = arguments[_i2];
      }
      return new ((_a4 = Intl.PluralRules).bind.apply(_a4, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.pluralRules),
      strategy: strategies.variadic
    })
  };
}
var IntlMessageFormat = function() {
  function IntlMessageFormat2(message, locales, overrideFormats, opts) {
    var _this = this;
    if (locales === void 0) {
      locales = IntlMessageFormat2.defaultLocale;
    }
    this.formatterCache = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
    this.format = function(values) {
      var parts = _this.formatToParts(values);
      if (parts.length === 1) {
        return parts[0].value;
      }
      var result = parts.reduce(function(all, part) {
        if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
          all.push(part.value);
        } else {
          all[all.length - 1] += part.value;
        }
        return all;
      }, []);
      if (result.length <= 1) {
        return result[0] || "";
      }
      return result;
    };
    this.formatToParts = function(values) {
      return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
    };
    this.resolvedOptions = function() {
      var _a4;
      return {
        locale: ((_a4 = _this.resolvedLocale) === null || _a4 === void 0 ? void 0 : _a4.toString()) || Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
      };
    };
    this.getAst = function() {
      return _this.ast;
    };
    this.locales = locales;
    this.resolvedLocale = IntlMessageFormat2.resolveLocale(locales);
    if (typeof message === "string") {
      this.message = message;
      if (!IntlMessageFormat2.__parse) {
        throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
      }
      this.ast = IntlMessageFormat2.__parse(message, {
        ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,
        locale: this.resolvedLocale
      });
    } else {
      this.ast = message;
    }
    if (!Array.isArray(this.ast)) {
      throw new TypeError("A message must be provided as a String or AST.");
    }
    this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
    this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
  }
  Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
    get: function() {
      if (!IntlMessageFormat2.memoizedDefaultLocale) {
        IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
      }
      return IntlMessageFormat2.memoizedDefaultLocale;
    },
    enumerable: false,
    configurable: true
  });
  IntlMessageFormat2.memoizedDefaultLocale = null;
  IntlMessageFormat2.resolveLocale = function(locales) {
    if (typeof Intl.Locale === "undefined") {
      return;
    }
    var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
    if (supportedLocales.length > 0) {
      return new Intl.Locale(supportedLocales[0]);
    }
    return new Intl.Locale(typeof locales === "string" ? locales : locales[0]);
  };
  IntlMessageFormat2.__parse = parse2;
  IntlMessageFormat2.formats = {
    number: {
      integer: {
        maximumFractionDigits: 0
      },
      currency: {
        style: "currency"
      },
      percent: {
        style: "percent"
      }
    },
    date: {
      short: {
        month: "numeric",
        day: "numeric",
        year: "2-digit"
      },
      medium: {
        month: "short",
        day: "numeric",
        year: "numeric"
      },
      long: {
        month: "long",
        day: "numeric",
        year: "numeric"
      },
      full: {
        weekday: "long",
        month: "long",
        day: "numeric",
        year: "numeric"
      }
    },
    time: {
      short: {
        hour: "numeric",
        minute: "numeric"
      },
      medium: {
        hour: "numeric",
        minute: "numeric",
        second: "numeric"
      },
      long: {
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        timeZoneName: "short"
      },
      full: {
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        timeZoneName: "short"
      }
    }
  };
  return IntlMessageFormat2;
}();

// ../../node_modules/@formatjs/intl/lib/src/error.js
var IntlErrorCode;
(function(IntlErrorCode2) {
  IntlErrorCode2["FORMAT_ERROR"] = "FORMAT_ERROR";
  IntlErrorCode2["UNSUPPORTED_FORMATTER"] = "UNSUPPORTED_FORMATTER";
  IntlErrorCode2["INVALID_CONFIG"] = "INVALID_CONFIG";
  IntlErrorCode2["MISSING_DATA"] = "MISSING_DATA";
  IntlErrorCode2["MISSING_TRANSLATION"] = "MISSING_TRANSLATION";
})(IntlErrorCode || (IntlErrorCode = {}));
var IntlError = function(_super) {
  __extends(IntlError2, _super);
  function IntlError2(code3, message, exception) {
    var _this = this;
    var err = exception ? exception instanceof Error ? exception : new Error(String(exception)) : void 0;
    _this = _super.call(this, "[@formatjs/intl Error ".concat(code3, "] ").concat(message, "\n").concat(err ? "\n".concat(err.message, "\n").concat(err.stack) : "")) || this;
    _this.code = code3;
    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(_this, IntlError2);
    }
    return _this;
  }
  return IntlError2;
}(Error);
var UnsupportedFormatterError = function(_super) {
  __extends(UnsupportedFormatterError2, _super);
  function UnsupportedFormatterError2(message, exception) {
    return _super.call(this, IntlErrorCode.UNSUPPORTED_FORMATTER, message, exception) || this;
  }
  return UnsupportedFormatterError2;
}(IntlError);
var InvalidConfigError = function(_super) {
  __extends(InvalidConfigError2, _super);
  function InvalidConfigError2(message, exception) {
    return _super.call(this, IntlErrorCode.INVALID_CONFIG, message, exception) || this;
  }
  return InvalidConfigError2;
}(IntlError);
var MissingDataError = function(_super) {
  __extends(MissingDataError2, _super);
  function MissingDataError2(message, exception) {
    return _super.call(this, IntlErrorCode.MISSING_DATA, message, exception) || this;
  }
  return MissingDataError2;
}(IntlError);
var IntlFormatError = function(_super) {
  __extends(IntlFormatError2, _super);
  function IntlFormatError2(message, locale, exception) {
    return _super.call(this, IntlErrorCode.FORMAT_ERROR, "".concat(message, "\nLocale: ").concat(locale, "\n"), exception) || this;
  }
  return IntlFormatError2;
}(IntlError);
var MessageFormatError = function(_super) {
  __extends(MessageFormatError2, _super);
  function MessageFormatError2(message, locale, descriptor, exception) {
    var _this = _super.call(this, "".concat(message, "\nMessageID: ").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.id, "\nDefault Message: ").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage, "\nDescription: ").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.description, "\n"), locale, exception) || this;
    _this.descriptor = descriptor;
    return _this;
  }
  return MessageFormatError2;
}(IntlFormatError);
var MissingTranslationError = function(_super) {
  __extends(MissingTranslationError2, _super);
  function MissingTranslationError2(descriptor, locale) {
    var _this = _super.call(this, IntlErrorCode.MISSING_TRANSLATION, 'Missing message: "'.concat(descriptor.id, '" for locale "').concat(locale, '", using ').concat(descriptor.defaultMessage ? "default message (".concat(typeof descriptor.defaultMessage === "string" ? descriptor.defaultMessage : descriptor.defaultMessage.map(function(e13) {
      var _a4;
      return (_a4 = e13.value) !== null && _a4 !== void 0 ? _a4 : JSON.stringify(e13);
    }).join(), ")") : "id", " as fallback.")) || this;
    _this.descriptor = descriptor;
    return _this;
  }
  return MissingTranslationError2;
}(IntlError);

// ../../node_modules/@formatjs/intl/lib/src/utils.js
function filterProps(props, allowlist, defaults) {
  if (defaults === void 0) {
    defaults = {};
  }
  return allowlist.reduce(function(filtered, name) {
    if (name in props) {
      filtered[name] = props[name];
    } else if (name in defaults) {
      filtered[name] = defaults[name];
    }
    return filtered;
  }, {});
}
var defaultErrorHandler = function(error) {
  if (false) {
    console.error(error);
  }
};
var defaultWarnHandler = function(warning) {
  if (false) {
    console.warn(warning);
  }
};
var DEFAULT_INTL_CONFIG = {
  formats: {},
  messages: {},
  timeZone: void 0,
  defaultLocale: "en",
  defaultFormats: {},
  fallbackOnEmptyString: true,
  onError: defaultErrorHandler,
  onWarn: defaultWarnHandler
};
function createIntlCache() {
  return {
    dateTime: {},
    number: {},
    message: {},
    relativeTime: {},
    pluralRules: {},
    list: {},
    displayNames: {}
  };
}
function createFastMemoizeCache2(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value) {
          store[key] = value;
        }
      };
    }
  };
}
function createFormatters(cache) {
  if (cache === void 0) {
    cache = createIntlCache();
  }
  var RelativeTimeFormat = Intl.RelativeTimeFormat;
  var ListFormat = Intl.ListFormat;
  var DisplayNames = Intl.DisplayNames;
  var getDateTimeFormat = memoize(function() {
    var _a4;
    var args = [];
    for (var _i2 = 0; _i2 < arguments.length; _i2++) {
      args[_i2] = arguments[_i2];
    }
    return new ((_a4 = Intl.DateTimeFormat).bind.apply(_a4, __spreadArray([void 0], args, false)))();
  }, {
    cache: createFastMemoizeCache2(cache.dateTime),
    strategy: strategies.variadic
  });
  var getNumberFormat = memoize(function() {
    var _a4;
    var args = [];
    for (var _i2 = 0; _i2 < arguments.length; _i2++) {
      args[_i2] = arguments[_i2];
    }
    return new ((_a4 = Intl.NumberFormat).bind.apply(_a4, __spreadArray([void 0], args, false)))();
  }, {
    cache: createFastMemoizeCache2(cache.number),
    strategy: strategies.variadic
  });
  var getPluralRules = memoize(function() {
    var _a4;
    var args = [];
    for (var _i2 = 0; _i2 < arguments.length; _i2++) {
      args[_i2] = arguments[_i2];
    }
    return new ((_a4 = Intl.PluralRules).bind.apply(_a4, __spreadArray([void 0], args, false)))();
  }, {
    cache: createFastMemoizeCache2(cache.pluralRules),
    strategy: strategies.variadic
  });
  return {
    getDateTimeFormat,
    getNumberFormat,
    getMessageFormat: memoize(function(message, locales, overrideFormats, opts) {
      return new IntlMessageFormat(message, locales, overrideFormats, __assign2({ formatters: {
        getNumberFormat,
        getDateTimeFormat,
        getPluralRules
      } }, opts || {}));
    }, {
      cache: createFastMemoizeCache2(cache.message),
      strategy: strategies.variadic
    }),
    getRelativeTimeFormat: memoize(function() {
      var args = [];
      for (var _i2 = 0; _i2 < arguments.length; _i2++) {
        args[_i2] = arguments[_i2];
      }
      return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache2(cache.relativeTime),
      strategy: strategies.variadic
    }),
    getPluralRules,
    getListFormat: memoize(function() {
      var args = [];
      for (var _i2 = 0; _i2 < arguments.length; _i2++) {
        args[_i2] = arguments[_i2];
      }
      return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache2(cache.list),
      strategy: strategies.variadic
    }),
    getDisplayNames: memoize(function() {
      var args = [];
      for (var _i2 = 0; _i2 < arguments.length; _i2++) {
        args[_i2] = arguments[_i2];
      }
      return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache2(cache.displayNames),
      strategy: strategies.variadic
    })
  };
}
function getNamedFormat(formats, type, name, onError) {
  var formatType = formats && formats[type];
  var format;
  if (formatType) {
    format = formatType[name];
  }
  if (format) {
    return format;
  }
  onError(new UnsupportedFormatterError("No ".concat(type, " format named: ").concat(name)));
}

// ../../node_modules/@formatjs/intl/lib/src/message.js
function setTimeZoneInOptions(opts, timeZone) {
  return Object.keys(opts).reduce(function(all, k10) {
    all[k10] = __assign2({ timeZone }, opts[k10]);
    return all;
  }, {});
}
function deepMergeOptions(opts1, opts2) {
  var keys = Object.keys(__assign2(__assign2({}, opts1), opts2));
  return keys.reduce(function(all, k10) {
    all[k10] = __assign2(__assign2({}, opts1[k10] || {}), opts2[k10] || {});
    return all;
  }, {});
}
function deepMergeFormatsAndSetTimeZone(f12, timeZone) {
  if (!timeZone) {
    return f12;
  }
  var mfFormats = IntlMessageFormat.formats;
  return __assign2(__assign2(__assign2({}, mfFormats), f12), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f12.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f12.time || {}, timeZone)) });
}
var formatMessage = function(_a4, state, messageDescriptor, values, opts) {
  var locale = _a4.locale, formats = _a4.formats, messages = _a4.messages, defaultLocale = _a4.defaultLocale, defaultFormats = _a4.defaultFormats, fallbackOnEmptyString = _a4.fallbackOnEmptyString, onError = _a4.onError, timeZone = _a4.timeZone, defaultRichTextElements = _a4.defaultRichTextElements;
  if (messageDescriptor === void 0) {
    messageDescriptor = { id: "" };
  }
  var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;
  invariant(!!msgId, "[@formatjs/intl] An `id` must be provided to format a message. You can either:\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\nto autofix this issue");
  var id2 = String(msgId);
  var message = messages && Object.prototype.hasOwnProperty.call(messages, id2) && messages[id2];
  if (Array.isArray(message) && message.length === 1 && message[0].type === TYPE.literal) {
    return message[0].value;
  }
  if (!values && message && typeof message === "string" && !defaultRichTextElements) {
    return message.replace(/'\{(.*?)\}'/gi, "{$1}");
  }
  values = __assign2(__assign2({}, defaultRichTextElements), values || {});
  formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);
  defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);
  if (!message) {
    if (fallbackOnEmptyString === false && message === "") {
      return message;
    }
    if (!defaultMessage || locale && locale.toLowerCase() !== defaultLocale.toLowerCase()) {
      onError(new MissingTranslationError(messageDescriptor, locale));
    }
    if (defaultMessage) {
      try {
        var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);
        return formatter.format(values);
      } catch (e13) {
        onError(new MessageFormatError('Error formatting default message for: "'.concat(id2, '", rendering default message verbatim'), locale, messageDescriptor, e13));
        return typeof defaultMessage === "string" ? defaultMessage : id2;
      }
    }
    return id2;
  }
  try {
    var formatter = state.getMessageFormat(message, locale, formats, __assign2({ formatters: state }, opts || {}));
    return formatter.format(values);
  } catch (e13) {
    onError(new MessageFormatError('Error formatting message: "'.concat(id2, '", using ').concat(defaultMessage ? "default message" : "id", " as fallback."), locale, messageDescriptor, e13));
  }
  if (defaultMessage) {
    try {
      var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);
      return formatter.format(values);
    } catch (e13) {
      onError(new MessageFormatError('Error formatting the default message for: "'.concat(id2, '", rendering message verbatim'), locale, messageDescriptor, e13));
    }
  }
  if (typeof message === "string") {
    return message;
  }
  if (typeof defaultMessage === "string") {
    return defaultMessage;
  }
  return id2;
};

// ../../node_modules/@formatjs/intl/lib/src/dateTime.js
var DATE_TIME_FORMAT_OPTIONS = [
  "formatMatcher",
  "timeZone",
  "hour12",
  "weekday",
  "era",
  "year",
  "month",
  "day",
  "hour",
  "minute",
  "second",
  "timeZoneName",
  "hourCycle",
  "dateStyle",
  "timeStyle",
  "calendar",
  "numberingSystem",
  "fractionalSecondDigits"
];
function getFormatter(_a4, type, getDateTimeFormat, options) {
  var locale = _a4.locale, formats = _a4.formats, onError = _a4.onError, timeZone = _a4.timeZone;
  if (options === void 0) {
    options = {};
  }
  var format = options.format;
  var defaults = __assign2(__assign2({}, timeZone && { timeZone }), format && getNamedFormat(formats, type, format, onError));
  var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);
  if (type === "time" && !filteredOptions.hour && !filteredOptions.minute && !filteredOptions.second && !filteredOptions.timeStyle && !filteredOptions.dateStyle) {
    filteredOptions = __assign2(__assign2({}, filteredOptions), { hour: "numeric", minute: "numeric" });
  }
  return getDateTimeFormat(locale, filteredOptions);
}
function formatDate(config, getDateTimeFormat) {
  var _a4 = [];
  for (var _i2 = 2; _i2 < arguments.length; _i2++) {
    _a4[_i2 - 2] = arguments[_i2];
  }
  var value = _a4[0], _b2 = _a4[1], options = _b2 === void 0 ? {} : _b2;
  var date = typeof value === "string" ? new Date(value || 0) : value;
  try {
    return getFormatter(config, "date", getDateTimeFormat, options).format(date);
  } catch (e13) {
    config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting date.", e13));
  }
  return String(date);
}
function formatTime(config, getDateTimeFormat) {
  var _a4 = [];
  for (var _i2 = 2; _i2 < arguments.length; _i2++) {
    _a4[_i2 - 2] = arguments[_i2];
  }
  var value = _a4[0], _b2 = _a4[1], options = _b2 === void 0 ? {} : _b2;
  var date = typeof value === "string" ? new Date(value || 0) : value;
  try {
    return getFormatter(config, "time", getDateTimeFormat, options).format(date);
  } catch (e13) {
    config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting time.", e13));
  }
  return String(date);
}
function formatDateTimeRange(config, getDateTimeFormat) {
  var _a4 = [];
  for (var _i2 = 2; _i2 < arguments.length; _i2++) {
    _a4[_i2 - 2] = arguments[_i2];
  }
  var from = _a4[0], to2 = _a4[1], _b2 = _a4[2], options = _b2 === void 0 ? {} : _b2;
  var timeZone = config.timeZone, locale = config.locale, onError = config.onError;
  var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, timeZone ? { timeZone } : {});
  try {
    return getDateTimeFormat(locale, filteredOptions).formatRange(from, to2);
  } catch (e13) {
    onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting date time range.", e13));
  }
  return String(from);
}
function formatDateToParts(config, getDateTimeFormat) {
  var _a4 = [];
  for (var _i2 = 2; _i2 < arguments.length; _i2++) {
    _a4[_i2 - 2] = arguments[_i2];
  }
  var value = _a4[0], _b2 = _a4[1], options = _b2 === void 0 ? {} : _b2;
  var date = typeof value === "string" ? new Date(value || 0) : value;
  try {
    return getFormatter(config, "date", getDateTimeFormat, options).formatToParts(date);
  } catch (e13) {
    config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting date.", e13));
  }
  return [];
}
function formatTimeToParts(config, getDateTimeFormat) {
  var _a4 = [];
  for (var _i2 = 2; _i2 < arguments.length; _i2++) {
    _a4[_i2 - 2] = arguments[_i2];
  }
  var value = _a4[0], _b2 = _a4[1], options = _b2 === void 0 ? {} : _b2;
  var date = typeof value === "string" ? new Date(value || 0) : value;
  try {
    return getFormatter(config, "time", getDateTimeFormat, options).formatToParts(date);
  } catch (e13) {
    config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting time.", e13));
  }
  return [];
}

// ../../node_modules/@formatjs/intl/lib/src/displayName.js
var DISPLAY_NAMES_OPTONS = [
  "style",
  "type",
  "fallback"
];
function formatDisplayName(_a4, getDisplayNames, value, options) {
  var locale = _a4.locale, onError = _a4.onError;
  var DisplayNames = Intl.DisplayNames;
  if (!DisplayNames) {
    onError(new FormatError('Intl.DisplayNames is not available in this environment.\nTry polyfilling it using "@formatjs/intl-displaynames"\n', ErrorCode.MISSING_INTL_API));
  }
  var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);
  try {
    return getDisplayNames(locale, filteredOptions).of(value);
  } catch (e13) {
    onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting display name.", e13));
  }
}

// ../../node_modules/@formatjs/intl/lib/src/list.js
var LIST_FORMAT_OPTIONS = [
  "type",
  "style"
];
var now = Date.now();
function generateToken(i10) {
  return "".concat(now, "_").concat(i10, "_").concat(now);
}
function formatList(opts, getListFormat, values, options) {
  if (options === void 0) {
    options = {};
  }
  var results = formatListToParts(opts, getListFormat, values, options).reduce(function(all, el2) {
    var val = el2.value;
    if (typeof val !== "string") {
      all.push(val);
    } else if (typeof all[all.length - 1] === "string") {
      all[all.length - 1] += val;
    } else {
      all.push(val);
    }
    return all;
  }, []);
  return results.length === 1 ? results[0] : results;
}
function formatListToParts(_a4, getListFormat, values, options) {
  var locale = _a4.locale, onError = _a4.onError;
  if (options === void 0) {
    options = {};
  }
  var ListFormat = Intl.ListFormat;
  if (!ListFormat) {
    onError(new FormatError('Intl.ListFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-listformat"\n', ErrorCode.MISSING_INTL_API));
  }
  var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);
  try {
    var richValues_1 = {};
    var serializedValues = values.map(function(v10, i10) {
      if (typeof v10 === "object") {
        var id2 = generateToken(i10);
        richValues_1[id2] = v10;
        return id2;
      }
      return String(v10);
    });
    return getListFormat(locale, filteredOptions).formatToParts(serializedValues).map(function(part) {
      return part.type === "literal" ? part : __assign2(__assign2({}, part), { value: richValues_1[part.value] || part.value });
    });
  } catch (e13) {
    onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting list.", e13));
  }
  return values;
}

// ../../node_modules/@formatjs/intl/lib/src/plural.js
var PLURAL_FORMAT_OPTIONS = ["type"];
function formatPlural(_a4, getPluralRules, value, options) {
  var locale = _a4.locale, onError = _a4.onError;
  if (options === void 0) {
    options = {};
  }
  if (!Intl.PluralRules) {
    onError(new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API));
  }
  var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);
  try {
    return getPluralRules(locale, filteredOptions).select(value);
  } catch (e13) {
    onError(new IntlFormatError("Error formatting plural.", locale, e13));
  }
  return "other";
}

// ../../node_modules/@formatjs/intl/lib/src/relativeTime.js
var RELATIVE_TIME_FORMAT_OPTIONS = ["numeric", "style"];
function getFormatter2(_a4, getRelativeTimeFormat, options) {
  var locale = _a4.locale, formats = _a4.formats, onError = _a4.onError;
  if (options === void 0) {
    options = {};
  }
  var format = options.format;
  var defaults = !!format && getNamedFormat(formats, "relative", format, onError) || {};
  var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);
  return getRelativeTimeFormat(locale, filteredOptions);
}
function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {
  if (options === void 0) {
    options = {};
  }
  if (!unit) {
    unit = "second";
  }
  var RelativeTimeFormat = Intl.RelativeTimeFormat;
  if (!RelativeTimeFormat) {
    config.onError(new FormatError('Intl.RelativeTimeFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-relativetimeformat"\n', ErrorCode.MISSING_INTL_API));
  }
  try {
    return getFormatter2(config, getRelativeTimeFormat, options).format(value, unit);
  } catch (e13) {
    config.onError(new IntlFormatError("Error formatting relative time.", config.locale, e13));
  }
  return String(value);
}

// ../../node_modules/@formatjs/intl/lib/src/number.js
var NUMBER_FORMAT_OPTIONS = [
  "style",
  "currency",
  "currencyDisplay",
  "unit",
  "unitDisplay",
  "useGrouping",
  "minimumIntegerDigits",
  "minimumFractionDigits",
  "maximumFractionDigits",
  "minimumSignificantDigits",
  "maximumSignificantDigits",
  "compactDisplay",
  "currencyDisplay",
  "currencySign",
  "notation",
  "signDisplay",
  "unit",
  "unitDisplay",
  "numberingSystem"
];
function getFormatter3(_a4, getNumberFormat, options) {
  var locale = _a4.locale, formats = _a4.formats, onError = _a4.onError;
  if (options === void 0) {
    options = {};
  }
  var format = options.format;
  var defaults = format && getNamedFormat(formats, "number", format, onError) || {};
  var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);
  return getNumberFormat(locale, filteredOptions);
}
function formatNumber(config, getNumberFormat, value, options) {
  if (options === void 0) {
    options = {};
  }
  try {
    return getFormatter3(config, getNumberFormat, options).format(value);
  } catch (e13) {
    config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting number.", e13));
  }
  return String(value);
}
function formatNumberToParts(config, getNumberFormat, value, options) {
  if (options === void 0) {
    options = {};
  }
  try {
    return getFormatter3(config, getNumberFormat, options).formatToParts(value);
  } catch (e13) {
    config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, "Error formatting number.", e13));
  }
  return [];
}

// ../../node_modules/@formatjs/intl/lib/src/create-intl.js
function messagesContainString(messages) {
  var firstMessage = messages ? messages[Object.keys(messages)[0]] : void 0;
  return typeof firstMessage === "string";
}
function verifyConfigMessages(config) {
  if (config.onWarn && config.defaultRichTextElements && messagesContainString(config.messages || {})) {
    config.onWarn('[@formatjs/intl] "defaultRichTextElements" was specified but "message" was not pre-compiled. \nPlease consider using "@formatjs/cli" to pre-compile your messages for performance.\nFor more details see https://formatjs.io/docs/getting-started/message-distribution');
  }
}
function createIntl(config, cache) {
  var formatters = createFormatters(cache);
  var resolvedConfig = __assign2(__assign2({}, DEFAULT_INTL_CONFIG), config);
  var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;
  if (!locale) {
    if (onError) {
      onError(new InvalidConfigError('"locale" was not configured, using "'.concat(defaultLocale, '" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details')));
    }
    resolvedConfig.locale = resolvedConfig.defaultLocale || "en";
  } else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {
    onError(new MissingDataError('Missing locale data for locale: "'.concat(locale, '" in Intl.NumberFormat. Using default locale: "').concat(defaultLocale, '" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details')));
  } else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length && onError) {
    onError(new MissingDataError('Missing locale data for locale: "'.concat(locale, '" in Intl.DateTimeFormat. Using default locale: "').concat(defaultLocale, '" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details')));
  }
  verifyConfigMessages(resolvedConfig);
  return __assign2(__assign2({}, resolvedConfig), { formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateTimeRange: formatDateTimeRange.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), $t: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatListToParts: formatListToParts.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });
}

// ../../node_modules/react-intl/lib/src/utils.js
function invariantIntlContext(intl) {
  invariant(intl, "[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry.");
}
var DEFAULT_INTL_CONFIG2 = __assign2(__assign2({}, DEFAULT_INTL_CONFIG), { textComponent: React48.Fragment });
function assignUniqueKeysToParts(formatXMLElementFn) {
  return function(parts) {
    return formatXMLElementFn(React48.Children.toArray(parts));
  };
}
function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true;
  }
  if (!objA || !objB) {
    return false;
  }
  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);
  var len = aKeys.length;
  if (bKeys.length !== len) {
    return false;
  }
  for (var i10 = 0; i10 < len; i10++) {
    var key = aKeys[i10];
    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {
      return false;
    }
  }
  return true;
}

// ../../node_modules/react-intl/lib/src/components/injectIntl.js
var IntlContext = React49.createContext(null);
var IntlConsumer = IntlContext.Consumer;
var IntlProvider = IntlContext.Provider;
var Provider = IntlProvider;
var Context = IntlContext;

// ../../node_modules/react-intl/lib/src/components/useIntl.js
function useIntl() {
  var intl = React50.useContext(Context);
  invariantIntlContext(intl);
  return intl;
}

// ../../node_modules/react-intl/lib/src/components/createFormattedComponent.js
var DisplayName;
(function(DisplayName2) {
  DisplayName2["formatDate"] = "FormattedDate";
  DisplayName2["formatTime"] = "FormattedTime";
  DisplayName2["formatNumber"] = "FormattedNumber";
  DisplayName2["formatList"] = "FormattedList";
  DisplayName2["formatDisplayName"] = "FormattedDisplayName";
})(DisplayName || (DisplayName = {}));
var DisplayNameParts;
(function(DisplayNameParts2) {
  DisplayNameParts2["formatDate"] = "FormattedDateParts";
  DisplayNameParts2["formatTime"] = "FormattedTimeParts";
  DisplayNameParts2["formatNumber"] = "FormattedNumberParts";
  DisplayNameParts2["formatList"] = "FormattedListParts";
})(DisplayNameParts || (DisplayNameParts = {}));
var FormattedNumberParts = function(props) {
  var intl = useIntl();
  var value = props.value, children = props.children, formatProps = __rest(props, ["value", "children"]);
  return children(intl.formatNumberToParts(value, formatProps));
};
FormattedNumberParts.displayName = "FormattedNumberParts";
FormattedNumberParts.displayName = "FormattedNumberParts";
function createFormattedDateTimePartsComponent(name) {
  var ComponentParts = function(props) {
    var intl = useIntl();
    var value = props.value, children = props.children, formatProps = __rest(props, ["value", "children"]);
    var date = typeof value === "string" ? new Date(value || 0) : value;
    var formattedParts = name === "formatDate" ? intl.formatDateToParts(date, formatProps) : intl.formatTimeToParts(date, formatProps);
    return children(formattedParts);
  };
  ComponentParts.displayName = DisplayNameParts[name];
  return ComponentParts;
}
function createFormattedComponent(name) {
  var Component = function(props) {
    var intl = useIntl();
    var value = props.value, children = props.children, formatProps = __rest(props, ["value", "children"]);
    var formattedValue = intl[name](value, formatProps);
    if (typeof children === "function") {
      return children(formattedValue);
    }
    var Text = intl.textComponent || React51.Fragment;
    return React51.createElement(Text, null, formattedValue);
  };
  Component.displayName = DisplayName[name];
  return Component;
}

// ../../node_modules/react-intl/lib/src/components/provider.js
var React52 = __toESM(require_react());
function processIntlConfig(config) {
  return {
    locale: config.locale,
    timeZone: config.timeZone,
    fallbackOnEmptyString: config.fallbackOnEmptyString,
    formats: config.formats,
    textComponent: config.textComponent,
    messages: config.messages,
    defaultLocale: config.defaultLocale,
    defaultFormats: config.defaultFormats,
    onError: config.onError,
    onWarn: config.onWarn,
    wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,
    defaultRichTextElements: config.defaultRichTextElements
  };
}
function assignUniqueKeysToFormatXMLElementFnArgument(values) {
  if (!values) {
    return values;
  }
  return Object.keys(values).reduce(function(acc, k10) {
    var v10 = values[k10];
    acc[k10] = isFormatXMLElementFn(v10) ? assignUniqueKeysToParts(v10) : v10;
    return acc;
  }, {});
}
var formatMessage2 = function(config, formatters, descriptor, rawValues) {
  var rest = [];
  for (var _i2 = 4; _i2 < arguments.length; _i2++) {
    rest[_i2 - 4] = arguments[_i2];
  }
  var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);
  var chunks = formatMessage.apply(void 0, __spreadArray([
    config,
    formatters,
    descriptor,
    values
  ], rest, false));
  if (Array.isArray(chunks)) {
    return React52.Children.toArray(chunks);
  }
  return chunks;
};
var createIntl2 = function(_a4, cache) {
  var rawDefaultRichTextElements = _a4.defaultRichTextElements, config = __rest(_a4, ["defaultRichTextElements"]);
  var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);
  var coreIntl = createIntl(__assign2(__assign2(__assign2({}, DEFAULT_INTL_CONFIG2), config), { defaultRichTextElements }), cache);
  var resolvedConfig = {
    locale: coreIntl.locale,
    timeZone: coreIntl.timeZone,
    fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,
    formats: coreIntl.formats,
    defaultLocale: coreIntl.defaultLocale,
    defaultFormats: coreIntl.defaultFormats,
    messages: coreIntl.messages,
    onError: coreIntl.onError,
    defaultRichTextElements
  };
  return __assign2(__assign2({}, coreIntl), { formatMessage: formatMessage2.bind(null, resolvedConfig, coreIntl.formatters), $t: formatMessage2.bind(null, resolvedConfig, coreIntl.formatters) });
};
var IntlProvider2 = function(_super) {
  __extends(IntlProvider3, _super);
  function IntlProvider3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.cache = createIntlCache();
    _this.state = {
      cache: _this.cache,
      intl: createIntl2(processIntlConfig(_this.props), _this.cache),
      prevConfig: processIntlConfig(_this.props)
    };
    return _this;
  }
  IntlProvider3.getDerivedStateFromProps = function(props, _a4) {
    var prevConfig = _a4.prevConfig, cache = _a4.cache;
    var config = processIntlConfig(props);
    if (!shallowEqual(prevConfig, config)) {
      return {
        intl: createIntl2(config, cache),
        prevConfig: config
      };
    }
    return null;
  };
  IntlProvider3.prototype.render = function() {
    invariantIntlContext(this.state.intl);
    return React52.createElement(Provider, { value: this.state.intl }, this.props.children);
  };
  IntlProvider3.displayName = "IntlProvider";
  IntlProvider3.defaultProps = DEFAULT_INTL_CONFIG2;
  return IntlProvider3;
}(React52.PureComponent);
var provider_default = IntlProvider2;

// ../../node_modules/react-intl/lib/src/components/message.js
var React53 = __toESM(require_react());
function areEqual(prevProps, nextProps) {
  var values = prevProps.values, otherProps = __rest(prevProps, ["values"]);
  var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, ["values"]);
  return shallowEqual(nextValues, values) && shallowEqual(otherProps, nextOtherProps);
}
function FormattedMessage(props) {
  var intl = useIntl();
  var formatMessage3 = intl.formatMessage, _a4 = intl.textComponent, Text = _a4 === void 0 ? React53.Fragment : _a4;
  var id2 = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b2 = props.tagName, Component = _b2 === void 0 ? Text : _b2, ignoreTag = props.ignoreTag;
  var descriptor = { id: id2, description, defaultMessage };
  var nodes = formatMessage3(descriptor, values, {
    ignoreTag
  });
  if (typeof children === "function") {
    return children(Array.isArray(nodes) ? nodes : [nodes]);
  }
  if (Component) {
    return React53.createElement(Component, null, React53.Children.toArray(nodes));
  }
  return React53.createElement(React53.Fragment, null, nodes);
}
FormattedMessage.displayName = "FormattedMessage";
var MemoizedFormattedMessage = React53.memo(FormattedMessage, areEqual);
MemoizedFormattedMessage.displayName = "MemoizedFormattedMessage";
var message_default = MemoizedFormattedMessage;

// ../../node_modules/react-intl/lib/index.js
var FormattedDate = createFormattedComponent("formatDate");
var FormattedTime = createFormattedComponent("formatTime");
var FormattedNumber = createFormattedComponent("formatNumber");
var FormattedList = createFormattedComponent("formatList");
var FormattedDisplayName = createFormattedComponent("formatDisplayName");
var FormattedDateParts = createFormattedDateTimePartsComponent("formatDate");
var FormattedTimeParts = createFormattedDateTimePartsComponent("formatTime");

// ../../node_modules/@stitches/react/dist/index.mjs
var import_react10 = __toESM(require_react(), 1);
var e2 = "colors";
var t2 = "sizes";
var r = "space";
var n = { gap: r, gridGap: r, columnGap: r, gridColumnGap: r, rowGap: r, gridRowGap: r, inset: r, insetBlock: r, insetBlockEnd: r, insetBlockStart: r, insetInline: r, insetInlineEnd: r, insetInlineStart: r, margin: r, marginTop: r, marginRight: r, marginBottom: r, marginLeft: r, marginBlock: r, marginBlockEnd: r, marginBlockStart: r, marginInline: r, marginInlineEnd: r, marginInlineStart: r, padding: r, paddingTop: r, paddingRight: r, paddingBottom: r, paddingLeft: r, paddingBlock: r, paddingBlockEnd: r, paddingBlockStart: r, paddingInline: r, paddingInlineEnd: r, paddingInlineStart: r, top: r, right: r, bottom: r, left: r, scrollMargin: r, scrollMarginTop: r, scrollMarginRight: r, scrollMarginBottom: r, scrollMarginLeft: r, scrollMarginX: r, scrollMarginY: r, scrollMarginBlock: r, scrollMarginBlockEnd: r, scrollMarginBlockStart: r, scrollMarginInline: r, scrollMarginInlineEnd: r, scrollMarginInlineStart: r, scrollPadding: r, scrollPaddingTop: r, scrollPaddingRight: r, scrollPaddingBottom: r, scrollPaddingLeft: r, scrollPaddingX: r, scrollPaddingY: r, scrollPaddingBlock: r, scrollPaddingBlockEnd: r, scrollPaddingBlockStart: r, scrollPaddingInline: r, scrollPaddingInlineEnd: r, scrollPaddingInlineStart: r, fontSize: "fontSizes", background: e2, backgroundColor: e2, backgroundImage: e2, borderImage: e2, border: e2, borderBlock: e2, borderBlockEnd: e2, borderBlockStart: e2, borderBottom: e2, borderBottomColor: e2, borderColor: e2, borderInline: e2, borderInlineEnd: e2, borderInlineStart: e2, borderLeft: e2, borderLeftColor: e2, borderRight: e2, borderRightColor: e2, borderTop: e2, borderTopColor: e2, caretColor: e2, color: e2, columnRuleColor: e2, fill: e2, outline: e2, outlineColor: e2, stroke: e2, textDecorationColor: e2, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t2, minBlockSize: t2, maxBlockSize: t2, inlineSize: t2, minInlineSize: t2, maxInlineSize: t2, width: t2, minWidth: t2, maxWidth: t2, height: t2, minHeight: t2, maxHeight: t2, flexBasis: t2, gridTemplateColumns: t2, gridTemplateRows: t2, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" };
var i = (e13, t12) => typeof t12 == "function" ? { "()": Function.prototype.toString.call(t12) } : t12;
var o = () => {
  const e13 = /* @__PURE__ */ Object.create(null);
  return (t12, r11, ...n10) => {
    const o10 = ((e14) => JSON.stringify(e14, i))(t12);
    return o10 in e13 ? e13[o10] : e13[o10] = r11(t12, ...n10);
  };
};
var l2 = Symbol.for("sxs.internal");
var s = (e13, t12) => Object.defineProperties(e13, Object.getOwnPropertyDescriptors(t12));
var a2 = (e13) => {
  for (const t12 in e13)
    return true;
  return false;
};
var { hasOwnProperty: c } = Object.prototype;
var d2 = (e13) => e13.includes("-") ? e13 : e13.replace(/[A-Z]/g, (e14) => "-" + e14.toLowerCase());
var g = /\s+(?![^()]*\))/;
var p2 = (e13) => (t12) => e13(...typeof t12 == "string" ? String(t12).split(g) : [t12]);
var u = { appearance: (e13) => ({ WebkitAppearance: e13, appearance: e13 }), backfaceVisibility: (e13) => ({ WebkitBackfaceVisibility: e13, backfaceVisibility: e13 }), backdropFilter: (e13) => ({ WebkitBackdropFilter: e13, backdropFilter: e13 }), backgroundClip: (e13) => ({ WebkitBackgroundClip: e13, backgroundClip: e13 }), boxDecorationBreak: (e13) => ({ WebkitBoxDecorationBreak: e13, boxDecorationBreak: e13 }), clipPath: (e13) => ({ WebkitClipPath: e13, clipPath: e13 }), content: (e13) => ({ content: e13.includes('"') || e13.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(e13) ? e13 : `"${e13}"` }), hyphens: (e13) => ({ WebkitHyphens: e13, hyphens: e13 }), maskImage: (e13) => ({ WebkitMaskImage: e13, maskImage: e13 }), maskSize: (e13) => ({ WebkitMaskSize: e13, maskSize: e13 }), tabSize: (e13) => ({ MozTabSize: e13, tabSize: e13 }), textSizeAdjust: (e13) => ({ WebkitTextSizeAdjust: e13, textSizeAdjust: e13 }), userSelect: (e13) => ({ WebkitUserSelect: e13, userSelect: e13 }), marginBlock: p2((e13, t12) => ({ marginBlockStart: e13, marginBlockEnd: t12 || e13 })), marginInline: p2((e13, t12) => ({ marginInlineStart: e13, marginInlineEnd: t12 || e13 })), maxSize: p2((e13, t12) => ({ maxBlockSize: e13, maxInlineSize: t12 || e13 })), minSize: p2((e13, t12) => ({ minBlockSize: e13, minInlineSize: t12 || e13 })), paddingBlock: p2((e13, t12) => ({ paddingBlockStart: e13, paddingBlockEnd: t12 || e13 })), paddingInline: p2((e13, t12) => ({ paddingInlineStart: e13, paddingInlineEnd: t12 || e13 })) };
var h2 = /([\d.]+)([^]*)/;
var f = (e13, t12) => e13.length ? e13.reduce((e14, r11) => (e14.push(...t12.map((e15) => e15.includes("&") ? e15.replace(/&/g, /[ +>|~]/.test(r11) && /&.*&/.test(e15) ? `:is(${r11})` : r11) : r11 + " " + e15)), e14), []) : t12;
var m2 = (e13, t12) => e13 in b2 && typeof t12 == "string" ? t12.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (t13, r11, n10, i10) => r11 + (n10 === "stretch" ? `-moz-available${i10};${d2(e13)}:${r11}-webkit-fill-available` : `-moz-fit-content${i10};${d2(e13)}:${r11}fit-content`) + i10) : String(t12);
var b2 = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 };
var S = (e13) => e13 ? e13 + "-" : "";
var k = (e13, t12, r11) => e13.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (e14, n10, i10, o10, l10) => o10 == "$" == !!i10 ? e14 : (n10 || o10 == "--" ? "calc(" : "") + "var(--" + (o10 === "$" ? S(t12) + (l10.includes("$") ? "" : S(r11)) + l10.replace(/\$/g, "-") : l10) + ")" + (n10 || o10 == "--" ? "*" + (n10 || "") + (i10 || "1") + ")" : ""));
var y = /\s*,\s*(?![^()]*\))/;
var B = Object.prototype.toString;
var $ = (e13, t12, r11, n10, i10) => {
  let o10, l10, s10;
  const a10 = (e14, t13, r12) => {
    let c10, g10;
    const p10 = (e15) => {
      for (c10 in e15) {
        const R10 = c10.charCodeAt(0) === 64, z10 = R10 && Array.isArray(e15[c10]) ? e15[c10] : [e15[c10]];
        for (g10 of z10) {
          const e16 = /[A-Z]/.test($10 = c10) ? $10 : $10.replace(/-[^]/g, (e17) => e17[1].toUpperCase()), z11 = typeof g10 == "object" && g10 && g10.toString === B && (!n10.utils[e16] || !t13.length);
          if (e16 in n10.utils && !z11) {
            const t14 = n10.utils[e16];
            if (t14 !== l10) {
              l10 = t14, p10(t14(g10)), l10 = null;
              continue;
            }
          } else if (e16 in u) {
            const t14 = u[e16];
            if (t14 !== s10) {
              s10 = t14, p10(t14(g10)), s10 = null;
              continue;
            }
          }
          if (R10 && (b10 = c10.slice(1) in n10.media ? "@media " + n10.media[c10.slice(1)] : c10, c10 = b10.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (e17, t14, r13, n11, i11, o11) => {
            const l11 = h2.test(t14), s11 = 0.0625 * (l11 ? -1 : 1), [a11, c11] = l11 ? [n11, t14] : [t14, n11];
            return "(" + (r13[0] === "=" ? "" : r13[0] === ">" === l11 ? "max-" : "min-") + a11 + ":" + (r13[0] !== "=" && r13.length === 1 ? c11.replace(h2, (e18, t15, n12) => Number(t15) + s11 * (r13 === ">" ? 1 : -1) + n12) : c11) + (i11 ? ") and (" + (i11[0] === ">" ? "min-" : "max-") + a11 + ":" + (i11.length === 1 ? o11.replace(h2, (e18, t15, r14) => Number(t15) + s11 * (i11 === ">" ? -1 : 1) + r14) : o11) : "") + ")";
          })), z11) {
            const e17 = R10 ? r12.concat(c10) : [...r12], n11 = R10 ? [...t13] : f(t13, c10.split(y));
            o10 !== void 0 && i10(x(...o10)), o10 = void 0, a10(g10, n11, e17);
          } else
            o10 === void 0 && (o10 = [[], t13, r12]), c10 = R10 || c10.charCodeAt(0) !== 36 ? c10 : `--${S(n10.prefix)}${c10.slice(1).replace(/\$/g, "-")}`, g10 = z11 ? g10 : typeof g10 == "number" ? g10 && e16 in I ? String(g10) + "px" : String(g10) : k(m2(e16, g10 == null ? "" : g10), n10.prefix, n10.themeMap[e16]), o10[0].push(`${R10 ? `${c10} ` : `${d2(c10)}:`}${g10}`);
        }
      }
      var b10, $10;
    };
    p10(e14), o10 !== void 0 && i10(x(...o10)), o10 = void 0;
  };
  a10(e13, t12, r11);
};
var x = (e13, t12, r11) => `${r11.map((e14) => `${e14}{`).join("")}${t12.length ? `${t12.join(",")}{` : ""}${e13.join(";")}${t12.length ? "}" : ""}${Array(r11.length ? r11.length + 1 : 0).join("}")}`;
var I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 };
var R2 = (e13) => String.fromCharCode(e13 + (e13 > 25 ? 39 : 97));
var z = (e13) => ((e14) => {
  let t12, r11 = "";
  for (t12 = Math.abs(e14); t12 > 52; t12 = t12 / 52 | 0)
    r11 = R2(t12 % 52) + r11;
  return R2(t12 % 52) + r11;
})(((e14, t12) => {
  let r11 = t12.length;
  for (; r11; )
    e14 = 33 * e14 ^ t12.charCodeAt(--r11);
  return e14;
})(5381, JSON.stringify(e13)) >>> 0);
var W2 = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"];
var j2 = (e13) => {
  if (e13.href && !e13.href.startsWith(location.origin))
    return false;
  try {
    return !!e13.cssRules;
  } catch (e14) {
    return false;
  }
};
var E = (e13) => {
  let t12;
  const r11 = () => {
    const { cssRules: e14 } = t12.sheet;
    return [].map.call(e14, (r12, n11) => {
      const { cssText: i10 } = r12;
      let o10 = "";
      if (i10.startsWith("--sxs"))
        return "";
      if (e14[n11 - 1] && (o10 = e14[n11 - 1].cssText).startsWith("--sxs")) {
        if (!r12.cssRules.length)
          return "";
        for (const e15 in t12.rules)
          if (t12.rules[e15].group === r12)
            return `--sxs{--sxs:${[...t12.rules[e15].cache].join(" ")}}${i10}`;
        return r12.cssRules.length ? `${o10}${i10}` : "";
      }
      return i10;
    }).join("");
  }, n10 = () => {
    if (t12) {
      const { rules: e14, sheet: r12 } = t12;
      if (!r12.deleteRule) {
        for (; Object(Object(r12.cssRules)[0]).type === 3; )
          r12.cssRules.splice(0, 1);
        r12.cssRules = [];
      }
      for (const t13 in e14)
        delete e14[t13];
    }
    const i10 = Object(e13).styleSheets || [];
    for (const e14 of i10)
      if (j2(e14)) {
        for (let i11 = 0, o11 = e14.cssRules; o11[i11]; ++i11) {
          const l11 = Object(o11[i11]);
          if (l11.type !== 1)
            continue;
          const s10 = Object(o11[i11 + 1]);
          if (s10.type !== 4)
            continue;
          ++i11;
          const { cssText: a10 } = l11;
          if (!a10.startsWith("--sxs"))
            continue;
          const c10 = a10.slice(14, -3).trim().split(/\s+/), d10 = W2[c10[0]];
          d10 && (t12 || (t12 = { sheet: e14, reset: n10, rules: {}, toString: r11 }), t12.rules[d10] = { group: s10, index: i11, cache: new Set(c10) });
        }
        if (t12)
          break;
      }
    if (!t12) {
      const i11 = (e14, t13) => ({ type: t13, cssRules: [], insertRule(e15, t14) {
        this.cssRules.splice(t14, 0, i11(e15, { import: 3, undefined: 1 }[(e15.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return e14 === "@media{}" ? `@media{${[].map.call(this.cssRules, (e15) => e15.cssText).join("")}}` : e14;
      } });
      t12 = { sheet: e13 ? (e13.head || e13).appendChild(document.createElement("style")).sheet : i11("", "text/css"), rules: {}, reset: n10, toString: r11 };
    }
    const { sheet: o10, rules: l10 } = t12;
    for (let e14 = W2.length - 1; e14 >= 0; --e14) {
      const t13 = W2[e14];
      if (!l10[t13]) {
        const r12 = W2[e14 + 1], n11 = l10[r12] ? l10[r12].index : o10.cssRules.length;
        o10.insertRule("@media{}", n11), o10.insertRule(`--sxs{--sxs:${e14}}`, n11), l10[t13] = { group: o10.cssRules[n11 + 1], index: n11, cache: /* @__PURE__ */ new Set([e14]) };
      }
      v(l10[t13]);
    }
  };
  return n10(), t12;
};
var v = (e13) => {
  const t12 = e13.group;
  let r11 = t12.cssRules.length;
  e13.apply = (e14) => {
    try {
      t12.insertRule(e14, r11), ++r11;
    } catch (e15) {
    }
  };
};
var T2 = Symbol();
var w = o();
var M = (e13, t12) => w(e13, () => (...r11) => {
  let n10 = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const t13 of r11)
    if (t13 != null)
      if (t13[l2]) {
        n10.type == null && (n10.type = t13[l2].type);
        for (const e14 of t13[l2].composers)
          n10.composers.add(e14);
      } else
        t13.constructor !== Object || t13.$$typeof ? n10.type == null && (n10.type = t13) : n10.composers.add(C(t13, e13));
  return n10.type == null && (n10.type = "span"), n10.composers.size || n10.composers.add(["PJLV", {}, [], [], {}, []]), P(e13, n10, t12);
});
var C = (_a4, i10) => {
  var _b2 = _a4, { variants: e13, compoundVariants: t12, defaultVariants: r11 } = _b2, n10 = __objRest(_b2, ["variants", "compoundVariants", "defaultVariants"]);
  const o10 = `${S(i10.prefix)}c-${z(n10)}`, l10 = [], s10 = [], d10 = /* @__PURE__ */ Object.create(null), g10 = [];
  for (const e14 in r11)
    d10[e14] = String(r11[e14]);
  if (typeof e13 == "object" && e13)
    for (const t13 in e13) {
      p10 = d10, u10 = t13, c.call(p10, u10) || (d10[t13] = "undefined");
      const r12 = e13[t13];
      for (const e14 in r12) {
        const n11 = { [t13]: String(e14) };
        String(e14) === "undefined" && g10.push(t13);
        const i11 = r12[e14], o11 = [n11, i11, !a2(i11)];
        l10.push(o11);
      }
    }
  var p10, u10;
  if (typeof t12 == "object" && t12)
    for (const e14 of t12) {
      let _a5 = e14, { css: t13 } = _a5, r12 = __objRest(_a5, ["css"]);
      t13 = typeof t13 == "object" && t13 || {};
      for (const e15 in r12)
        r12[e15] = String(r12[e15]);
      const n11 = [r12, t13, !a2(t13)];
      s10.push(n11);
    }
  return [o10, n10, l10, s10, d10, g10];
};
var P = (e13, t12, r11) => {
  const [n10, i10, o10, a10] = L2(t12.composers), c10 = typeof t12.type == "function" || t12.type.$$typeof ? ((e14) => {
    function t13() {
      for (let r12 = 0; r12 < t13[T2].length; r12++) {
        const [n11, i11] = t13[T2][r12];
        e14.rules[n11].apply(i11);
      }
      return t13[T2] = [], null;
    }
    return t13[T2] = [], t13.rules = {}, W2.forEach((e15) => t13.rules[e15] = { apply: (r12) => t13[T2].push([e15, r12]) }), t13;
  })(r11) : null, d10 = (c10 || r11).rules, g10 = `.${n10}${i10.length > 1 ? `:where(.${i10.slice(1).join(".")})` : ""}`, p10 = (l10) => {
    l10 = typeof l10 == "object" && l10 || A;
    const _a4 = l10, { css: s10 } = _a4, p11 = __objRest(_a4, ["css"]), u10 = {};
    for (const e14 in o10)
      if (delete p11[e14], e14 in l10) {
        let t13 = l10[e14];
        typeof t13 == "object" && t13 ? u10[e14] = __spreadValues({ "@initial": o10[e14] }, t13) : (t13 = String(t13), u10[e14] = t13 !== "undefined" || a10.has(e14) ? t13 : o10[e14]);
      } else
        u10[e14] = o10[e14];
    const h10 = /* @__PURE__ */ new Set([...i10]);
    for (const [n11, i11, o11, l11] of t12.composers) {
      r11.rules.styled.cache.has(n11) || (r11.rules.styled.cache.add(n11), $(i11, [`.${n11}`], [], e13, (e14) => {
        d10.styled.apply(e14);
      }));
      const t13 = O(o11, u10, e13.media), s11 = O(l11, u10, e13.media, true);
      for (const i12 of t13)
        if (i12 !== void 0)
          for (const [t14, o12, l12] of i12) {
            const i13 = `${n11}-${z(o12)}-${t14}`;
            h10.add(i13);
            const s12 = (l12 ? r11.rules.resonevar : r11.rules.onevar).cache, a11 = l12 ? d10.resonevar : d10.onevar;
            s12.has(i13) || (s12.add(i13), $(o12, [`.${i13}`], [], e13, (e14) => {
              a11.apply(e14);
            }));
          }
      for (const t14 of s11)
        if (t14 !== void 0)
          for (const [i12, o12] of t14) {
            const t15 = `${n11}-${z(o12)}-${i12}`;
            h10.add(t15), r11.rules.allvar.cache.has(t15) || (r11.rules.allvar.cache.add(t15), $(o12, [`.${t15}`], [], e13, (e14) => {
              d10.allvar.apply(e14);
            }));
          }
    }
    if (typeof s10 == "object" && s10) {
      const t13 = `${n10}-i${z(s10)}-css`;
      h10.add(t13), r11.rules.inline.cache.has(t13) || (r11.rules.inline.cache.add(t13), $(s10, [`.${t13}`], [], e13, (e14) => {
        d10.inline.apply(e14);
      }));
    }
    for (const e14 of String(l10.className || "").trim().split(/\s+/))
      e14 && h10.add(e14);
    const f10 = p11.className = [...h10].join(" ");
    return { type: t12.type, className: f10, selector: g10, props: p11, toString: () => f10, deferredInjector: c10 };
  };
  return s(p10, { className: n10, selector: g10, [l2]: t12, toString: () => (r11.rules.styled.cache.has(n10) || p10(), n10) });
};
var L2 = (e13) => {
  let t12 = "";
  const r11 = [], n10 = {}, i10 = [];
  for (const [o10, , , , l10, s10] of e13) {
    t12 === "" && (t12 = o10), r11.push(o10), i10.push(...s10);
    for (const e14 in l10) {
      const t13 = l10[e14];
      (n10[e14] === void 0 || t13 !== "undefined" || s10.includes(t13)) && (n10[e14] = t13);
    }
  }
  return [t12, r11, n10, new Set(i10)];
};
var O = (e13, t12, r11, n10) => {
  const i10 = [];
  e:
    for (let [o10, l10, s10] of e13) {
      if (s10)
        continue;
      let e14, a10 = 0, c10 = false;
      for (e14 in o10) {
        const n11 = o10[e14];
        let i11 = t12[e14];
        if (i11 !== n11) {
          if (typeof i11 != "object" || !i11)
            continue e;
          {
            let e15, t13, o11 = 0;
            for (const l11 in i11) {
              if (n11 === String(i11[l11])) {
                if (l11 !== "@initial") {
                  const e16 = l11.slice(1);
                  (t13 = t13 || []).push(e16 in r11 ? r11[e16] : l11.replace(/^@media ?/, "")), c10 = true;
                }
                a10 += o11, e15 = true;
              }
              ++o11;
            }
            if (t13 && t13.length && (l10 = { ["@media " + t13.join(", ")]: l10 }), !e15)
              continue e;
          }
        }
      }
      (i10[a10] = i10[a10] || []).push([n10 ? "cv" : `${e14}-${o10[e14]}`, l10, c10]);
    }
  return i10;
};
var A = {};
var N = o();
var D = (e13, t12) => N(e13, () => (...r11) => {
  const n10 = () => {
    for (let n11 of r11) {
      n11 = typeof n11 == "object" && n11 || {};
      let r12 = z(n11);
      if (!t12.rules.global.cache.has(r12)) {
        if (t12.rules.global.cache.add(r12), "@import" in n11) {
          let e14 = [].indexOf.call(t12.sheet.cssRules, t12.rules.themed.group) - 1;
          for (let r13 of [].concat(n11["@import"]))
            r13 = r13.includes('"') || r13.includes("'") ? r13 : `"${r13}"`, t12.sheet.insertRule(`@import ${r13};`, e14++);
          delete n11["@import"];
        }
        $(n11, [], [], e13, (e14) => {
          t12.rules.global.apply(e14);
        });
      }
    }
    return "";
  };
  return s(n10, { toString: n10 });
});
var H2 = o();
var V3 = (e13, t12) => H2(e13, () => (r11) => {
  const n10 = `${S(e13.prefix)}k-${z(r11)}`, i10 = () => {
    if (!t12.rules.global.cache.has(n10)) {
      t12.rules.global.cache.add(n10);
      const i11 = [];
      $(r11, [], [], e13, (e14) => i11.push(e14));
      const o10 = `@keyframes ${n10}{${i11.join("")}}`;
      t12.rules.global.apply(o10);
    }
    return n10;
  };
  return s(i10, { get name() {
    return i10();
  }, toString: i10 });
});
var G = class {
  constructor(e13, t12, r11, n10) {
    this.token = e13 == null ? "" : String(e13), this.value = t12 == null ? "" : String(t12), this.scale = r11 == null ? "" : String(r11), this.prefix = n10 == null ? "" : String(n10);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
};
var F = o();
var J = (e13, t12) => F(e13, () => (r11, n10) => {
  n10 = typeof r11 == "object" && r11 || Object(n10);
  const i10 = `.${r11 = (r11 = typeof r11 == "string" ? r11 : "") || `${S(e13.prefix)}t-${z(n10)}`}`, o10 = {}, l10 = [];
  for (const t13 in n10) {
    o10[t13] = {};
    for (const r12 in n10[t13]) {
      const i11 = `--${S(e13.prefix)}${t13}-${r12}`, s11 = k(String(n10[t13][r12]), e13.prefix, t13);
      o10[t13][r12] = new G(r12, s11, t13, e13.prefix), l10.push(`${i11}:${s11}`);
    }
  }
  const s10 = () => {
    if (l10.length && !t12.rules.themed.cache.has(r11)) {
      t12.rules.themed.cache.add(r11);
      const i11 = `${n10 === e13.theme ? ":root," : ""}.${r11}{${l10.join(";")}}`;
      t12.rules.themed.apply(i11);
    }
    return r11;
  };
  return __spreadProps(__spreadValues({}, o10), { get className() {
    return s10();
  }, selector: i10, toString: s10 });
});
var U = o();
var X;
var Y2 = o();
var q = (e13) => {
  const t12 = ((e14) => {
    let t13 = false;
    const r11 = U(e14, (e15) => {
      t13 = true;
      const r12 = "prefix" in (e15 = typeof e15 == "object" && e15 || {}) ? String(e15.prefix) : "", i10 = typeof e15.media == "object" && e15.media || {}, o10 = typeof e15.root == "object" ? e15.root || null : globalThis.document || null, l10 = typeof e15.theme == "object" && e15.theme || {}, s10 = { prefix: r12, media: i10, theme: l10, themeMap: typeof e15.themeMap == "object" && e15.themeMap || __spreadValues({}, n), utils: typeof e15.utils == "object" && e15.utils || {} }, a10 = E(o10), c10 = { css: M(s10, a10), globalCss: D(s10, a10), keyframes: V3(s10, a10), createTheme: J(s10, a10), reset() {
        a10.reset(), c10.theme.toString();
      }, theme: {}, sheet: a10, config: s10, prefix: r12, getCssText: a10.toString, toString: a10.toString };
      return String(c10.theme = c10.createTheme(l10)), c10;
    });
    return t13 || r11.reset(), r11;
  })(e13);
  return t12.styled = (({ config: e14, sheet: t13 }) => Y2(e14, () => {
    const r11 = M(e14, t13);
    return (...e15) => {
      const t14 = r11(...e15), n10 = t14[l2].type, i10 = import_react10.default.forwardRef((e16, r12) => {
        const i11 = e16 && e16.as || n10, { props: o10, deferredInjector: l10 } = t14(e16);
        return delete o10.as, o10.ref = r12, l10 ? import_react10.default.createElement(import_react10.default.Fragment, null, import_react10.default.createElement(i11, o10), import_react10.default.createElement(l10, null)) : import_react10.default.createElement(i11, o10);
      });
      return i10.className = t14.className, i10.displayName = `Styled.${n10.displayName || n10.name || n10}`, i10.selector = t14.selector, i10.toString = () => t14.selector, i10[l2] = t14[l2], i10;
    };
  }))(t12), t12;
};
var K = () => X || (X = q());
var re2 = (...e13) => K().styled(...e13);

// ../../node_modules/safari-14-idb-fix/dist/index.js
function idbReady() {
  var isSafari = !navigator.userAgentData && /Safari\//.test(navigator.userAgent) && !/Chrom(e|ium)\//.test(navigator.userAgent);
  if (!isSafari || !indexedDB.databases)
    return Promise.resolve();
  var intervalId;
  return new Promise(function(resolve) {
    var tryIdb = function() {
      return indexedDB.databases().finally(resolve);
    };
    intervalId = setInterval(tryIdb, 100);
    tryIdb();
  }).finally(function() {
    return clearInterval(intervalId);
  });
}
var dist_default = idbReady;

// ../../node_modules/idb-keyval/dist/index.js
function promisifyRequest(request) {
  return new Promise((resolve, reject2) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject2(request.error);
  });
}
function createStore(dbName, storeName) {
  const dbp = dist_default().then(() => {
    const request = indexedDB.open(dbName);
    request.onupgradeneeded = () => request.result.createObjectStore(storeName);
    return promisifyRequest(request);
  });
  return (txMode, callback) => dbp.then((db2) => callback(db2.transaction(storeName, txMode).objectStore(storeName)));
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore("keyval-store", "keyval");
  }
  return defaultGetStoreFunc;
}
function get3(key, customStore = defaultGetStore()) {
  return customStore("readonly", (store) => promisifyRequest(store.get(key)));
}
function set4(key, value, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}

// ../../packages/tldraw/dist/index.mjs
var Yt = __toESM(require_react(), 1);
var na = __toESM(require_react(), 1);
var Ve = __toESM(require_react(), 1);
var dn = __toESM(require_react(), 1);
var _t = __toESM(require_react(), 1);
var aa = __toESM(require_react(), 1);
var jt = __toESM(require_react(), 1);
var ln = __toESM(require_react(), 1);
var Zt = __toESM(require_react(), 1);
var Sa = __toESM(require_react(), 1);
var Xt = __toESM(require_react(), 1);
var cn = __toESM(require_react(), 1);
var vn = __toESM(require_react(), 1);
var Le = __toESM(require_react(), 1);
var qt = __toESM(require_react(), 1);
var hs = __toESM(require_react(), 1);
var Jt = __toESM(require_react(), 1);
var vo = __toESM(require_react(), 1);
var un = __toESM(require_react(), 1);
var Oe = __toESM(require_react(), 1);
var je = __toESM(require_react(), 1);
var Xe = __toESM(require_react(), 1);
var Gt = __toESM(require_react(), 1);
var st = __toESM(require_react(), 1);

// ../../node_modules/zustand/esm/vanilla.mjs
function createStore2(createState) {
  let state;
  const listeners = /* @__PURE__ */ new Set();
  const setState = (partial, replace2) => {
    const nextState = typeof partial === "function" ? partial(state) : partial;
    if (nextState !== state) {
      const previousState = state;
      state = replace2 ? nextState : Object.assign({}, state, nextState);
      listeners.forEach((listener) => listener(state, previousState));
    }
  };
  const getState = () => state;
  const subscribeWithSelector = (listener, selector = getState, equalityFn = Object.is) => {
    console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");
    let currentSlice = selector(state);
    function listenerToAdd() {
      const nextSlice = selector(state);
      if (!equalityFn(currentSlice, nextSlice)) {
        const previousSlice = currentSlice;
        listener(currentSlice = nextSlice, previousSlice);
      }
    }
    listeners.add(listenerToAdd);
    return () => listeners.delete(listenerToAdd);
  };
  const subscribe = (listener, selector, equalityFn) => {
    if (selector || equalityFn) {
      return subscribeWithSelector(listener, selector, equalityFn);
    }
    listeners.add(listener);
    return () => listeners.delete(listener);
  };
  const destroy = () => listeners.clear();
  const api = { setState, getState, subscribe, destroy };
  state = createState(setState, getState, api);
  return api;
}

// ../../node_modules/zustand/esm/index.mjs
var import_react11 = __toESM(require_react(), 1);
function createStore3(createState) {
  let state;
  const listeners = /* @__PURE__ */ new Set();
  const setState = (partial, replace2) => {
    const nextState = typeof partial === "function" ? partial(state) : partial;
    if (nextState !== state) {
      const previousState = state;
      state = replace2 ? nextState : Object.assign({}, state, nextState);
      listeners.forEach((listener) => listener(state, previousState));
    }
  };
  const getState = () => state;
  const subscribeWithSelector = (listener, selector = getState, equalityFn = Object.is) => {
    console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");
    let currentSlice = selector(state);
    function listenerToAdd() {
      const nextSlice = selector(state);
      if (!equalityFn(currentSlice, nextSlice)) {
        const previousSlice = currentSlice;
        listener(currentSlice = nextSlice, previousSlice);
      }
    }
    listeners.add(listenerToAdd);
    return () => listeners.delete(listenerToAdd);
  };
  const subscribe = (listener, selector, equalityFn) => {
    if (selector || equalityFn) {
      return subscribeWithSelector(listener, selector, equalityFn);
    }
    listeners.add(listener);
    return () => listeners.delete(listener);
  };
  const destroy = () => listeners.clear();
  const api = { setState, getState, subscribe, destroy };
  state = createState(setState, getState, api);
  return api;
}
var isSSR = typeof window === "undefined" || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent);
var useIsomorphicLayoutEffect = isSSR ? import_react11.useEffect : import_react11.useLayoutEffect;
function create2(createState) {
  const api = typeof createState === "function" ? createStore3(createState) : createState;
  const useStore = (selector = api.getState, equalityFn = Object.is) => {
    const [, forceUpdate] = (0, import_react11.useReducer)((c10) => c10 + 1, 0);
    const state = api.getState();
    const stateRef = (0, import_react11.useRef)(state);
    const selectorRef = (0, import_react11.useRef)(selector);
    const equalityFnRef = (0, import_react11.useRef)(equalityFn);
    const erroredRef = (0, import_react11.useRef)(false);
    const currentSliceRef = (0, import_react11.useRef)();
    if (currentSliceRef.current === void 0) {
      currentSliceRef.current = selector(state);
    }
    let newStateSlice;
    let hasNewStateSlice = false;
    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {
      newStateSlice = selector(state);
      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);
    }
    useIsomorphicLayoutEffect(() => {
      if (hasNewStateSlice) {
        currentSliceRef.current = newStateSlice;
      }
      stateRef.current = state;
      selectorRef.current = selector;
      equalityFnRef.current = equalityFn;
      erroredRef.current = false;
    });
    const stateBeforeSubscriptionRef = (0, import_react11.useRef)(state);
    useIsomorphicLayoutEffect(() => {
      const listener = () => {
        try {
          const nextState = api.getState();
          const nextStateSlice = selectorRef.current(nextState);
          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {
            stateRef.current = nextState;
            currentSliceRef.current = nextStateSlice;
            forceUpdate();
          }
        } catch (error) {
          erroredRef.current = true;
          forceUpdate();
        }
      };
      const unsubscribe = api.subscribe(listener);
      if (api.getState() !== stateBeforeSubscriptionRef.current) {
        listener();
      }
      return unsubscribe;
    }, []);
    const sliceToReturn = hasNewStateSlice ? newStateSlice : currentSliceRef.current;
    (0, import_react11.useDebugValue)(sliceToReturn);
    return sliceToReturn;
  };
  Object.assign(useStore, api);
  useStore[Symbol.iterator] = function() {
    console.warn("[useStore, api] = create() is deprecated and will be removed in v4");
    const items = [useStore, api];
    return {
      next() {
        const done = items.length <= 0;
        return { value: items.shift(), done };
      }
    };
  };
  return useStore;
}

// ../../packages/tldraw/dist/index.mjs
var Ts = __toESM(require_react(), 1);

// ../../node_modules/hotkeys-js/dist/hotkeys.esm.js
var isff = typeof navigator !== "undefined" ? navigator.userAgent.toLowerCase().indexOf("firefox") > 0 : false;
function addEvent(object2, event, method) {
  if (object2.addEventListener) {
    object2.addEventListener(event, method, false);
  } else if (object2.attachEvent) {
    object2.attachEvent("on".concat(event), function() {
      method(window.event);
    });
  }
}
function getMods(modifier, key) {
  var mods = key.slice(0, key.length - 1);
  for (var i10 = 0; i10 < mods.length; i10++) {
    mods[i10] = modifier[mods[i10].toLowerCase()];
  }
  return mods;
}
function getKeys(key) {
  if (typeof key !== "string")
    key = "";
  key = key.replace(/\s/g, "");
  var keys = key.split(",");
  var index2 = keys.lastIndexOf("");
  for (; index2 >= 0; ) {
    keys[index2 - 1] += ",";
    keys.splice(index2, 1);
    index2 = keys.lastIndexOf("");
  }
  return keys;
}
function compareArray(a12, a23) {
  var arr1 = a12.length >= a23.length ? a12 : a23;
  var arr2 = a12.length >= a23.length ? a23 : a12;
  var isIndex = true;
  for (var i10 = 0; i10 < arr1.length; i10++) {
    if (arr2.indexOf(arr1[i10]) === -1)
      isIndex = false;
  }
  return isIndex;
}
var _keyMap = {
  backspace: 8,
  tab: 9,
  clear: 12,
  enter: 13,
  return: 13,
  esc: 27,
  escape: 27,
  space: 32,
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  del: 46,
  delete: 46,
  ins: 45,
  insert: 45,
  home: 36,
  end: 35,
  pageup: 33,
  pagedown: 34,
  capslock: 20,
  num_0: 96,
  num_1: 97,
  num_2: 98,
  num_3: 99,
  num_4: 100,
  num_5: 101,
  num_6: 102,
  num_7: 103,
  num_8: 104,
  num_9: 105,
  num_multiply: 106,
  num_add: 107,
  num_enter: 108,
  num_subtract: 109,
  num_decimal: 110,
  num_divide: 111,
  "\u21EA": 20,
  ",": 188,
  ".": 190,
  "/": 191,
  "`": 192,
  "-": isff ? 173 : 189,
  "=": isff ? 61 : 187,
  ";": isff ? 59 : 186,
  "'": 222,
  "[": 219,
  "]": 221,
  "\\": 220
};
var _modifier = {
  "\u21E7": 16,
  shift: 16,
  "\u2325": 18,
  alt: 18,
  option: 18,
  "\u2303": 17,
  ctrl: 17,
  control: 17,
  "\u2318": 91,
  cmd: 91,
  command: 91
};
var modifierMap = {
  16: "shiftKey",
  18: "altKey",
  17: "ctrlKey",
  91: "metaKey",
  shiftKey: 16,
  ctrlKey: 17,
  altKey: 18,
  metaKey: 91
};
var _mods = {
  16: false,
  18: false,
  17: false,
  91: false
};
var _handlers = {};
for (k10 = 1; k10 < 20; k10++) {
  _keyMap["f".concat(k10)] = 111 + k10;
}
var k10;
var _downKeys = [];
var _scope = "all";
var elementHasBindEvent = [];
var code = function code2(x10) {
  return _keyMap[x10.toLowerCase()] || _modifier[x10.toLowerCase()] || x10.toUpperCase().charCodeAt(0);
};
function setScope(scope) {
  _scope = scope || "all";
}
function getScope() {
  return _scope || "all";
}
function getPressedKeyCodes() {
  return _downKeys.slice(0);
}
function filter(event) {
  var target = event.target || event.srcElement;
  var tagName = target.tagName;
  var flag = true;
  if (target.isContentEditable || (tagName === "INPUT" || tagName === "TEXTAREA" || tagName === "SELECT") && !target.readOnly) {
    flag = false;
  }
  return flag;
}
function isPressed(keyCode) {
  if (typeof keyCode === "string") {
    keyCode = code(keyCode);
  }
  return _downKeys.indexOf(keyCode) !== -1;
}
function deleteScope(scope, newScope) {
  var handlers;
  var i10;
  if (!scope)
    scope = getScope();
  for (var key in _handlers) {
    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {
      handlers = _handlers[key];
      for (i10 = 0; i10 < handlers.length; ) {
        if (handlers[i10].scope === scope)
          handlers.splice(i10, 1);
        else
          i10++;
      }
    }
  }
  if (getScope() === scope)
    setScope(newScope || "all");
}
function clearModifier(event) {
  var key = event.keyCode || event.which || event.charCode;
  var i10 = _downKeys.indexOf(key);
  if (i10 >= 0) {
    _downKeys.splice(i10, 1);
  }
  if (event.key && event.key.toLowerCase() === "meta") {
    _downKeys.splice(0, _downKeys.length);
  }
  if (key === 93 || key === 224)
    key = 91;
  if (key in _mods) {
    _mods[key] = false;
    for (var k10 in _modifier) {
      if (_modifier[k10] === key)
        hotkeys[k10] = false;
    }
  }
}
function unbind(keysInfo) {
  if (!keysInfo) {
    Object.keys(_handlers).forEach(function(key) {
      return delete _handlers[key];
    });
  } else if (Array.isArray(keysInfo)) {
    keysInfo.forEach(function(info) {
      if (info.key)
        eachUnbind(info);
    });
  } else if (typeof keysInfo === "object") {
    if (keysInfo.key)
      eachUnbind(keysInfo);
  } else if (typeof keysInfo === "string") {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    var scope = args[0], method = args[1];
    if (typeof scope === "function") {
      method = scope;
      scope = "";
    }
    eachUnbind({
      key: keysInfo,
      scope,
      method,
      splitKey: "+"
    });
  }
}
var eachUnbind = function eachUnbind2(_ref) {
  var key = _ref.key, scope = _ref.scope, method = _ref.method, _ref$splitKey = _ref.splitKey, splitKey = _ref$splitKey === void 0 ? "+" : _ref$splitKey;
  var multipleKeys = getKeys(key);
  multipleKeys.forEach(function(originKey) {
    var unbindKeys = originKey.split(splitKey);
    var len = unbindKeys.length;
    var lastKey = unbindKeys[len - 1];
    var keyCode = lastKey === "*" ? "*" : code(lastKey);
    if (!_handlers[keyCode])
      return;
    if (!scope)
      scope = getScope();
    var mods = len > 1 ? getMods(_modifier, unbindKeys) : [];
    _handlers[keyCode] = _handlers[keyCode].map(function(record) {
      var isMatchingMethod = method ? record.method === method : true;
      if (isMatchingMethod && record.scope === scope && compareArray(record.mods, mods)) {
        return {};
      }
      return record;
    });
  });
};
function eventHandler(event, handler, scope) {
  var modifiersMatch;
  if (handler.scope === scope || handler.scope === "all") {
    modifiersMatch = handler.mods.length > 0;
    for (var y10 in _mods) {
      if (Object.prototype.hasOwnProperty.call(_mods, y10)) {
        if (!_mods[y10] && handler.mods.indexOf(+y10) > -1 || _mods[y10] && handler.mods.indexOf(+y10) === -1) {
          modifiersMatch = false;
        }
      }
    }
    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === "*") {
      if (handler.method(event, handler) === false) {
        if (event.preventDefault)
          event.preventDefault();
        else
          event.returnValue = false;
        if (event.stopPropagation)
          event.stopPropagation();
        if (event.cancelBubble)
          event.cancelBubble = true;
      }
    }
  }
}
function dispatch(event) {
  var asterisk = _handlers["*"];
  var key = event.keyCode || event.which || event.charCode;
  if (!hotkeys.filter.call(this, event))
    return;
  if (key === 93 || key === 224)
    key = 91;
  if (_downKeys.indexOf(key) === -1 && key !== 229)
    _downKeys.push(key);
  ["ctrlKey", "altKey", "shiftKey", "metaKey"].forEach(function(keyName) {
    var keyNum = modifierMap[keyName];
    if (event[keyName] && _downKeys.indexOf(keyNum) === -1) {
      _downKeys.push(keyNum);
    } else if (!event[keyName] && _downKeys.indexOf(keyNum) > -1) {
      _downKeys.splice(_downKeys.indexOf(keyNum), 1);
    } else if (keyName === "metaKey" && event[keyName] && _downKeys.length === 3) {
      if (!(event.ctrlKey || event.shiftKey || event.altKey)) {
        _downKeys = _downKeys.slice(_downKeys.indexOf(keyNum));
      }
    }
  });
  if (key in _mods) {
    _mods[key] = true;
    for (var k10 in _modifier) {
      if (_modifier[k10] === key)
        hotkeys[k10] = true;
    }
    if (!asterisk)
      return;
  }
  for (var e13 in _mods) {
    if (Object.prototype.hasOwnProperty.call(_mods, e13)) {
      _mods[e13] = event[modifierMap[e13]];
    }
  }
  if (event.getModifierState && !(event.altKey && !event.ctrlKey) && event.getModifierState("AltGraph")) {
    if (_downKeys.indexOf(17) === -1) {
      _downKeys.push(17);
    }
    if (_downKeys.indexOf(18) === -1) {
      _downKeys.push(18);
    }
    _mods[17] = true;
    _mods[18] = true;
  }
  var scope = getScope();
  if (asterisk) {
    for (var i10 = 0; i10 < asterisk.length; i10++) {
      if (asterisk[i10].scope === scope && (event.type === "keydown" && asterisk[i10].keydown || event.type === "keyup" && asterisk[i10].keyup)) {
        eventHandler(event, asterisk[i10], scope);
      }
    }
  }
  if (!(key in _handlers))
    return;
  for (var _i2 = 0; _i2 < _handlers[key].length; _i2++) {
    if (event.type === "keydown" && _handlers[key][_i2].keydown || event.type === "keyup" && _handlers[key][_i2].keyup) {
      if (_handlers[key][_i2].key) {
        var record = _handlers[key][_i2];
        var splitKey = record.splitKey;
        var keyShortcut = record.key.split(splitKey);
        var _downKeysCurrent = [];
        for (var a10 = 0; a10 < keyShortcut.length; a10++) {
          _downKeysCurrent.push(code(keyShortcut[a10]));
        }
        if (_downKeysCurrent.sort().join("") === _downKeys.sort().join("")) {
          eventHandler(event, record, scope);
        }
      }
    }
  }
}
function isElementBind(element) {
  return elementHasBindEvent.indexOf(element) > -1;
}
function hotkeys(key, option, method) {
  _downKeys = [];
  var keys = getKeys(key);
  var mods = [];
  var scope = "all";
  var element = document;
  var i10 = 0;
  var keyup = false;
  var keydown = true;
  var splitKey = "+";
  if (method === void 0 && typeof option === "function") {
    method = option;
  }
  if (Object.prototype.toString.call(option) === "[object Object]") {
    if (option.scope)
      scope = option.scope;
    if (option.element)
      element = option.element;
    if (option.keyup)
      keyup = option.keyup;
    if (option.keydown !== void 0)
      keydown = option.keydown;
    if (typeof option.splitKey === "string")
      splitKey = option.splitKey;
  }
  if (typeof option === "string")
    scope = option;
  for (; i10 < keys.length; i10++) {
    key = keys[i10].split(splitKey);
    mods = [];
    if (key.length > 1)
      mods = getMods(_modifier, key);
    key = key[key.length - 1];
    key = key === "*" ? "*" : code(key);
    if (!(key in _handlers))
      _handlers[key] = [];
    _handlers[key].push({
      keyup,
      keydown,
      scope,
      mods,
      shortcut: keys[i10],
      method,
      key: keys[i10],
      splitKey
    });
  }
  if (typeof element !== "undefined" && !isElementBind(element) && window) {
    elementHasBindEvent.push(element);
    addEvent(element, "keydown", function(e13) {
      dispatch(e13);
    });
    addEvent(window, "focus", function() {
      _downKeys = [];
    });
    addEvent(element, "keyup", function(e13) {
      dispatch(e13);
      clearModifier(e13);
    });
  }
}
var _api = {
  setScope,
  getScope,
  deleteScope,
  getPressedKeyCodes,
  isPressed,
  filter,
  unbind
};
for (a10 in _api) {
  if (Object.prototype.hasOwnProperty.call(_api, a10)) {
    hotkeys[a10] = _api[a10];
  }
}
var a10;
if (typeof window !== "undefined") {
  _hotkeys = window.hotkeys;
  hotkeys.noConflict = function(deep) {
    if (deep && window.hotkeys === hotkeys) {
      window.hotkeys = _hotkeys;
    }
    return hotkeys;
  };
  window.hotkeys = hotkeys;
}
var _hotkeys;
var hotkeys_esm_default = hotkeys;

// ../../node_modules/react-hotkeys-hook/dist/react-hotkeys-hook.esm.js
var import_react12 = __toESM(require_react());
hotkeys_esm_default.filter = function() {
  return true;
};
var tagFilter = function tagFilter2(_ref, enableOnTags) {
  var target = _ref.target;
  var targetTagName = target && target.tagName;
  return Boolean(targetTagName && enableOnTags && enableOnTags.includes(targetTagName));
};
var isKeyboardEventTriggeredByInput = function isKeyboardEventTriggeredByInput2(ev2) {
  return tagFilter(ev2, ["INPUT", "TEXTAREA", "SELECT"]);
};
function useHotkeys(keys, callback, options, deps) {
  if (options instanceof Array) {
    deps = options;
    options = void 0;
  }
  var _ref2 = options || {}, enableOnTags = _ref2.enableOnTags, filter2 = _ref2.filter, keyup = _ref2.keyup, keydown = _ref2.keydown, _ref2$filterPreventDe = _ref2.filterPreventDefault, filterPreventDefault = _ref2$filterPreventDe === void 0 ? true : _ref2$filterPreventDe, _ref2$enabled = _ref2.enabled, enabled = _ref2$enabled === void 0 ? true : _ref2$enabled, _ref2$enableOnContent = _ref2.enableOnContentEditable, enableOnContentEditable = _ref2$enableOnContent === void 0 ? false : _ref2$enableOnContent;
  var ref = (0, import_react12.useRef)(null);
  var memoisedCallback = (0, import_react12.useCallback)(function(keyboardEvent, hotkeysEvent) {
    var _keyboardEvent$target;
    if (filter2 && !filter2(keyboardEvent)) {
      return !filterPreventDefault;
    }
    if (isKeyboardEventTriggeredByInput(keyboardEvent) && !tagFilter(keyboardEvent, enableOnTags) || (_keyboardEvent$target = keyboardEvent.target) != null && _keyboardEvent$target.isContentEditable && !enableOnContentEditable) {
      return true;
    }
    if (ref.current === null || document.activeElement === ref.current) {
      callback(keyboardEvent, hotkeysEvent);
      return true;
    }
    return false;
  }, deps ? [ref, enableOnTags, filter2].concat(deps) : [ref, enableOnTags, filter2]);
  (0, import_react12.useEffect)(function() {
    if (!enabled) {
      hotkeys_esm_default.unbind(keys, memoisedCallback);
      return;
    }
    if (keyup && keydown !== true) {
      options.keydown = false;
    }
    hotkeys_esm_default(keys, options || {}, memoisedCallback);
    return function() {
      return hotkeys_esm_default.unbind(keys, memoisedCallback);
    };
  }, [memoisedCallback, keys, enabled]);
  return ref;
}
var isHotkeyPressed = hotkeys_esm_default.isPressed;

// ../../packages/tldraw/dist/index.mjs
var ys = __toESM(require_react(), 1);
var Ad = __toESM(require_react(), 1);
var po = __toESM(require_react(), 1);
var Yn = __toESM(require_react(), 1);
var sl = __toESM(require_react(), 1);
var St = __toESM(require_react(), 1);
var Gi = __toESM(require_react(), 1);
var ho = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-use-layout-effect/dist/index.module.js
var o2 = __toESM(require_react());
var useLayoutEffect8 = Boolean(globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) ? o2.useLayoutEffect : () => {
};

// ../../node_modules/@radix-ui/react-id/dist/index.module.js
var e3 = __toESM(require_react());
var r2 = e3["useId".toString()] || (() => {
});
var n2 = 0;
function useId(o10) {
  const [u10, i10] = e3.useState(r2());
  return useLayoutEffect8(() => {
    o10 || i10((t12) => t12 != null ? t12 : String(n2++));
  }, [o10]), o10 || (u10 ? `radix-${u10}` : "");
}

// ../../node_modules/@radix-ui/react-focus-guards/dist/index.module.js
var e4 = __toESM(require_react());
var t3 = 0;
function useFocusGuards() {
  e4.useEffect(() => {
    var e13, n10;
    const r11 = document.querySelectorAll("[data-radix-focus-guard]");
    return document.body.insertAdjacentElement("afterbegin", (e13 = r11[0]) !== null && e13 !== void 0 ? e13 : o3()), document.body.insertAdjacentElement("beforeend", (n10 = r11[1]) !== null && n10 !== void 0 ? n10 : o3()), t3++, () => {
      t3 === 1 && document.querySelectorAll("[data-radix-focus-guard]").forEach((e14) => e14.remove()), t3--;
    };
  }, []);
}
function o3() {
  const e13 = document.createElement("span");
  return e13.setAttribute("data-radix-focus-guard", ""), e13.tabIndex = 0, e13.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none", e13;
}

// ../../node_modules/@radix-ui/react-use-callback-ref/dist/index.module.js
var e5 = __toESM(require_react());
function useCallbackRef(r11) {
  const t12 = e5.useRef(r11);
  return e5.useEffect(() => {
    t12.current = r11;
  }), e5.useMemo(() => (...e13) => {
    var r12;
    return (r12 = t12.current) === null || r12 === void 0 ? void 0 : r12.call(t12, ...e13);
  }, []);
}

// ../../node_modules/@radix-ui/react-use-direction/dist/index.module.js
var e6 = __toESM(require_react());
function useDirection(t12, n10) {
  const [r11, o10] = e6.useState("ltr"), [i10, u10] = e6.useState(), c10 = e6.useRef(0);
  return e6.useEffect(() => {
    if (n10 === void 0 && t12 != null && t12.parentElement) {
      const e13 = getComputedStyle(t12.parentElement);
      u10(e13);
    }
  }, [t12, n10]), e6.useEffect(() => (n10 === void 0 && function e13() {
    c10.current = requestAnimationFrame(() => {
      const t13 = i10 == null ? void 0 : i10.direction;
      t13 && o10(t13), e13();
    });
  }(), () => cancelAnimationFrame(c10.current)), [i10, n10, o10]), n10 || r11;
}

// ../../node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
var t4 = __toESM(require_react());
function useControllableState({ prop: o10, defaultProp: r11, onChange: n10 = () => {
} }) {
  const [a10, u10] = function({ defaultProp: o11, onChange: r12 }) {
    const n11 = t4.useState(o11), [a11] = n11, u11 = t4.useRef(a11), c11 = useCallbackRef(r12);
    return t4.useEffect(() => {
      u11.current !== a11 && (c11(a11), u11.current = a11);
    }, [a11, u11, c11]), n11;
  }({ defaultProp: r11, onChange: n10 }), c10 = o10 !== void 0, f10 = c10 ? o10 : a10, l10 = useCallbackRef(n10);
  return [f10, t4.useCallback((e13) => {
    if (c10) {
      const t12 = e13, r12 = typeof e13 == "function" ? t12(o10) : e13;
      r12 !== o10 && l10(r12);
    } else
      u10(e13);
  }, [c10, o10, u10, l10])];
}

// ../../node_modules/@radix-ui/react-compose-refs/dist/index.module.js
var o4 = __toESM(require_react());
function composeRefs(...o10) {
  return (e13) => o10.forEach((o11) => function(o12, e14) {
    typeof o12 == "function" ? o12(e14) : o12 != null && (o12.current = e14);
  }(o11, e13));
}
function useComposedRefs(...e13) {
  return o4.useCallback(composeRefs(...e13), e13);
}

// ../../node_modules/@radix-ui/react-slot/dist/index.module.js
var t5 = __toESM(require_react());

// ../../node_modules/@babel/runtime/helpers/esm/extends.js
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i10 = 1; i10 < arguments.length; i10++) {
      var source = arguments[i10];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}

// ../../node_modules/@radix-ui/react-slot/dist/index.module.js
var Slot = /* @__PURE__ */ t5.forwardRef((e13, o10) => {
  const _a4 = e13, { children: a10 } = _a4, s10 = __objRest(_a4, ["children"]);
  return t5.Children.toArray(a10).some(l3) ? /* @__PURE__ */ t5.createElement(t5.Fragment, null, t5.Children.map(a10, (e14) => l3(e14) ? /* @__PURE__ */ t5.createElement(n3, _extends2({}, s10, { ref: o10 }), e14.props.children) : e14)) : /* @__PURE__ */ t5.createElement(n3, _extends2({}, s10, { ref: o10 }), a10);
});
Slot.displayName = "Slot";
var n3 = /* @__PURE__ */ t5.forwardRef((r11, n10) => {
  const _a4 = r11, { children: l10 } = _a4, a10 = __objRest(_a4, ["children"]);
  return t5.isValidElement(l10) ? /* @__PURE__ */ t5.cloneElement(l10, __spreadProps(__spreadValues({}, o5(a10, l10.props)), { ref: composeRefs(n10, l10.ref) })) : t5.Children.count(l10) > 1 ? t5.Children.only(null) : null;
});
n3.displayName = "SlotClone";
var Slottable = ({ children: e13 }) => /* @__PURE__ */ t5.createElement(t5.Fragment, null, e13);
function l3(e13) {
  return t5.isValidElement(e13) && e13.type === Slottable;
}
function o5(e13, t12) {
  const r11 = __spreadValues({}, t12);
  for (const n10 in t12) {
    const l10 = e13[n10], o10 = t12[n10];
    /^on[A-Z]/.test(n10) ? r11[n10] = (...e14) => {
      o10 == null || o10(...e14), l10 == null || l10(...e14);
    } : n10 === "style" ? r11[n10] = __spreadValues(__spreadValues({}, l10), o10) : n10 === "className" && (r11[n10] = [l10, o10].filter(Boolean).join(" "));
  }
  return __spreadValues(__spreadValues({}, e13), r11);
}

// ../../node_modules/@radix-ui/react-primitive/dist/index.module.js
var r3 = __toESM(require_react());
var Primitive = ["a", "button", "div", "h2", "h3", "img", "li", "nav", "ol", "p", "span", "svg", "ul"].reduce((o10, i10) => __spreadProps(__spreadValues({}, o10), { [i10]: /* @__PURE__ */ r3.forwardRef((o11, m10) => {
  const _a4 = o11, { asChild: a10 } = _a4, s10 = __objRest(_a4, ["asChild"]), n10 = a10 ? Slot : i10;
  return r3.useEffect(() => {
    window[Symbol.for("radix-ui")] = true;
  }, []), /* @__PURE__ */ r3.createElement(n10, _extends2({}, s10, { ref: m10 }));
}) }), {});

// ../../node_modules/@radix-ui/react-context/dist/index.module.js
var e7 = __toESM(require_react());
function createContext4(t12, n10) {
  const o10 = /* @__PURE__ */ e7.createContext(n10);
  function r11(t13) {
    const _a4 = t13, { children: n11 } = _a4, r12 = __objRest(_a4, ["children"]), c10 = e7.useMemo(() => r12, Object.values(r12));
    return e7.createElement(o10.Provider, { value: c10 }, n11);
  }
  return r11.displayName = t12 + "Provider", [r11, function(r12) {
    const c10 = e7.useContext(o10);
    if (c10)
      return c10;
    if (n10 !== void 0)
      return n10;
    throw new Error(`\`${r12}\` must be used within \`${t12}\``);
  }];
}
function createContextScope(n10, o10 = []) {
  let r11 = [];
  const c10 = () => {
    const t12 = r11.map((t13) => /* @__PURE__ */ e7.createContext(t13));
    return function(o11) {
      const r12 = (o11 == null ? void 0 : o11[n10]) || t12;
      return e7.useMemo(() => ({ [`__scope${n10}`]: __spreadProps(__spreadValues({}, o11), { [n10]: r12 }) }), [o11, r12]);
    };
  };
  return c10.scopeName = n10, [function(t12, o11) {
    const c11 = /* @__PURE__ */ e7.createContext(o11), u10 = r11.length;
    function s10(t13) {
      const _a4 = t13, { scope: o12, children: r12 } = _a4, s11 = __objRest(_a4, ["scope", "children"]), i10 = (o12 == null ? void 0 : o12[n10][u10]) || c11, a10 = e7.useMemo(() => s11, Object.values(s11));
      return e7.createElement(i10.Provider, { value: a10 }, r12);
    }
    return r11 = [...r11, o11], s10.displayName = t12 + "Provider", [s10, function(r12, s11) {
      const i10 = (s11 == null ? void 0 : s11[n10][u10]) || c11, a10 = e7.useContext(i10);
      if (a10)
        return a10;
      if (o11 !== void 0)
        return o11;
      throw new Error(`\`${r12}\` must be used within \`${t12}\``);
    }];
  }, t6(c10, ...o10)];
}
function t6(...t12) {
  const n10 = t12[0];
  if (t12.length === 1)
    return n10;
  const o10 = () => {
    const o11 = t12.map((e13) => ({ useScope: e13(), scopeName: e13.scopeName }));
    return function(t13) {
      const r11 = o11.reduce((e13, { useScope: n11, scopeName: o12 }) => __spreadValues(__spreadValues({}, e13), n11(t13)[`__scope${o12}`]), {});
      return e7.useMemo(() => ({ [`__scope${n10.scopeName}`]: r11 }), [r11]);
    };
  };
  return o10.scopeName = n10.scopeName, o10;
}

// ../../node_modules/@radix-ui/react-collection/dist/index.module.js
var import_react13 = __toESM(require_react());
function createCollection(c10) {
  const n10 = c10 + "CollectionProvider", [l10, i10] = createContextScope(n10), [f10, a10] = l10(n10, { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }), u10 = (e13) => {
    const { scope: r11, children: t12 } = e13, c11 = import_react13.default.useRef(null), n11 = import_react13.default.useRef(/* @__PURE__ */ new Map()).current;
    return import_react13.default.createElement(f10, { scope: r11, itemMap: n11, collectionRef: c11 }, t12);
  }, m10 = c10 + "CollectionSlot", s10 = /* @__PURE__ */ import_react13.default.forwardRef((t12, c11) => {
    const { scope: n11, children: l11 } = t12, i11 = a10(m10, n11), f11 = useComposedRefs(c11, i11.collectionRef);
    return import_react13.default.createElement(Slot, { ref: f11 }, l11);
  }), p10 = c10 + "CollectionItemSlot", d10 = "data-radix-collection-item", R10 = /* @__PURE__ */ import_react13.default.forwardRef((t12, c11) => {
    const _a4 = t12, { scope: n11, children: l11 } = _a4, i11 = __objRest(_a4, ["scope", "children"]), f11 = import_react13.default.useRef(null), u11 = useComposedRefs(c11, f11), m11 = a10(p10, n11);
    return import_react13.default.useEffect(() => (m11.itemMap.set(f11, __spreadValues({ ref: f11 }, i11)), () => {
      m11.itemMap.delete(f11);
    })), /* @__PURE__ */ import_react13.default.createElement(Slot, { [d10]: "", ref: u11 }, l11);
  });
  return [{ Provider: u10, Slot: s10, ItemSlot: R10 }, function(e13) {
    const r11 = a10(c10 + "CollectionConsumer", e13);
    return import_react13.default.useCallback(() => {
      const e14 = r11.collectionRef.current;
      if (!e14)
        return [];
      const t12 = Array.from(e14.querySelectorAll(`[${d10}]`));
      return Array.from(r11.itemMap.values()).sort((e15, r12) => t12.indexOf(e15.ref.current) - t12.indexOf(r12.ref.current));
    }, [r11.collectionRef, r11.itemMap]);
  }, i10];
}

// ../../node_modules/@radix-ui/primitive/dist/index.module.js
function composeEventHandlers(e13, n10, { checkForDefaultPrevented: t12 = true } = {}) {
  return function(r11) {
    if (e13 == null || e13(r11), t12 === false || !r11.defaultPrevented)
      return n10 == null ? void 0 : n10(r11);
  };
}

// ../../node_modules/@radix-ui/react-roving-focus/dist/index.module.js
var s2 = __toESM(require_react());
var f2 = { bubbles: false, cancelable: true };
var [p3, l4, m3] = createCollection("RovingFocusGroup");
var [d3, v2] = createContextScope("RovingFocusGroup", [m3]);
var [g2, F2] = d3("RovingFocusGroup");
var RovingFocusGroup = /* @__PURE__ */ s2.forwardRef((e13, o10) => /* @__PURE__ */ s2.createElement(p3.Provider, { scope: e13.__scopeRovingFocusGroup }, /* @__PURE__ */ s2.createElement(p3.Slot, { scope: e13.__scopeRovingFocusGroup }, /* @__PURE__ */ s2.createElement(w2, _extends2({}, e13, { ref: o10 })))));
var w2 = /* @__PURE__ */ s2.forwardRef((t12, n10) => {
  const _a4 = t12, { __scopeRovingFocusGroup: c10, orientation: p10, dir: m10 = "ltr", loop: d10 = false, currentTabStopId: v10, defaultCurrentTabStopId: F10, onCurrentTabStopIdChange: w10, onEntryFocus: b10 } = _a4, x10 = __objRest(_a4, ["__scopeRovingFocusGroup", "orientation", "dir", "loop", "currentTabStopId", "defaultCurrentTabStopId", "onCurrentTabStopIdChange", "onEntryFocus"]), E10 = s2.useRef(null), I10 = useComposedRefs(n10, E10), [G10 = null, h10] = useControllableState({ prop: v10, defaultProp: F10, onChange: w10 }), [T10, A10] = s2.useState(false), y10 = useCallbackRef(b10), D10 = l4(c10), S10 = s2.useRef(false);
  return s2.useEffect(() => {
    const e13 = E10.current;
    if (e13)
      return e13.addEventListener("rovingFocusGroup.onEntryFocus", y10), () => e13.removeEventListener("rovingFocusGroup.onEntryFocus", y10);
  }, [y10]), /* @__PURE__ */ s2.createElement(g2, { scope: c10, orientation: p10, dir: m10, loop: d10, currentTabStopId: G10, onItemFocus: s2.useCallback((e13) => h10(e13), [h10]), onItemShiftTab: s2.useCallback(() => A10(true), []) }, /* @__PURE__ */ s2.createElement(Primitive.div, _extends2({ tabIndex: T10 ? -1 : 0, "data-orientation": p10 }, x10, { ref: I10, style: __spreadValues({ outline: "none" }, t12.style), onMouseDown: composeEventHandlers(t12.onMouseDown, () => {
    S10.current = true;
  }), onFocus: composeEventHandlers(t12.onFocus, (e13) => {
    const o10 = !S10.current;
    if (e13.target === e13.currentTarget && o10 && !T10) {
      const o11 = new Event("rovingFocusGroup.onEntryFocus", f2);
      if (e13.currentTarget.dispatchEvent(o11), !o11.defaultPrevented) {
        const e14 = D10().filter((e15) => e15.focusable);
        R3([e14.find((e15) => e15.active), e14.find((e15) => e15.id === G10), ...e14].filter(Boolean).map((e15) => e15.ref.current));
      }
    }
    S10.current = false;
  }), onBlur: composeEventHandlers(t12.onBlur, () => A10(false)) })));
});
var RovingFocusGroupItem = /* @__PURE__ */ s2.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopeRovingFocusGroup: n10, focusable: i10 = true, active: c10 = false } = _a4, f10 = __objRest(_a4, ["__scopeRovingFocusGroup", "focusable", "active"]), m10 = useId(), d10 = F2("RovingFocusGroupItem", n10), v10 = d10.currentTabStopId === m10, g10 = l4(n10);
  return s2.createElement(p3.ItemSlot, { scope: n10, id: m10, focusable: i10, active: c10 }, /* @__PURE__ */ s2.createElement(Primitive.span, _extends2({ tabIndex: v10 ? 0 : -1, "data-orientation": d10.orientation }, f10, { ref: o10, onMouseDown: composeEventHandlers(e13.onMouseDown, (e14) => {
    i10 ? d10.onItemFocus(m10) : e14.preventDefault();
  }), onFocus: composeEventHandlers(e13.onFocus, () => d10.onItemFocus(m10)), onKeyDown: composeEventHandlers(e13.onKeyDown, (e14) => {
    if (e14.key === "Tab" && e14.shiftKey)
      return void d10.onItemShiftTab();
    if (e14.target !== e14.currentTarget)
      return;
    const o11 = function(e15, o12, r12) {
      const t13 = function(e16, o13) {
        return o13 !== "rtl" ? e16 : e16 === "ArrowLeft" ? "ArrowRight" : e16 === "ArrowRight" ? "ArrowLeft" : e16;
      }(e15.key, r12);
      return o12 === "vertical" && ["ArrowLeft", "ArrowRight"].includes(t13) || o12 === "horizontal" && ["ArrowUp", "ArrowDown"].includes(t13) ? void 0 : b3[t13];
    }(e14, d10.orientation, d10.dir);
    if (o11 !== void 0) {
      e14.preventDefault();
      let n11 = g10().filter((e15) => e15.focusable).map((e15) => e15.ref.current);
      if (o11 === "last")
        n11.reverse();
      else if (o11 === "prev" || o11 === "next") {
        o11 === "prev" && n11.reverse();
        const i11 = n11.indexOf(e14.currentTarget);
        n11 = d10.loop ? (t12 = i11 + 1, (r11 = n11).map((e15, o12) => r11[(t12 + o12) % r11.length])) : n11.slice(i11 + 1);
      }
      setTimeout(() => R3(n11));
    }
    var r11, t12;
  }) })));
});
var b3 = { ArrowLeft: "prev", ArrowUp: "prev", ArrowRight: "next", ArrowDown: "next", PageUp: "first", Home: "first", PageDown: "last", End: "last" };
function R3(e13) {
  const o10 = document.activeElement;
  for (const r11 of e13) {
    if (r11 === o10)
      return;
    if (r11.focus(), document.activeElement !== o10)
      return;
  }
}
var Root = RovingFocusGroup;
var Item = RovingFocusGroupItem;

// ../../node_modules/@radix-ui/react-portal/dist/index.module.js
var import_react_dom2 = __toESM(require_react_dom());
var r4 = __toESM(require_react());
var Portal = /* @__PURE__ */ r4.forwardRef((a10, i10) => {
  var n10, d10;
  const _a4 = a10, { containerRef: s10, style: u10 } = _a4, c10 = __objRest(_a4, ["containerRef", "style"]), m10 = (n10 = s10 == null ? void 0 : s10.current) !== null && n10 !== void 0 ? n10 : globalThis === null || globalThis === void 0 || (d10 = globalThis.document) === null || d10 === void 0 ? void 0 : d10.body, [, f10] = r4.useState({});
  return useLayoutEffect8(() => {
    f10({});
  }, []), m10 ? /* @__PURE__ */ import_react_dom2.default.createPortal(/* @__PURE__ */ r4.createElement(Primitive.div, _extends2({ "data-radix-portal": "" }, c10, { ref: i10, style: m10 === document.body ? __spreadValues({ position: "absolute", top: 0, left: 0, zIndex: 2147483647 }, u10) : void 0 })), m10) : null;
});
var UnstablePortal = /* @__PURE__ */ r4.forwardRef((t12, a10) => {
  var i10;
  const _a4 = t12, { container: n10 = globalThis === null || globalThis === void 0 || (i10 = globalThis.document) === null || i10 === void 0 ? void 0 : i10.body } = _a4, d10 = __objRest(_a4, ["container"]);
  return n10 ? /* @__PURE__ */ import_react_dom2.default.createPortal(/* @__PURE__ */ r4.createElement(Primitive.div, _extends2({}, d10, { ref: a10 })), n10) : null;
});

// ../../node_modules/@radix-ui/react-arrow/dist/index.module.js
var r5 = __toESM(require_react());
var Arrow = /* @__PURE__ */ r5.forwardRef((o10, i10) => {
  const _a4 = o10, { children: n10, width: s10 = 10, height: m10 = 5 } = _a4, p10 = __objRest(_a4, ["children", "width", "height"]);
  return r5.createElement(Primitive.svg, _extends2({}, p10, { ref: i10, width: s10, height: m10, viewBox: "0 0 30 10", preserveAspectRatio: "none" }), o10.asChild ? n10 : /* @__PURE__ */ r5.createElement("polygon", { points: "0,0 30,0 15,10" }));
});
var Root2 = Arrow;

// ../../node_modules/@radix-ui/react-use-size/dist/index.module.js
var e9 = __toESM(require_react());
function useSize(r11) {
  const [i10, t12] = e9.useState(void 0);
  return e9.useEffect(() => {
    if (r11) {
      const e13 = new ResizeObserver((e14) => {
        if (!Array.isArray(e14))
          return;
        if (!e14.length)
          return;
        const i11 = e14[0];
        let o10, n10;
        if ("borderBoxSize" in i11) {
          const e15 = i11.borderBoxSize, r12 = Array.isArray(e15) ? e15[0] : e15;
          o10 = r12.inlineSize, n10 = r12.blockSize;
        } else {
          const e15 = r11.getBoundingClientRect();
          o10 = e15.width, n10 = e15.height;
        }
        t12({ width: o10, height: n10 });
      });
      return e13.observe(r11, { box: "border-box" }), () => e13.unobserve(r11);
    }
    t12(void 0);
  }, [r11]), i10;
}

// ../../node_modules/@radix-ui/rect/dist/index.module.js
function observeElementRect(n10, o10) {
  const i10 = e10.get(n10);
  return i10 === void 0 ? (e10.set(n10, { rect: {}, callbacks: [o10] }), e10.size === 1 && (t7 = requestAnimationFrame(c2))) : (i10.callbacks.push(o10), o10(n10.getBoundingClientRect())), () => {
    const c10 = e10.get(n10);
    if (c10 === void 0)
      return;
    const i11 = c10.callbacks.indexOf(o10);
    i11 > -1 && c10.callbacks.splice(i11, 1), c10.callbacks.length === 0 && (e10.delete(n10), e10.size === 0 && cancelAnimationFrame(t7));
  };
}
var t7;
var e10 = /* @__PURE__ */ new Map();
function c2() {
  const n10 = [];
  e10.forEach((t12, e13) => {
    const c10 = e13.getBoundingClientRect();
    var o10, i10;
    o10 = t12.rect, i10 = c10, (o10.width !== i10.width || o10.height !== i10.height || o10.top !== i10.top || o10.right !== i10.right || o10.bottom !== i10.bottom || o10.left !== i10.left) && (t12.rect = c10, n10.push(t12));
  }), n10.forEach((t12) => {
    t12.callbacks.forEach((e13) => e13(t12.rect));
  }), t7 = requestAnimationFrame(c2);
}

// ../../node_modules/@radix-ui/react-use-rect/dist/index.module.js
var r6 = __toESM(require_react());
function useRect(e13) {
  const [o10, c10] = r6.useState();
  return r6.useEffect(() => {
    if (e13) {
      const r11 = observeElementRect(e13, c10);
      return () => {
        c10(void 0), r11();
      };
    }
  }, [e13]), o10;
}

// ../../node_modules/@radix-ui/popper/dist/index.module.js
function getPlacementData({ anchorRect: p10, popperSize: c10, arrowSize: f10, arrowOffset: l10 = 0, side: d10, sideOffset: h10 = 0, align: x10, alignOffset: g10 = 0, shouldAvoidCollisions: u10 = true, collisionBoundariesRect: w10, collisionTolerance: m10 = 0 }) {
  if (!p10 || !c10 || !w10)
    return { popperStyles: o7, arrowStyles: n4 };
  const y10 = function(e13, r11, o10 = 0, n10 = 0, i10) {
    const p11 = i10 ? i10.height : 0, a10 = t8(r11, e13, "x"), s10 = t8(r11, e13, "y"), c11 = s10.before - o10 - p11, f11 = s10.after + o10 + p11, l11 = a10.before - o10 - p11, d11 = a10.after + o10 + p11;
    return { top: { start: { x: a10.start + n10, y: c11 }, center: { x: a10.center, y: c11 }, end: { x: a10.end - n10, y: c11 } }, right: { start: { x: d11, y: s10.start + n10 }, center: { x: d11, y: s10.center }, end: { x: d11, y: s10.end - n10 } }, bottom: { start: { x: a10.start + n10, y: f11 }, center: { x: a10.center, y: f11 }, end: { x: a10.end - n10, y: f11 } }, left: { start: { x: l11, y: s10.start + n10 }, center: { x: l11, y: s10.center }, end: { x: l11, y: s10.end - n10 } } };
  }(c10, p10, h10, g10, f10), b10 = y10[d10][x10];
  if (u10 === false) {
    const t12 = e11(b10);
    let o10 = n4;
    f10 && (o10 = i2({ popperSize: c10, arrowSize: f10, arrowOffset: l10, side: d10, align: x10 }));
    return { popperStyles: __spreadProps(__spreadValues({}, t12), { "--radix-popper-transform-origin": r7(c10, d10, x10, l10, f10) }), arrowStyles: o10, placedSide: d10, placedAlign: x10 };
  }
  const S10 = DOMRect.fromRect(__spreadValues(__spreadValues({}, c10), b10)), $10 = (O10 = w10, z10 = m10, DOMRect.fromRect({ width: O10.width - 2 * z10, height: O10.height - 2 * z10, x: O10.left + z10, y: O10.top + z10 }));
  var O10, z10;
  const R10 = s3(S10, $10), M10 = y10[a3(d10)][x10], D10 = function(t12, e13, r11) {
    const o10 = a3(t12);
    return e13[t12] && !r11[o10] ? o10 : t12;
  }(d10, R10, s3(DOMRect.fromRect(__spreadValues(__spreadValues({}, c10), M10)), $10)), A10 = function(t12, e13, r11, o10, n10) {
    const i10 = r11 === "top" || r11 === "bottom", p11 = i10 ? "left" : "top", a10 = i10 ? "right" : "bottom", s10 = i10 ? "width" : "height", c11 = e13[s10] > t12[s10];
    if ((o10 === "start" || o10 === "center") && (n10[p11] && c11 || n10[a10] && !c11))
      return "end";
    if ((o10 === "end" || o10 === "center") && (n10[a10] && c11 || n10[p11] && !c11))
      return "start";
    return o10;
  }(c10, p10, d10, x10, R10), I10 = e11(y10[D10][A10]);
  let C10 = n4;
  f10 && (C10 = i2({ popperSize: c10, arrowSize: f10, arrowOffset: l10, side: D10, align: A10 }));
  return { popperStyles: __spreadProps(__spreadValues({}, I10), { "--radix-popper-transform-origin": r7(c10, D10, A10, l10, f10) }), arrowStyles: C10, placedSide: D10, placedAlign: A10 };
}
function t8(t12, e13, r11) {
  const o10 = t12[r11 === "x" ? "left" : "top"], n10 = r11 === "x" ? "width" : "height", i10 = t12[n10], p10 = e13[n10];
  return { before: o10 - p10, start: o10, center: o10 + (i10 - p10) / 2, end: o10 + i10 - p10, after: o10 + i10 };
}
function e11(t12) {
  return { position: "absolute", top: 0, left: 0, minWidth: "max-content", willChange: "transform", transform: `translate3d(${Math.round(t12.x + window.scrollX)}px, ${Math.round(t12.y + window.scrollY)}px, 0)` };
}
function r7(t12, e13, r11, o10, n10) {
  const i10 = e13 === "top" || e13 === "bottom", p10 = n10 ? n10.width : 0, a10 = n10 ? n10.height : 0, s10 = p10 / 2 + o10;
  let c10 = "", f10 = "";
  return i10 ? (c10 = { start: `${s10}px`, center: "center", end: t12.width - s10 + "px" }[r11], f10 = e13 === "top" ? `${t12.height + a10}px` : -a10 + "px") : (c10 = e13 === "left" ? `${t12.width + a10}px` : -a10 + "px", f10 = { start: `${s10}px`, center: "center", end: t12.height - s10 + "px" }[r11]), `${c10} ${f10}`;
}
var o7 = { position: "fixed", top: 0, left: 0, opacity: 0, transform: "translate3d(0, -200%, 0)" };
var n4 = { position: "absolute", opacity: 0 };
function i2({ popperSize: t12, arrowSize: e13, arrowOffset: r11, side: o10, align: n10 }) {
  const i10 = (t12.width - e13.width) / 2, a10 = (t12.height - e13.width) / 2, s10 = { top: 0, right: 90, bottom: 180, left: -90 }[o10], c10 = Math.max(e13.width, e13.height), f10 = { width: `${c10}px`, height: `${c10}px`, transform: `rotate(${s10}deg)`, willChange: "transform", position: "absolute", [o10]: "100%", direction: p4(o10, n10) };
  return o10 !== "top" && o10 !== "bottom" || (n10 === "start" && (f10.left = `${r11}px`), n10 === "center" && (f10.left = `${i10}px`), n10 === "end" && (f10.right = `${r11}px`)), o10 !== "left" && o10 !== "right" || (n10 === "start" && (f10.top = `${r11}px`), n10 === "center" && (f10.top = `${a10}px`), n10 === "end" && (f10.bottom = `${r11}px`)), f10;
}
function p4(t12, e13) {
  return (t12 !== "top" && t12 !== "right" || e13 !== "end") && (t12 !== "bottom" && t12 !== "left" || e13 === "end") ? "ltr" : "rtl";
}
function a3(t12) {
  return { top: "bottom", right: "left", bottom: "top", left: "right" }[t12];
}
function s3(t12, e13) {
  return { top: t12.top < e13.top, right: t12.right > e13.right, bottom: t12.bottom > e13.bottom, left: t12.left < e13.left };
}

// ../../node_modules/@radix-ui/react-popper/dist/index.module.js
var s4 = __toESM(require_react());
var [c3, l5] = createContextScope("Popper");
var [f3, d4] = c3("Popper");
var Popper = (e13) => {
  const { __scopePopper: o10, children: r11 } = e13, [t12, n10] = s4.useState(null);
  return s4.createElement(f3, { scope: o10, anchor: t12, onAnchorChange: n10 }, r11);
};
var PopperAnchor = /* @__PURE__ */ s4.forwardRef((e13, r11) => {
  const _a4 = e13, { __scopePopper: t12, virtualRef: n10 } = _a4, p10 = __objRest(_a4, ["__scopePopper", "virtualRef"]), c10 = d4("PopperAnchor", t12), l10 = s4.useRef(null), f10 = useComposedRefs(r11, l10);
  return s4.useEffect(() => {
    c10.onAnchorChange((n10 == null ? void 0 : n10.current) || l10.current);
  }), n10 ? null : /* @__PURE__ */ s4.createElement(Primitive.div, _extends2({}, p10, { ref: f10 }));
});
var [u2, m4] = c3("PopperContent");
var PopperContent = /* @__PURE__ */ s4.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopePopper: c10, side: l10 = "bottom", sideOffset: f10, align: m10 = "center", alignOffset: w10, collisionTolerance: h10, avoidCollisions: x10 = true } = _a4, v10 = __objRest(_a4, ["__scopePopper", "side", "sideOffset", "align", "alignOffset", "collisionTolerance", "avoidCollisions"]), P10 = d4("PopperContent", c10), [A10, g10] = s4.useState(), E10 = useRect(P10.anchor), [y10, C10] = s4.useState(null), S10 = useSize(y10), [R10, O10] = s4.useState(null), _10 = useSize(R10), b10 = useComposedRefs(n10, (e14) => C10(e14)), z10 = function() {
    const [e14, o10] = s4.useState(void 0);
    return s4.useEffect(() => {
      let e15;
      function r11() {
        o10({ width: window.innerWidth, height: window.innerHeight });
      }
      function t12() {
        window.clearTimeout(e15), e15 = window.setTimeout(r11, 100);
      }
      return r11(), window.addEventListener("resize", t12), () => window.removeEventListener("resize", t12);
    }, []), e14;
  }(), T10 = z10 ? DOMRect.fromRect(__spreadProps(__spreadValues({}, z10), { x: 0, y: 0 })) : void 0, { popperStyles: k10, arrowStyles: L10, placedSide: B10, placedAlign: D10 } = getPlacementData({ anchorRect: E10, popperSize: S10, arrowSize: _10, arrowOffset: A10, side: l10, sideOffset: f10, align: m10, alignOffset: w10, shouldAvoidCollisions: x10, collisionBoundariesRect: T10, collisionTolerance: h10 }), H10 = B10 !== void 0;
  return s4.createElement("div", { style: k10, "data-radix-popper-content-wrapper": "" }, /* @__PURE__ */ s4.createElement(u2, { scope: c10, arrowStyles: L10, onArrowChange: O10, onArrowOffsetChange: g10 }, /* @__PURE__ */ s4.createElement(Primitive.div, _extends2({ "data-side": B10, "data-align": D10 }, v10, { style: __spreadProps(__spreadValues({}, v10.style), { animation: H10 ? void 0 : "none" }), ref: b10 }))));
});
var PopperArrow = /* @__PURE__ */ s4.forwardRef(function(o10, r11) {
  const _a4 = o10, { __scopePopper: t12, offset: n10 } = _a4, i10 = __objRest(_a4, ["__scopePopper", "offset"]), p10 = m4("PopperArrow", t12), { onArrowOffsetChange: c10 } = p10;
  return s4.useEffect(() => c10(n10), [c10, n10]), /* @__PURE__ */ s4.createElement("span", { style: __spreadProps(__spreadValues({}, p10.arrowStyles), { pointerEvents: "none" }) }, /* @__PURE__ */ s4.createElement("span", { ref: p10.onArrowChange, style: { display: "inline-block", verticalAlign: "top", pointerEvents: "auto" } }, /* @__PURE__ */ s4.createElement(Root2, _extends2({}, i10, { ref: r11, style: __spreadProps(__spreadValues({}, i10.style), { display: "block" }) }))));
});
var Root3 = Popper;
var Anchor = PopperAnchor;
var Content = PopperContent;
var Arrow2 = PopperArrow;

// ../../node_modules/@radix-ui/react-presence/dist/index.module.js
var t9 = __toESM(require_react());
var Presence = (u10) => {
  const { present: o10, children: i10 } = u10, s10 = function(n10) {
    const [u11, o11] = t9.useState(), i11 = t9.useRef({}), s11 = t9.useRef(n10), c11 = t9.useRef("none"), a11 = n10 ? "mounted" : "unmounted", [d10, m10] = function(e13, n11) {
      return t9.useReducer((e14, t12) => {
        const r11 = n11[e14][t12];
        return r11 != null ? r11 : e14;
      }, e13);
    }(a11, { mounted: { UNMOUNT: "unmounted", ANIMATION_OUT: "unmountSuspended" }, unmountSuspended: { MOUNT: "mounted", ANIMATION_END: "unmounted" }, unmounted: { MOUNT: "mounted" } });
    return t9.useEffect(() => {
      const e13 = r8(i11.current);
      c11.current = d10 === "mounted" ? e13 : "none";
    }, [d10]), useLayoutEffect8(() => {
      const e13 = i11.current, t12 = s11.current;
      if (t12 !== n10) {
        const u12 = c11.current, o12 = r8(e13);
        if (n10)
          m10("MOUNT");
        else if (o12 === "none" || (e13 == null ? void 0 : e13.display) === "none")
          m10("UNMOUNT");
        else {
          const e14 = u12 !== o12;
          m10(t12 && e14 ? "ANIMATION_OUT" : "UNMOUNT");
        }
        s11.current = n10;
      }
    }, [n10, m10]), useLayoutEffect8(() => {
      if (u11) {
        const e13 = (e14) => {
          const n12 = r8(i11.current).includes(e14.animationName);
          e14.target === u11 && n12 && m10("ANIMATION_END");
        }, n11 = (e14) => {
          e14.target === u11 && (c11.current = r8(i11.current));
        };
        return u11.addEventListener("animationstart", n11), u11.addEventListener("animationcancel", e13), u11.addEventListener("animationend", e13), () => {
          u11.removeEventListener("animationstart", n11), u11.removeEventListener("animationcancel", e13), u11.removeEventListener("animationend", e13);
        };
      }
      m10("ANIMATION_END");
    }, [u11, m10]), { isPresent: ["mounted", "unmountSuspended"].includes(d10), ref: t9.useCallback((e13) => {
      e13 && (i11.current = getComputedStyle(e13)), o11(e13);
    }, []) };
  }(o10), c10 = typeof i10 == "function" ? i10({ present: s10.isPresent }) : t9.Children.only(i10), a10 = useComposedRefs(s10.ref, c10.ref);
  return typeof i10 == "function" || s10.isPresent ? /* @__PURE__ */ t9.cloneElement(c10, { ref: a10 }) : null;
};
function r8(e13) {
  return (e13 == null ? void 0 : e13.animationName) || "none";
}
Presence.displayName = "Presence";

// ../../node_modules/@radix-ui/react-focus-scope/dist/index.module.js
var o8 = __toESM(require_react());
var c4 = { bubbles: false, cancelable: true };
var FocusScope = /* @__PURE__ */ o8.forwardRef((i10, f10) => {
  const _a4 = i10, { loop: l10 = false, trapped: m10 = false, onMountAutoFocus: p10, onUnmountAutoFocus: v10 } = _a4, E10 = __objRest(_a4, ["loop", "trapped", "onMountAutoFocus", "onUnmountAutoFocus"]), [F10, S10] = o8.useState(null), b10 = useCallbackRef(p10), T10 = useCallbackRef(v10), y10 = o8.useRef(null), L10 = useComposedRefs(f10, (e13) => S10(e13)), h10 = o8.useRef({ paused: false, pause() {
    this.paused = true;
  }, resume() {
    this.paused = false;
  } }).current;
  o8.useEffect(() => {
    if (m10) {
      let e13 = function(e14) {
        if (h10.paused || !F10)
          return;
        const t13 = e14.target;
        F10.contains(t13) ? y10.current = t13 : a4(y10.current, { select: true });
      }, t12 = function(e14) {
        !h10.paused && F10 && (F10.contains(e14.relatedTarget) || a4(y10.current, { select: true }));
      };
      return document.addEventListener("focusin", e13), document.addEventListener("focusout", t12), () => {
        document.removeEventListener("focusin", e13), document.removeEventListener("focusout", t12);
      };
    }
  }, [m10, F10, h10.paused]), o8.useEffect(() => {
    if (F10) {
      d5.add(h10);
      const t12 = document.activeElement;
      if (!F10.contains(t12)) {
        const n10 = new Event("focusScope.autoFocusOnMount", c4);
        F10.addEventListener("focusScope.autoFocusOnMount", b10), F10.dispatchEvent(n10), n10.defaultPrevented || (!function(e14, { select: t13 = false } = {}) {
          const n11 = document.activeElement;
          for (const o10 of e14)
            if (a4(o10, { select: t13 }), document.activeElement !== n11)
              return;
        }((e13 = r9(F10), e13.filter((e14) => e14.tagName !== "A")), { select: true }), document.activeElement === t12 && a4(F10));
      }
      return () => {
        F10.removeEventListener("focusScope.autoFocusOnMount", b10), setTimeout(() => {
          const e14 = new Event("focusScope.autoFocusOnUnmount", c4);
          F10.addEventListener("focusScope.autoFocusOnUnmount", T10), F10.dispatchEvent(e14), e14.defaultPrevented || a4(t12 != null ? t12 : document.body, { select: true }), F10.removeEventListener("focusScope.autoFocusOnUnmount", T10), d5.remove(h10);
        }, 0);
      };
    }
    var e13;
  }, [F10, b10, T10, h10]);
  const N10 = o8.useCallback((e13) => {
    if (!l10 && !m10)
      return;
    if (h10.paused)
      return;
    const t12 = e13.key === "Tab" && !e13.altKey && !e13.ctrlKey && !e13.metaKey, n10 = document.activeElement;
    if (t12 && n10) {
      const t13 = e13.currentTarget, [o10, u10] = function(e14) {
        const t14 = r9(e14), n11 = s5(t14, e14), o11 = s5(t14.reverse(), e14);
        return [n11, o11];
      }(t13);
      o10 && u10 ? e13.shiftKey || n10 !== u10 ? e13.shiftKey && n10 === o10 && (e13.preventDefault(), l10 && a4(u10, { select: true })) : (e13.preventDefault(), l10 && a4(o10, { select: true })) : n10 === t13 && e13.preventDefault();
    }
  }, [l10, m10, h10.paused]);
  return o8.createElement(Primitive.div, _extends2({ tabIndex: -1 }, E10, { ref: L10, onKeyDown: N10 }));
});
function r9(e13) {
  const t12 = [], n10 = document.createTreeWalker(e13, NodeFilter.SHOW_ELEMENT, { acceptNode: (e14) => {
    const t13 = e14.tagName === "INPUT" && e14.type === "hidden";
    return e14.disabled || e14.hidden || t13 ? NodeFilter.FILTER_SKIP : e14.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
  } });
  for (; n10.nextNode(); )
    t12.push(n10.currentNode);
  return t12;
}
function s5(e13, t12) {
  for (const n10 of e13)
    if (!i3(n10, { upTo: t12 }))
      return n10;
}
function i3(e13, { upTo: t12 }) {
  if (getComputedStyle(e13).visibility === "hidden")
    return true;
  for (; e13; ) {
    if (t12 !== void 0 && e13 === t12)
      return false;
    if (getComputedStyle(e13).display === "none")
      return true;
    e13 = e13.parentElement;
  }
  return false;
}
function a4(e13, { select: t12 = false } = {}) {
  if (e13 && e13.focus) {
    const n10 = document.activeElement;
    e13.focus({ preventScroll: true }), e13 !== n10 && function(e14) {
      return e14 instanceof HTMLInputElement && "select" in e14;
    }(e13) && t12 && e13.select();
  }
}
var d5 = function() {
  let e13 = [];
  return { add(t12) {
    const n10 = e13[0];
    t12 !== n10 && (n10 == null || n10.pause()), e13 = f4(e13, t12), e13.unshift(t12);
  }, remove(t12) {
    var n10;
    e13 = f4(e13, t12), (n10 = e13[0]) === null || n10 === void 0 || n10.resume();
  } };
}();
function f4(e13, t12) {
  const n10 = [...e13], o10 = n10.indexOf(t12);
  return o10 !== -1 && n10.splice(o10, 1), n10;
}

// ../../node_modules/@radix-ui/react-use-escape-keydown/dist/index.module.js
var t10 = __toESM(require_react());
function useEscapeKeydown(n10) {
  const o10 = useCallbackRef(n10);
  t10.useEffect(() => {
    const e13 = (e14) => {
      e14.key === "Escape" && o10(e14);
    };
    return document.addEventListener("keydown", e13), () => document.removeEventListener("keydown", e13);
  }, [o10]);
}

// ../../node_modules/@radix-ui/react-use-body-pointer-events/dist/index.module.js
var t11 = __toESM(require_react());
var n5;
var o9 = 0;
function useBodyPointerEvents({ disabled: r11 }) {
  const i10 = t11.useRef(false);
  useLayoutEffect8(() => {
    if (r11) {
      let e13 = function() {
        o9--, o9 === 0 && (document.body.style.pointerEvents = n5);
      }, t12 = function(e14) {
        i10.current = e14.pointerType !== "mouse";
      };
      return o9 === 0 && (n5 = document.body.style.pointerEvents), document.body.style.pointerEvents = "none", o9++, document.addEventListener("pointerup", t12), () => {
        i10.current ? document.addEventListener("click", e13, { once: true }) : e13(), document.removeEventListener("pointerup", t12);
      };
    }
  }, [r11]);
}

// ../../node_modules/@radix-ui/react-dismissable-layer/dist/index.module.js
var i4 = __toESM(require_react());
var u3 = /* @__PURE__ */ i4.createContext({ layers: /* @__PURE__ */ new Set(), layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(), branches: /* @__PURE__ */ new Set() });
var DismissableLayer = /* @__PURE__ */ i4.forwardRef((l10, m10) => {
  const _a4 = l10, { disableOutsidePointerEvents: f10 = false, onEscapeKeyDown: p10, onPointerDownOutside: v10, onFocusOutside: b10, onInteractOutside: E10, onDismiss: y10 } = _a4, w10 = __objRest(_a4, ["disableOutsidePointerEvents", "onEscapeKeyDown", "onPointerDownOutside", "onFocusOutside", "onInteractOutside", "onDismiss"]), h10 = i4.useContext(u3), [D10, x10] = i4.useState(null), [, C10] = i4.useState({}), L10 = useComposedRefs(m10, (e13) => x10(e13)), P10 = Array.from(h10.layers), [O10] = [...h10.layersWithOutsidePointerEventsDisabled].slice(-1), g10 = P10.indexOf(O10), B10 = D10 ? P10.indexOf(D10) : -1, R10 = h10.layersWithOutsidePointerEventsDisabled.size > 0, F10 = B10 >= g10, S10 = function(e13) {
    const n10 = useCallbackRef(e13), r11 = i4.useRef(false);
    return i4.useEffect(() => {
      const e14 = (e15) => {
        if (e15.target && !r11.current) {
          d6("dismissableLayer.pointerDownOutside", n10, { originalEvent: e15 });
        }
        r11.current = false;
      }, t12 = window.setTimeout(() => {
        document.addEventListener("pointerdown", e14);
      }, 0);
      return () => {
        window.clearTimeout(t12), document.removeEventListener("pointerdown", e14);
      };
    }, [n10]), { onPointerDownCapture: () => r11.current = true };
  }((e13) => {
    const t12 = e13.target, n10 = [...h10.branches].some((e14) => e14.contains(t12));
    F10 && !n10 && (v10 == null || v10(e13), E10 == null || E10(e13), e13.defaultPrevented || y10 == null || y10());
  }), W10 = function(e13) {
    const n10 = useCallbackRef(e13), r11 = i4.useRef(false);
    return i4.useEffect(() => {
      const e14 = (e15) => {
        if (e15.target && !r11.current) {
          d6("dismissableLayer.focusOutside", n10, { originalEvent: e15 });
        }
      };
      return document.addEventListener("focusin", e14), () => document.removeEventListener("focusin", e14);
    }, [n10]), { onFocusCapture: () => r11.current = true, onBlurCapture: () => r11.current = false };
  }((e13) => {
    const t12 = e13.target;
    [...h10.branches].some((e14) => e14.contains(t12)) || (b10 == null || b10(e13), E10 == null || E10(e13), e13.defaultPrevented || y10 == null || y10());
  });
  return useEscapeKeydown((e13) => {
    B10 === h10.layers.size - 1 && (p10 == null || p10(e13), e13.defaultPrevented || y10 == null || y10());
  }), useBodyPointerEvents({ disabled: f10 }), i4.useEffect(() => {
    D10 && (f10 && h10.layersWithOutsidePointerEventsDisabled.add(D10), h10.layers.add(D10), c5());
  }, [D10, f10, h10]), i4.useEffect(() => () => {
    D10 && (h10.layers.delete(D10), h10.layersWithOutsidePointerEventsDisabled.delete(D10), c5());
  }, [D10, h10]), i4.useEffect(() => {
    const e13 = () => C10({});
    return document.addEventListener("dismissableLayer.update", e13), () => document.removeEventListener("dismissableLayer.update", e13);
  }, []), /* @__PURE__ */ i4.createElement(Primitive.div, _extends2({}, w10, { ref: L10, style: __spreadValues({ pointerEvents: R10 ? F10 ? "auto" : "none" : void 0 }, l10.style), onFocusCapture: composeEventHandlers(l10.onFocusCapture, W10.onFocusCapture), onBlurCapture: composeEventHandlers(l10.onBlurCapture, W10.onBlurCapture), onPointerDownCapture: composeEventHandlers(l10.onPointerDownCapture, S10.onPointerDownCapture) }));
});
function c5() {
  const e13 = new Event("dismissableLayer.update");
  document.dispatchEvent(e13);
}
function d6(e13, t12, n10) {
  const r11 = n10.originalEvent.target, s10 = new CustomEvent(e13, { bubbles: false, cancelable: true, detail: n10 });
  return t12 && r11.addEventListener(e13, t12, { once: true }), !r11.dispatchEvent(s10);
}

// ../../node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (parentNode === void 0) {
    parentNode = getDefaultParent(originalTarget);
  }
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var keep = function(el2) {
    if (!el2 || elementsToKeep.has(el2)) {
      return;
    }
    elementsToKeep.add(el2);
    keep(el2.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || targets.indexOf(parent) >= 0) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        var attr = node.getAttribute("aria-hidden");
        var alreadyHidden = attr !== null && attr !== "false";
        var counterValue = (counterMap.get(node) || 0) + 1;
        var markerValue = (markerCounter.get(node) || 0) + 1;
        counterMap.set(node, counterValue);
        markerCounter.set(node, markerValue);
        hiddenNodes.push(node);
        if (counterValue === 1 && alreadyHidden) {
          uncontrolledNodes.set(node, true);
        }
        if (markerValue === 1) {
          node.setAttribute(markerName, "true");
        }
        if (!alreadyHidden) {
          node.setAttribute("aria-hidden", "true");
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1;
      var markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue);
      markerCounter.set(node, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node)) {
          node.removeAttribute("aria-hidden");
        }
        uncontrolledNodes.delete(node);
      }
      if (!markerValue) {
        node.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};

// ../../node_modules/react-remove-scroll/node_modules/tslib/modules/index.js
var import_tslib18 = __toESM(require_tslib2(), 1);
var {
  __extends: __extends2,
  __assign: __assign3,
  __rest: __rest2,
  __decorate: __decorate2,
  __param: __param2,
  __metadata: __metadata2,
  __awaiter: __awaiter2,
  __generator: __generator2,
  __exportStar: __exportStar2,
  __createBinding: __createBinding2,
  __values: __values3,
  __read: __read3,
  __spread: __spread2,
  __spreadArrays: __spreadArrays2,
  __await: __await2,
  __asyncGenerator: __asyncGenerator2,
  __asyncDelegator: __asyncDelegator2,
  __asyncValues: __asyncValues2,
  __makeTemplateObject: __makeTemplateObject2,
  __importStar: __importStar2,
  __importDefault: __importDefault2,
  __classPrivateFieldGet: __classPrivateFieldGet2,
  __classPrivateFieldSet: __classPrivateFieldSet2
} = import_tslib18.default;

// ../../node_modules/react-remove-scroll/dist/es2015/Combination.js
var React59 = __toESM(require_react());

// ../../node_modules/react-remove-scroll/dist/es2015/UI.js
var React55 = __toESM(require_react());

// ../../node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";

// ../../node_modules/use-sidecar/node_modules/tslib/modules/index.js
var import_tslib19 = __toESM(require_tslib3(), 1);
var {
  __extends: __extends3,
  __assign: __assign4,
  __rest: __rest3,
  __decorate: __decorate3,
  __param: __param3,
  __metadata: __metadata3,
  __awaiter: __awaiter3,
  __generator: __generator3,
  __exportStar: __exportStar3,
  __createBinding: __createBinding3,
  __values: __values4,
  __read: __read4,
  __spread: __spread3,
  __spreadArrays: __spreadArrays3,
  __await: __await3,
  __asyncGenerator: __asyncGenerator3,
  __asyncDelegator: __asyncDelegator3,
  __asyncValues: __asyncValues3,
  __makeTemplateObject: __makeTemplateObject3,
  __importStar: __importStar3,
  __importDefault: __importDefault3,
  __classPrivateFieldGet: __classPrivateFieldGet3,
  __classPrivateFieldSet: __classPrivateFieldSet3
} = import_tslib19.default;

// ../../node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a10) {
  return a10;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x10) {
          return x10 !== item;
        });
      };
    },
    assignSyncMedium: function(cb2) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb2);
      }
      buffer = {
        push: function(x10) {
          return cb2(x10);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb2) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb2);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb2);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x10) {
          pendingQueue.push(x10);
          cycle();
        },
        filter: function(filter2) {
          pendingQueue = pendingQueue.filter(filter2);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign4({ async: true, ssr: false }, options);
  return medium;
}

// ../../node_modules/use-sidecar/dist/es2015/exports.js
var React54 = __toESM(require_react());
var SideCar = function(_a4) {
  var sideCar = _a4.sideCar, rest = __rest3(_a4, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return React54.createElement(Target, __assign4({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}

// ../../node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// ../../node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}

// ../../node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react14 = __toESM(require_react());
function useCallbackRef2(initialValue, callback) {
  var ref = (0, import_react14.useState)(function() {
    return {
      value: initialValue,
      callback,
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}

// ../../node_modules/use-callback-ref/dist/es2015/useMergeRef.js
function useMergeRefs(refs, defaultValue) {
  return useCallbackRef2(defaultValue, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
}

// ../../node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
  return;
};
var RemoveScroll = React55.forwardRef(function(props, parentRef) {
  var ref = React55.useRef(null);
  var _a4 = React55.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a4[0], setCallbacks = _a4[1];
  var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b2 = props.as, Container3 = _b2 === void 0 ? "div" : _b2, rest = __rest2(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([
    ref,
    parentRef
  ]);
  var containerProps = __assign3({}, rest, callbacks);
  return React55.createElement(React55.Fragment, null, enabled && React55.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }), forwardProps ? React55.cloneElement(React55.Children.only(children), __assign3({}, containerProps, { ref: containerRef })) : React55.createElement(Container3, __assign3({}, containerProps, { className, ref: containerRef }), children));
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// ../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React58 = __toESM(require_react());

// ../../node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React57 = __toESM(require_react());

// ../../node_modules/react-style-singleton/dist/es2015/hook.js
var React56 = __toESM(require_react());

// ../../node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce) {
    return currentNonce;
  }
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};

// ../../node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css2) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css2;
  } else {
    tag.appendChild(document.createTextNode(css2));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};

// ../../node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles2) {
    React56.useEffect(function() {
      sheet.add(styles2);
      return function() {
        sheet.remove();
      };
    }, []);
  };
};

// ../../node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle2 = styleHookSingleton();
  var Sheet = function(_a4) {
    var styles2 = _a4.styles;
    useStyle2(styles2);
    return null;
  };
  return Sheet;
};

// ../../node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse3 = function(x10) {
  return parseInt(x10 || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs2 = window.getComputedStyle(document.body);
  var left = cs2[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top2 = cs2[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs2[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [
    parse3(left),
    parse3(top2),
    parse3(right)
  ];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// ../../node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton();
var getStyles = function(_a4, allowRelative, gapMode, important) {
  var left = _a4.left, top2 = _a4.top, right = _a4.right, gap = _a4.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  ." + noScrollbarsClassName + " {\n   overflow: hidden " + important + ";\n   padding-right: " + gap + "px " + important + ";\n  }\n  body {\n    overflow: hidden " + important + ";\n    " + [
    allowRelative && "position: relative " + important + ";",
    gapMode === "margin" && "\n    padding-left: " + left + "px;\n    padding-top: " + top2 + "px;\n    padding-right: " + right + "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: " + gap + "px " + important + ";\n    ",
    gapMode === "padding" && "padding-right: " + gap + "px " + important + ";"
  ].filter(Boolean).join("") + "\n  }\n  \n  ." + zeroRightClassName + " {\n    right: " + gap + "px " + important + ";\n  }\n  \n  ." + fullWidthClassName + " {\n    margin-right: " + gap + "px " + important + ";\n  }\n  \n  ." + zeroRightClassName + " ." + zeroRightClassName + " {\n    right: 0 " + important + ";\n  }\n  \n  ." + fullWidthClassName + " ." + fullWidthClassName + " {\n    margin-right: 0 " + important + ";\n  }\n  \n  body {\n    " + removedBarSizeVariable + ": " + gap + "px;\n  }\n";
};
var RemoveScrollBar = function(props) {
  var _a4 = React57.useState(getGapWidth(props.gapMode)), gap = _a4[0], setGap = _a4[1];
  React57.useEffect(function() {
    setGap(getGapWidth(props.gapMode));
  }, [props.gapMode]);
  var noRelative = props.noRelative, noImportant = props.noImportant, _b2 = props.gapMode, gapMode = _b2 === void 0 ? "margin" : _b2;
  return React57.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};

// ../../node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var elementCouldBeVScrolled = function(node) {
  var styles2 = window.getComputedStyle(node);
  return styles2.overflowY !== "hidden" && !(styles2.overflowY === styles2.overflowX && styles2.overflowY === "visible");
};
var elementCouldBeHScrolled = function(node) {
  var styles2 = window.getComputedStyle(node);
  if (node.type === "range") {
    return true;
  }
  return styles2.overflowX !== "hidden" && !(styles2.overflowY === styles2.overflowX && styles2.overflowX === "visible");
};
var locationCouldBeScrolled = function(axis, node) {
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a4 = getScrollVariables(axis, current), s10 = _a4[1], d10 = _a4[2];
      if (s10 > d10) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== document.body);
  return false;
};
var getVScrollVariables = function(_a4) {
  var scrollTop = _a4.scrollTop, scrollHeight = _a4.scrollHeight, clientHeight = _a4.clientHeight;
  return [scrollTop, scrollHeight, clientHeight];
};
var getHScrollVariables = function(_a4) {
  var scrollLeft = _a4.scrollLeft, scrollWidth = _a4.scrollWidth, clientWidth = _a4.clientWidth;
  return [scrollLeft, scrollWidth, clientWidth];
};
var elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a4 = getScrollVariables(axis, target), position = _a4[0], scroll_1 = _a4[1], capacity = _a4[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    target = target.parentNode;
  } while (!targetInLock && target !== document.body || targetInLock && (endTarget.contains(target) || endTarget === target));
  if (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// ../../node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var options;
var nonPassive = passiveSupported ? { passive: false } : false;

// ../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x10, y10) {
  return x10[0] === y10[0] && x10[1] === y10[1];
};
var generateStyle = function(id2) {
  return "\n  .block-interactivity-" + id2 + " {pointer-events: none;}\n  .allow-interactivity-" + id2 + " {pointer-events: all;}\n";
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React58.useRef([]);
  var touchStartRef = React58.useRef([0, 0]);
  var activeAxis = React58.useRef();
  var id2 = React58.useState(idCounter++)[0];
  var Style2 = React58.useState(function() {
    return styleSingleton();
  })[0];
  var lastProps = React58.useRef(props);
  React58.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React58.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-" + id2);
      var allow_1 = [
        props.lockRef.current
      ].concat((props.shards || []).map(extractRef)).filter(Boolean);
      allow_1.forEach(function(el2) {
        return el2.classList.add("allow-interactivity-" + id2);
      });
      return function() {
        document.body.classList.remove("block-interactivity-" + id2);
        allow_1.forEach(function(el2) {
          return el2.classList.remove("allow-interactivity-" + id2);
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React58.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React58.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e13) {
      return e13.name === event.type && e13.target === event.target && deltaCompare(e13.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      event.preventDefault();
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        event.preventDefault();
      }
    }
  }, []);
  var shouldCancel = React58.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e13) {
        return e13 !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React58.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React58.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React58.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React58.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React58.createElement(React58.Fragment, null, inert ? React58.createElement(Style2, { styles: generateStyle(id2) }) : null, removeScrollBar ? React58.createElement(RemoveScrollBar, { gapMode: "margin" }) : null);
}

// ../../node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);

// ../../node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll = React59.forwardRef(function(props, ref) {
  return React59.createElement(RemoveScroll, __assign3({}, props, { ref, sideCar: sidecar_default }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var Combination_default = ReactRemoveScroll;

// ../../node_modules/@radix-ui/react-menu/dist/index.module.js
var E2 = __toESM(require_react());
var x2 = ["Enter", " "];
var b4 = ["ArrowUp", "PageDown", "End"];
var R4 = ["ArrowDown", "PageUp", "Home", ...b4];
var _ = { ltr: [...x2, "ArrowRight"], rtl: [...x2, "ArrowLeft"] };
var y2 = { ltr: ["ArrowLeft"], rtl: ["ArrowRight"] };
var [I2, k2, P2] = createCollection("Menu");
var [D2, S2] = createContextScope("Menu", [P2, l5, v2]);
var O2 = l5();
var T3 = v2();
var [L3, A2] = D2("Menu");
var Menu = (e13) => {
  const { __scopeMenu: n10, open: o10 = false, children: u10, onOpenChange: c10, modal: i10 = true } = e13, s10 = O2(n10), [l10, d10] = E2.useState(null), p10 = E2.useRef(false), f10 = useCallbackRef(c10), m10 = useDirection(l10, e13.dir);
  return E2.useEffect(() => {
    const e14 = () => {
      p10.current = true, document.addEventListener("pointerdown", n11, { capture: true, once: true }), document.addEventListener("pointermove", n11, { capture: true, once: true });
    }, n11 = () => p10.current = false;
    return document.addEventListener("keydown", e14, { capture: true }), () => {
      document.removeEventListener("keydown", e14, { capture: true }), document.removeEventListener("pointerdown", n11, { capture: true }), document.removeEventListener("pointermove", n11, { capture: true });
    };
  }, []), /* @__PURE__ */ E2.createElement(Root3, s10, /* @__PURE__ */ E2.createElement(L3, { scope: n10, isSubmenu: false, isUsingKeyboardRef: p10, dir: m10, open: o10, onOpenChange: f10, content: l10, onContentChange: d10, onRootClose: E2.useCallback(() => f10(false), [f10]), modal: i10 }, u10));
};
var MenuSub = (n10) => {
  const { __scopeMenu: r11, children: o10, open: u10 = false, onOpenChange: c10 } = n10, i10 = A2("MenuSub", r11), s10 = O2(r11), [l10, d10] = E2.useState(null), [p10, f10] = E2.useState(null), m10 = useCallbackRef(c10);
  return E2.useEffect(() => (i10.open === false && m10(false), () => m10(false)), [i10.open, m10]), /* @__PURE__ */ E2.createElement(Root3, s10, /* @__PURE__ */ E2.createElement(L3, { scope: r11, isSubmenu: true, isUsingKeyboardRef: i10.isUsingKeyboardRef, dir: i10.dir, open: u10, onOpenChange: m10, content: p10, onContentChange: f10, onRootClose: i10.onRootClose, contentId: useId(), trigger: l10, onTriggerChange: d10, triggerId: useId(), modal: false }, o10));
};
var MenuAnchor = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeMenu: t12 } = _a4, r11 = __objRest(_a4, ["__scopeMenu"]), o10 = O2(t12);
  return E2.createElement(Anchor, _extends2({}, o10, r11, { ref: n10 }));
});
var [F3, K2] = D2("MenuContent");
var MenuContent = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { forceMount: t12 } = _a4, r11 = __objRest(_a4, ["forceMount"]), o10 = A2("MenuContent", e13.__scopeMenu);
  return E2.createElement(I2.Provider, { scope: e13.__scopeMenu }, /* @__PURE__ */ E2.createElement(Presence, { present: t12 || o10.open }, /* @__PURE__ */ E2.createElement(I2.Slot, { scope: e13.__scopeMenu }, o10.isSubmenu ? /* @__PURE__ */ E2.createElement(X2, _extends2({}, r11, { ref: n10 })) : /* @__PURE__ */ E2.createElement(G2, _extends2({}, r11, { ref: n10 })))));
});
var G2 = /* @__PURE__ */ E2.forwardRef((e13, n10) => A2("MenuContent", e13.__scopeMenu).modal ? /* @__PURE__ */ E2.createElement(U2, _extends2({}, e13, { ref: n10 })) : /* @__PURE__ */ E2.createElement(V4, _extends2({}, e13, { ref: n10 })));
var U2 = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const t12 = A2("MenuContent", e13.__scopeMenu), r11 = E2.useRef(null), o10 = useComposedRefs(n10, r11);
  return E2.useEffect(() => {
    const e14 = r11.current;
    if (e14)
      return hideOthers(e14);
  }, []), /* @__PURE__ */ E2.createElement(B2, _extends2({}, e13, { ref: o10, trapFocus: t12.open, disableOutsidePointerEvents: t12.open, disableOutsideScroll: true, onFocusOutside: composeEventHandlers(e13.onFocusOutside, (e14) => e14.preventDefault(), { checkForDefaultPrevented: false }), onDismiss: () => t12.onOpenChange(false) }));
});
var V4 = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const t12 = A2("MenuContent", e13.__scopeMenu);
  return E2.createElement(B2, _extends2({}, e13, { ref: n10, trapFocus: false, disableOutsidePointerEvents: false, disableOutsideScroll: false, onDismiss: () => t12.onOpenChange(false) }));
});
var X2 = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const t12 = A2("MenuContent", e13.__scopeMenu), r11 = E2.useRef(null), o10 = useComposedRefs(n10, r11);
  return t12.isSubmenu ? /* @__PURE__ */ E2.createElement(B2, _extends2({ id: t12.contentId, "aria-labelledby": t12.triggerId }, e13, { ref: o10, align: "start", side: t12.dir === "rtl" ? "left" : "right", portalled: true, disableOutsidePointerEvents: false, disableOutsideScroll: false, trapFocus: false, onOpenAutoFocus: (e14) => {
    var n11;
    t12.isUsingKeyboardRef.current && ((n11 = r11.current) === null || n11 === void 0 || n11.focus()), e14.preventDefault();
  }, onCloseAutoFocus: (e14) => e14.preventDefault(), onFocusOutside: composeEventHandlers(e13.onFocusOutside, (e14) => {
    e14.target !== t12.trigger && t12.onOpenChange(false);
  }), onEscapeKeyDown: composeEventHandlers(e13.onEscapeKeyDown, t12.onRootClose), onKeyDown: composeEventHandlers(e13.onKeyDown, (e14) => {
    const n11 = e14.currentTarget.contains(e14.target), r12 = y2[t12.dir].includes(e14.key);
    var o11;
    n11 && r12 && (t12.onOpenChange(false), (o11 = t12.trigger) === null || o11 === void 0 || o11.focus(), e14.preventDefault());
  }) })) : null;
});
var B2 = /* @__PURE__ */ E2.forwardRef((e13, t12) => {
  const _a4 = e13, { __scopeMenu: r11, loop: u10 = false, trapFocus: i10, onOpenAutoFocus: s10, onCloseAutoFocus: l10, disableOutsidePointerEvents: f10, onEscapeKeyDown: v10, onPointerDownOutside: g10, onFocusOutside: h10, onInteractOutside: x10, onDismiss: _10, disableOutsideScroll: y10, allowPinchZoom: I10, portalled: P10 } = _a4, D10 = __objRest(_a4, ["__scopeMenu", "loop", "trapFocus", "onOpenAutoFocus", "onCloseAutoFocus", "disableOutsidePointerEvents", "onEscapeKeyDown", "onPointerDownOutside", "onFocusOutside", "onInteractOutside", "onDismiss", "disableOutsideScroll", "allowPinchZoom", "portalled"]), S10 = A2("MenuContent", r11), L10 = O2(r11), K10 = T3(r11), G10 = k2(r11), [U10, V10] = E2.useState(null), X10 = E2.useRef(null), B10 = useComposedRefs(t12, X10, S10.onContentChange), Y10 = E2.useRef(0), Z10 = E2.useRef(""), z10 = E2.useRef(0), H10 = E2.useRef(null), W10 = E2.useRef("right"), q10 = E2.useRef(0), N10 = P10 ? Portal : E2.Fragment, Q = y10 ? Combination_default : E2.Fragment, $10 = y10 ? { allowPinchZoom: I10 } : void 0, ee2 = (e14) => {
    var n10, t13;
    const r12 = Z10.current + e14, o10 = G10().filter((e15) => !e15.disabled), u11 = document.activeElement, c10 = (n10 = o10.find((e15) => e15.ref.current === u11)) === null || n10 === void 0 ? void 0 : n10.textValue, a10 = function(e15, n11, t14) {
      const r13 = n11.length > 1 && Array.from(n11).every((e16) => e16 === n11[0]) ? n11[0] : n11, o11 = t14 ? e15.indexOf(t14) : -1;
      let u12 = (c11 = e15, a11 = Math.max(o11, 0), c11.map((e16, n12) => c11[(a11 + n12) % c11.length]));
      var c11, a11;
      r13.length === 1 && (u12 = u12.filter((e16) => e16 !== t14));
      const i12 = u12.find((e16) => e16.toLowerCase().startsWith(r13.toLowerCase()));
      return i12 !== t14 ? i12 : void 0;
    }(o10.map((e15) => e15.textValue), r12, c10), i11 = (t13 = o10.find((e15) => e15.textValue === a10)) === null || t13 === void 0 ? void 0 : t13.ref.current;
    !function e15(n11) {
      Z10.current = n11, window.clearTimeout(Y10.current), n11 !== "" && (Y10.current = window.setTimeout(() => e15(""), 1e3));
    }(r12), i11 && setTimeout(() => i11.focus());
  };
  E2.useEffect(() => () => window.clearTimeout(Y10.current), []), useFocusGuards();
  const ne3 = E2.useCallback((e14) => {
    var n10, t13;
    return W10.current === ((n10 = H10.current) === null || n10 === void 0 ? void 0 : n10.side) && function(e15, n11) {
      if (!n11)
        return false;
      return function(e16, n12) {
        const { x: t14, y: r12 } = e16;
        let o10 = false;
        for (let e17 = 0, u11 = n12.length - 1; e17 < n12.length; u11 = e17++) {
          const c10 = n12[e17].x, a10 = n12[e17].y, i11 = n12[u11].x, s11 = n12[u11].y;
          a10 > r12 != s11 > r12 && t14 < (i11 - c10) * (r12 - a10) / (s11 - a10) + c10 && (o10 = !o10);
        }
        return o10;
      }({ x: e15.clientX, y: e15.clientY }, n11);
    }(e14, (t13 = H10.current) === null || t13 === void 0 ? void 0 : t13.area);
  }, []);
  return E2.createElement(N10, null, /* @__PURE__ */ E2.createElement(Q, $10, /* @__PURE__ */ E2.createElement(F3, { scope: r11, searchRef: Z10, onItemEnter: E2.useCallback((e14) => {
    ne3(e14) && e14.preventDefault();
  }, [ne3]), onItemLeave: E2.useCallback((e14) => {
    var n10;
    ne3(e14) || ((n10 = X10.current) === null || n10 === void 0 || n10.focus(), V10(null));
  }, [ne3]), onTriggerLeave: E2.useCallback((e14) => {
    ne3(e14) && e14.preventDefault();
  }, [ne3]), pointerGraceTimerRef: z10, onPointerGraceIntentChange: E2.useCallback((e14) => {
    H10.current = e14;
  }, []) }, /* @__PURE__ */ E2.createElement(FocusScope, { asChild: true, trapped: i10, onMountAutoFocus: composeEventHandlers(s10, (e14) => {
    var n10;
    e14.preventDefault(), (n10 = X10.current) === null || n10 === void 0 || n10.focus();
  }), onUnmountAutoFocus: l10 }, /* @__PURE__ */ E2.createElement(DismissableLayer, { asChild: true, disableOutsidePointerEvents: f10, onEscapeKeyDown: v10, onPointerDownOutside: g10, onFocusOutside: h10, onInteractOutside: x10, onDismiss: _10 }, /* @__PURE__ */ E2.createElement(Root, _extends2({ asChild: true }, K10, { dir: S10.dir, orientation: "vertical", loop: u10, currentTabStopId: U10, onCurrentTabStopIdChange: V10, onEntryFocus: (e14) => {
    S10.isUsingKeyboardRef.current || e14.preventDefault();
  } }), /* @__PURE__ */ E2.createElement(Content, _extends2({ role: "menu", "aria-orientation": "vertical", "data-state": j3(S10.open), dir: S10.dir }, L10, D10, { ref: B10, style: __spreadValues({ outline: "none" }, D10.style), onKeyDown: composeEventHandlers(D10.onKeyDown, (e14) => {
    const n10 = e14.target, t13 = e14.currentTarget.contains(n10), r12 = e14.ctrlKey || e14.altKey || e14.metaKey, o10 = e14.key.length === 1;
    t13 && (e14.key === "Tab" && e14.preventDefault(), !r12 && o10 && ee2(e14.key));
    const u11 = X10.current;
    if (e14.target !== u11)
      return;
    if (!R4.includes(e14.key))
      return;
    e14.preventDefault();
    const c10 = G10().filter((e15) => !e15.disabled).map((e15) => e15.ref.current);
    b4.includes(e14.key) && c10.reverse(), function(e15) {
      const n11 = document.activeElement;
      for (const t14 of e15) {
        if (t14 === n11)
          return;
        if (t14.focus(), document.activeElement !== n11)
          return;
      }
    }(c10);
  }), onBlur: composeEventHandlers(e13.onBlur, (e14) => {
    e14.currentTarget.contains(e14.target) || (window.clearTimeout(Y10.current), Z10.current = "");
  }), onPointerMove: composeEventHandlers(e13.onPointerMove, J2((e14) => {
    const n10 = e14.target, t13 = q10.current !== e14.clientX;
    if (e14.currentTarget.contains(n10) && t13) {
      const n11 = e14.clientX > q10.current ? "right" : "left";
      W10.current = n11, q10.current = e14.clientX;
    }
  })) }))))))));
});
var MenuGroup = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeMenu: t12 } = _a4, r11 = __objRest(_a4, ["__scopeMenu"]);
  return E2.createElement(Primitive.div, _extends2({ role: "group" }, r11, { ref: n10 }));
});
var MenuItem = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { disabled: t12 = false, onSelect: r11 } = _a4, o10 = __objRest(_a4, ["disabled", "onSelect"]), u10 = E2.useRef(null), c10 = A2("MenuItem", e13.__scopeMenu), a10 = K2("MenuItem", e13.__scopeMenu), i10 = useComposedRefs(n10, u10), s10 = E2.useRef(false);
  return E2.createElement(Y3, _extends2({}, o10, { ref: i10, disabled: t12, onClick: composeEventHandlers(e13.onClick, () => {
    const e14 = u10.current;
    if (!t12 && e14) {
      const n11 = new Event("menu.itemSelect", { bubbles: true, cancelable: true });
      e14.addEventListener("menu.itemSelect", (e15) => r11 == null ? void 0 : r11(e15), { once: true }), e14.dispatchEvent(n11), n11.defaultPrevented ? s10.current = false : c10.onRootClose();
    }
  }), onPointerDown: (n11) => {
    var t13;
    (t13 = e13.onPointerDown) === null || t13 === void 0 || t13.call(e13, n11), s10.current = true;
  }, onPointerUp: composeEventHandlers(e13.onPointerUp, (e14) => {
    var n11;
    s10.current || (n11 = e14.currentTarget) === null || n11 === void 0 || n11.click();
  }), onKeyDown: composeEventHandlers(e13.onKeyDown, (e14) => {
    const n11 = a10.searchRef.current !== "";
    t12 || n11 && e14.key === " " || x2.includes(e14.key) && (e14.currentTarget.click(), e14.preventDefault());
  }) }));
});
var MenuSubTrigger = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const t12 = A2("MenuSubTrigger", e13.__scopeMenu), r11 = K2("MenuSubTrigger", e13.__scopeMenu), o10 = E2.useRef(null), { pointerGraceTimerRef: u10, onPointerGraceIntentChange: c10 } = r11, a10 = { __scopeMenu: e13.__scopeMenu }, i10 = E2.useCallback(() => {
    o10.current && window.clearTimeout(o10.current), o10.current = null;
  }, []);
  return E2.useEffect(() => i10, [i10]), E2.useEffect(() => {
    const e14 = u10.current;
    return () => {
      window.clearTimeout(e14), c10(null);
    };
  }, [u10, c10]), t12.isSubmenu ? /* @__PURE__ */ E2.createElement(MenuAnchor, _extends2({ asChild: true }, a10), /* @__PURE__ */ E2.createElement(Y3, _extends2({ id: t12.triggerId, "aria-haspopup": "menu", "aria-expanded": t12.open, "aria-controls": t12.contentId, "data-state": j3(t12.open) }, e13, { ref: composeRefs(n10, t12.onTriggerChange), onClick: (n11) => {
    var r12;
    (r12 = e13.onClick) === null || r12 === void 0 || r12.call(e13, n11), e13.disabled || n11.defaultPrevented || (n11.currentTarget.focus(), t12.open || t12.onOpenChange(true));
  }, onPointerMove: composeEventHandlers(e13.onPointerMove, J2((n11) => {
    r11.onItemEnter(n11), n11.defaultPrevented || e13.disabled || t12.open || o10.current || (r11.onPointerGraceIntentChange(null), o10.current = window.setTimeout(() => {
      t12.onOpenChange(true), i10();
    }, 100));
  })), onPointerLeave: composeEventHandlers(e13.onPointerLeave, J2((e14) => {
    var n11;
    i10();
    const o11 = (n11 = t12.content) === null || n11 === void 0 ? void 0 : n11.getBoundingClientRect();
    if (o11) {
      var c11;
      const n12 = (c11 = t12.content) === null || c11 === void 0 ? void 0 : c11.dataset.side, a11 = n12 === "right", i11 = a11 ? -5 : 5, s10 = o11[a11 ? "left" : "right"], l10 = o11[a11 ? "right" : "left"];
      r11.onPointerGraceIntentChange({ area: [{ x: e14.clientX + i11, y: e14.clientY }, { x: s10, y: o11.top }, { x: l10, y: o11.top }, { x: l10, y: o11.bottom }, { x: s10, y: o11.bottom }], side: n12 }), window.clearTimeout(u10.current), u10.current = window.setTimeout(() => r11.onPointerGraceIntentChange(null), 300);
    } else {
      if (r11.onTriggerLeave(e14), e14.defaultPrevented)
        return;
      r11.onPointerGraceIntentChange(null);
    }
  })), onKeyDown: composeEventHandlers(e13.onKeyDown, (n11) => {
    const o11 = r11.searchRef.current !== "";
    var u11;
    e13.disabled || o11 && n11.key === " " || _[t12.dir].includes(n11.key) && (t12.onOpenChange(true), (u11 = t12.content) === null || u11 === void 0 || u11.focus(), n11.preventDefault());
  }) }))) : null;
});
var Y3 = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeMenu: t12, disabled: r11 = false, textValue: u10 } = _a4, c10 = __objRest(_a4, ["__scopeMenu", "disabled", "textValue"]), a10 = K2("MenuItem", t12), i10 = T3(t12), l10 = E2.useRef(null), d10 = useComposedRefs(n10, l10), [p10, f10] = E2.useState("");
  return E2.useEffect(() => {
    const e14 = l10.current;
    var n11;
    e14 && f10(((n11 = e14.textContent) !== null && n11 !== void 0 ? n11 : "").trim());
  }, [c10.children]), /* @__PURE__ */ E2.createElement(I2.ItemSlot, { scope: t12, disabled: r11, textValue: u10 != null ? u10 : p10 }, /* @__PURE__ */ E2.createElement(Item, _extends2({ asChild: true }, i10, { focusable: !r11 }), /* @__PURE__ */ E2.createElement(Primitive.div, _extends2({ role: "menuitem", "aria-disabled": r11 || void 0, "data-disabled": r11 ? "" : void 0 }, c10, { ref: d10, onPointerMove: composeEventHandlers(e13.onPointerMove, J2((e14) => {
    if (r11)
      a10.onItemLeave(e14);
    else if (a10.onItemEnter(e14), !e14.defaultPrevented) {
      e14.currentTarget.focus();
    }
  })), onPointerLeave: composeEventHandlers(e13.onPointerLeave, J2((e14) => a10.onItemLeave(e14))) }))));
});
var MenuCheckboxItem = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { checked: t12 = false, onCheckedChange: r11 } = _a4, o10 = __objRest(_a4, ["checked", "onCheckedChange"]);
  return E2.createElement(H3, { scope: e13.__scopeMenu, checked: t12 }, /* @__PURE__ */ E2.createElement(MenuItem, _extends2({ role: "menuitemcheckbox", "aria-checked": t12 }, o10, { ref: n10, "data-state": q2(t12), onSelect: composeEventHandlers(o10.onSelect, () => r11 == null ? void 0 : r11(!t12), { checkForDefaultPrevented: false }) })));
});
var [Z3, z2] = D2("MenuRadioGroup", { value: void 0, onValueChange: () => {
} });
var MenuRadioGroup = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { value: r11, onValueChange: o10 } = _a4, u10 = __objRest(_a4, ["value", "onValueChange"]), c10 = useCallbackRef(o10);
  return E2.createElement(Z3, { scope: e13.__scopeMenu, value: r11, onValueChange: c10 }, /* @__PURE__ */ E2.createElement(MenuGroup, _extends2({}, u10, { ref: n10 })));
});
var MenuRadioItem = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { value: t12 } = _a4, r11 = __objRest(_a4, ["value"]), o10 = z2("MenuRadioItem", e13.__scopeMenu), u10 = t12 === o10.value;
  return E2.createElement(H3, { scope: e13.__scopeMenu, checked: u10 }, /* @__PURE__ */ E2.createElement(MenuItem, _extends2({ role: "menuitemradio", "aria-checked": u10 }, r11, { ref: n10, "data-state": q2(u10), onSelect: composeEventHandlers(r11.onSelect, () => {
    var e14;
    return (e14 = o10.onValueChange) === null || e14 === void 0 ? void 0 : e14.call(o10, t12);
  }, { checkForDefaultPrevented: false }) })));
});
var [H3, W3] = D2("MenuItemIndicator", { checked: false });
var MenuItemIndicator = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeMenu: t12, forceMount: r11 } = _a4, o10 = __objRest(_a4, ["__scopeMenu", "forceMount"]), u10 = W3("MenuItemIndicator", t12);
  return E2.createElement(Presence, { present: r11 || u10.checked }, /* @__PURE__ */ E2.createElement(Primitive.span, _extends2({}, o10, { ref: n10, "data-state": q2(u10.checked) })));
});
var MenuSeparator = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeMenu: t12 } = _a4, r11 = __objRest(_a4, ["__scopeMenu"]);
  return E2.createElement(Primitive.div, _extends2({ role: "separator", "aria-orientation": "horizontal" }, r11, { ref: n10 }));
});
var MenuArrow = /* @__PURE__ */ E2.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeMenu: t12 } = _a4, r11 = __objRest(_a4, ["__scopeMenu"]), o10 = O2(t12);
  return E2.createElement(Arrow2, _extends2({}, o10, r11, { ref: n10 }));
});
function j3(e13) {
  return e13 ? "open" : "closed";
}
function q2(e13) {
  return e13 ? "checked" : "unchecked";
}
function J2(e13) {
  return (n10) => n10.pointerType === "mouse" ? e13(n10) : void 0;
}
var Root4 = Menu;
var Sub = MenuSub;
var Anchor2 = MenuAnchor;
var SubTrigger = MenuSubTrigger;
var Content2 = MenuContent;
var Item2 = MenuItem;
var CheckboxItem = MenuCheckboxItem;
var RadioGroup = MenuRadioGroup;
var RadioItem = MenuRadioItem;
var ItemIndicator = MenuItemIndicator;
var Separator = MenuSeparator;
var Arrow3 = MenuArrow;

// ../../node_modules/@radix-ui/react-dropdown-menu/dist/index.module.js
var c6 = __toESM(require_react());
var [s6, i5] = createContextScope("DropdownMenu", [S2]);
var l6 = S2();
var [m5, w3] = s6("DropdownMenu");
var DropdownMenu = (e13) => {
  const { __scopeDropdownMenu: n10, children: r11, open: p10, defaultOpen: d10, onOpenChange: a10 } = e13, s10 = M2("DropdownMenu", n10), i10 = l6(n10), [w10 = false, D10] = useControllableState({ prop: p10, defaultProp: d10, onChange: a10 }), g10 = c6.useCallback(() => D10((e14) => !e14), [D10]);
  return s10.isInsideContent ? /* @__PURE__ */ c6.createElement(m5, { scope: n10, isRootMenu: false, open: w10, onOpenChange: D10, onOpenToggle: g10 }, /* @__PURE__ */ c6.createElement(Sub, _extends2({}, i10, { open: w10, onOpenChange: D10 }), r11)) : /* @__PURE__ */ c6.createElement(f5, _extends2({}, e13, { open: w10, onOpenChange: D10, onOpenToggle: g10 }), r11);
};
var f5 = (n10) => {
  const { __scopeDropdownMenu: r11, children: t12, dir: p10, open: d10, onOpenChange: a10, onOpenToggle: s10, modal: i10 = true } = n10, w10 = l6(r11), f10 = c6.useRef(null);
  return c6.createElement(m5, { scope: r11, isRootMenu: true, triggerId: useId(), triggerRef: f10, contentId: useId(), open: d10, onOpenChange: a10, onOpenToggle: s10, modal: i10 }, /* @__PURE__ */ c6.createElement(Root4, _extends2({}, w10, { open: d10, onOpenChange: a10, dir: p10, modal: i10 }), t12));
};
var DropdownMenuTrigger = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: t12, disabled: p10 = false } = _a4, s10 = __objRest(_a4, ["__scopeDropdownMenu", "disabled"]), i10 = w3("DropdownMenuTrigger", t12), m10 = l6(t12);
  return i10.isRootMenu ? /* @__PURE__ */ c6.createElement(Anchor2, _extends2({ asChild: true }, m10), /* @__PURE__ */ c6.createElement(Primitive.button, _extends2({ type: "button", id: i10.triggerId, "aria-haspopup": "menu", "aria-expanded": !!i10.open || void 0, "aria-controls": i10.open ? i10.contentId : void 0, "data-state": i10.open ? "open" : "closed", "data-disabled": p10 ? "" : void 0, disabled: p10 }, s10, { ref: composeRefs(n10, i10.triggerRef), onPointerDown: composeEventHandlers(e13.onPointerDown, (e14) => {
    p10 || e14.button !== 0 || e14.ctrlKey !== false || (i10.open || e14.preventDefault(), i10.onOpenToggle());
  }), onKeyDown: composeEventHandlers(e13.onKeyDown, (e14) => {
    p10 || (["Enter", " "].includes(e14.key) && i10.onOpenToggle(), e14.key === "ArrowDown" && i10.onOpenChange(true), [" ", "ArrowDown"].includes(e14.key) && e14.preventDefault());
  }) }))) : null;
});
var [D3, M2] = s6("DropdownMenuContent", { isInsideContent: false });
var DropdownMenuContent = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = w3("DropdownMenuContent", r11), d10 = l6(r11), a10 = __spreadProps(__spreadValues({}, t12), { style: __spreadProps(__spreadValues({}, e13.style), { "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)" }) });
  return c6.createElement(D3, { scope: r11, isInsideContent: true }, p10.isRootMenu ? /* @__PURE__ */ c6.createElement(g3, _extends2({ __scopeDropdownMenu: r11 }, a10, { ref: n10 })) : /* @__PURE__ */ c6.createElement(Content2, _extends2({}, d10, a10, { ref: n10 })));
});
var g3 = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11, portalled: t12 = true } = _a4, p10 = __objRest(_a4, ["__scopeDropdownMenu", "portalled"]), d10 = w3("DropdownMenuContent", r11), s10 = l6(r11), i10 = c6.useRef(false);
  return d10.isRootMenu ? /* @__PURE__ */ c6.createElement(Content2, _extends2({ id: d10.contentId, "aria-labelledby": d10.triggerId }, s10, p10, { ref: n10, portalled: t12, onCloseAutoFocus: composeEventHandlers(e13.onCloseAutoFocus, (e14) => {
    var o10;
    i10.current || (o10 = d10.triggerRef.current) === null || o10 === void 0 || o10.focus(), i10.current = false, e14.preventDefault();
  }), onInteractOutside: composeEventHandlers(e13.onInteractOutside, (e14) => {
    const o10 = e14.detail.originalEvent, n11 = o10.button === 0 && o10.ctrlKey === true, r12 = o10.button === 2 || n11;
    d10.modal && !r12 || (i10.current = true);
  }) })) : null;
});
var DropdownMenuItem = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = l6(r11);
  return c6.createElement(Item2, _extends2({}, p10, t12, { ref: n10 }));
});
var DropdownMenuTriggerItem = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = l6(r11);
  return c6.createElement(SubTrigger, _extends2({}, p10, t12, { ref: n10 }));
});
var DropdownMenuCheckboxItem = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = l6(r11);
  return c6.createElement(CheckboxItem, _extends2({}, p10, t12, { ref: n10 }));
});
var DropdownMenuRadioGroup = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = l6(r11);
  return c6.createElement(RadioGroup, _extends2({}, p10, t12, { ref: n10 }));
});
var DropdownMenuRadioItem = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = l6(r11);
  return c6.createElement(RadioItem, _extends2({}, p10, t12, { ref: n10 }));
});
var DropdownMenuItemIndicator = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = l6(r11);
  return c6.createElement(ItemIndicator, _extends2({}, p10, t12, { ref: n10 }));
});
var DropdownMenuSeparator = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = l6(r11);
  return c6.createElement(Separator, _extends2({}, p10, t12, { ref: n10 }));
});
var DropdownMenuArrow = /* @__PURE__ */ c6.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeDropdownMenu: r11 } = _a4, t12 = __objRest(_a4, ["__scopeDropdownMenu"]), p10 = l6(r11);
  return c6.createElement(Arrow3, _extends2({}, p10, t12, { ref: n10 }));
});
var Root5 = DropdownMenu;
var Trigger = DropdownMenuTrigger;
var Content3 = DropdownMenuContent;
var Item3 = DropdownMenuItem;
var TriggerItem = DropdownMenuTriggerItem;
var CheckboxItem2 = DropdownMenuCheckboxItem;
var RadioGroup2 = DropdownMenuRadioGroup;
var RadioItem2 = DropdownMenuRadioItem;
var ItemIndicator2 = DropdownMenuItemIndicator;
var Separator2 = DropdownMenuSeparator;
var Arrow4 = DropdownMenuArrow;

// ../../node_modules/@radix-ui/react-icons/dist/react-icons.esm.js
var import_react15 = __toESM(require_react());
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i10;
  for (i10 = 0; i10 < sourceKeys.length; i10++) {
    key = sourceKeys[i10];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$3 = ["color"];
var AlignBottomIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M9 3C9 2.44772 8.55229 2 8 2H7C6.44772 2 6 2.44772 6 3L6 14H1.5C1.22386 14 1 14.2239 1 14.5C1 14.7761 1.22386 15 1.5 15L6 15H9H13.5C13.7761 15 14 14.7761 14 14.5C14 14.2239 13.7761 14 13.5 14H9V3Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4 = ["color"];
var AlignCenterHorizontallyIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M1.99988 6C1.44759 6 0.999877 6.44772 0.999877 7L0.999877 8C0.999877 8.55228 1.44759 9 1.99988 9L6.99988 9L6.99988 13.5C6.99988 13.7761 7.22374 14 7.49988 14C7.77602 14 7.99988 13.7761 7.99988 13.5L7.99988 9L12.9999 9C13.5522 9 13.9999 8.55228 13.9999 8L13.9999 7C13.9999 6.44772 13.5522 6 12.9999 6L7.99988 6L7.99988 1.5C7.99988 1.22386 7.77602 1 7.49988 1C7.22373 1 6.99988 1.22386 6.99988 1.5L6.99988 6L1.99988 6Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$5 = ["color"];
var AlignCenterVerticallyIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$5);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M6.99988 1C6.44759 1 5.99988 1.44772 5.99988 2V7H1.49988C1.22374 7 0.999878 7.22386 0.999878 7.5C0.999878 7.77614 1.22374 8 1.49988 8H5.99988V13C5.99988 13.5523 6.44759 14 6.99988 14H7.99988C8.55216 14 8.99988 13.5523 8.99988 13V8H13.4999C13.776 8 13.9999 7.77614 13.9999 7.5C13.9999 7.22386 13.776 7 13.4999 7H8.99988V2C8.99988 1.44772 8.55216 1 7.99988 1L6.99988 1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$6 = ["color"];
var AlignLeftIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$6);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M0.499995 0.999995C0.223855 0.999995 -5.58458e-07 1.22385 -5.46388e-07 1.49999L-2.18554e-08 13.4999C-9.78492e-09 13.776 0.223855 13.9999 0.499995 13.9999C0.776136 13.9999 0.999991 13.776 0.999991 13.4999L0.999991 8.99993L12 8.99993C12.5523 8.99993 13 8.55222 13 7.99993L13 6.99994C13 6.44766 12.5523 5.99995 12 5.99995L0.999991 5.99995L0.999991 1.49999C0.999991 1.22385 0.776135 0.999995 0.499995 0.999995Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$7 = ["color"];
var AlignRightIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$7);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M14.4999 1C14.2237 1 13.9999 1.22386 13.9999 1.5L13.9999 6L2.99988 6C2.44759 6 1.99988 6.44772 1.99988 7L1.99988 8C1.99988 8.55228 2.44759 9 2.99988 9L13.9999 9L13.9999 13.5C13.9999 13.7761 14.2237 14 14.4999 14C14.776 14 14.9999 13.7761 14.9999 13.5L14.9999 9L14.9999 6L14.9999 1.5C14.9999 1.22386 14.776 1 14.4999 1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$8 = ["color"];
var AlignTopIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$8);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M1.5 0C1.22386 0 1 0.223858 1 0.5C1 0.776142 1.22386 1 1.5 1H6V12C6 12.5523 6.44772 13 7 13H8C8.55228 13 9 12.5523 9 12V1H13.5C13.7761 1 14 0.776142 14 0.5C14 0.223858 13.7761 0 13.5 0H9H6H1.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$a = ["color"];
var AngleIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$a);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M8.8914 2.1937C9.1158 2.35464 9.16725 2.66701 9.00631 2.89141L2.47388 12H13.5C13.7761 12 14 12.2239 14 12.5C14 12.7762 13.7761 13 13.5 13H1.5C1.31254 13 1.14082 12.8952 1.0552 12.7284C0.969578 12.5616 0.984438 12.361 1.09369 12.2086L8.19369 2.30862C8.35462 2.08422 8.667 2.03277 8.8914 2.1937ZM11.1 6.50001C11.1 6.22387 11.3238 6.00001 11.6 6.00001C11.8761 6.00001 12.1 6.22387 12.1 6.50001C12.1 6.77615 11.8761 7.00001 11.6 7.00001C11.3238 7.00001 11.1 6.77615 11.1 6.50001ZM10.4 4.00001C10.1239 4.00001 9.90003 4.22387 9.90003 4.50001C9.90003 4.77615 10.1239 5.00001 10.4 5.00001C10.6762 5.00001 10.9 4.77615 10.9 4.50001C10.9 4.22387 10.6762 4.00001 10.4 4.00001ZM12.1 8.50001C12.1 8.22387 12.3238 8.00001 12.6 8.00001C12.8761 8.00001 13.1 8.22387 13.1 8.50001C13.1 8.77615 12.8761 9.00001 12.6 9.00001C12.3238 9.00001 12.1 8.77615 12.1 8.50001ZM13.4 10C13.1239 10 12.9 10.2239 12.9 10.5C12.9 10.7761 13.1239 11 13.4 11C13.6762 11 13.9 10.7761 13.9 10.5C13.9 10.2239 13.6762 10 13.4 10Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$e = ["color"];
var ArrowDownIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$e);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M7.5 2C7.77614 2 8 2.22386 8 2.5L8 11.2929L11.1464 8.14645C11.3417 7.95118 11.6583 7.95118 11.8536 8.14645C12.0488 8.34171 12.0488 8.65829 11.8536 8.85355L7.85355 12.8536C7.75979 12.9473 7.63261 13 7.5 13C7.36739 13 7.24021 12.9473 7.14645 12.8536L3.14645 8.85355C2.95118 8.65829 2.95118 8.34171 3.14645 8.14645C3.34171 7.95118 3.65829 7.95118 3.85355 8.14645L7 11.2929L7 2.5C7 2.22386 7.22386 2 7.5 2Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$i = ["color"];
var ArrowTopRightIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$i);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M3.64645 11.3536C3.45118 11.1583 3.45118 10.8417 3.64645 10.6465L10.2929 4L6 4C5.72386 4 5.5 3.77614 5.5 3.5C5.5 3.22386 5.72386 3 6 3L11.5 3C11.6326 3 11.7598 3.05268 11.8536 3.14645C11.9473 3.24022 12 3.36739 12 3.5L12 9.00001C12 9.27615 11.7761 9.50001 11.5 9.50001C11.2239 9.50001 11 9.27615 11 9.00001V4.70711L4.35355 11.3536C4.15829 11.5488 3.84171 11.5488 3.64645 11.3536Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$j = ["color"];
var ArrowUpIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$j);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M7.14645 2.14645C7.34171 1.95118 7.65829 1.95118 7.85355 2.14645L11.8536 6.14645C12.0488 6.34171 12.0488 6.65829 11.8536 6.85355C11.6583 7.04882 11.3417 7.04882 11.1464 6.85355L8 3.70711L8 12.5C8 12.7761 7.77614 13 7.5 13C7.22386 13 7 12.7761 7 12.5L7 3.70711L3.85355 6.85355C3.65829 7.04882 3.34171 7.04882 3.14645 6.85355C2.95118 6.65829 2.95118 6.34171 3.14645 6.14645L7.14645 2.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$k = ["color"];
var AspectRatioIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$k);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M2.5 2H12.5C12.7761 2 13 2.22386 13 2.5V12.5C13 12.7761 12.7761 13 12.5 13H2.5C2.22386 13 2 12.7761 2 12.5V2.5C2 2.22386 2.22386 2 2.5 2ZM1 2.5C1 1.67157 1.67157 1 2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5ZM7.5 4C7.77614 4 8 3.77614 8 3.5C8 3.22386 7.77614 3 7.5 3C7.22386 3 7 3.22386 7 3.5C7 3.77614 7.22386 4 7.5 4ZM8 5.5C8 5.77614 7.77614 6 7.5 6C7.22386 6 7 5.77614 7 5.5C7 5.22386 7.22386 5 7.5 5C7.77614 5 8 5.22386 8 5.5ZM7.5 8C7.77614 8 8 7.77614 8 7.5C8 7.22386 7.77614 7 7.5 7C7.22386 7 7 7.22386 7 7.5C7 7.77614 7.22386 8 7.5 8ZM10 7.5C10 7.77614 9.77614 8 9.5 8C9.22386 8 9 7.77614 9 7.5C9 7.22386 9.22386 7 9.5 7C9.77614 7 10 7.22386 10 7.5ZM11.5 8C11.7761 8 12 7.77614 12 7.5C12 7.22386 11.7761 7 11.5 7C11.2239 7 11 7.22386 11 7.5C11 7.77614 11.2239 8 11.5 8Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$F = ["color"];
var BoxIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$F);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M12.5 2H2.5C2.22386 2 2 2.22386 2 2.5V12.5C2 12.7761 2.22386 13 2.5 13H12.5C12.7761 13 13 12.7761 13 12.5V2.5C13 2.22386 12.7761 2 12.5 2ZM2.5 1C1.67157 1 1 1.67157 1 2.5V12.5C1 13.3284 1.67157 14 2.5 14H12.5C13.3284 14 14 13.3284 14 12.5V2.5C14 1.67157 13.3284 1 12.5 1H2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$T = ["color"];
var CheckIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$T);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$Y = ["color"];
var ChevronRightIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$Y);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$_ = ["color"];
var CircleIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$_);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M0.877075 7.49991C0.877075 3.84222 3.84222 0.877075 7.49991 0.877075C11.1576 0.877075 14.1227 3.84222 14.1227 7.49991C14.1227 11.1576 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1576 0.877075 7.49991ZM7.49991 1.82708C4.36689 1.82708 1.82708 4.36689 1.82708 7.49991C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49991C13.1727 4.36689 10.6329 1.82708 7.49991 1.82708Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$10 = ["color"];
var ClipboardIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$10);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M5 2V1H10V2H5ZM4.75 0C4.33579 0 4 0.335786 4 0.75V1H3.5C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H11.5C12.3284 14 13 13.3284 13 12.5V2.5C13 1.67157 12.3284 1 11.5 1H11V0.75C11 0.335786 10.6642 0 10.25 0H4.75ZM11 2V2.25C11 2.66421 10.6642 3 10.25 3H4.75C4.33579 3 4 2.66421 4 2.25V2H3.5C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V2.5C12 2.22386 11.7761 2 11.5 2H11Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1h = ["color"];
var CopyIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1h);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M1 9.50006C1 10.3285 1.67157 11.0001 2.5 11.0001H4L4 10.0001H2.5C2.22386 10.0001 2 9.7762 2 9.50006L2 2.50006C2 2.22392 2.22386 2.00006 2.5 2.00006L9.5 2.00006C9.77614 2.00006 10 2.22392 10 2.50006V4.00002H5.5C4.67158 4.00002 4 4.67159 4 5.50002V12.5C4 13.3284 4.67158 14 5.5 14H12.5C13.3284 14 14 13.3284 14 12.5V5.50002C14 4.67159 13.3284 4.00002 12.5 4.00002H11V2.50006C11 1.67163 10.3284 1.00006 9.5 1.00006H2.5C1.67157 1.00006 1 1.67163 1 2.50006V9.50006ZM5 5.50002C5 5.22388 5.22386 5.00002 5.5 5.00002H12.5C12.7761 5.00002 13 5.22388 13 5.50002V12.5C13 12.7762 12.7761 13 12.5 13H5.5C5.22386 13 5 12.7762 5 12.5V5.50002Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1r = ["color"];
var Cross2Icon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1r);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1x = ["color"];
var CursorArrowIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1x);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M3.29227 0.048984C3.47033 -0.032338 3.67946 -0.00228214 3.8274 0.125891L12.8587 7.95026C13.0134 8.08432 13.0708 8.29916 13.0035 8.49251C12.9362 8.68586 12.7578 8.81866 12.5533 8.82768L9.21887 8.97474L11.1504 13.2187C11.2648 13.47 11.1538 13.7664 10.9026 13.8808L8.75024 14.8613C8.499 14.9758 8.20255 14.8649 8.08802 14.6137L6.15339 10.3703L3.86279 12.7855C3.72196 12.934 3.50487 12.9817 3.31479 12.9059C3.1247 12.8301 3 12.6461 3 12.4414V0.503792C3 0.308048 3.11422 0.130306 3.29227 0.048984ZM4 1.59852V11.1877L5.93799 9.14425C6.05238 9.02363 6.21924 8.96776 6.38319 8.99516C6.54715 9.02256 6.68677 9.12965 6.75573 9.2809L8.79056 13.7441L10.0332 13.178L8.00195 8.71497C7.93313 8.56376 7.94391 8.38824 8.03072 8.24659C8.11753 8.10494 8.26903 8.01566 8.435 8.00834L11.2549 7.88397L4 1.59852Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1I = ["color"];
var DotFilledIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1I);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M9.875 7.5C9.875 8.81168 8.81168 9.875 7.5 9.875C6.18832 9.875 5.125 8.81168 5.125 7.5C5.125 6.18832 6.18832 5.125 7.5 5.125C8.81168 5.125 9.875 6.18832 9.875 7.5Z",
    fill: color
  }));
});
var _excluded$1J = ["color"];
var DotsHorizontalIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1J);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M3.625 7.5C3.625 8.12132 3.12132 8.625 2.5 8.625C1.87868 8.625 1.375 8.12132 1.375 7.5C1.375 6.87868 1.87868 6.375 2.5 6.375C3.12132 6.375 3.625 6.87868 3.625 7.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM12.5 8.625C13.1213 8.625 13.625 8.12132 13.625 7.5C13.625 6.87868 13.1213 6.375 12.5 6.375C11.8787 6.375 11.375 6.87868 11.375 7.5C11.375 8.12132 11.8787 8.625 12.5 8.625Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$21 = ["color"];
var ExitIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$21);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M3 1C2.44771 1 2 1.44772 2 2V13C2 13.5523 2.44772 14 3 14H10.5C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13H3V2L10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1H3ZM12.6036 4.89645C12.4083 4.70118 12.0917 4.70118 11.8964 4.89645C11.7012 5.09171 11.7012 5.40829 11.8964 5.60355L13.2929 7H6.5C6.22386 7 6 7.22386 6 7.5C6 7.77614 6.22386 8 6.5 8H13.2929L11.8964 9.39645C11.7012 9.59171 11.7012 9.90829 11.8964 10.1036C12.0917 10.2988 12.4083 10.2988 12.6036 10.1036L14.8536 7.85355C15.0488 7.65829 15.0488 7.34171 14.8536 7.14645L12.6036 4.89645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$23 = ["color"];
var ExternalLinkIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$23);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M3 2C2.44772 2 2 2.44772 2 3V12C2 12.5523 2.44772 13 3 13H12C12.5523 13 13 12.5523 13 12V8.5C13 8.22386 12.7761 8 12.5 8C12.2239 8 12 8.22386 12 8.5V12H3V3L6.5 3C6.77614 3 7 2.77614 7 2.5C7 2.22386 6.77614 2 6.5 2H3ZM12.8536 2.14645C12.9015 2.19439 12.9377 2.24964 12.9621 2.30861C12.9861 2.36669 12.9996 2.4303 13 2.497L13 2.5V2.50049V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3.70711L6.85355 8.85355C6.65829 9.04882 6.34171 9.04882 6.14645 8.85355C5.95118 8.65829 5.95118 8.34171 6.14645 8.14645L11.2929 3H9.5C9.22386 3 9 2.77614 9 2.5C9 2.22386 9.22386 2 9.5 2H12.4999H12.5C12.5678 2 12.6324 2.01349 12.6914 2.03794C12.7504 2.06234 12.8056 2.09851 12.8536 2.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2p = ["color"];
var GroupIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$2p);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M1.44995 0.949951C1.31734 0.949951 1.19016 1.00263 1.0964 1.0964C1.00263 1.19017 0.949951 1.31735 0.949951 1.44995L0.949966 3.44995C0.949969 3.7261 1.17383 3.94995 1.44997 3.94995C1.72611 3.94995 1.94997 3.72609 1.94997 3.44995L1.94995 1.94995H3.44997C3.72611 1.94995 3.94997 1.72609 3.94997 1.44995C3.94997 1.17381 3.72611 0.949951 3.44997 0.949951H1.44995ZM5.94995 0.949951C5.67381 0.949951 5.44995 1.17381 5.44995 1.44995C5.44995 1.72609 5.67381 1.94995 5.94995 1.94995H8.94995C9.22609 1.94995 9.44995 1.72609 9.44995 1.44995C9.44995 1.17381 9.22609 0.949951 8.94995 0.949951H5.94995ZM5.44995 13.45C5.44995 13.1738 5.67381 12.95 5.94995 12.95H8.94995C9.22609 12.95 9.44995 13.1738 9.44995 13.45C9.44995 13.7261 9.22609 13.95 8.94995 13.95H5.94995C5.67381 13.95 5.44995 13.7261 5.44995 13.45ZM1.94995 5.94995C1.94995 5.67381 1.72609 5.44995 1.44995 5.44995C1.17381 5.44995 0.949951 5.67381 0.949951 5.94995V8.94995C0.949951 9.22609 1.17381 9.44995 1.44995 9.44995C1.72609 9.44995 1.94995 9.22609 1.94995 8.94995V5.94995ZM13.45 5.44995C13.7261 5.44995 13.95 5.67381 13.95 5.94995V8.94995C13.95 9.22609 13.7261 9.44995 13.45 9.44995C13.1738 9.44995 12.95 9.22609 12.95 8.94995V5.94995C12.95 5.67381 13.1738 5.44995 13.45 5.44995ZM11.45 0.949951C11.1738 0.949951 10.95 1.17381 10.95 1.44995C10.95 1.72609 11.1738 1.94995 11.45 1.94995H12.9499V3.44995C12.9499 3.72609 13.1738 3.94995 13.4499 3.94995C13.7261 3.94995 13.9499 3.72609 13.9499 3.44995V1.44995C13.9499 1.17381 13.7252 0.949951 13.449 0.949951H11.45ZM1.44995 10.95C1.72609 10.95 1.94995 11.1738 1.94995 11.45V12.95H3.44997C3.72611 12.95 3.94997 13.1738 3.94997 13.45C3.94997 13.7261 3.72611 13.95 3.44997 13.95H1.44995C1.17381 13.95 0.949951 13.7261 0.949951 13.45V11.45C0.949951 11.1738 1.17381 10.95 1.44995 10.95ZM13.95 11.45C13.95 11.1738 13.7261 10.95 13.45 10.95C13.1738 10.9499 12.95 11.1738 12.95 11.4499L12.9491 12.95H11.45C11.1738 12.95 10.95 13.1738 10.95 13.45C10.95 13.7261 11.1738 13.95 11.45 13.95H13.4499C13.7261 13.95 13.9499 13.7261 13.9499 13.45L13.95 11.45Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2s = ["color"];
var HamburgerMenuIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$2s);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11H13.5C13.7761 11 14 11.2239 14 11.5C14 11.7761 13.7761 12 13.5 12H1.5C1.22386 12 1 11.7761 1 11.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2C = ["color"];
var ImageIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$2C);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5C1 1.67157 1.67157 1 2.5 1ZM2.5 2C2.22386 2 2 2.22386 2 2.5V8.3636L3.6818 6.6818C3.76809 6.59551 3.88572 6.54797 4.00774 6.55007C4.12975 6.55216 4.24568 6.60372 4.32895 6.69293L7.87355 10.4901L10.6818 7.6818C10.8575 7.50607 11.1425 7.50607 11.3182 7.6818L13 9.3636V2.5C13 2.22386 12.7761 2 12.5 2H2.5ZM2 12.5V9.6364L3.98887 7.64753L7.5311 11.4421L8.94113 13H2.5C2.22386 13 2 12.7761 2 12.5ZM12.5 13H10.155L8.48336 11.153L11 8.6364L13 10.6364V12.5C13 12.7761 12.7761 13 12.5 13ZM6.64922 5.5C6.64922 5.03013 7.03013 4.64922 7.5 4.64922C7.96987 4.64922 8.35078 5.03013 8.35078 5.5C8.35078 5.96987 7.96987 6.35078 7.5 6.35078C7.03013 6.35078 6.64922 5.96987 6.64922 5.5ZM7.5 3.74922C6.53307 3.74922 5.74922 4.53307 5.74922 5.5C5.74922 6.46693 6.53307 7.25078 7.5 7.25078C8.46693 7.25078 9.25078 6.46693 9.25078 5.5C9.25078 4.53307 8.46693 3.74922 7.5 3.74922Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2_ = ["color"];
var LockClosedIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$2_);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M5 4.63601C5 3.76031 5.24219 3.1054 5.64323 2.67357C6.03934 2.24705 6.64582 1.9783 7.5014 1.9783C8.35745 1.9783 8.96306 2.24652 9.35823 2.67208C9.75838 3.10299 10 3.75708 10 4.63325V5.99999H5V4.63601ZM4 5.99999V4.63601C4 3.58148 4.29339 2.65754 4.91049 1.99307C5.53252 1.32329 6.42675 0.978302 7.5014 0.978302C8.57583 0.978302 9.46952 1.32233 10.091 1.99162C10.7076 2.65557 11 3.57896 11 4.63325V5.99999H12C12.5523 5.99999 13 6.44771 13 6.99999V13C13 13.5523 12.5523 14 12 14H3C2.44772 14 2 13.5523 2 13V6.99999C2 6.44771 2.44772 5.99999 3 5.99999H4ZM3 6.99999H12V13H3V6.99999Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2$ = ["color"];
var LockOpen1Icon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$2$);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M7.4986 0C6.3257 0 5.36107 0.38943 4.73753 1.19361C4.23745 1.83856 4 2.68242 4 3.63325H5C5 2.84313 5.19691 2.23312 5.5278 1.80636C5.91615 1.30552 6.55152 1 7.4986 1C8.35683 1 8.96336 1.26502 9.35846 1.68623C9.75793 2.11211 10 2.76044 10 3.63601V6H3C2.44772 6 2 6.44772 2 7V13C2 13.5523 2.44772 14 3 14H12C12.5523 14 13 13.5523 13 13V7C13 6.44771 12.5523 6 12 6H11V3.63601C11 2.58135 10.7065 1.66167 10.0878 1.0021C9.46477 0.337871 8.57061 0 7.4986 0ZM3 7H12V13H3V7Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3b = ["color"];
var MixerVerticalIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3b);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M5 1.5C5 1.22386 4.77614 1 4.5 1C4.22386 1 4 1.22386 4 1.5L4 7C4 7.01671 4.00082 7.03323 4.00242 7.04952C2.86009 7.28022 2 8.28967 2 9.5C2 10.7103 2.86009 11.7198 4.00242 11.9505C4.00082 11.9668 4 11.9833 4 12V13.5C4 13.7761 4.22386 14 4.5 14C4.77614 14 5 13.7761 5 13.5V12C5 11.9833 4.99918 11.9668 4.99758 11.9505C6.1399 11.7198 7 10.7103 7 9.5C7 8.28967 6.1399 7.28022 4.99758 7.04952C4.99918 7.03323 5 7.01671 5 7L5 1.5ZM11 1.5C11 1.22386 10.7761 1 10.5 1C10.2239 1 10 1.22386 10 1.5V3C10 3.01671 10.0008 3.03323 10.0024 3.04952C8.8601 3.28022 8 4.28967 8 5.5C8 6.71033 8.8601 7.71978 10.0024 7.95048C10.0008 7.96677 10 7.98329 10 8V13.5C10 13.7761 10.2239 14 10.5 14C10.7761 14 11 13.7761 11 13.5V8C11 7.98329 10.9992 7.96677 10.9976 7.95048C12.1399 7.71978 13 6.71033 13 5.5C13 4.28967 12.1399 3.28022 10.9976 3.04952C10.9992 3.03323 11 3.01671 11 3V1.5ZM4.5 8C3.67157 8 3 8.67157 3 9.5C3 10.3284 3.67157 11 4.5 11C5.32843 11 6 10.3284 6 9.5C6 8.67157 5.32843 8 4.5 8ZM9 5.5C9 4.67157 9.67157 4 10.5 4C11.3284 4 12 4.67157 12 5.5C12 6.32843 11.3284 7 10.5 7C9.67157 7 9 6.32843 9 5.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3n = ["color"];
var Pencil1Icon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3n);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M11.8536 1.14645C11.6583 0.951184 11.3417 0.951184 11.1465 1.14645L3.71455 8.57836C3.62459 8.66832 3.55263 8.77461 3.50251 8.89155L2.04044 12.303C1.9599 12.491 2.00189 12.709 2.14646 12.8536C2.29103 12.9981 2.50905 13.0401 2.69697 12.9596L6.10847 11.4975C6.2254 11.4474 6.3317 11.3754 6.42166 11.2855L13.8536 3.85355C14.0488 3.65829 14.0488 3.34171 13.8536 3.14645L11.8536 1.14645ZM4.42166 9.28547L11.5 2.20711L12.7929 3.5L5.71455 10.5784L4.21924 11.2192L3.78081 10.7808L4.42166 9.28547Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3o = ["color"];
var Pencil2Icon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3o);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M12.1464 1.14645C12.3417 0.951184 12.6583 0.951184 12.8535 1.14645L14.8535 3.14645C15.0488 3.34171 15.0488 3.65829 14.8535 3.85355L10.9109 7.79618C10.8349 7.87218 10.7471 7.93543 10.651 7.9835L6.72359 9.94721C6.53109 10.0435 6.29861 10.0057 6.14643 9.85355C5.99425 9.70137 5.95652 9.46889 6.05277 9.27639L8.01648 5.34897C8.06455 5.25283 8.1278 5.16507 8.2038 5.08907L12.1464 1.14645ZM12.5 2.20711L8.91091 5.79618L7.87266 7.87267L8.12731 8.12732L10.2038 7.08907L13.7929 3.5L12.5 2.20711ZM9.99998 2L8.99998 3H4.9C4.47171 3 4.18056 3.00039 3.95552 3.01877C3.73631 3.03668 3.62421 3.06915 3.54601 3.10899C3.35785 3.20487 3.20487 3.35785 3.10899 3.54601C3.06915 3.62421 3.03669 3.73631 3.01878 3.95552C3.00039 4.18056 3 4.47171 3 4.9V11.1C3 11.5283 3.00039 11.8194 3.01878 12.0445C3.03669 12.2637 3.06915 12.3758 3.10899 12.454C3.20487 12.6422 3.35785 12.7951 3.54601 12.891C3.62421 12.9309 3.73631 12.9633 3.95552 12.9812C4.18056 12.9996 4.47171 13 4.9 13H11.1C11.5283 13 11.8194 12.9996 12.0445 12.9812C12.2637 12.9633 12.3758 12.9309 12.454 12.891C12.6422 12.7951 12.7951 12.6422 12.891 12.454C12.9309 12.3758 12.9633 12.2637 12.9812 12.0445C12.9996 11.8194 13 11.5283 13 11.1V6.99998L14 5.99998V11.1V11.1207C14 11.5231 14 11.8553 13.9779 12.1259C13.9549 12.407 13.9057 12.6653 13.782 12.908C13.5903 13.2843 13.2843 13.5903 12.908 13.782C12.6653 13.9057 12.407 13.9549 12.1259 13.9779C11.8553 14 11.5231 14 11.1207 14H11.1H4.9H4.87934C4.47686 14 4.14468 14 3.87409 13.9779C3.59304 13.9549 3.33469 13.9057 3.09202 13.782C2.7157 13.5903 2.40973 13.2843 2.21799 12.908C2.09434 12.6653 2.04506 12.407 2.0221 12.1259C1.99999 11.8553 1.99999 11.5231 2 11.1207V11.1206V11.1V4.9V4.87935V4.87932V4.87931C1.99999 4.47685 1.99999 4.14468 2.0221 3.87409C2.04506 3.59304 2.09434 3.33469 2.21799 3.09202C2.40973 2.71569 2.7157 2.40973 3.09202 2.21799C3.33469 2.09434 3.59304 2.04506 3.87409 2.0221C4.14468 1.99999 4.47685 1.99999 4.87932 2H4.87935H4.9H9.99998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3s = ["color"];
var PinBottomIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3s);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M13.5 13.95C13.7485 13.95 13.95 13.7485 13.95 13.5C13.95 13.2514 13.7485 13.05 13.5 13.05L1.49995 13.05C1.25142 13.05 1.04995 13.2514 1.04995 13.5C1.04995 13.7485 1.25142 13.95 1.49995 13.95L13.5 13.95ZM11.0681 7.5683C11.2439 7.39257 11.2439 7.10764 11.0681 6.93191C10.8924 6.75617 10.6075 6.75617 10.4317 6.93191L7.94993 9.41371L7.94993 1.49998C7.94993 1.25146 7.74846 1.04998 7.49993 1.04998C7.2514 1.04998 7.04993 1.25146 7.04993 1.49998L7.04993 9.41371L4.56813 6.93191C4.39239 6.75617 4.10746 6.75617 3.93173 6.93191C3.75599 7.10764 3.75599 7.39257 3.93173 7.5683L7.18173 10.8183C7.35746 10.994 7.64239 10.994 7.81812 10.8183L11.0681 7.5683Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3v = ["color"];
var PinTopIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3v);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M1.50005 1.05005C1.25152 1.05005 1.05005 1.25152 1.05005 1.50005C1.05005 1.74858 1.25152 1.95005 1.50005 1.95005L13.5 1.95005C13.7486 1.95005 13.95 1.74858 13.95 1.50005C13.95 1.25152 13.7486 1.05005 13.5 1.05005H1.50005ZM3.93188 7.43169C3.75614 7.60743 3.75614 7.89236 3.93188 8.06809C4.10761 8.24383 4.39254 8.24383 4.56827 8.06809L7.05007 5.58629V13.5C7.05007 13.7485 7.25155 13.95 7.50007 13.95C7.7486 13.95 7.95007 13.7485 7.95007 13.5L7.95007 5.58629L10.4319 8.06809C10.6076 8.24383 10.8925 8.24383 11.0683 8.06809C11.244 7.89235 11.244 7.60743 11.0683 7.43169L7.81827 4.18169C7.64254 4.00596 7.35761 4.00596 7.18188 4.18169L3.93188 7.43169Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3x = ["color"];
var PlusIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3x);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M8 2.75C8 2.47386 7.77614 2.25 7.5 2.25C7.22386 2.25 7 2.47386 7 2.75V7H2.75C2.47386 7 2.25 7.22386 2.25 7.5C2.25 7.77614 2.47386 8 2.75 8H7V12.25C7 12.5261 7.22386 12.75 7.5 12.75C7.77614 12.75 8 12.5261 8 12.25V8H12.25C12.5261 8 12.75 7.77614 12.75 7.5C12.75 7.22386 12.5261 7 12.25 7H8V2.75Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3z = ["color"];
var QuestionMarkIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3z);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M5.07505 4.10001C5.07505 2.91103 6.25727 1.92502 7.50005 1.92502C8.74283 1.92502 9.92505 2.91103 9.92505 4.10001C9.92505 5.19861 9.36782 5.71436 8.61854 6.37884L8.58757 6.4063C7.84481 7.06467 6.92505 7.87995 6.92505 9.5C6.92505 9.81757 7.18248 10.075 7.50005 10.075C7.81761 10.075 8.07505 9.81757 8.07505 9.5C8.07505 8.41517 8.62945 7.90623 9.38156 7.23925L9.40238 7.22079C10.1496 6.55829 11.075 5.73775 11.075 4.10001C11.075 2.12757 9.21869 0.775024 7.50005 0.775024C5.7814 0.775024 3.92505 2.12757 3.92505 4.10001C3.92505 4.41758 4.18249 4.67501 4.50005 4.67501C4.81761 4.67501 5.07505 4.41758 5.07505 4.10001ZM7.50005 13.3575C7.9833 13.3575 8.37505 12.9657 8.37505 12.4825C8.37505 11.9992 7.9833 11.6075 7.50005 11.6075C7.0168 11.6075 6.62505 11.9992 6.62505 12.4825C6.62505 12.9657 7.0168 13.3575 7.50005 13.3575Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3I = ["color"];
var RotateCounterClockwiseIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3I);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M7.59664 2.93628C7.76085 3.06401 8.00012 2.94698 8.00012 2.73895V1.99998C9.98143 2 11.1848 2.3637 11.9105 3.08945C12.6363 3.81522 13 5.0186 13 6.99998C13 7.27613 13.2239 7.49998 13.5 7.49998C13.7761 7.49998 14 7.27613 14 6.99998C14 4.9438 13.6325 3.39719 12.6176 2.38234C11.6028 1.36752 10.0562 0.999999 8.00012 0.999984V0.261266C8.00012 0.0532293 7.76085 -0.0637944 7.59664 0.063928L6.00384 1.30277C5.87516 1.40286 5.87516 1.59735 6.00384 1.69744L7.59664 2.93628ZM9.5 5H2.5C2.22386 5 2 5.22386 2 5.5V12.5C2 12.7761 2.22386 13 2.5 13H9.5C9.77614 13 10 12.7761 10 12.5V5.5C10 5.22386 9.77614 5 9.5 5ZM2.5 4C1.67157 4 1 4.67157 1 5.5V12.5C1 13.3284 1.67157 14 2.5 14H9.5C10.3284 14 11 13.3284 11 12.5V5.5C11 4.67157 10.3284 4 9.5 4H2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$42 = ["color"];
var SpaceEvenlyHorizontallyIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$42);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M14.4999 0.999992C14.2237 0.999992 13.9999 1.22385 13.9999 1.49999L13.9999 13.4999C13.9999 13.776 14.2237 13.9999 14.4999 13.9999C14.776 13.9999 14.9999 13.776 14.9999 13.4999L14.9999 1.49999C14.9999 1.22385 14.776 0.999992 14.4999 0.999992ZM0.499996 0.999992C0.223856 0.999992 -9.78509e-09 1.22385 -2.18556e-08 1.49999L4.07279e-07 13.4999C3.95208e-07 13.776 0.223855 13.9999 0.499996 13.9999C0.776136 13.9999 0.999992 13.776 0.999992 13.4999L0.999992 1.49999C0.999992 1.22385 0.776136 0.999992 0.499996 0.999992ZM1.99998 6.99994C1.99998 6.44766 2.44769 5.99995 2.99998 5.99995L5.99995 5.99995C6.55223 5.99995 6.99994 6.44766 6.99994 6.99994L6.99994 7.99993C6.99994 8.55221 6.55223 8.99992 5.99995 8.99992L2.99998 8.99992C2.4477 8.99992 1.99998 8.55221 1.99998 7.99993L1.99998 6.99994ZM8.99993 5.99995C8.44765 5.99995 7.99993 6.44766 7.99993 6.99994L7.99993 7.99993C7.99993 8.55221 8.44765 8.99992 8.99993 8.99992L11.9999 8.99992C12.5522 8.99992 12.9999 8.55221 12.9999 7.99993L12.9999 6.99994C12.9999 6.44766 12.5522 5.99995 11.9999 5.99995L8.99993 5.99995Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$43 = ["color"];
var SpaceEvenlyVerticallyIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$43);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M0.999878 0.5C0.999878 0.223858 1.22374 0 1.49988 0H13.4999C13.776 0 13.9999 0.223858 13.9999 0.5C13.9999 0.776142 13.776 1 13.4999 1H1.49988C1.22374 1 0.999878 0.776142 0.999878 0.5ZM7 2C6.44772 2 6 2.44772 6 3V6C6 6.55228 6.44772 7 7 7H8C8.55228 7 9 6.55228 9 6V3C9 2.44772 8.55228 2 8 2H7ZM7 8C6.44772 8 6 8.44771 6 9V12C6 12.5523 6.44772 13 7 13H8C8.55228 13 9 12.5523 9 12V9C9 8.44772 8.55228 8 8 8H7ZM1.49988 14C1.22374 14 0.999878 14.2239 0.999878 14.5C0.999878 14.7761 1.22374 15 1.49988 15H13.4999C13.776 15 13.9999 14.7761 13.9999 14.5C13.9999 14.2239 13.776 14 13.4999 14H1.49988Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$48 = ["color"];
var SquareIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$48);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M1 1H1.5H13.5H14V1.5V13.5V14H13.5H1.5H1V13.5V1.5V1ZM2 2V13H13V2H2Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4f = ["color"];
var StretchHorizontallyIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4f);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M14.4999 0.999992C14.2237 0.999992 13.9999 1.22385 13.9999 1.49999L13.9999 5.99995L0.999992 5.99995L0.999992 1.49999C0.999992 1.22385 0.776136 0.999992 0.499996 0.999992C0.223856 0.999992 -9.78509e-09 1.22385 -2.18556e-08 1.49999L4.07279e-07 13.4999C3.95208e-07 13.776 0.223855 13.9999 0.499996 13.9999C0.776136 13.9999 0.999992 13.776 0.999992 13.4999L0.999992 8.99992L13.9999 8.99992L13.9999 13.4999C13.9999 13.776 14.2237 13.9999 14.4999 13.9999C14.776 13.9999 14.9999 13.776 14.9999 13.4999L14.9999 1.49999C14.9999 1.22385 14.776 0.999992 14.4999 0.999992Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4g = ["color"];
var StretchVerticallyIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4g);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M0.999878 0.5C0.999878 0.223858 1.22374 0 1.49988 0H13.4999C13.776 0 13.9999 0.223858 13.9999 0.5C13.9999 0.776142 13.776 1 13.4999 1H6H1.49988C1.22374 1 0.999878 0.776142 0.999878 0.5ZM9 14V1L6 1V14H1.49988C1.22374 14 0.999878 14.2239 0.999878 14.5C0.999878 14.7761 1.22374 15 1.49988 15H13.4999C13.776 15 13.9999 14.7761 13.9999 14.5C13.9999 14.2239 13.776 14 13.4999 14H9Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4n = ["color"];
var TextIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4n);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M3.94993 2.95002L3.94993 4.49998C3.94993 4.74851 3.74845 4.94998 3.49993 4.94998C3.2514 4.94998 3.04993 4.74851 3.04993 4.49998V2.50004C3.04993 2.45246 3.05731 2.40661 3.07099 2.36357C3.12878 2.18175 3.29897 2.05002 3.49993 2.05002H11.4999C11.6553 2.05002 11.7922 2.12872 11.8731 2.24842C11.9216 2.32024 11.9499 2.40682 11.9499 2.50002L11.9499 2.50004V4.49998C11.9499 4.74851 11.7485 4.94998 11.4999 4.94998C11.2514 4.94998 11.0499 4.74851 11.0499 4.49998V2.95002H8.04993V12.05H9.25428C9.50281 12.05 9.70428 12.2515 9.70428 12.5C9.70428 12.7486 9.50281 12.95 9.25428 12.95H5.75428C5.50575 12.95 5.30428 12.7486 5.30428 12.5C5.30428 12.2515 5.50575 12.05 5.75428 12.05H6.94993V2.95002H3.94993Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4p = ["color"];
var TextAlignCenterIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4p);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM4 7.5C4 7.22386 4.22386 7 4.5 7H10.5C10.7761 7 11 7.22386 11 7.5C11 7.77614 10.7761 8 10.5 8H4.5C4.22386 8 4 7.77614 4 7.5ZM3 10.5C3 10.2239 3.22386 10 3.5 10H11.5C11.7761 10 12 10.2239 12 10.5C12 10.7761 11.7761 11 11.5 11H3.5C3.22386 11 3 10.7761 3 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4q = ["color"];
var TextAlignJustifyIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4q);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M2.5 4C2.22386 4 2 4.22386 2 4.5C2 4.77614 2.22386 5 2.5 5H12.5C12.7761 5 13 4.77614 13 4.5C13 4.22386 12.7761 4 12.5 4H2.5ZM2 7.5C2 7.22386 2.22386 7 2.5 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H2.5C2.22386 8 2 7.77614 2 7.5ZM2 10.5C2 10.2239 2.22386 10 2.5 10H12.5C12.7761 10 13 10.2239 13 10.5C13 10.7761 12.7761 11 12.5 11H2.5C2.22386 11 2 10.7761 2 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4r = ["color"];
var TextAlignLeftIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4r);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM2 7.5C2 7.22386 2.22386 7 2.5 7H7.5C7.77614 7 8 7.22386 8 7.5C8 7.77614 7.77614 8 7.5 8H2.5C2.22386 8 2 7.77614 2 7.5ZM2 10.5C2 10.2239 2.22386 10 2.5 10H10.5C10.7761 10 11 10.2239 11 10.5C11 10.7761 10.7761 11 10.5 11H2.5C2.22386 11 2 10.7761 2 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4t = ["color"];
var TextAlignRightIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4t);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM7 7.5C7 7.22386 7.22386 7 7.5 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H7.5C7.22386 8 7 7.77614 7 7.5ZM4 10.5C4 10.2239 4.22386 10 4.5 10H12.5C12.7761 10 13 10.2239 13 10.5C13 10.7761 12.7761 11 12.5 11H4.5C4.22386 11 4 10.7761 4 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4R = ["color"];
var VercelLogoIcon = /* @__PURE__ */ (0, import_react15.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4R);
  return (0, import_react15.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react15.createElement)("path", {
    d: "M7.49998 1L6.92321 2.00307L1.17498 12L0.599976 13H1.7535H13.2464H14.4L13.825 12L8.07674 2.00307L7.49998 1ZM7.49998 3.00613L2.3285 12H12.6714L7.49998 3.00613Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});

// ../../packages/tldraw/dist/index.mjs
var Vt = __toESM(require_react(), 1);
var Vi = __toESM(require_react(), 1);
var Ce = __toESM(require_react(), 1);
var $t = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-visually-hidden/dist/index.module.js
var r10 = __toESM(require_react());
var VisuallyHidden = /* @__PURE__ */ r10.forwardRef((i10, o10) => /* @__PURE__ */ r10.createElement(Primitive.span, _extends2({}, i10, { ref: o10, style: __spreadValues({ position: "absolute", border: 0, width: 1, height: 1, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", wordWrap: "normal" }, i10.style) })));
var Root6 = VisuallyHidden;

// ../../node_modules/@radix-ui/react-use-previous/dist/index.module.js
var e12 = __toESM(require_react());
function usePrevious(r11) {
  const u10 = e12.useRef({ value: r11, previous: r11 });
  return e12.useMemo(() => (u10.current.value !== r11 && (u10.current.previous = u10.current.value, u10.current.value = r11), u10.current.previous), [r11]);
}

// ../../node_modules/@radix-ui/react-tooltip/dist/index.module.js
var T4 = __toESM(require_react());
var [w4, x3] = createContextScope("Tooltip", [l5]);
var g4 = l5();
var E3 = 700;
var [v3, b5] = w4("TooltipProvider", { isOpenDelayed: true, delayDuration: E3, onOpen: () => {
}, onClose: () => {
} });
var [y3, _2] = w4("Tooltip");
var Tooltip = (o10) => {
  const { __scopeTooltip: t12, children: r11, open: i10, defaultOpen: a10 = false, onOpenChange: l10, delayDuration: c10 } = o10, s10 = b5("Tooltip", t12), u10 = g4(t12), [d10, m10] = T4.useState(null), f10 = useId(), C10 = T4.useRef(0), w10 = c10 != null ? c10 : s10.delayDuration, x10 = T4.useRef(false), { onOpen: E10, onClose: v10 } = s10, [_10 = false, h10] = useControllableState({ prop: i10, defaultProp: a10, onChange: (e13) => {
    e13 && (document.dispatchEvent(new CustomEvent("tooltip.open")), E10()), l10 == null || l10(e13);
  } }), k10 = T4.useMemo(() => _10 ? x10.current ? "delayed-open" : "instant-open" : "closed", [_10]), D10 = T4.useCallback(() => {
    window.clearTimeout(C10.current), x10.current = false, h10(true);
  }, [h10]), O10 = T4.useCallback(() => {
    window.clearTimeout(C10.current), C10.current = window.setTimeout(() => {
      x10.current = true, h10(true);
    }, w10);
  }, [w10, h10]);
  return T4.useEffect(() => () => window.clearTimeout(C10.current), []), /* @__PURE__ */ T4.createElement(Root3, u10, /* @__PURE__ */ T4.createElement(y3, { scope: t12, contentId: f10, open: _10, stateAttribute: k10, trigger: d10, onTriggerChange: m10, onTriggerEnter: T4.useCallback(() => {
    s10.isOpenDelayed ? O10() : D10();
  }, [s10.isOpenDelayed, O10, D10]), onOpen: T4.useCallback(D10, [D10]), onClose: T4.useCallback(() => {
    window.clearTimeout(C10.current), h10(false), v10();
  }, [h10, v10]) }, r11));
};
var TooltipTrigger = /* @__PURE__ */ T4.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopeTooltip: t12 } = _a4, r11 = __objRest(_a4, ["__scopeTooltip"]), i10 = _2("TooltipTrigger", t12), l10 = g4(t12), c10 = useComposedRefs(o10, i10.onTriggerChange), s10 = T4.useRef(false), u10 = T4.useCallback(() => s10.current = false, []);
  return T4.useEffect(() => () => document.removeEventListener("mouseup", u10), [u10]), /* @__PURE__ */ T4.createElement(Anchor, _extends2({ asChild: true }, l10), /* @__PURE__ */ T4.createElement(Primitive.button, _extends2({ "aria-describedby": i10.open ? i10.contentId : void 0, "data-state": i10.stateAttribute }, r11, { ref: c10, onMouseEnter: composeEventHandlers(e13.onMouseEnter, i10.onTriggerEnter), onMouseLeave: composeEventHandlers(e13.onMouseLeave, i10.onClose), onMouseDown: composeEventHandlers(e13.onMouseDown, () => {
    i10.onClose(), s10.current = true, document.addEventListener("mouseup", u10, { once: true });
  }), onFocus: composeEventHandlers(e13.onFocus, () => {
    s10.current || i10.onOpen();
  }), onBlur: composeEventHandlers(e13.onBlur, i10.onClose), onClick: composeEventHandlers(e13.onClick, (e14) => {
    e14.detail === 0 && i10.onClose();
  }) })));
});
var TooltipContent = /* @__PURE__ */ T4.forwardRef((e13, o10) => {
  const _a4 = e13, { forceMount: t12 } = _a4, r11 = __objRest(_a4, ["forceMount"]), n10 = _2("TooltipContent", e13.__scopeTooltip);
  return T4.createElement(Presence, { present: t12 || n10.open }, /* @__PURE__ */ T4.createElement(h3, _extends2({ ref: o10 }, r11)));
});
var h3 = /* @__PURE__ */ T4.forwardRef((e13, i10) => {
  const _a4 = e13, { __scopeTooltip: a10, children: l10, "aria-label": c10, portalled: s10 = true } = _a4, p10 = __objRest(_a4, ["__scopeTooltip", "children", "aria-label", "portalled"]), d10 = _2("TooltipContent", a10), m10 = g4(a10), f10 = s10 ? Portal : T4.Fragment, { onClose: w10 } = d10;
  return useEscapeKeydown(() => w10()), T4.useEffect(() => (document.addEventListener("tooltip.open", w10), () => document.removeEventListener("tooltip.open", w10)), [w10]), /* @__PURE__ */ T4.createElement(f10, null, /* @__PURE__ */ T4.createElement(k3, { __scopeTooltip: a10 }), /* @__PURE__ */ T4.createElement(Content, _extends2({ "data-state": d10.stateAttribute }, m10, p10, { ref: i10, style: __spreadProps(__spreadValues({}, p10.style), { "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)" }) }), /* @__PURE__ */ T4.createElement(Slottable, null, l10), /* @__PURE__ */ T4.createElement(Root6, { id: d10.contentId, role: "tooltip" }, c10 || l10)));
});
var TooltipArrow = /* @__PURE__ */ T4.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopeTooltip: t12 } = _a4, r11 = __objRest(_a4, ["__scopeTooltip"]), i10 = g4(t12);
  return T4.createElement(Arrow2, _extends2({}, i10, r11, { ref: o10 }));
});
function k3(e13) {
  const { __scopeTooltip: o10 } = e13, t12 = _2("CheckTriggerMoved", o10), r11 = useRect(t12.trigger), n10 = r11 == null ? void 0 : r11.left, i10 = usePrevious(n10), a10 = r11 == null ? void 0 : r11.top, l10 = usePrevious(a10), u10 = t12.onClose;
  return T4.useEffect(() => {
    (i10 !== void 0 && i10 !== n10 || l10 !== void 0 && l10 !== a10) && u10();
  }, [u10, i10, l10, n10, a10]), null;
}
var Root7 = Tooltip;
var Trigger2 = TooltipTrigger;
var Content4 = TooltipContent;
var Arrow5 = TooltipArrow;

// ../../packages/tldraw/dist/index.mjs
var Rn = __toESM(require_react(), 1);
var ze = __toESM(require_react(), 1);
var $z = __toESM(require_react(), 1);
var $i = __toESM(require_react(), 1);
var Ki = __toESM(require_react(), 1);
var Wi = __toESM(require_react(), 1);
var _i = __toESM(require_react(), 1);
var Yi = __toESM(require_react(), 1);
var Kz = __toESM(require_react(), 1);
var Zi = __toESM(require_react(), 1);
var $o = __toESM(require_react(), 1);
var Xi = __toESM(require_react(), 1);
var qi = __toESM(require_react(), 1);
var Ji = __toESM(require_react(), 1);
var Qi = __toESM(require_react(), 1);
var No = __toESM(require_react(), 1);
var Wz = __toESM(require_react(), 1);
var _z = __toESM(require_react(), 1);
var er = __toESM(require_react(), 1);
var Yz = __toESM(require_react(), 1);
var J3 = __toESM(require_react(), 1);
var nr = __toESM(require_react(), 1);
var or = __toESM(require_react(), 1);
var sr = __toESM(require_react(), 1);
var zn = __toESM(require_react(), 1);
var ir = __toESM(require_react(), 1);
var mo = __toESM(require_react(), 1);
var et = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-popover/dist/index.module.js
var v4 = __toESM(require_react());
var [C2, g5] = createContextScope("Popover", [l5]);
var x4 = l5();
var [h4, E4] = C2("Popover");
var Popover = (e13) => {
  const { __scopePopover: o10, children: t12, open: n10, defaultOpen: c10, onOpenChange: a10, modal: s10 = false } = e13, i10 = x4(o10), u10 = v4.useRef(null), [d10, m10] = v4.useState(false), [f10 = false, P10] = useControllableState({ prop: n10, defaultProp: c10, onChange: a10 });
  return v4.createElement(Root3, i10, /* @__PURE__ */ v4.createElement(h4, { scope: o10, contentId: useId(), triggerRef: u10, open: f10, onOpenChange: P10, onOpenToggle: v4.useCallback(() => P10((e14) => !e14), [P10]), hasCustomAnchor: d10, onCustomAnchorAdd: v4.useCallback(() => m10(true), []), onCustomAnchorRemove: v4.useCallback(() => m10(false), []), modal: s10 }, t12));
};
var PopoverAnchor = /* @__PURE__ */ v4.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopePopover: r11 } = _a4, t12 = __objRest(_a4, ["__scopePopover"]), n10 = E4("PopoverAnchor", r11), c10 = x4(r11), { onCustomAnchorAdd: a10, onCustomAnchorRemove: s10 } = n10;
  return v4.useEffect(() => (a10(), () => s10()), [a10, s10]), /* @__PURE__ */ v4.createElement(Anchor, _extends2({}, c10, t12, { ref: o10 }));
});
var PopoverTrigger = /* @__PURE__ */ v4.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopePopover: r11 } = _a4, n10 = __objRest(_a4, ["__scopePopover"]), c10 = E4("PopoverTrigger", r11), a10 = x4(r11), s10 = useComposedRefs(o10, c10.triggerRef), i10 = /* @__PURE__ */ v4.createElement(Primitive.button, _extends2({ type: "button", "aria-haspopup": "dialog", "aria-expanded": c10.open, "aria-controls": c10.contentId, "data-state": w5(c10.open) }, n10, { ref: s10, onClick: composeEventHandlers(e13.onClick, c10.onOpenToggle) }));
  return c10.hasCustomAnchor ? i10 : /* @__PURE__ */ v4.createElement(Anchor, _extends2({ asChild: true }, a10), i10);
});
var PopoverContent = /* @__PURE__ */ v4.forwardRef((e13, o10) => {
  const _a4 = e13, { forceMount: r11 } = _a4, t12 = __objRest(_a4, ["forceMount"]), c10 = E4("PopoverContent", e13.__scopePopover);
  return v4.createElement(Presence, { present: r11 || c10.open }, c10.modal ? /* @__PURE__ */ v4.createElement(A3, _extends2({}, t12, { ref: o10 })) : /* @__PURE__ */ v4.createElement(O3, _extends2({}, t12, { ref: o10 })));
});
var A3 = /* @__PURE__ */ v4.forwardRef((r11, t12) => {
  const _a4 = r11, { allowPinchZoom: n10, portalled: c10 = true } = _a4, s10 = __objRest(_a4, ["allowPinchZoom", "portalled"]), i10 = E4("PopoverContent", r11.__scopePopover), p10 = v4.useRef(null), u10 = useComposedRefs(t12, p10), l10 = v4.useRef(false);
  v4.useEffect(() => {
    const o10 = p10.current;
    if (o10)
      return hideOthers(o10);
  }, []);
  const d10 = c10 ? Portal : v4.Fragment;
  return v4.createElement(d10, null, /* @__PURE__ */ v4.createElement(Combination_default, { allowPinchZoom: n10 }, /* @__PURE__ */ v4.createElement(R5, _extends2({}, s10, { ref: u10, trapFocus: i10.open, disableOutsidePointerEvents: true, onCloseAutoFocus: composeEventHandlers(r11.onCloseAutoFocus, (e13) => {
    var o10;
    e13.preventDefault(), l10.current || (o10 = i10.triggerRef.current) === null || o10 === void 0 || o10.focus();
  }), onPointerDownOutside: composeEventHandlers(r11.onPointerDownOutside, (e13) => {
    const o10 = e13.detail.originalEvent, r12 = o10.button === 0 && o10.ctrlKey === true, t13 = o10.button === 2 || r12;
    l10.current = t13;
  }, { checkForDefaultPrevented: false }), onFocusOutside: composeEventHandlers(r11.onFocusOutside, (e13) => e13.preventDefault(), { checkForDefaultPrevented: false }) }))));
});
var O3 = /* @__PURE__ */ v4.forwardRef((e13, o10) => {
  const _a4 = e13, { portalled: r11 = true } = _a4, t12 = __objRest(_a4, ["portalled"]), n10 = E4("PopoverContent", e13.__scopePopover), c10 = v4.useRef(false), s10 = r11 ? Portal : v4.Fragment;
  return v4.createElement(s10, null, /* @__PURE__ */ v4.createElement(R5, _extends2({}, t12, { ref: o10, trapFocus: false, disableOutsidePointerEvents: false, onCloseAutoFocus: (o11) => {
    var r12, t13;
    ((r12 = e13.onCloseAutoFocus) === null || r12 === void 0 || r12.call(e13, o11), o11.defaultPrevented) || (c10.current || (t13 = n10.triggerRef.current) === null || t13 === void 0 || t13.focus(), o11.preventDefault());
    c10.current = false;
  }, onInteractOutside: (o11) => {
    var r12, t13;
    (r12 = e13.onInteractOutside) === null || r12 === void 0 || r12.call(e13, o11), o11.defaultPrevented || (c10.current = true);
    const a10 = o11.target;
    ((t13 = n10.triggerRef.current) === null || t13 === void 0 ? void 0 : t13.contains(a10)) && o11.preventDefault();
  } })));
});
var R5 = /* @__PURE__ */ v4.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopePopover: r11, trapFocus: t12, onOpenAutoFocus: n10, onCloseAutoFocus: a10, disableOutsidePointerEvents: u10, onEscapeKeyDown: l10, onPointerDownOutside: d10, onFocusOutside: m10, onInteractOutside: f10 } = _a4, C10 = __objRest(_a4, ["__scopePopover", "trapFocus", "onOpenAutoFocus", "onCloseAutoFocus", "disableOutsidePointerEvents", "onEscapeKeyDown", "onPointerDownOutside", "onFocusOutside", "onInteractOutside"]), g10 = E4("PopoverContent", r11), h10 = x4(r11);
  return useFocusGuards(), /* @__PURE__ */ v4.createElement(FocusScope, { asChild: true, loop: true, trapped: t12, onMountAutoFocus: n10, onUnmountAutoFocus: a10 }, /* @__PURE__ */ v4.createElement(DismissableLayer, { asChild: true, disableOutsidePointerEvents: u10, onInteractOutside: f10, onEscapeKeyDown: l10, onPointerDownOutside: d10, onFocusOutside: m10, onDismiss: () => g10.onOpenChange(false) }, /* @__PURE__ */ v4.createElement(Content, _extends2({ "data-state": w5(g10.open), role: "dialog", id: g10.contentId }, h10, C10, { ref: o10, style: __spreadProps(__spreadValues({}, C10.style), { "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)" }) }))));
});
function w5(e13) {
  return e13 ? "open" : "closed";
}
var Root8 = Popover;
var Anchor3 = PopoverAnchor;
var Trigger3 = PopoverTrigger;
var Content5 = PopoverContent;

// ../../packages/tldraw/dist/index.mjs
var Nt = __toESM(require_react(), 1);
var Ke = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-dialog/dist/index.module.js
var m6 = __toESM(require_react());
var [x5, C3] = createContextScope("Dialog");
var [v5, E5] = x5("Dialog");
var Dialog = (e13) => {
  const { __scopeDialog: o10, children: t12, open: r11, defaultOpen: n10, onOpenChange: a10, modal: i10 = true, allowPinchZoom: l10 } = e13, c10 = m6.useRef(null), p10 = m6.useRef(null), [d10 = false, f10] = useControllableState({ prop: r11, defaultProp: n10, onChange: a10 });
  return m6.createElement(v5, { scope: o10, triggerRef: c10, contentRef: p10, contentId: useId(), titleId: useId(), descriptionId: useId(), open: d10, onOpenChange: f10, onOpenToggle: m6.useCallback(() => f10((e14) => !e14), [f10]), modal: i10, allowPinchZoom: l10 }, t12);
};
var DialogTrigger = /* @__PURE__ */ m6.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopeDialog: t12 } = _a4, r11 = __objRest(_a4, ["__scopeDialog"]), a10 = E5("DialogTrigger", t12), i10 = useComposedRefs(o10, a10.triggerRef);
  return m6.createElement(Primitive.button, _extends2({ type: "button", "aria-haspopup": "dialog", "aria-expanded": a10.open, "aria-controls": a10.contentId, "data-state": b6(a10.open) }, r11, { ref: i10, onClick: composeEventHandlers(e13.onClick, a10.onOpenToggle) }));
});
var DialogPortal = (e13) => {
  const { __scopeDialog: o10, forceMount: t12, children: r11, container: n10 } = e13, l10 = E5("DialogPortal", o10);
  return m6.createElement(m6.Fragment, null, m6.Children.map(r11, (e14) => /* @__PURE__ */ m6.createElement(Presence, { present: t12 || l10.open }, /* @__PURE__ */ m6.createElement(UnstablePortal, { asChild: true, container: n10 }, e14))));
};
var DialogOverlay = /* @__PURE__ */ m6.forwardRef((e13, o10) => {
  const _a4 = e13, { forceMount: t12 } = _a4, r11 = __objRest(_a4, ["forceMount"]), n10 = E5("DialogOverlay", e13.__scopeDialog);
  return n10.modal ? /* @__PURE__ */ m6.createElement(Presence, { present: t12 || n10.open }, /* @__PURE__ */ m6.createElement(R6, _extends2({}, r11, { ref: o10 }))) : null;
});
var R6 = /* @__PURE__ */ m6.forwardRef((o10, r11) => {
  const _a4 = o10, { __scopeDialog: a10 } = _a4, i10 = __objRest(_a4, ["__scopeDialog"]), l10 = E5("DialogOverlay", a10);
  return m6.createElement(Combination_default, { as: Slot, allowPinchZoom: l10.allowPinchZoom, shards: [l10.contentRef] }, /* @__PURE__ */ m6.createElement(Primitive.div, _extends2({ "data-state": b6(l10.open) }, i10, { ref: r11, style: __spreadValues({ pointerEvents: "auto" }, i10.style) })));
});
var DialogContent = /* @__PURE__ */ m6.forwardRef((e13, o10) => {
  const _a4 = e13, { forceMount: t12 } = _a4, r11 = __objRest(_a4, ["forceMount"]), n10 = E5("DialogContent", e13.__scopeDialog);
  return m6.createElement(Presence, { present: t12 || n10.open }, n10.modal ? /* @__PURE__ */ m6.createElement(_3, _extends2({}, r11, { ref: o10 })) : /* @__PURE__ */ m6.createElement(O4, _extends2({}, r11, { ref: o10 })));
});
var _3 = /* @__PURE__ */ m6.forwardRef((e13, t12) => {
  const r11 = E5("DialogContent", e13.__scopeDialog), n10 = m6.useRef(null), a10 = useComposedRefs(t12, r11.contentRef, n10);
  return m6.useEffect(() => {
    const e14 = n10.current;
    if (e14)
      return hideOthers(e14);
  }, []), /* @__PURE__ */ m6.createElement(h5, _extends2({}, e13, { ref: a10, trapFocus: r11.open, disableOutsidePointerEvents: true, onCloseAutoFocus: composeEventHandlers(e13.onCloseAutoFocus, (e14) => {
    var o10;
    e14.preventDefault(), (o10 = r11.triggerRef.current) === null || o10 === void 0 || o10.focus();
  }), onPointerDownOutside: composeEventHandlers(e13.onPointerDownOutside, (e14) => {
    const o10 = e14.detail.originalEvent, t13 = o10.button === 0 && o10.ctrlKey === true;
    (o10.button === 2 || t13) && e14.preventDefault();
  }), onFocusOutside: composeEventHandlers(e13.onFocusOutside, (e14) => e14.preventDefault()) }));
});
var O4 = /* @__PURE__ */ m6.forwardRef((e13, o10) => {
  const t12 = E5("DialogContent", e13.__scopeDialog), r11 = m6.useRef(false);
  return m6.createElement(h5, _extends2({}, e13, { ref: o10, trapFocus: false, disableOutsidePointerEvents: false, onCloseAutoFocus: (o11) => {
    var n10, a10;
    ((n10 = e13.onCloseAutoFocus) === null || n10 === void 0 || n10.call(e13, o11), o11.defaultPrevented) || (r11.current || (a10 = t12.triggerRef.current) === null || a10 === void 0 || a10.focus(), o11.preventDefault());
    r11.current = false;
  }, onInteractOutside: (o11) => {
    var n10, a10;
    (n10 = e13.onInteractOutside) === null || n10 === void 0 || n10.call(e13, o11), o11.defaultPrevented || (r11.current = true);
    const i10 = o11.target;
    ((a10 = t12.triggerRef.current) === null || a10 === void 0 ? void 0 : a10.contains(i10)) && o11.preventDefault();
  } }));
});
var h5 = /* @__PURE__ */ m6.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopeDialog: t12, trapFocus: n10, onOpenAutoFocus: a10, onCloseAutoFocus: i10 } = _a4, s10 = __objRest(_a4, ["__scopeDialog", "trapFocus", "onOpenAutoFocus", "onCloseAutoFocus"]), u10 = E5("DialogContent", t12), p10 = m6.useRef(null), d10 = useComposedRefs(o10, p10);
  return useFocusGuards(), /* @__PURE__ */ m6.createElement(m6.Fragment, null, /* @__PURE__ */ m6.createElement(FocusScope, { asChild: true, loop: true, trapped: n10, onMountAutoFocus: a10, onUnmountAutoFocus: i10 }, /* @__PURE__ */ m6.createElement(DismissableLayer, _extends2({ role: "dialog", id: u10.contentId, "aria-describedby": u10.descriptionId, "aria-labelledby": u10.titleId, "data-state": b6(u10.open) }, s10, { ref: d10, onDismiss: () => u10.onOpenChange(false) }))), false);
});
var DialogTitle = /* @__PURE__ */ m6.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopeDialog: t12 } = _a4, r11 = __objRest(_a4, ["__scopeDialog"]), a10 = E5("DialogTitle", t12);
  return m6.createElement(Primitive.h2, _extends2({ id: a10.titleId }, r11, { ref: o10 }));
});
var DialogClose = /* @__PURE__ */ m6.forwardRef((e13, o10) => {
  const _a4 = e13, { __scopeDialog: t12 } = _a4, r11 = __objRest(_a4, ["__scopeDialog"]), a10 = E5("DialogClose", t12);
  return m6.createElement(Primitive.button, _extends2({ type: "button" }, r11, { ref: o10, onClick: composeEventHandlers(e13.onClick, () => a10.onOpenChange(false)) }));
});
function b6(e13) {
  return e13 ? "open" : "closed";
}
var [w6, F4] = createContext4("DialogTitleWarning", { contentName: "DialogContent", titleName: "DialogTitle", docsSlug: "dialog" });
var Root9 = Dialog;
var Trigger4 = DialogTrigger;
var Portal2 = DialogPortal;
var Overlay3 = DialogOverlay;
var Content6 = DialogContent;
var Title = DialogTitle;
var Close = DialogClose;

// ../../packages/tldraw/dist/index.mjs
var it = __toESM(require_react(), 1);
var H4 = __toESM(require_react(), 1);
var fe2 = __toESM(require_react(), 1);
var me2 = __toESM(require_react(), 1);
var Se = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-alert-dialog/dist/index.module.js
var a5 = __toESM(require_react());
var [c7, s7] = createContextScope("AlertDialog", [C3]);
var p5 = C3();
var AlertDialog = (e13) => {
  const _a4 = e13, { __scopeAlertDialog: t12 } = _a4, o10 = __objRest(_a4, ["__scopeAlertDialog"]), l10 = p5(t12);
  return a5.createElement(Root9, _extends2({}, l10, o10, { modal: true }));
};
var AlertDialogTrigger = /* @__PURE__ */ a5.forwardRef((e13, t12) => {
  const _a4 = e13, { __scopeAlertDialog: o10 } = _a4, l10 = __objRest(_a4, ["__scopeAlertDialog"]), n10 = p5(o10);
  return a5.createElement(Trigger4, _extends2({}, n10, l10, { ref: t12 }));
});
var AlertDialogPortal = (e13) => {
  const _a4 = e13, { __scopeAlertDialog: t12 } = _a4, o10 = __objRest(_a4, ["__scopeAlertDialog"]), l10 = p5(t12);
  return a5.createElement(Portal2, _extends2({}, l10, o10));
};
var AlertDialogOverlay = /* @__PURE__ */ a5.forwardRef((e13, t12) => {
  const _a4 = e13, { __scopeAlertDialog: o10 } = _a4, l10 = __objRest(_a4, ["__scopeAlertDialog"]), n10 = p5(o10);
  return a5.createElement(Overlay3, _extends2({}, n10, l10, { ref: t12 }));
});
var [g6, D4] = c7("AlertDialogContent");
var AlertDialogContent = /* @__PURE__ */ a5.forwardRef((o10, n10) => {
  const _a4 = o10, { __scopeAlertDialog: c10, children: s10 } = _a4, D10 = __objRest(_a4, ["__scopeAlertDialog", "children"]), A10 = p5(c10), m10 = a5.useRef(null), u10 = useComposedRefs(n10, m10), x10 = a5.useRef(null);
  return a5.createElement(w6, { contentName: "AlertDialogContent", titleName: f6, docsSlug: "alert-dialog" }, /* @__PURE__ */ a5.createElement(g6, { scope: c10, cancelRef: x10 }, /* @__PURE__ */ a5.createElement(Content6, _extends2({ role: "alertdialog" }, A10, D10, { ref: u10, onOpenAutoFocus: composeEventHandlers(D10.onOpenAutoFocus, (e13) => {
    var t12;
    e13.preventDefault(), (t12 = x10.current) === null || t12 === void 0 || t12.focus({ preventScroll: true });
  }), onPointerDownOutside: (e13) => e13.preventDefault(), onInteractOutside: (e13) => e13.preventDefault() }), /* @__PURE__ */ a5.createElement(Slottable, null, s10), false)));
});
var f6 = "AlertDialogTitle";
var AlertDialogAction = /* @__PURE__ */ a5.forwardRef((e13, t12) => {
  const _a4 = e13, { __scopeAlertDialog: o10 } = _a4, l10 = __objRest(_a4, ["__scopeAlertDialog"]), n10 = p5(o10);
  return a5.createElement(Close, _extends2({}, n10, l10, { ref: t12 }));
});
var AlertDialogCancel = /* @__PURE__ */ a5.forwardRef((e13, t12) => {
  const _a4 = e13, { __scopeAlertDialog: o10 } = _a4, n10 = __objRest(_a4, ["__scopeAlertDialog"]), { cancelRef: c10 } = D4("AlertDialogCancel", o10), s10 = p5(o10), g10 = useComposedRefs(t12, c10);
  return a5.createElement(Close, _extends2({}, s10, n10, { ref: g10 }));
});
var Root10 = AlertDialog;
var Trigger5 = AlertDialogTrigger;
var Portal3 = AlertDialogPortal;
var Overlay4 = AlertDialogOverlay;
var Content7 = AlertDialogContent;
var Action = AlertDialogAction;
var Cancel = AlertDialogCancel;

// ../../packages/tldraw/dist/index.mjs
var fo = __toESM(require_react(), 1);
var ht = __toESM(require_react(), 1);
var ne2 = __toESM(require_react(), 1);
var ye = __toESM(require_react(), 1);
var lr = __toESM(require_react(), 1);
var k4 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-context-menu/dist/index.module.js
var u4 = __toESM(require_react());
var [s8, i6] = createContextScope("ContextMenu", [S2]);
var x6 = S2();
var [p6, C4] = s8("ContextMenu");
var ContextMenu = (n10) => {
  const { __scopeContextMenu: o10, children: r11, onOpenChange: c10, dir: s10, modal: i10 = true } = n10, [C10, m10] = u4.useState(false), f10 = l7("ContextMenu", o10), d10 = x6(o10), M10 = useCallbackRef(c10), R10 = u4.useCallback((e13) => {
    m10(e13), M10(e13);
  }, [M10]);
  return f10.isInsideContent ? /* @__PURE__ */ u4.createElement(p6, { scope: o10, isRootMenu: false, open: C10, onOpenChange: R10, modal: i10 }, /* @__PURE__ */ u4.createElement(Sub, _extends2({}, d10, { open: C10, onOpenChange: R10 }), r11)) : /* @__PURE__ */ u4.createElement(p6, { scope: o10, isRootMenu: true, open: C10, onOpenChange: R10, modal: i10 }, /* @__PURE__ */ u4.createElement(Root4, _extends2({}, d10, { dir: s10, open: C10, onOpenChange: R10, modal: i10 }), r11));
};
var ContextMenuTrigger = /* @__PURE__ */ u4.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeContextMenu: r11 } = _a4, s10 = __objRest(_a4, ["__scopeContextMenu"]), i10 = C4("ContextMenuTrigger", r11), p10 = x6(r11), l10 = u4.useRef({ x: 0, y: 0 }), f10 = u4.useRef({ getBoundingClientRect: () => DOMRect.fromRect(__spreadValues({ width: 0, height: 0 }, l10.current)) }), M10 = u4.useRef(0), R10 = u4.useCallback(() => window.clearTimeout(M10.current), []), _10 = (e14) => {
    l10.current = { x: e14.clientX, y: e14.clientY }, i10.onOpenChange(true);
  };
  return u4.useEffect(() => R10, [R10]), /* @__PURE__ */ u4.createElement(m7, { scope: r11, isInsideContent: false }, /* @__PURE__ */ u4.createElement(Anchor2, _extends2({}, p10, { virtualRef: f10 })), /* @__PURE__ */ u4.createElement(Primitive.span, _extends2({}, s10, { ref: n10, style: __spreadValues({ WebkitTouchCallout: "none" }, e13.style), onContextMenu: composeEventHandlers(e13.onContextMenu, (e14) => {
    R10(), e14.preventDefault(), _10(e14);
  }), onPointerDown: composeEventHandlers(e13.onPointerDown, d7((e14) => {
    R10(), M10.current = window.setTimeout(() => _10(e14), 700);
  })), onPointerMove: composeEventHandlers(e13.onPointerMove, d7(R10)), onPointerCancel: composeEventHandlers(e13.onPointerCancel, d7(R10)), onPointerUp: composeEventHandlers(e13.onPointerUp, d7(R10)) })));
});
var [m7, l7] = s8("ContextMenuContent", { isInsideContent: false });
var ContextMenuContent = /* @__PURE__ */ u4.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeContextMenu: o10 } = _a4, r11 = __objRest(_a4, ["__scopeContextMenu"]), c10 = C4("ContextMenuContent", o10), s10 = x6(o10), i10 = __spreadProps(__spreadValues({}, r11), { style: __spreadProps(__spreadValues({}, e13.style), { "--radix-context-menu-content-transform-origin": "var(--radix-popper-transform-origin)" }) });
  return u4.createElement(m7, { scope: o10, isInsideContent: true }, c10.isRootMenu ? /* @__PURE__ */ u4.createElement(f7, _extends2({ __scopeContextMenu: o10 }, i10, { ref: n10 })) : /* @__PURE__ */ u4.createElement(Content2, _extends2({}, s10, i10, { ref: n10 })));
});
var f7 = /* @__PURE__ */ u4.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeContextMenu: o10 } = _a4, r11 = __objRest(_a4, ["__scopeContextMenu"]), c10 = C4("ContextMenuContent", o10), s10 = x6(o10), i10 = u4.useRef(false);
  return u4.createElement(Content2, _extends2({}, s10, r11, { ref: n10, portalled: true, side: "right", sideOffset: 2, align: "start", onCloseAutoFocus: (t12) => {
    var n11;
    (n11 = e13.onCloseAutoFocus) === null || n11 === void 0 || n11.call(e13, t12), !t12.defaultPrevented && i10.current && t12.preventDefault(), i10.current = false;
  }, onInteractOutside: (t12) => {
    var n11;
    (n11 = e13.onInteractOutside) === null || n11 === void 0 || n11.call(e13, t12), t12.defaultPrevented || c10.modal || (i10.current = true);
  } }));
});
var ContextMenuItem = /* @__PURE__ */ u4.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeContextMenu: o10 } = _a4, r11 = __objRest(_a4, ["__scopeContextMenu"]), c10 = x6(o10);
  return u4.createElement(Item2, _extends2({}, c10, r11, { ref: n10 }));
});
var ContextMenuTriggerItem = /* @__PURE__ */ u4.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeContextMenu: o10 } = _a4, r11 = __objRest(_a4, ["__scopeContextMenu"]), c10 = x6(o10);
  return u4.createElement(SubTrigger, _extends2({}, c10, r11, { ref: n10 }));
});
var ContextMenuArrow = /* @__PURE__ */ u4.forwardRef((e13, n10) => {
  const _a4 = e13, { __scopeContextMenu: o10 } = _a4, r11 = __objRest(_a4, ["__scopeContextMenu"]), c10 = x6(o10);
  return u4.createElement(Arrow3, _extends2({}, c10, r11, { ref: n10 }));
});
function d7(e13) {
  return (t12) => t12.pointerType !== "mouse" ? e13(t12) : void 0;
}
var Root11 = ContextMenu;
var Trigger6 = ContextMenuTrigger;
var Content8 = ContextMenuContent;

// ../../packages/tldraw/dist/index.mjs
var Es = __toESM(require_react(), 1);
var mr = __toESM(require_react(), 1);
var import_react_error_boundary = __toESM(require_react_error_boundary_umd(), 1);
var Mt = __toESM(require_react(), 1);
var Sr = Object.defineProperty;
var Zl = Object.defineProperties;
var Xl = Object.getOwnPropertyDescriptors;
var Yo = Object.getOwnPropertySymbols;
var Tr = Object.prototype.hasOwnProperty;
var br = Object.prototype.propertyIsEnumerable;
var Ls = (s10, e13, t12) => e13 in s10 ? Sr(s10, e13, { enumerable: true, configurable: true, writable: true, value: t12 }) : s10[e13] = t12;
var f8 = (s10, e13) => {
  for (var t12 in e13 || (e13 = {}))
    Tr.call(e13, t12) && Ls(s10, t12, e13[t12]);
  if (Yo)
    for (var t12 of Yo(e13))
      br.call(e13, t12) && Ls(s10, t12, e13[t12]);
  return s10;
};
var C5 = (s10, e13) => Zl(s10, Xl(e13));
var Ye = (s10, e13) => {
  var t12 = {};
  for (var n10 in s10)
    Tr.call(s10, n10) && e13.indexOf(n10) < 0 && (t12[n10] = s10[n10]);
  if (s10 != null && Yo)
    for (var n10 of Yo(s10))
      e13.indexOf(n10) < 0 && br.call(s10, n10) && (t12[n10] = s10[n10]);
  return t12;
};
var Ot = (s10, e13) => () => (s10 && (e13 = s10(s10 = 0)), e13);
var Gn = (s10, e13) => {
  for (var t12 in e13)
    Sr(s10, t12, { get: e13[t12], enumerable: true });
};
var d8 = (s10, e13, t12) => (Ls(s10, typeof e13 != "symbol" ? e13 + "" : e13, t12), t12);
var ee = (s10, e13, t12) => new Promise((n10, o10) => {
  var i10 = (r11) => {
    try {
      l10(t12.next(r11));
    } catch (c10) {
      o10(c10);
    }
  }, a10 = (r11) => {
    try {
      l10(t12.throw(r11));
    } catch (c10) {
      o10(c10);
    }
  }, l10 = (r11) => r11.done ? n10(r11.value) : Promise.resolve(r11.value).then(i10, a10);
  l10((t12 = t12.apply(s10, e13)).next());
});
var oc;
var bn;
var yo = Ot(() => {
  oc = (() => {
    if (typeof self == "undefined")
      return false;
    if ("top" in self && self !== top)
      try {
        top.location + "";
      } catch (s10) {
        return false;
      }
    else if ("showOpenFilePicker" in self)
      return "showOpenFilePicker";
    return false;
  })(), bn = oc;
});
var yr = {};
Gn(yr, { default: () => sc });
var sc;
var wr = Ot(() => {
  sc = (...e13) => ee(void 0, [...e13], function* (s10 = [{}]) {
    return Array.isArray(s10) || (s10 = [s10]), new Promise((t12, n10) => {
      let o10 = document.createElement("input");
      o10.type = "file";
      let i10 = [...s10.map((c10) => c10.mimeTypes || []).join(), s10.map((c10) => c10.extensions || []).join()].join();
      o10.multiple = s10[0].multiple || false, o10.accept = i10 || "";
      let a10 = () => r11(n10), l10 = (c10) => {
        typeof r11 == "function" && r11(), t12(c10);
      }, r11 = s10[0].legacySetup && s10[0].legacySetup(l10, a10, o10);
      o10.addEventListener("change", () => {
        l10(o10.multiple ? Array.from(o10.files) : o10.files[0]);
      }), o10.click();
    });
  });
});
var xr = {};
Gn(xr, { default: () => rc });
var ic;
var rc;
var Ir = Ot(() => {
  ic = (s10) => ee(void 0, null, function* () {
    let e13 = yield s10.getFile();
    return e13.handle = s10, e13;
  }), rc = (...e13) => ee(void 0, [...e13], function* (s10 = [{}]) {
    Array.isArray(s10) || (s10 = [s10]);
    let t12 = [];
    s10.forEach((i10, a10) => {
      t12[a10] = { description: i10.description || "", accept: {} }, i10.mimeTypes ? i10.mimeTypes.map((l10) => {
        t12[a10].accept[l10] = i10.extensions || [];
      }) : t12[a10].accept["*/*"] = i10.extensions || [];
    });
    let n10 = yield window.showOpenFilePicker({ id: s10[0].id, startIn: s10[0].startIn, types: t12, multiple: s10[0].multiple || false, excludeAcceptAllOption: s10[0].excludeAcceptAllOption || false }), o10 = yield Promise.all(n10.map(ic));
    return s10[0].multiple ? o10 : o10[0];
  });
});
function Cr(...s10) {
  return ee(this, null, function* () {
    return (yield ac).default(...s10);
  });
}
var ac;
var vr = Ot(() => {
  yo();
  ac = bn ? Promise.resolve().then(() => (Ir(), xr)) : Promise.resolve().then(() => (wr(), yr));
});
var kr = {};
Gn(kr, { default: () => dc });
var dc;
var Dr = Ot(() => {
  dc = (...e13) => ee(void 0, [...e13], function* (s10 = [{}]) {
    return Array.isArray(s10) || (s10 = [s10]), s10[0].recursive = s10[0].recursive || false, new Promise((t12, n10) => {
      let o10 = document.createElement("input");
      o10.type = "file", o10.webkitdirectory = true;
      let i10 = () => l10(n10), a10 = (r11) => {
        typeof l10 == "function" && l10(), t12(r11);
      }, l10 = s10[0].legacySetup && s10[0].legacySetup(a10, i10, o10);
      o10.addEventListener("change", () => {
        let r11 = Array.from(o10.files);
        s10[0].recursive ? s10[0].recursive && s10[0].skipDirectory && (r11 = r11.filter((c10) => c10.webkitRelativePath.split("/").every((u10) => !s10[0].skipDirectory({ name: u10, kind: "directory" })))) : r11 = r11.filter((c10) => c10.webkitRelativePath.split("/").length === 2), a10(r11);
      }), o10.click();
    });
  });
});
var Br = {};
Gn(Br, { default: () => lc });
var Pr;
var lc;
var Mr = Ot(() => {
  Pr = (o10, i10, ...a10) => ee(void 0, [o10, i10, ...a10], function* (s10, e13, t12 = s10.name, n10) {
    let l10 = [], r11 = [];
    for (let c10 of s10.values()) {
      let p10 = `${t12}/${c10.name}`;
      c10.kind === "file" ? r11.push(yield c10.getFile().then((u10) => (u10.directoryHandle = s10, Object.defineProperty(u10, "webkitRelativePath", { configurable: true, enumerable: true, get: () => p10 })))) : c10.kind === "directory" && e13 && (!n10 || !n10(c10)) && l10.push(yield Pr(c10, e13, p10, n10));
    }
    return [...(yield Promise.all(l10)).flat(), ...yield Promise.all(r11)];
  }), lc = (...e13) => ee(void 0, [...e13], function* (s10 = {}) {
    s10.recursive = s10.recursive || false;
    let t12 = yield window.showDirectoryPicker({ id: s10.id, startIn: s10.startIn });
    return Pr(t12, s10.recursive, void 0, s10.skipDirectory);
  });
});
function Er(...s10) {
  return ee(this, null, function* () {
    return (yield cc).default(...s10);
  });
}
var cc;
var Rr = Ot(() => {
  yo();
  cc = bn ? Promise.resolve().then(() => (Mr(), Br)) : Promise.resolve().then(() => (Dr(), kr));
});
var Lr = {};
Gn(Lr, { default: () => pc });
function uc(s10, e13) {
  return ee(this, null, function* () {
    let t12 = s10.getReader(), n10 = new ReadableStream({ start(i10) {
      return a10();
      function a10() {
        return ee(this, null, function* () {
          return t12.read().then(({ done: l10, value: r11 }) => {
            if (l10) {
              i10.close();
              return;
            }
            return i10.enqueue(r11), a10();
          });
        });
      }
    } }), o10 = new Response(n10);
    return t12.releaseLock(), new Blob([yield o10.blob()], { type: e13 });
  });
}
var pc;
var Ar = Ot(() => {
  pc = (t12, ...n10) => ee(void 0, [t12, ...n10], function* (s10, e13 = {}) {
    Array.isArray(e13) && (e13 = e13[0]);
    let o10 = document.createElement("a"), i10 = s10;
    "body" in s10 && (i10 = yield uc(s10.body, s10.headers.get("content-type"))), o10.download = e13.fileName || "Untitled", o10.href = URL.createObjectURL(i10);
    let a10 = () => r11(reject), l10 = () => {
      typeof r11 == "function" && r11();
    }, r11 = e13.legacySetup && e13.legacySetup(l10, a10, o10);
    return o10.addEventListener("click", () => {
      setTimeout(() => URL.revokeObjectURL(o10.href), 30 * 1e3), l10(null);
    }), o10.click(), null;
  });
});
var Hr = {};
Gn(Hr, { default: () => hc });
var hc;
var zr = Ot(() => {
  hc = (o10, ...i10) => ee(void 0, [o10, ...i10], function* (s10, e13 = [{}], t12 = null, n10 = false) {
    Array.isArray(e13) || (e13 = [e13]), e13[0].fileName = e13[0].fileName || "Untitled";
    let a10 = [];
    if (e13.forEach((c10, p10) => {
      a10[p10] = { description: c10.description || "", accept: {} }, c10.mimeTypes ? (p10 === 0 && (s10.type ? c10.mimeTypes.push(s10.type) : s10.headers && s10.headers.get("content-type") && c10.mimeTypes.push(s10.headers.get("content-type"))), c10.mimeTypes.map((u10) => {
        a10[p10].accept[u10] = c10.extensions || [];
      })) : s10.type && (a10[p10].accept[s10.type] = c10.extensions || []);
    }), t12)
      try {
        yield t12.getFile();
      } catch (c10) {
        if (t12 = null, n10)
          throw c10;
      }
    let l10 = t12 || (yield window.showSaveFilePicker({ suggestedName: e13[0].fileName, id: e13[0].id, startIn: e13[0].startIn, types: a10, excludeAcceptAllOption: e13[0].excludeAcceptAllOption || false })), r11 = yield l10.createWritable();
    return "stream" in s10 ? (yield s10.stream().pipeTo(r11), l10) : "body" in s10 ? (yield s10.body.pipeTo(r11), l10) : (yield r11.write(blob), yield r11.close(), l10);
  });
});
function Or(...s10) {
  return ee(this, null, function* () {
    return (yield mc).default(...s10);
  });
}
var mc;
var Fr = Ot(() => {
  yo();
  mc = bn ? Promise.resolve().then(() => (zr(), Hr)) : Promise.resolve().then(() => (Ar(), Lr));
});
var ns = {};
Gn(ns, { directoryOpen: () => Er, fileOpen: () => Cr, fileSave: () => Or, supported: () => bn });
var wo = Ot(() => {
  vr();
  Rr();
  Fr();
  yo();
});
var { styled: M3, createTheme: Ql } = q({ themeMap: f8({}, n), theme: { colors: { bounds: "rgba(65, 132, 244, 1.000)", boundsBg: "rgba(65, 132, 244, 0.05)", hover: "#ececec", overlay: "rgba(0, 0, 0, 0.15)", overlayContrast: "rgba(255, 255, 255, 0.15)", panel: "#fefefe", panelContrast: "#ffffff", selected: "rgba(66, 133, 244, 1.000)", selectedContrast: "#fefefe", sponsor: "#ec6cb9", sponsorContrast: "#ec6cb944", text: "#333333", tooltip: "#1d1d1d", tooltipContrast: "#ffffff", warn: "rgba(255, 100, 100, 1)", canvas: "rgb(248, 249, 250)" }, shadows: { 2: "0px 1px 1px rgba(0, 0, 0, 0.14)", 3: "0px 2px 3px rgba(0, 0, 0, 0.14)", 4: "0px 4px 5px -1px rgba(0, 0, 0, 0.14)", 8: "0px 12px 17px rgba(0, 0, 0, 0.14)", 12: "0px 12px 17px rgba(0, 0, 0, 0.14)", 24: "0px 24px 38px rgba(0, 0, 0, 0.14)", key: "1px 1px rgba(0,0,0,1)", panel: `0px 0px 16px -1px rgba(0, 0, 0, 0.05), 
        0px 0px 16px -8px rgba(0, 0, 0, 0.05), 
        0px 0px 16px -12px rgba(0, 0, 0, 0.12),
        0px 0px 2px 0px rgba(0, 0, 0, 0.08)` }, space: { 0: "2px", 1: "3px", 2: "4px", 3: "8px", 4: "12px", 5: "16px", 6: "32px", 7: "48px" }, fontSizes: { 0: "10px", 1: "12px", 2: "13px", 3: "16px", 4: "18px" }, fonts: { ui: '"Recursive", system-ui, sans-serif', body: '"Recursive", system-ui, sans-serif', mono: '"Recursive Mono", monospace' }, fontWeights: {}, lineHeights: {}, letterSpacings: {}, sizes: {}, borderWidths: { 0: "$1" }, borderStyles: {}, radii: { 0: "2px", 1: "4px", 2: "8px", 3: "12px", 4: "16px" }, zIndices: {}, transitions: {} }, media: { micro: "(max-width: 370px)", sm: "(min-width: 640px)", md: "(min-width: 768px)", lg: "(min-width: 1024px)" }, utils: { zStrokeWidth: () => (s10) => Array.isArray(s10) ? { strokeWidth: `calc(${s10[0]}px / var(--camera-zoom))` } : { strokeWidth: `calc(${s10}px / var(--camera-zoom))` } } });
var As = Ql({ colors: { bounds: "rgba(38, 150, 255, 1.000)", boundsBg: "rgba(38, 150, 255, 0.05)", hover: "#444A50", overlay: "rgba(0, 0, 0, 0.15)", overlayContrast: "rgba(255, 255, 255, 0.15)", panel: "#363D44", panelContrast: "#49555f", selected: "rgba(38, 150, 255, 1.000)", selectedContrast: "#fefefe", text: "#f8f9fa", tooltip: "#1d1d1d", tooltipContrast: "#ffffff", canvas: "#212529" }, shadows: { 2: "0px 1px 1px rgba(0, 0, 0, 0.24)", 3: "0px 2px 3px rgba(0, 0, 0, 0.24)", 4: "0px 4px 5px -1px rgba(0, 0, 0, 0.24)", 8: "0px 12px 17px rgba(0, 0, 0, 0.24)", 12: "0px 12px 17px rgba(0, 0, 0, 0.24)", 24: "0px 24px 38px rgba(0, 0, 0, 0.24)", panel: `0px 0px 16px -1px rgba(0, 0, 0, 0.05), 
      0px 0px 16px -8px rgba(0, 0, 0, 0.09), 
      0px 0px 16px -12px rgba(0, 0, 0, 0.2)` } });
var Hs = class {
  constructor() {
    d8(this, "onPinchStart");
    d8(this, "onPinchEnd");
    d8(this, "onPinch");
    d8(this, "onKeyDown");
    d8(this, "onKeyUp");
    d8(this, "onPointerMove");
    d8(this, "onPointerUp");
    d8(this, "onPan");
    d8(this, "onZoom");
    d8(this, "onPointerDown");
    d8(this, "onPointCanvas");
    d8(this, "onDoubleClickCanvas");
    d8(this, "onRightPointCanvas");
    d8(this, "onDragCanvas");
    d8(this, "onReleaseCanvas");
    d8(this, "onPointShape");
    d8(this, "onDoubleClickShape");
    d8(this, "onRightPointShape");
    d8(this, "onDragShape");
    d8(this, "onHoverShape");
    d8(this, "onUnhoverShape");
    d8(this, "onReleaseShape");
    d8(this, "onPointBounds");
    d8(this, "onDoubleClickBounds");
    d8(this, "onRightPointBounds");
    d8(this, "onDragBounds");
    d8(this, "onHoverBounds");
    d8(this, "onUnhoverBounds");
    d8(this, "onReleaseBounds");
    d8(this, "onPointBoundsHandle");
    d8(this, "onDoubleClickBoundsHandle");
    d8(this, "onRightPointBoundsHandle");
    d8(this, "onDragBoundsHandle");
    d8(this, "onHoverBoundsHandle");
    d8(this, "onUnhoverBoundsHandle");
    d8(this, "onReleaseBoundsHandle");
    d8(this, "onPointHandle");
    d8(this, "onDoubleClickHandle");
    d8(this, "onRightPointHandle");
    d8(this, "onDragHandle");
    d8(this, "onHoverHandle");
    d8(this, "onUnhoverHandle");
    d8(this, "onReleaseHandle");
    d8(this, "onShapeBlur");
    d8(this, "onShapeClone");
  }
};
var ec = ((o10) => (o10.Idle = "idle", o10.Connecting = "connecting", o10.Connected = "connected", o10.Disconnected = "disconnected", o10))(ec || {});
var Ee = ((u10) => (u10.Transform = "transform", u10.Translate = "translate", u10.TransformSingle = "transformSingle", u10.Brush = "brush", u10.Arrow = "arrow", u10.Draw = "draw", u10.Erase = "erase", u10.Rotate = "rotate", u10.Handle = "handle", u10.Grid = "grid", u10.Edit = "edit", u10))(Ee || {});
var vt = ((g10) => (g10.Idle = "idle", g10.PointingHandle = "pointingHandle", g10.PointingBounds = "pointingBounds", g10.PointingBoundsHandle = "pointingBoundsHandle", g10.TranslatingLabel = "translatingLabel", g10.TranslatingHandle = "translatingHandle", g10.Translating = "translating", g10.Transforming = "transforming", g10.Rotating = "rotating", g10.Pinching = "pinching", g10.Brushing = "brushing", g10.Creating = "creating", g10.EditingText = "editing-text", g10))(vt || {});
var zs = ((o10) => (o10.Backward = "backward", o10.Forward = "forward", o10.ToFront = "toFront", o10.ToBack = "toBack", o10))(zs || {});
var Zo = ((a10) => (a10.Top = "top", a10.CenterVertical = "centerVertical", a10.Bottom = "bottom", a10.Left = "left", a10.CenterHorizontal = "centerHorizontal", a10.Right = "right", a10))(Zo || {});
var Xo = ((t12) => (t12.Horizontal = "horizontal", t12.Vertical = "vertical", t12))(Xo || {});
var qo = ((t12) => (t12.Horizontal = "horizontal", t12.Vertical = "vertical", t12))(qo || {});
var Os = ((t12) => (t12.Horizontal = "horizontal", t12.Vertical = "vertical", t12))(Os || {});
var Te2 = ((u10) => (u10.Sticky = "sticky", u10.Ellipse = "ellipse", u10.Rectangle = "rectangle", u10.Triangle = "triangle", u10.Draw = "draw", u10.Arrow = "arrow", u10.Line = "line", u10.Text = "text", u10.Group = "group", u10.Image = "image", u10.Video = "video", u10))(Te2 || {});
var Jo = ((e13) => (e13.Arrow = "arrow", e13))(Jo || {});
var Fs = ((h10) => (h10.White = "white", h10.LightGray = "lightGray", h10.Gray = "gray", h10.Black = "black", h10.Green = "green", h10.Cyan = "cyan", h10.Blue = "blue", h10.Indigo = "indigo", h10.Violet = "violet", h10.Red = "red", h10.Orange = "orange", h10.Yellow = "yellow", h10))(Fs || {});
var Qo = ((n10) => (n10.Small = "small", n10.Medium = "medium", n10.Large = "large", n10))(Qo || {});
var on = ((o10) => (o10.Draw = "draw", o10.Solid = "solid", o10.Dashed = "dashed", o10.Dotted = "dotted", o10))(on || {});
var tc = ((o10) => (o10.Small = "small", o10.Medium = "medium", o10.Large = "large", o10.ExtraLarge = "extraLarge", o10))(tc || {});
var Wt = ((o10) => (o10.Start = "start", o10.Middle = "middle", o10.End = "end", o10.Justify = "justify", o10))(Wt || {});
var To = ((o10) => (o10.Script = "script", o10.Sans = "sans", o10.Serif = "erif", o10.Mono = "mono", o10))(To || {});
var js = ((t12) => (t12.Image = "image", t12.Video = "video", t12))(js || {});
var bo = ((i10) => (i10.PNG = "png", i10.JPG = "jpeg", i10.WEBP = "webp", i10.SVG = "svg", i10.JSON = "json", i10))(bo || {});
function sn(s10, e13) {
  let { document: t12, settings: n10 } = s10, { version: o10 = 0 } = t12;
  "assets" in t12 || (t12.assets = {});
  let i10 = /* @__PURE__ */ new Set();
  return Object.values(t12.pages).forEach((a10) => Object.values(a10.shapes).forEach((l10) => {
    let { parentId: r11, children: c10, assetId: p10 } = l10;
    p10 && i10.add(p10), r11 !== a10.id && !a10.shapes[r11] && (console.warn("Encountered a shape with a missing parent!"), l10.parentId = a10.id), l10.type === "group" && c10 && c10.forEach((u10) => {
      a10.shapes[u10] || (console.warn("Encountered a parent with a missing child!", l10.id, u10), c10 == null || c10.splice(c10.indexOf(u10), 1));
    });
  })), Object.keys(t12.assets).forEach((a10) => {
    i10.has(a10) || delete t12.assets[a10];
  }), o10 === e13 || (o10 < 14 && Object.values(t12.pages).forEach((a10) => {
    Object.values(a10.shapes).filter((l10) => l10.type === "text").forEach((l10) => l10.style.font === "script");
  }), o10 <= 13 && Object.values(t12.pages).forEach((a10) => {
    Object.values(a10.bindings).forEach((l10) => {
      Object.assign(l10, l10.meta);
    }), Object.values(a10.shapes).forEach((l10) => {
      Object.entries(l10.style).forEach(([r11, c10]) => {
        typeof c10 == "string" && (l10.style[r11] = c10.toLowerCase());
      }), l10.type === "arrow" && l10.decorations && Object.entries(l10.decorations).forEach(([r11, c10]) => {
        c10 === "Arrow" && (l10.decorations = C5(f8({}, l10.decorations), { [r11]: "arrow" }));
      });
    });
  }), o10 <= 13.1 && (t12.name = "New Document"), o10 < 15 && (t12.assets = {}), Object.values(t12.pages).forEach((a10) => {
    Object.values(a10.shapes).forEach((l10) => {
      o10 < 15.2 && (l10.type === "image" || l10.type === "video") && (l10.style.isFilled = true), o10 < 15.3 && (l10.type === "rectangle" || l10.type === "triangle" || l10.type === "ellipse" || l10.type === "arrow") && (l10.label = l10.text || "", l10.labelPoint = [0.5, 0.5]);
    });
  }), o10 < 15.4 && (n10.dockPosition = "bottom"), Object.values(t12.pageStates).forEach((a10) => {
    a10.selectedIds = a10.selectedIds.filter((l10) => t12.pages[a10.id].shapes[l10] !== void 0), a10.bindingId = void 0, a10.editingId = void 0, a10.hoveredId = void 0, a10.pointedId = void 0;
  }), t12.version = e13), s10;
}
var Vn = "-0.03em";
var qn = [0.5, 0.5];
var fU = Math.PI * 2;
var $n = { linear: (s10) => s10, easeInQuad: (s10) => s10 * s10, easeOutQuad: (s10) => s10 * (2 - s10), easeInOutQuad: (s10) => s10 < 0.5 ? 2 * s10 * s10 : -1 + (4 - 2 * s10) * s10, easeInCubic: (s10) => s10 * s10 * s10, easeOutCubic: (s10) => --s10 * s10 * s10 + 1, easeInOutCubic: (s10) => s10 < 0.5 ? 4 * s10 * s10 * s10 : (s10 - 1) * (2 * s10 - 2) * (2 * s10 - 2) + 1, easeInQuart: (s10) => s10 * s10 * s10 * s10, easeOutQuart: (s10) => 1 - --s10 * s10 * s10 * s10, easeInOutQuart: (s10) => s10 < 0.5 ? 8 * s10 * s10 * s10 * s10 : 1 - 8 * --s10 * s10 * s10 * s10, easeInQuint: (s10) => s10 * s10 * s10 * s10 * s10, easeOutQuint: (s10) => 1 + --s10 * s10 * s10 * s10 * s10, easeInOutQuint: (s10) => s10 < 0.5 ? 16 * s10 * s10 * s10 * s10 * s10 : 1 + 16 * --s10 * s10 * s10 * s10 * s10, easeInSine: (s10) => 1 - Math.cos(s10 * Math.PI / 2), easeOutSine: (s10) => Math.sin(s10 * Math.PI / 2), easeInOutSine: (s10) => -(Math.cos(Math.PI * s10) - 1) / 2, easeInExpo: (s10) => s10 <= 0 ? 0 : Math.pow(2, 10 * s10 - 10), easeOutExpo: (s10) => s10 >= 1 ? 1 : 1 - Math.pow(2, -10 * s10), easeInOutExpo: (s10) => s10 <= 0 ? 0 : s10 >= 1 ? 1 : s10 < 0.5 ? Math.pow(2, 20 * s10 - 10) / 2 : (2 - Math.pow(2, -20 * s10 + 10)) / 2 };
var Us = ["#EC5E41", "#F2555A", "#F04F88", "#E34BA9", "#BD54C6", "#9D5BD2", "#7B66DC", "#02B1CC", "#11B3A3", "#39B178", "#55B467", "#FF802B"];
var nc = typeof Window == "undefined" ? false : /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
var es = [".png", ".svg", ".jpg", ".jpeg", ".gif"];
var ts = nc ? [] : [".mp4", ".webm"];
var jr = { mode: "readwrite" };
var Sc = (s10) => ee(void 0, null, function* () {
  return (yield s10.queryPermission(jr)) === "granted" || (yield s10.requestPermission(jr)) === "granted";
});
function Ur() {
  return ee(this, null, function* () {
    if (typeof Window == "undefined" || !("_location" in Window))
      return;
    let s10 = yield get3(`Tldraw_file_handle_${window.location.origin}`);
    return s10 || null;
  });
}
function Gr(s10) {
  return ee(this, null, function* () {
    return set4(`Tldraw_file_handle_${window.location.origin}`, s10);
  });
}
function Gs(s10, e13) {
  return ee(this, null, function* () {
    let t12 = { name: s10.name || "New Document", fileHandle: e13 != null ? e13 : null, document: s10, assets: {} }, n10 = JSON.stringify(t12, null, 2), o10 = new Blob([n10], { type: "application/vnd.Tldraw+json" });
    if (e13 && !(yield Sc(e13)))
      return null;
    let l10 = yield (yield Promise.resolve().then(() => (wo(), ns))).fileSave(o10, { fileName: `${t12.name}.tldr`, description: "Tldraw File", extensions: [".tldr"] }, e13);
    return yield Gr(l10), l10;
  });
}
function Vr() {
  return ee(this, null, function* () {
    var a10;
    let t12 = yield (yield Promise.resolve().then(() => (wo(), ns))).fileOpen({ description: "Tldraw File", extensions: [".tldr"], multiple: false });
    if (!t12)
      return null;
    let n10 = yield new Promise((l10) => {
      let r11 = new FileReader();
      r11.onloadend = () => {
        r11.readyState === FileReader.DONE && l10(r11.result);
      }, r11.readAsText(t12, "utf8");
    }), o10 = JSON.parse(n10), i10 = (a10 = t12.handle) != null ? a10 : null;
    return yield Gr(i10), { fileHandle: i10, document: o10.document };
  });
}
function $r() {
  return ee(this, null, function* () {
    return (yield Promise.resolve().then(() => (wo(), ns))).fileOpen({ description: "Image or Video", extensions: [...es, ...ts], multiple: true });
  });
}
function Nr(s10) {
  return new Promise((e13, t12) => {
    if (s10) {
      let n10 = new FileReader();
      n10.readAsDataURL(s10), n10.onload = () => e13(n10.result), n10.onerror = (o10) => t12(o10), n10.onabort = (o10) => t12(o10);
    }
  });
}
function Kr(s10) {
  return new Promise((e13, t12) => {
    if (s10) {
      let n10 = new FileReader();
      n10.readAsText(s10), n10.onload = () => e13(n10.result), n10.onerror = (o10) => t12(o10), n10.onabort = (o10) => t12(o10);
    }
  });
}
function Wr(s10) {
  return new Promise((e13, t12) => {
    let n10 = new Image();
    n10.onload = () => e13([n10.width, n10.height]), n10.onerror = () => t12(new Error("Could not get image size")), n10.src = s10;
  });
}
function _r(s10) {
  return new Promise((e13, t12) => {
    let n10 = document.createElement("video");
    n10.onloadedmetadata = () => e13([n10.videoWidth, n10.videoHeight]), n10.onerror = () => t12(new Error("Could not get video size")), n10.src = s10;
  });
}
wo();
var Yr = "#fafafa";
var Vs = "#343d45";
var Qn = { ["white"]: "#f0f1f3", ["lightGray"]: "#c6cbd1", ["gray"]: "#788492", ["black"]: "#1d1d1d", ["green"]: "#36b24d", ["cyan"]: "#0e98ad", ["blue"]: "#1c7ed6", ["indigo"]: "#4263eb", ["violet"]: "#7746f1", ["red"]: "#ff2133", ["orange"]: "#ff9433", ["yellow"]: "#ffc936" };
var Tc = { light: C5(f8({}, Object.fromEntries(Object.entries(Qn).map(([s10, e13]) => [s10, Utils.lerpColor(e13, Yr, 0.45)]))), { ["white"]: "#ffffff", ["black"]: "#3d3d3d" }), dark: C5(f8({}, Object.fromEntries(Object.entries(Qn).map(([s10, e13]) => [s10, Utils.lerpColor(Utils.lerpColor(e13, "#999999", 0.3), Vs, 0.4)]))), { ["white"]: "#1d1d1d", ["black"]: "#bbbbbb" }) };
var eo = { light: C5(f8({}, Qn), { ["white"]: "#1d1d1d" }), dark: C5(f8({}, Object.fromEntries(Object.entries(Qn).map(([s10, e13]) => [s10, Utils.lerpColor(e13, Vs, 0.1)]))), { ["white"]: "#cecece", ["black"]: "#cecece" }) };
var os = { light: C5(f8({}, Object.fromEntries(Object.entries(Qn).map(([s10, e13]) => [s10, Utils.lerpColor(e13, Yr, 0.82)]))), { ["white"]: "#fefefe" }), dark: C5(f8({}, Object.fromEntries(Object.entries(Qn).map(([s10, e13]) => [s10, Utils.lerpColor(e13, Vs, 0.82)]))), { ["white"]: "rgb(30,33,37)", ["black"]: "#1e1e1f" }) };
var bc = { ["small"]: 2, ["medium"]: 3.5, ["large"]: 5 };
var yc = { ["small"]: 28, ["medium"]: 48, ["large"]: 96, auto: "auto" };
var wc = { ["script"]: '"Caveat Brush"', ["sans"]: '"Source Sans Pro"', ["erif"]: '"Crimson Pro"', ["mono"]: '"Source Code Pro"' };
var xc = { ["script"]: 1, ["sans"]: 1, ["erif"]: 1, ["mono"]: 1 };
var Ic = { ["small"]: 24, ["medium"]: 36, ["large"]: 48, auto: "auto" };
function Cc(s10) {
  return bc[s10];
}
function $s(s10, e13 = "script") {
  return yc[s10] * xc[e13];
}
function ss(s10 = "script") {
  return wc[s10];
}
function vc(s10) {
  return Ic[s10];
}
function wt(s10) {
  let e13 = $s(s10.size, s10.font), t12 = ss(s10.font), { scale: n10 = 1 } = s10;
  return `${e13 * n10}px/1 ${t12}`;
}
function Zr(s10) {
  let e13 = vc(s10.size), t12 = ss(s10.font), { scale: n10 = 1 } = s10;
  return `${e13 * n10}px/1 ${t12}`;
}
function Ns(s10, e13 = false) {
  let { color: t12 } = s10, n10 = e13 ? "dark" : "light", o10 = t12 === "white" || t12 === "black" ? "yellow" : t12;
  return { fill: Tc[n10][o10], stroke: eo[n10][o10], color: e13 ? "#1d1d1d" : "#0d0d0d" };
}
function le2(s10, e13) {
  let { color: t12, size: n10, isFilled: o10 } = s10, i10 = Cc(n10), a10 = e13 ? "dark" : "light";
  return { stroke: eo[a10][t12], fill: o10 ? os[a10][t12] : "none", strokeWidth: i10 };
}
var Ze = { color: "black", size: "small", isFilled: false, dash: "draw", scale: 1 };
var to = C5(f8({}, Ze), { font: "script", textAlign: "middle" });
var kc = { ["start"]: "left", ["middle"]: "center", ["end"]: "right", ["justify"]: "justify" };
function xo(s10 = "start") {
  return kc[s10];
}
function no(s10, e13, t12) {
  var l10;
  let n10 = $s(e13.size, e13.font), o10 = document.createElementNS("http://www.w3.org/2000/svg", "g"), i10 = (l10 = e13.scale) != null ? l10 : 1, a10 = s10.split(`
`).map((r11, c10) => {
    let p10 = document.createElementNS("http://www.w3.org/2000/svg", "text");
    return p10.textContent = r11, p10.setAttribute("y", n10 * (0.5 + c10 * 1) + ""), p10.setAttribute("letter-spacing", n10 * -0.03 + ""), p10.setAttribute("font-size", n10 + "px"), p10.setAttribute("font-family", ss(e13.font).slice(1, -1)), p10.setAttribute("text-align", xo(e13.textAlign)), p10.setAttribute("text-align", xo(e13.textAlign)), p10.setAttribute("alignment-baseline", "central"), e13.scale !== 1 && p10.setAttribute("transform", `scale(${e13.scale})`), o10.appendChild(p10), p10;
  });
  switch (e13.textAlign) {
    case "middle": {
      o10.setAttribute("text-align", "center"), o10.setAttribute("text-anchor", "middle"), a10.forEach((r11) => {
        r11.setAttribute("x", t12.width / 2 / i10 + "");
      });
      break;
    }
    case "end": {
      o10.setAttribute("text-align", "right"), o10.setAttribute("text-anchor", "end"), a10.forEach((r11) => r11.setAttribute("x", t12.width / i10 + ""));
      break;
    }
    case "start":
      o10.setAttribute("text-align", "left"), o10.setAttribute("text-anchor", "start");
  }
  return o10;
}
var yn;
function Pc() {
  var e13;
  (e13 = document.getElementById("__textLabelMeasure")) == null || e13.remove();
  let s10 = document.createElement("pre");
  return s10.id = "__textLabelMeasure", Object.assign(s10.style, { whiteSpace: "pre", width: "auto", border: "1px solid transparent", padding: "4px", margin: "0px", letterSpacing: Vn, opacity: "0", position: "absolute", top: "-500px", left: "0px", zIndex: "9999", pointerEvents: "none", userSelect: "none", alignmentBaseline: "mathematical", dominantBaseline: "mathematical" }), s10.tabIndex = -1, document.body.appendChild(s10), s10;
}
typeof window != "undefined" && (yn = Pc());
var Ws = "";
var Xr = "";
var Ks = [0, 0];
function qr() {
  Ws = "";
}
function Nn(s10, e13) {
  if (!s10)
    return [16, 32];
  if (!yn)
    return [10, 10];
  if (yn.parent || document.body.appendChild(yn), s10 === Ws && e13 === Xr)
    return Ks;
  Ws = s10, Xr = e13, yn.textContent = s10, yn.style.font = e13;
  let t12 = yn.offsetWidth || 1, n10 = yn.offsetHeight || 1;
  return Ks = [t12, n10], Ks;
}
function Et(s10, e13) {
  let t12 = Utils.getFromCache(e13, s10, () => {
    let [n10, o10] = s10.size;
    return { minX: 0, maxX: n10, minY: 0, maxY: o10, width: n10, height: o10 };
  });
  return Utils.translateBounds(t12, s10.point);
}
function wn(s10, e13, { initialShape: t12, transformOrigin: n10, scaleX: o10, scaleY: i10 }) {
  if (s10.rotation || t12.isAspectRatioLocked) {
    let a10 = p.toFixed(p.mul(t12.size, Math.min(Math.abs(o10), Math.abs(i10)))), l10 = p.toFixed([e13.minX + (e13.width - s10.size[0]) * (o10 < 0 ? 1 - n10[0] : n10[0]), e13.minY + (e13.height - s10.size[1]) * (i10 < 0 ? 1 - n10[1] : n10[1])]), r11 = o10 < 0 && i10 >= 0 || i10 < 0 && o10 >= 0 ? t12.rotation ? -t12.rotation : 0 : t12.rotation;
    return { size: a10, point: l10, rotation: r11 };
  } else
    return { point: p.toFixed([e13.minX, e13.minY]), size: p.toFixed([e13.width, e13.height]) };
}
function xn(s10, e13) {
  return { size: p.toFixed([e13.width, e13.height]), point: p.toFixed([e13.minX, e13.minY]) };
}
var ea = "  ";
var Ge = class {
  static insertTextFirefox(e13, t12) {
    e13.setRangeText(t12, e13.selectionStart || 0, e13.selectionEnd || 0, "end"), e13.dispatchEvent(new InputEvent("input", { data: t12, inputType: "insertText", isComposing: false }));
  }
  static insert(e13, t12) {
    let n10 = e13.ownerDocument, o10 = n10.activeElement;
    o10 !== e13 && e13.focus(), n10.execCommand("insertText", false, t12) || Ge.insertTextFirefox(e13, t12), o10 === n10.body ? e13.blur() : o10 instanceof HTMLElement && o10 !== e13 && o10.focus();
  }
  static set(e13, t12) {
    e13.select(), Ge.insert(e13, t12);
  }
  static getSelection(e13) {
    let { selectionStart: t12, selectionEnd: n10 } = e13;
    return e13.value.slice(t12 || void 0, n10 || void 0);
  }
  static wrapSelection(e13, t12, n10) {
    let { selectionStart: o10, selectionEnd: i10 } = e13, a10 = Ge.getSelection(e13);
    Ge.insert(e13, t12 + a10 + (n10 != null ? n10 : t12)), e13.selectionStart = (o10 || 0) + t12.length, e13.selectionEnd = (i10 || 0) + t12.length;
  }
  static replace(e13, t12, n10) {
    let o10 = 0;
    e13.value.replace(t12, (...i10) => {
      let a10 = o10 + i10[i10.length - 2], l10 = i10[0].length;
      e13.selectionStart = a10, e13.selectionEnd = a10 + l10;
      let r11 = typeof n10 == "string" ? n10 : n10(...i10);
      return Ge.insert(e13, r11), e13.selectionStart = a10, o10 += r11.length - l10, r11;
    });
  }
  static findLineEnd(e13, t12) {
    let n10 = e13.lastIndexOf(`
`, t12 - 1) + 1;
    return e13.charAt(n10) !== "	" ? t12 : n10 + 1;
  }
  static indent(e13) {
    var l10;
    let { selectionStart: t12, selectionEnd: n10, value: o10 } = e13, i10 = o10.slice(t12, n10), a10 = (l10 = /\n/g.exec(i10)) == null ? void 0 : l10.length;
    if (a10 && a10 > 0) {
      let r11 = o10.lastIndexOf(`
`, t12 - 1) + 1, c10 = e13.value.slice(r11, n10 - 1), p10 = c10.replace(/^|\n/g, `$&${ea}`), u10 = p10.length - c10.length;
      e13.setSelectionRange(r11, n10 - 1), Ge.insert(e13, p10), e13.setSelectionRange(t12 + 1, n10 + u10);
    } else
      Ge.insert(e13, ea);
  }
  static unindent(e13) {
    let { selectionStart: t12, selectionEnd: n10, value: o10 } = e13, i10 = o10.lastIndexOf(`
`, t12 - 1) + 1, a10 = Ge.findLineEnd(o10, n10), l10 = e13.value.slice(i10, a10), r11 = l10.replace(/(^|\n)(\t| {1,2})/g, "$1"), c10 = l10.length - r11.length;
    e13.setSelectionRange(i10, a10), Ge.insert(e13, r11);
    let p10 = /\t| {1,2}/.exec(o10.slice(i10, t12)), u10 = p10 ? p10[0].length : 0, h10 = t12 - u10;
    e13.setSelectionRange(t12 - u10, Math.max(h10, n10 - c10));
  }
};
var rt = (s10) => s10.stopPropagation();
var In = Ve.memo(function({ font: e13, text: t12, color: n10, offsetX: o10 = 0, offsetY: i10 = 0, scale: a10 = 1, isEditing: l10 = false, onBlur: r11, onChange: c10 }) {
  let p10 = Ve.useRef(null), u10 = Ve.useRef(false), h10 = Ve.useCallback((S10) => {
    c10(x7.normalizeText(S10.currentTarget.value));
  }, [c10]), g10 = Ve.useCallback((S10) => {
    if (S10.key === "Escape") {
      S10.preventDefault(), S10.stopPropagation(), r11 == null || r11();
      return;
    }
    if (S10.key === "Tab" && t12.length === 0) {
      S10.preventDefault();
      return;
    }
    if (!(S10.key === "Meta" || S10.metaKey))
      S10.stopPropagation();
    else if (S10.key === "z" && S10.metaKey) {
      S10.shiftKey ? document.execCommand("redo", false) : document.execCommand("undo", false), S10.stopPropagation(), S10.preventDefault();
      return;
    }
    (S10.metaKey || S10.ctrlKey) && S10.key === "=" && S10.preventDefault(), S10.key === "Tab" && (S10.preventDefault(), S10.shiftKey ? Ge.unindent(S10.currentTarget) : Ge.indent(S10.currentTarget), c10 == null || c10(x7.normalizeText(S10.currentTarget.value)));
  }, [c10]), m10 = Ve.useCallback((S10) => {
    S10.currentTarget.setSelectionRange(0, 0), r11 == null || r11();
  }, [r11]), T10 = Ve.useCallback((S10) => {
    !l10 || !u10.current || document.activeElement === S10.currentTarget && S10.currentTarget.select();
  }, [l10]), y10 = Ve.useCallback((S10) => {
    l10 && S10.stopPropagation();
  }, [l10]);
  Ve.useEffect(() => {
    l10 ? requestAnimationFrame(() => {
      u10.current = true;
      let S10 = p10.current;
      S10 && (S10.focus(), S10.select());
    }) : r11 == null || r11();
  }, [l10, r11]);
  let b10 = Ve.useRef(null);
  return Ve.useLayoutEffect(() => {
    let S10 = b10.current;
    if (!S10)
      return;
    let w10 = Nn(t12, e13);
    S10.style.transform = `scale(${a10}, ${a10}) translate(${o10}px, ${i10}px)`, S10.style.width = w10[0] + 1 + "px", S10.style.height = w10[1] + 1 + "px";
  }, [t12, e13, i10, o10, a10]), Ve.createElement(Bc, null, Ve.createElement(Mc, { ref: b10, hasText: !!t12, isEditing: l10, style: { font: e13, color: n10 } }, l10 ? Ve.createElement(Ec, { ref: p10, style: { font: e13, color: n10 }, name: "text", tabIndex: -1, autoComplete: "false", autoCapitalize: "false", autoCorrect: "false", autoSave: "false", autoFocus: true, placeholder: "", spellCheck: "true", wrap: "off", dir: "auto", datatype: "wysiwyg", defaultValue: t12, color: n10, onFocus: T10, onChange: h10, onKeyDown: g10, onBlur: m10, onPointerDown: y10, onContextMenu: rt, onCopy: rt, onPaste: rt, onCut: rt }) : t12, "\u200B"));
});
var Bc = M3("div", { position: "absolute", top: 0, left: 0, width: "100%", height: "100%", display: "flex", alignItems: "center", justifyContent: "center", pointerEvents: "none", userSelect: "none", variants: { isGhost: { false: { opacity: 1 }, true: { transition: "opacity .2s", opacity: 0.3 } } } });
var ta = { whiteSpace: "pre-wrap", overflowWrap: "break-word" };
var Mc = M3("div", f8({ position: "absolute", padding: "4px", zIndex: 1, minHeight: 1, minWidth: 1, lineHeight: 1, letterSpacing: Vn, outline: 0, fontWeight: "500", textAlign: "center", backfaceVisibility: "hidden", userSelect: "none", WebkitUserSelect: "none", WebkitTouchCallout: "none", variants: { hasText: { false: { pointerEvents: "none" }, true: { pointerEvents: "all" } }, isEditing: { false: { userSelect: "none" }, true: { background: "$boundsBg", userSelect: "text", WebkitUserSelect: "text" } } } }, ta));
var Ec = M3("textarea", C5(f8({ position: "absolute", top: 0, left: 0, zIndex: 1, width: "100%", height: "100%", border: "none", padding: "4px", resize: "none", textAlign: "inherit", minHeight: "inherit", minWidth: "inherit", lineHeight: "inherit", letterSpacing: "inherit", outline: 0, fontWeight: "inherit", overflow: "hidden", backfaceVisibility: "hidden", display: "inline-block", pointerEvents: "all", background: "$boundsBg", userSelect: "text", WebkitUserSelect: "text", fontSmooth: "always", WebkitFontSmoothing: "subpixel-antialiased", MozOsxFontSmoothing: "auto" }, ta), { "&:focus": { outline: "none", border: "none" } }));
var he = class extends TLShapeUtil {
  constructor() {
    super(...arguments);
    d8(this, "canBind", false);
    d8(this, "canEdit", false);
    d8(this, "canClone", false);
    d8(this, "isAspectRatioLocked", false);
    d8(this, "hideResizeHandles", false);
    d8(this, "bindingDistance", 16);
    d8(this, "hitTestPoint", (e13, t12) => Utils.pointInBounds(t12, this.getRotatedBounds(e13)));
    d8(this, "hitTestLineSegment", (e13, t12, n10) => {
      let o10 = Utils.getBoundsFromPoints([t12, n10]), i10 = this.getBounds(e13);
      return Utils.boundsContain(i10, o10) || e13.rotation ? intersectLineSegmentPolyline(t12, n10, Utils.getRotatedCorners(this.getBounds(e13))).didIntersect : intersectLineSegmentBounds(t12, n10, this.getBounds(e13)).length > 0;
    });
    d8(this, "create", (e13) => (this.refMap.set(e13.id, na.createRef()), this.getShape(e13)));
    d8(this, "getCenter", (e13) => Utils.getBoundsCenter(this.getBounds(e13)));
    d8(this, "getExpandedBounds", (e13) => Utils.expandBounds(this.getBounds(e13), this.bindingDistance));
    d8(this, "getBindingPoint", (e13, t12, n10, o10, i10, a10) => {
      let l10 = this.getBounds(e13), r11 = this.getExpandedBounds(e13);
      if (!Utils.pointInBounds(n10, r11))
        return;
      let c10 = intersectRayBounds(o10, i10, r11).filter((y10) => y10.didIntersect).map((y10) => y10.points[0]);
      if (!c10.length)
        return;
      let p10 = this.getCenter(e13), u10 = c10.sort((y10, b10) => e.dist(b10, o10) - e.dist(y10, o10))[0], h10 = e.med(n10, u10), g10, m10;
      a10 ? (g10 = e.dist(n10, p10) < 16 / 2 ? p10 : n10, m10 = 0) : (e.distanceToLineSegment(n10, h10, p10) < 16 / 2 ? g10 = p10 : g10 = h10, Utils.pointInBounds(n10, l10) ? m10 = this.bindingDistance : m10 = Math.max(this.bindingDistance, Utils.getBoundsSides(l10).map((y10) => e.distanceToLineSegment(y10[1][0], y10[1][1], n10)).sort((y10, b10) => y10 - b10)[0]));
      let T10 = e.divV(e.sub(g10, [r11.minX, r11.minY]), [r11.width, r11.height]);
      return { point: e.clampV(T10, 0, 1), distance: m10 };
    });
    d8(this, "mutate", (e13, t12) => t12);
    d8(this, "transform", (e13, t12, n10) => C5(f8({}, e13), { point: [t12.minX, t12.minY] }));
    d8(this, "transformSingle", (e13, t12, n10) => this.transform(e13, t12, n10));
    d8(this, "updateChildren");
    d8(this, "onChildrenChange");
    d8(this, "onHandleChange");
    d8(this, "onRightPointHandle");
    d8(this, "onDoubleClickHandle");
    d8(this, "onDoubleClickBoundsHandle");
    d8(this, "onSessionComplete");
    d8(this, "getSvgElement", (e13, t12) => {
      var o10;
      let n10 = (o10 = document.getElementById(e13.id + "_svg")) == null ? void 0 : o10.cloneNode(true);
      if (!!n10) {
        if ("label" in e13 && e13.label) {
          let i10 = e13, a10 = document.createElementNS("http://www.w3.org/2000/svg", "g"), l10 = this.getBounds(e13), r11 = no(i10.label, e13.style, l10);
          r11.setAttribute("fill", le2(e13.style, t12).stroke);
          let c10 = wt(e13.style), p10 = Nn(i10.label, c10);
          return r11.setAttribute("transform-origin", "top left"), r11.setAttribute("transform", `translate(${l10.width / 2}, ${(l10.height - p10[1]) / 2})`), a10.setAttribute("text-align", "center"), a10.setAttribute("text-anchor", "middle"), a10.appendChild(n10), a10.appendChild(r11), a10;
        }
        return n10;
      }
    });
  }
};
function Fc(s10, e13, t12) {
  let n10 = le2(e13), o10 = Utils.rng(s10), i10 = n10.strokeWidth, a10 = Math.max(0, t12[0]), l10 = Math.max(0, t12[1]), r11 = Array.from(Array(4)).map(() => [o10() * i10 * 0.75, o10() * i10 * 0.75]), c10 = p.add([i10 / 2, i10 / 2], r11[0]), p10 = p.add([a10 - i10 / 2, i10 / 2], r11[1]), u10 = p.add([a10 - i10 / 2, l10 - i10 / 2], r11[2]), h10 = p.add([i10 / 2, l10 - i10 / 2], r11[3]), g10 = Math.round(Math.abs(o10() * 2 * 4)), m10 = Math.min(a10 / 4, i10 * 2), T10 = Math.min(l10 / 4, i10 * 2), y10 = Math.max(8, Math.floor(a10 / 16)), b10 = Math.max(8, Math.floor(l10 / 16)), S10 = Utils.rotateArray([p.pointsBetween(p.add(c10, [m10, 0]), p.sub(p10, [m10, 0]), y10), p.pointsBetween(p.add(p10, [0, T10]), p.sub(u10, [0, T10]), b10), p.pointsBetween(p.sub(u10, [m10, 0]), p.add(h10, [m10, 0]), y10), p.pointsBetween(p.sub(h10, [0, T10]), p.add(c10, [0, T10]), b10)], g10);
  return { points: [...S10.flat(), ...S10[0]].slice(5, Math.floor((g10 % 2 === 0 ? y10 : b10) / -2) + 3) };
}
function oa(s10, e13, t12) {
  let { points: n10 } = Fc(s10, e13, t12), { strokeWidth: o10 } = le2(e13);
  return { points: n10, options: { size: o10, thinning: 0.65, streamline: 0.3, smoothing: 1, simulatePressure: false, last: true } };
}
function sa(s10, e13, t12) {
  let { points: n10, options: o10 } = oa(s10, e13, t12), i10 = Te(n10, o10);
  return Utils.getSvgPathFromStroke(i10);
}
function rs(s10, e13, t12) {
  let { points: n10, options: o10 } = oa(s10, e13, t12), i10 = me(n10, o10);
  return Utils.getSvgPathFromStroke(i10.map((a10) => a10.point.slice(0, 2)), false);
}
var ia = dn.memo(function({ id: e13, style: t12, size: n10, isSelected: o10, isDarkMode: i10 }) {
  let { isFilled: a10 } = t12, { stroke: l10, strokeWidth: r11, fill: c10 } = le2(t12, i10), p10 = sa(e13, t12, n10), u10 = rs(e13, t12, n10);
  return dn.createElement(dn.Fragment, null, dn.createElement("path", { className: t12.isFilled || o10 ? "tl-fill-hitarea" : "tl-stroke-hitarea", d: u10 }), a10 && dn.createElement("path", { d: u10, fill: c10, pointerEvents: "none" }), dn.createElement("path", { d: p10, fill: l10, stroke: l10, strokeWidth: r11, pointerEvents: "none" }));
});
var ra = _t.memo(function({ id: e13, style: t12, size: n10, isSelected: o10, isDarkMode: i10 }) {
  let { stroke: a10, strokeWidth: l10, fill: r11 } = le2(t12, i10), c10 = 1 + l10 * 1.618, p10 = Math.max(0, n10[0] - c10 / 2), u10 = Math.max(0, n10[1] - c10 / 2), g10 = [[[c10 / 2, c10 / 2], [p10, c10 / 2], p10 - c10 / 2], [[p10, c10 / 2], [p10, u10], u10 - c10 / 2], [[p10, u10], [c10 / 2, u10], p10 - c10 / 2], [[c10 / 2, u10], [c10 / 2, c10 / 2], u10 - c10 / 2]].map(([m10, T10, y10], b10) => {
    let { strokeDasharray: S10, strokeDashoffset: w10 } = Utils.getPerfectDashProps(y10, l10 * 1.618, t12.dash);
    return _t.createElement("line", { key: e13 + "_" + b10, x1: m10[0], y1: m10[1], x2: T10[0], y2: T10[1], strokeDasharray: S10, strokeDashoffset: w10 });
  });
  return _t.createElement(_t.Fragment, null, _t.createElement("rect", { className: o10 || t12.isFilled ? "tl-fill-hitarea" : "tl-stroke-hitarea", x: c10 / 2, y: c10 / 2, width: p10, height: u10, strokeWidth: 16 }), t12.isFilled && _t.createElement("rect", { x: c10 / 2, y: c10 / 2, width: p10, height: u10, fill: r11, pointerEvents: "none" }), _t.createElement("g", { pointerEvents: "none", stroke: a10, strokeWidth: c10, strokeLinecap: "round" }, g10));
});
function da({ strokeWidth: s10, size: e13 }) {
  return aa.createElement("rect", { className: "tl-binding-indicator", x: s10, y: s10, width: Math.max(0, e13[0] - s10 / 2), height: Math.max(0, e13[1] - s10 / 2), strokeWidth: 16 * 2 });
}
var _s = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "rectangle");
    d8(this, "canBind", true);
    d8(this, "canClone", true);
    d8(this, "canEdit", true);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "id", type: "rectangle", name: "Rectangle", parentId: "page", childIndex: 1, point: [0, 0], size: [1, 1], rotation: 0, style: Ze, label: "", labelPoint: [0.5, 0.5] }, e13));
    d8(this, "Component", he.Component(({ shape: e13, isEditing: t12, isBinding: n10, isSelected: o10, isGhost: i10, meta: a10, bounds: l10, events: r11, onShapeBlur: c10, onShapeChange: p10 }, u10) => {
      let { id: h10, size: g10, style: m10, label: T10 = "", labelPoint: y10 = qn } = e13, b10 = wt(m10), S10 = le2(m10, a10.isDarkMode), w10 = m10.dash === "draw" ? ia : ra, D10 = Yt.useCallback((B10) => p10 == null ? void 0 : p10({ id: h10, label: B10 }), [p10]);
      return Yt.createElement(Vc, f8({ ref: u10 }, r11), Yt.createElement(In, { isEditing: t12, onChange: D10, onBlur: c10, font: b10, text: T10, color: S10.stroke, offsetX: (y10[0] - 0.5) * l10.width, offsetY: (y10[1] - 0.5) * l10.height }), Yt.createElement(SVGContainer, { id: e13.id + "_svg", opacity: i10 ? 0.3 : 1 }, n10 && Yt.createElement(da, { strokeWidth: S10.strokeWidth, size: g10 }), Yt.createElement(w10, { id: h10, style: m10, size: g10, isSelected: o10, isDarkMode: a10.isDarkMode })));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { id: t12, style: n10, size: o10 } = e13, a10 = le2(n10, false).strokeWidth;
      return n10.dash === "draw" ? Yt.createElement("path", { d: rs(t12, n10, o10) }) : Yt.createElement("rect", { x: a10, y: a10, rx: 1, ry: 1, width: Math.max(1, o10[0] - a10 * 2), height: Math.max(1, o10[1] - a10 * 2) });
    }));
    d8(this, "getBounds", (e13) => Et(e13, this.boundsCache));
    d8(this, "shouldRender", (e13, t12) => t12.size !== e13.size || t12.style !== e13.style || t12.label !== e13.label);
    d8(this, "transform", wn);
    d8(this, "transformSingle", xn);
  }
};
var Vc = M3("div", { width: "100%", height: "100%" });
var as = Math.PI * 2;
var kt = class {
  static inwardEdgeNormal(e13) {
    let t12 = p.sub(e13[1], e13[0]), n10 = p.len2(t12);
    return [-t12[0] / n10, t12[1] / n10];
  }
  static outwardEdgeNormal(e13) {
    return p.neg(kt.inwardEdgeNormal(e13));
  }
  static isReflexVertex(e13, t12) {
    let n10 = e13.length, o10 = e13[(t12 + n10 - 1) % n10], i10 = e13[t12], a10 = e13[(t12 + 1) % n10];
    return kt.leftSide(o10, a10, i10) < 0;
  }
  static getEdges(e13) {
    return e13.map((t12, n10) => [t12, e13[(n10 + 1) % e13.length]]);
  }
  static edgesIntersection([e13, t12], [n10, o10]) {
    let i10 = (o10[1] - n10[1]) * (t12[0] - e13[0]) - (o10[0] - n10[0]) * (t12[1] - e13[1]);
    if (i10 == 0)
      return null;
    let a10 = ((o10[0] - n10[0]) * (e13[1] - n10[1]) - (o10[1] - n10[1]) * (e13[0] - n10[0])) / i10, l10 = ((t12[0] - e13[0]) * (e13[1] - n10[1]) - (t12[1] - e13[1]) * (e13[0] - n10[0])) / i10;
    return a10 < 0 || l10 < 0 || a10 > 1 || l10 > 1 ? null : [e13[0] + a10 * (t12[0] - e13[0]), e13[1] + a10 * (t12[1] - e13[1])];
  }
  static appendArc(e13, t12, n10, o10, i10, a10 = false) {
    let l10 = [...e13], r11 = Math.atan2(o10[1] - t12[1], o10[0] - t12[0]), c10 = Math.atan2(i10[1] - t12[1], i10[0] - t12[0]);
    r11 < 0 && (r11 += as), c10 < 0 && (c10 += as);
    let p10 = 5, u10 = r11 > c10 ? r11 - c10 : r11 + as - c10, h10 = (a10 ? -u10 : as - u10) / p10;
    l10.push(o10);
    for (let g10 = 1; g10 < p10; ++g10) {
      let m10 = r11 + h10 * g10;
      l10.push([t12[0] + Math.cos(m10) * n10, t12[1] + Math.sin(m10) * n10]);
    }
    return l10.push(i10), l10;
  }
  static createOffsetEdge(e13, t12) {
    return e13.map((n10) => p.add(n10, t12));
  }
  static getOffsetPolygon(e13, t12 = 0) {
    let n10 = kt.getEdges(e13), o10 = n10.map((a10) => kt.createOffsetEdge(a10, p.mul(kt.outwardEdgeNormal(a10), t12))), i10 = [];
    for (let a10 = 0; a10 < o10.length; a10++) {
      let l10 = o10[a10], r11 = o10[(a10 + o10.length - 1) % o10.length], c10 = kt.edgesIntersection(r11, l10);
      c10 ? i10.push(c10) : kt.appendArc(i10, n10[a10][0], t12, r11[1], l10[0], false);
    }
    return i10;
  }
  static createPaddingPolygon(e13, t12 = 0) {
    let n10 = e13.map((i10) => kt.createOffsetEdge(i10, kt.inwardEdgeNormal(i10))), o10 = [];
    for (let i10 = 0; i10 < n10.length; i10++) {
      let a10 = n10[i10], l10 = n10[(i10 + n10.length - 1) % n10.length], r11 = kt.edgesIntersection(l10, a10);
      r11 ? o10.push(r11) : kt.appendArc(o10, e13[i10][0], t12, l10[1], a10[0], true);
    }
    return o10;
  }
};
var la = kt;
d8(la, "leftSide", p.isLeft);
function ca(s10, e13) {
  if (s10.length < 3)
    throw Error("Polygon must have at least 3 points");
  let t12 = s10.length;
  return s10.map((n10, o10) => [n10, s10[(o10 + 1) % t12]]).map(([n10, o10]) => {
    let i10 = p.mul(p.per(p.uni(p.sub(o10, n10))), e13);
    return [p.add(n10, i10), p.add(o10, i10)];
  }).map((n10, o10, i10) => {
    let a10 = intersectLineLine(n10, i10[(o10 + 1) % i10.length]);
    if (a10 === void 0)
      throw Error("Expected an intersection");
    return a10;
  });
}
function Ft(s10, e13 = 0, t12 = 0) {
  let [n10, o10] = s10, i10 = [[n10 / 2, 0], [n10, o10], [0, o10]];
  return e13 && (i10 = ca(i10, e13)), t12 && (i10 = i10.map((a10) => p.rotWith(a10, [n10 / 2, o10 / 2], t12))), i10;
}
function Ys(s10) {
  let [e13, t12] = s10, n10 = [[e13 / 2, 0], [e13, t12], [0, t12]];
  return [(n10[0][0] + n10[1][0] + n10[2][0]) / 3, (n10[0][1] + n10[1][1] + n10[2][1]) / 3];
}
function Wc(s10, e13, t12) {
  let [n10, o10] = e13, i10 = Utils.rng(s10), a10 = Array.from(Array(3)).map(() => [i10() * t12 * 0.75, i10() * t12 * 0.75]), l10 = [p.add([n10 / 2, 0], a10[0]), p.add([n10, o10], a10[1]), p.add([0, o10], a10[2])], r11 = Math.round(Math.abs(i10() * 2 * 3)), c10 = Utils.rotateArray([p.pointsBetween(l10[0], l10[1], 32), p.pointsBetween(l10[1], l10[2], 32), p.pointsBetween(l10[2], l10[0], 32)], r11);
  return { points: [...c10.flat(), ...c10[0]] };
}
function pa(s10, e13, t12) {
  let { strokeWidth: n10 } = le2(t12), { points: o10 } = Wc(s10, e13, n10);
  return { points: o10, options: { size: n10, thinning: 0.65, streamline: 0.3, smoothing: 1, simulatePressure: false, last: true } };
}
function ua(s10, e13, t12) {
  let { points: n10, options: o10 } = pa(s10, e13, t12), i10 = Te(n10, o10);
  return Utils.getSvgPathFromStroke(i10);
}
function ha(s10, e13, t12) {
  let { points: n10, options: o10 } = pa(s10, e13, t12), i10 = me(n10, o10);
  return Utils.getSvgPathFromStroke(i10.map((a10) => a10.point.slice(0, 2)), false);
}
var ma = ln.memo(function({ id: e13, size: t12, style: n10, isSelected: o10, isDarkMode: i10 }) {
  let { stroke: a10, strokeWidth: l10, fill: r11 } = le2(n10, i10), c10 = ua(e13, t12, n10), p10 = ha(e13, t12, n10);
  return ln.createElement(ln.Fragment, null, ln.createElement("path", { className: n10.isFilled || o10 ? "tl-fill-hitarea" : "tl-stroke-hitarea", d: p10 }), n10.isFilled && ln.createElement("path", { d: p10, fill: r11, pointerEvents: "none" }), ln.createElement("path", { d: c10, fill: a10, stroke: a10, strokeWidth: l10, pointerEvents: "none" }));
});
var fa = Zt.memo(function({ id: e13, size: t12, style: n10, isSelected: o10, isDarkMode: i10 }) {
  let { stroke: a10, strokeWidth: l10, fill: r11 } = le2(n10, i10), c10 = 1 + l10 * 1.618, p10 = Ft(t12), h10 = Utils.pointsToLineSegments(p10, true).map(([m10, T10], y10) => {
    let { strokeDasharray: b10, strokeDashoffset: S10 } = Utils.getPerfectDashProps(p.dist(m10, T10), l10 * 1.618, n10.dash);
    return Zt.createElement("line", { key: e13 + "_" + y10, x1: m10[0], y1: m10[1], x2: T10[0], y2: T10[1], stroke: a10, strokeWidth: c10, strokeLinecap: "round", strokeDasharray: b10, strokeDashoffset: S10 });
  }), g10 = p10.join();
  return Zt.createElement(Zt.Fragment, null, Zt.createElement("polygon", { className: n10.isFilled || o10 ? "tl-fill-hitarea" : "tl-stroke-hitarea", points: g10 }), n10.isFilled && Zt.createElement("polygon", { fill: r11, points: g10, pointerEvents: "none" }), Zt.createElement("g", { pointerEvents: "stroke" }, h10));
});
function Ta({ size: s10 }) {
  let e13 = Ft(s10).join();
  return Sa.createElement("polygon", { className: "tl-binding-indicator", points: e13, strokeWidth: 16 * 2 });
}
var Zs = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "triangle");
    d8(this, "canBind", true);
    d8(this, "canClone", true);
    d8(this, "canEdit", true);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "id", type: "triangle", name: "Triangle", parentId: "page", childIndex: 1, point: [0, 0], size: [1, 1], rotation: 0, style: Ze, label: "", labelPoint: [0.5, 0.5] }, e13));
    d8(this, "Component", he.Component(({ shape: e13, bounds: t12, isBinding: n10, isEditing: o10, isSelected: i10, isGhost: a10, meta: l10, events: r11, onShapeChange: c10, onShapeBlur: p10 }, u10) => {
      let { id: h10, label: g10 = "", size: m10, style: T10, labelPoint: y10 = qn } = e13, b10 = wt(T10), S10 = le2(T10, l10.isDarkMode), w10 = T10.dash === "draw" ? ma : fa, D10 = jt.useCallback((I10) => c10 == null ? void 0 : c10({ id: h10, label: I10 }), [c10]), B10 = jt.useMemo(() => {
        let I10 = p.div(m10, 2);
        return (Ys(m10)[1] - I10[1]) * 0.72;
      }, [m10]);
      return jt.createElement(Jc, f8({ ref: u10 }, r11), jt.createElement(In, { font: b10, text: g10, color: S10.stroke, offsetX: (y10[0] - 0.5) * t12.width, offsetY: B10 + (y10[1] - 0.5) * t12.height, isEditing: o10, onChange: D10, onBlur: p10 }), jt.createElement(SVGContainer, { id: e13.id + "_svg", opacity: a10 ? 0.3 : 1 }, n10 && jt.createElement(Ta, { size: m10 }), jt.createElement(w10, { id: h10, style: T10, size: m10, isSelected: i10, isDarkMode: l10.isDarkMode })));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { size: t12 } = e13;
      return jt.createElement("polygon", { points: Ft(t12).join() });
    }));
    d8(this, "shouldRender", (e13, t12) => t12.size !== e13.size || t12.style !== e13.style || t12.label !== e13.label);
    d8(this, "getBounds", (e13) => Et(e13, this.boundsCache));
    d8(this, "getExpandedBounds", (e13) => Utils.getBoundsFromPoints(Ft(e13.size, this.bindingDistance).map((t12) => p.add(t12, e13.point))));
    d8(this, "hitTestLineSegment", (e13, t12, n10) => intersectLineSegmentPolyline(t12, n10, this.getPoints(e13)).didIntersect);
    d8(this, "hitTestBounds", (e13, t12) => Utils.boundsContained(this.getBounds(e13), t12) || intersectBoundsPolygon(t12, this.getPoints(e13)).length > 0);
    d8(this, "getBindingPoint", (e13, t12, n10, o10, i10, a10) => {
      let l10 = this.getExpandedBounds(e13);
      if (!Utils.pointInBounds(n10, l10))
        return;
      let r11 = Ft(e13.size).map((S10) => p.add(S10, e13.point)), c10 = Ft(e13.size, this.bindingDistance).map((S10) => p.add(S10, e13.point)), p10 = Utils.pointsToLineSegments(r11, true).map(([S10, w10]) => p.distanceToLineSegment(S10, w10, n10)).sort((S10, w10) => S10 - w10)[0];
      if (!(Utils.pointInPolygon(n10, c10) || p10 < this.bindingDistance))
        return;
      let u10 = Utils.pointsToLineSegments(c10.concat([c10[0]])).map((S10) => intersectRayLineSegment(o10, i10, S10[0], S10[1])).filter((S10) => S10.didIntersect).flatMap((S10) => S10.points);
      if (!u10.length)
        return;
      let h10 = p.add(Ys(e13.size), e13.point), g10 = u10.sort((S10, w10) => p.dist(w10, o10) - p.dist(S10, o10))[0], m10 = p.med(n10, g10), T10, y10;
      a10 ? (T10 = p.dist(n10, h10) < 16 / 2 ? h10 : n10, y10 = 0) : (p.distanceToLineSegment(n10, m10, h10) < 16 / 2 ? T10 = h10 : T10 = m10, Utils.pointInPolygon(n10, r11) ? y10 = this.bindingDistance : y10 = Math.max(this.bindingDistance, p10));
      let b10 = p.divV(p.sub(T10, [l10.minX, l10.minY]), [l10.width, l10.height]);
      return { point: p.clampV(b10, 0, 1), distance: y10 };
    });
    d8(this, "transform", wn);
    d8(this, "transformSingle", xn);
  }
  getPoints(e13) {
    let { rotation: t12 = 0, point: [n10, o10], size: [i10, a10] } = e13;
    return [[n10 + i10 / 2, o10], [n10, o10 + a10], [n10 + i10, o10 + a10]].map((l10) => p.rotWith(l10, this.getCenter(e13), t12));
  }
};
var Jc = M3("div", { width: "100%", height: "100%" });
function ba(s10, e13, t12) {
  let { strokeWidth: n10 } = le2(t12), o10 = Utils.rng(s10), i10 = e13[0] + o10() * n10 * 2, a10 = e13[1] + o10() * n10 * 2, l10 = Utils.perimeterOfEllipse(i10, a10), r11 = [], c10 = Math.PI + Math.PI * o10(), p10 = Math.abs(o10()), u10 = Math.max(16, l10 / 10);
  for (let h10 = 0; h10 < u10; h10++) {
    let g10 = $n.easeInOutSine(h10 / (u10 + 1)), m10 = c10 * 2 + Math.PI * (2 + p10) * g10, T10 = Math.cos(m10), y10 = Math.sin(m10);
    r11.push([i10 * T10 + e13[0], a10 * y10 + e13[1], g10 + 0.5 + o10() / 2]);
  }
  return me(r11, { size: 1 + n10 * 2, thinning: 0.618, end: { taper: l10 / 8 }, start: { taper: l10 / 12 }, streamline: 0, simulatePressure: true });
}
function ya(s10, e13, t12) {
  let { strokeWidth: n10 } = le2(t12), o10 = Utils.rng(s10), i10 = e13[0] + o10() * n10 * 2, a10 = e13[1] + o10() * n10 * 2, l10 = Utils.perimeterOfEllipse(i10, a10);
  return Utils.getSvgPathFromStroke(ie(ba(s10, e13, t12), { size: 2 + n10 * 2, thinning: 0.618, end: { taper: l10 / 8 }, start: { taper: l10 / 12 }, streamline: 0, simulatePressure: true }));
}
function ls(s10, e13, t12) {
  return Utils.getSvgPathFromStroke(ba(s10, e13, t12).map((n10) => n10.point.slice(0, 2)), false);
}
var wa = cn.memo(function({ id: e13, radius: t12, style: n10, isSelected: o10, isDarkMode: i10 }) {
  let { stroke: a10, strokeWidth: l10, fill: r11 } = le2(n10, i10), c10 = ya(e13, t12, n10);
  return cn.createElement(cn.Fragment, null, cn.createElement("ellipse", { className: n10.isFilled || o10 ? "tl-fill-hitarea" : "tl-stroke-hitarea", cx: t12[0], cy: t12[1], rx: t12[0], ry: t12[1] }), n10.isFilled && cn.createElement("path", { d: ls(e13, t12, n10), stroke: "none", fill: r11, pointerEvents: "none" }), cn.createElement("path", { d: c10, fill: a10, stroke: a10, strokeWidth: l10, pointerEvents: "none", strokeLinecap: "round", strokeLinejoin: "round" }));
});
var Ia = vn.memo(function({ radius: e13, style: t12, isSelected: n10, isDarkMode: o10 }) {
  let { stroke: i10, strokeWidth: a10, fill: l10 } = le2(t12, o10), r11 = 1 + a10 * 1.618, c10 = Math.max(0, e13[0] - r11 / 2), p10 = Math.max(0, e13[1] - r11 / 2), u10 = Utils.perimeterOfEllipse(c10, p10), { strokeDasharray: h10, strokeDashoffset: g10 } = Utils.getPerfectDashProps(u10 < 64 ? u10 * 2 : u10, a10 * 1.618, t12.dash, 4);
  return vn.createElement(vn.Fragment, null, vn.createElement("ellipse", { className: t12.isFilled || n10 ? "tl-fill-hitarea" : "tl-stroke-hitarea", cx: e13[0], cy: e13[1], rx: e13[0], ry: e13[1] }), vn.createElement("ellipse", { cx: e13[0], cy: e13[1], rx: c10, ry: p10, fill: l10, stroke: i10, strokeWidth: r11, strokeDasharray: h10, strokeDashoffset: g10, pointerEvents: "none", strokeLinecap: "round", strokeLinejoin: "round" }));
});
var qs = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "ellipse");
    d8(this, "canBind", true);
    d8(this, "canClone", true);
    d8(this, "canEdit", true);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "id", type: "ellipse", name: "Ellipse", parentId: "page", childIndex: 1, point: [0, 0], radius: [1, 1], rotation: 0, style: Ze, label: "", labelPoint: [0.5, 0.5] }, e13));
    d8(this, "Component", he.Component(({ shape: e13, isGhost: t12, isSelected: n10, isBinding: o10, isEditing: i10, meta: a10, bounds: l10, events: r11, onShapeChange: c10, onShapeBlur: p10 }, u10) => {
      let { id: h10, radius: g10, style: m10, label: T10 = "", labelPoint: y10 = qn } = e13, b10 = wt(e13.style), S10 = le2(m10, a10.isDarkMode), w10 = S10.strokeWidth, D10 = 1 + w10 * 1.618, B10 = Math.max(0, g10[0] - D10 / 2), I10 = Math.max(0, g10[1] - D10 / 2), P10 = m10.dash === "draw" ? wa : Ia, v10 = Xt.useCallback((Q) => c10 == null ? void 0 : c10({ id: h10, label: Q }), [c10]);
      return Xt.createElement(sp, f8({ ref: u10 }, r11), Xt.createElement(In, { isEditing: i10, onChange: v10, onBlur: p10, font: b10, text: T10, color: S10.stroke, offsetX: (y10[0] - 0.5) * l10.width, offsetY: (y10[1] - 0.5) * l10.height }), Xt.createElement(SVGContainer, { id: e13.id + "_svg", opacity: t12 ? 0.3 : 1 }, o10 && Xt.createElement("ellipse", { className: "tl-binding-indicator", cx: g10[0], cy: g10[1], rx: B10, ry: I10, strokeWidth: this.bindingDistance }), Xt.createElement(P10, { id: h10, radius: g10, style: m10, isSelected: n10, isDarkMode: a10.isDarkMode })));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { id: t12, radius: n10, style: o10 } = e13, a10 = le2(o10).strokeWidth, l10 = 1 + a10 * 1.618, r11 = Math.max(0, n10[0] - l10 / 2), c10 = Math.max(0, n10[1] - l10 / 2);
      return o10.dash === "draw" ? Xt.createElement("path", { d: ls(t12, n10, o10) }) : Xt.createElement("ellipse", { cx: n10[0], cy: n10[1], rx: r11, ry: c10 });
    }));
    d8(this, "hitTestPoint", (e13, t12) => Utils.pointInBounds(t12, this.getRotatedBounds(e13)) && Utils.pointInEllipse(t12, this.getCenter(e13), e13.radius[0], e13.radius[1], e13.rotation || 0));
    d8(this, "hitTestLineSegment", (e13, t12, n10) => intersectLineSegmentEllipse(t12, n10, this.getCenter(e13), e13.radius[0], e13.radius[1], e13.rotation || 0).didIntersect);
    d8(this, "getBounds", (e13) => Utils.getFromCache(this.boundsCache, e13, () => Utils.getRotatedEllipseBounds(e13.point[0], e13.point[1], e13.radius[0], e13.radius[1], 0)));
    d8(this, "getRotatedBounds", (e13) => Utils.getRotatedEllipseBounds(e13.point[0], e13.point[1], e13.radius[0], e13.radius[1], e13.rotation));
    d8(this, "hitTestBounds", (e13, t12) => {
      let n10 = this.getBounds(e13);
      return Utils.boundsContained(n10, t12) || intersectEllipseBounds(this.getCenter(e13), e13.radius[0], e13.radius[1], e13.rotation || 0, t12).length > 0;
    });
    d8(this, "shouldRender", (e13, t12) => t12.radius !== e13.radius || t12.style !== e13.style || t12.label !== e13.label);
    d8(this, "getCenter", (e13) => e.add(e13.point, e13.radius));
    d8(this, "getBindingPoint", (e13, t12, n10, o10, i10, a10) => {
      {
        let l10 = this.getExpandedBounds(e13), r11 = this.getCenter(e13), c10, p10;
        if (!Utils.pointInEllipse(n10, r11, e13.radius[0] + this.bindingDistance, e13.radius[1] + this.bindingDistance))
          return;
        if (a10)
          e.dist(n10, this.getCenter(e13)) < 12 ? c10 = [0.5, 0.5] : c10 = e.divV(e.sub(n10, [l10.minX, l10.minY]), [l10.width, l10.height]), p10 = 0;
        else {
          let u10 = intersectRayEllipse(o10, i10, r11, e13.radius[0], e13.radius[1], e13.rotation || 0).points.sort((g10, m10) => e.dist(g10, o10) - e.dist(m10, o10))[0];
          if (u10 || (u10 = intersectLineSegmentEllipse(n10, r11, r11, e13.radius[0], e13.radius[1], e13.rotation || 0).points.sort((g10, m10) => e.dist(g10, n10) - e.dist(m10, n10))[0]), !u10)
            return;
          let h10 = e.med(n10, u10);
          if (e.distanceToLineSegment(n10, h10, this.getCenter(e13)) < 12 ? c10 = [0.5, 0.5] : c10 = e.divV(e.sub(h10, [l10.minX, l10.minY]), [l10.width, l10.height]), Utils.pointInEllipse(n10, r11, e13.radius[0], e13.radius[1], e13.rotation || 0))
            p10 = this.bindingDistance / 2;
          else {
            let g10 = intersectLineSegmentEllipse(n10, r11, r11, e13.radius[0], e13.radius[1], e13.rotation || 0).points[0];
            if (!g10)
              return;
            p10 = Math.max(this.bindingDistance / 2, e.dist(n10, g10));
          }
        }
        return { point: c10, distance: p10 };
      }
    });
    d8(this, "transform", (e13, t12, { scaleX: n10, scaleY: o10, initialShape: i10 }) => {
      let { rotation: a10 = 0 } = i10;
      return { point: [t12.minX, t12.minY], radius: [t12.width / 2, t12.height / 2], rotation: n10 < 0 && o10 >= 0 || o10 < 0 && n10 >= 0 ? -(a10 || 0) : a10 || 0 };
    });
    d8(this, "transformSingle", (e13, t12) => ({ point: e.toFixed([t12.minX, t12.minY]), radius: e.div([t12.width, t12.height], 2) }));
  }
};
var sp = M3("div", { width: "100%", height: "100%" });
function Da(s10, e13, t12, n10) {
  return ["M", s10[0], s10[1], "A", t12[2], t12[2], 0, 0, n10 < 0 ? 0 : 1, e13[0], e13[1]].join(" ");
}
function cs(s10, e13) {
  let { start: t12, end: n10 } = s10, o10 = p.dist(t12.point, n10.point), i10 = p.med(t12.point, n10.point), a10 = o10 / 2 * e13, l10 = p.uni(p.vec(t12.point, n10.point));
  return p.toFixed(Math.abs(a10) < 10 ? i10 : p.add(i10, p.mul(p.per(l10), a10)));
}
function Pa(s10, e13, t12, n10, o10, i10) {
  let a10 = Utils.rng(s10), l10 = le2(e13).strokeWidth, r11 = o10 ? p.nudge(t12, n10, l10) : t12, c10 = i10 ? p.nudge(n10, t12, l10) : n10, p10 = Te([r11, c10], { size: l10, thinning: 0.618 + a10() * 0.2, easing: $n.easeOutQuad, simulatePressure: true, streamline: 0, last: true });
  return Utils.getSvgPathFromStroke(p10);
}
function Ba(s10, e13, t12, n10, o10, i10, a10, l10, r11, c10) {
  let p10 = Utils.rng(s10), u10 = le2(e13).strokeWidth, h10 = o10 ? p.rotWith(t12, a10, u10 / r11) : t12, g10 = i10 ? p.rotWith(n10, a10, -(u10 / r11)) : n10, m10 = p.angle(a10, h10), T10 = p.angle(a10, g10), y10 = [], b10 = 8 + Math.floor(Math.abs(r11) / 20 * 1 + p10() / 2);
  for (let w10 = 0; w10 < b10; w10++) {
    let D10 = c10(w10 / b10), B10 = Utils.lerpAngles(m10, T10, D10);
    y10.push(p.toFixed(p.nudgeAtAngle(a10, B10, l10)));
  }
  let S10 = Te([h10, ...y10, g10], { size: 1 + u10, thinning: 0.618 + p10() * 0.2, easing: $n.easeOutQuad, simulatePressure: false, streamline: 0, last: true });
  return Utils.getSvgPathFromStroke(S10);
}
function Dn(s10, e13, t12) {
  return Utils.circleFromThreePoints(s10, t12, e13);
}
function ps(s10, e13, t12, n10, o10) {
  let i10 = intersectCircleCircle(s10, e13 * 0.618, t12, n10).points;
  if (!i10)
    return x7.warn("Could not find an intersection for the arrow head."), { left: s10, right: s10 };
  let a10 = o10 ? i10[0] : i10[1], l10 = a10 ? p.nudge(p.rotWith(a10, s10, Math.PI / 6), s10, e13 * -0.382) : s10, r11 = a10 ? p.nudge(p.rotWith(a10, s10, -Math.PI / 6), s10, e13 * -0.382) : s10;
  return { left: l10, right: r11 };
}
function us(s10, e13, t12) {
  let n10 = intersectCircleLineSegment(s10, t12, s10, e13).points;
  if (!n10)
    return x7.warn("Could not find an intersection for the arrow head."), { left: s10, right: s10 };
  let o10 = n10[0], i10 = o10 ? p.rotWith(o10, s10, Math.PI / 6) : s10, a10 = o10 ? p.rotWith(o10, s10, -Math.PI / 6) : s10;
  return { left: i10, right: a10 };
}
function Ca(s10, e13, t12, n10, o10) {
  let { left: i10, right: a10 } = ps(s10, e13, t12, n10, o10);
  return `M ${i10} L ${s10} ${a10}`;
}
function va(s10, e13, t12) {
  let { left: n10, right: o10 } = us(s10, e13, t12);
  return `M ${n10} L ${s10} ${o10}`;
}
function Ma(s10, e13, t12, n10, o10, i10) {
  let { strokeWidth: a10 } = le2(s10, false), l10 = p.dist(e13, n10), r11 = Math.min(l10 / 3, a10 * 8), c10 = [];
  if (p.dist(t12, p.toFixed(p.med(e13, n10))) < 1)
    c10.push(`M ${e13} L ${n10}`), o10 && c10.push(va(e13, n10, r11)), i10 && c10.push(va(n10, e13, r11));
  else {
    let u10 = Dn(e13, t12, n10), h10 = [u10[0], u10[1]], g10 = u10[2], m10 = so(h10, g10, e13, n10);
    c10.push(`M ${e13} A ${g10} ${g10} 0 0 ${m10 > 0 ? "1" : "0"} ${n10}`), o10 && c10.push(Ca(e13, r11, h10, g10, m10 < 0)), i10 && c10.push(Ca(n10, r11, h10, g10, m10 >= 0));
  }
  return c10.join(" ");
}
function Co(s10, e13, t12) {
  if (p.dist2(e13, p.med(s10, t12)) <= 4)
    return [s10, t12];
  let n10 = [], o10 = Dn(s10, e13, t12), i10 = [o10[0], o10[1]], a10 = o10[2], l10 = p.angle(i10, s10), r11 = p.angle(i10, t12);
  for (let c10 = 1 / 20; c10 < 1; c10 += 1 / 20) {
    let p10 = Utils.lerpAngles(l10, r11, c10);
    n10.push(p.nudgeAtAngle(i10, p10, a10));
  }
  return n10;
}
function Ea(s10, e13, t12) {
  if (t12 === s10 || t12 === e13)
    return true;
  let n10 = Math.PI * 2, o10 = (e13 - s10 + n10) % n10, i10 = (t12 - s10 + n10) % n10;
  return o10 <= Math.PI != i10 > o10;
}
function so(s10, e13, t12, n10) {
  let o10 = Utils.getSweep(s10, t12, n10);
  return e13 * (2 * Math.PI) * (o10 / (2 * Math.PI));
}
function io({ left: s10, middle: e13, right: t12, stroke: n10, strokeWidth: o10 }) {
  return hs.createElement("g", null, hs.createElement("path", { className: "tl-stroke-hitarea", d: `M ${s10} L ${e13} ${t12}` }), hs.createElement("path", { d: `M ${s10} L ${e13} ${t12}`, fill: "none", stroke: n10, strokeWidth: o10, strokeLinecap: "round", strokeLinejoin: "round", pointerEvents: "none" }));
}
var Ra = qt.memo(function({ id: e13, style: t12, start: n10, end: o10, decorationStart: i10, decorationEnd: a10, isDraw: l10, isDarkMode: r11 }) {
  let c10 = p.dist(n10, o10);
  if (c10 < 2)
    return null;
  let p10 = le2(t12, r11), { strokeWidth: u10 } = p10, h10 = 1 + u10 * 1.618, g10 = l10 ? Pa(e13, t12, n10, o10, i10, a10) : "M" + p.toFixed(n10) + "L" + p.toFixed(o10), { strokeDasharray: m10, strokeDashoffset: T10 } = Utils.getPerfectDashProps(c10, u10 * 1.618, t12.dash, 2, false), y10 = Math.min(c10 / 3, u10 * 8), b10 = i10 ? us(n10, o10, y10) : null, S10 = a10 ? us(o10, n10, y10) : null;
  return qt.createElement(qt.Fragment, null, qt.createElement("path", { className: "tl-stroke-hitarea", d: g10 }), qt.createElement("path", { d: g10, fill: p10.stroke, stroke: p10.stroke, strokeWidth: l10 ? h10 / 2 : h10, strokeDasharray: m10, strokeDashoffset: T10, strokeLinecap: "round", strokeLinejoin: "round", pointerEvents: "stroke" }), b10 && qt.createElement(io, { left: b10.left, middle: n10, right: b10.right, stroke: p10.stroke, strokeWidth: h10 }), S10 && qt.createElement(io, { left: S10.left, middle: o10, right: S10.right, stroke: p10.stroke, strokeWidth: h10 }));
});
var Aa = Jt.memo(function({ id: e13, style: t12, start: n10, bend: o10, end: i10, arrowBend: a10, decorationStart: l10, decorationEnd: r11, isDraw: c10, isDarkMode: p10 }) {
  let u10 = p.dist(n10, i10);
  if (u10 < 2)
    return null;
  let h10 = le2(t12, p10), { strokeWidth: g10 } = h10, m10 = 1 + g10 * 1.618, T10 = Dn(n10, o10, i10), y10 = [T10[0], T10[1]], b10 = T10[2], S10 = so(y10, b10, n10, i10), w10 = Utils.rng(e13), D10 = $n[w10() > 0 ? "easeInOutSine" : "easeInOutCubic"], B10 = c10 ? Ba(e13, t12, n10, i10, l10, r11, y10, b10, S10, D10) : Da(n10, i10, T10, a10), { strokeDasharray: I10, strokeDashoffset: P10 } = Utils.getPerfectDashProps(Math.abs(S10), m10, t12.dash, 2, false), v10 = Math.min(u10 / 3, g10 * 8), Q = l10 ? ps(n10, v10, y10, b10, S10 < 0) : null, oe2 = r11 ? ps(i10, v10, y10, b10, S10 >= 0) : null;
  return Jt.createElement(Jt.Fragment, null, Jt.createElement("path", { className: "tl-stroke-hitarea", d: B10 }), Jt.createElement("path", { d: B10, fill: c10 ? h10.stroke : "none", stroke: h10.stroke, strokeWidth: c10 ? 0 : m10, strokeDasharray: I10, strokeDashoffset: P10, strokeLinecap: "round", strokeLinejoin: "round", pointerEvents: "none" }), Q && Jt.createElement(io, { left: Q.left, middle: n10, right: Q.right, stroke: h10.stroke, strokeWidth: m10 }), oe2 && Jt.createElement(io, { left: oe2.left, middle: i10, right: oe2.right, stroke: h10.stroke, strokeWidth: m10 }));
});
function Ha({ id: s10, bounds: e13, labelSize: t12, offset: n10, scale: o10 = 1 }) {
  return vo.createElement("defs", null, vo.createElement("mask", { id: s10 + "_clip" }, vo.createElement("rect", { x: -100, y: -100, width: e13.width + 200, height: e13.height + 200, fill: "white" }), vo.createElement("rect", { x: e13.width / 2 - t12[0] / 2 * o10 + ((n10 == null ? void 0 : n10[0]) || 0), y: e13.height / 2 - t12[1] / 2 * o10 + ((n10 == null ? void 0 : n10[1]) || 0), width: t12[0] * o10, height: t12[1] * o10, rx: 4 * o10, ry: 4 * o10, fill: "black", opacity: Math.max(o10, 0.8) })));
}
var Qs = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "arrow");
    d8(this, "hideBounds", true);
    d8(this, "canEdit", true);
    d8(this, "pathCache", /* @__PURE__ */ new WeakMap());
    d8(this, "getShape", (e13) => {
      var t12, n10, o10, i10;
      return f8({ id: "id", type: "arrow", name: "Arrow", parentId: "page", childIndex: 1, point: [0, 0], rotation: 0, bend: 0, handles: { start: f8({ id: "start", index: 0, point: [0, 0], canBind: true }, (t12 = e13.handles) == null ? void 0 : t12.start), end: f8({ id: "end", index: 1, point: [1, 1], canBind: true }, (n10 = e13.handles) == null ? void 0 : n10.end), bend: f8({ id: "bend", index: 2, point: [0.5, 0.5] }, (o10 = e13.handles) == null ? void 0 : o10.bend) }, decorations: (i10 = e13.decorations) != null ? i10 : { end: "arrow" }, style: f8(C5(f8({}, Ze), { isFilled: false }), e13.style), label: "", labelPoint: [0.5, 0.5] }, e13);
    });
    d8(this, "Component", he.Component(({ shape: e13, isEditing: t12, isGhost: n10, meta: o10, events: i10, onShapeChange: a10, onShapeBlur: l10 }, r11) => {
      var te, ke;
      let { id: c10, label: p10 = "", handles: { start: u10, bend: h10, end: g10 }, decorations: m10 = {}, style: T10 } = e13, y10 = (ke = (te = p10 == null ? void 0 : p10.trim()) == null ? void 0 : te.length) != null ? ke : 0 > 0, b10 = e.dist(h10.point, e.toFixed(e.med(u10.point, g10.point))) < 1, S10 = wt(T10), w10 = le2(T10, o10.isDarkMode), D10 = y10 || t12 ? Nn(p10, S10) : [0, 0], B10 = this.getBounds(e13), I10 = Le.useMemo(() => {
        let { start: be2, bend: xe, end: Me } = e13.handles;
        if (b10)
          return e.dist(be2.point, Me.point);
        let Fe = Dn(be2.point, xe.point, Me.point), _e = Fe.slice(0, 2), ot = Fe[2], Tt = so(_e, ot, be2.point, Me.point);
        return Math.abs(Tt);
      }, [e13.handles]), P10 = Math.max(0.5, Math.min(1, Math.max(I10 / (D10[1] + 128), I10 / (D10[0] + 128)))), v10 = Le.useMemo(() => {
        let be2 = this.getBounds(e13);
        return e.sub(e13.handles.bend.point, e.toFixed([be2.width / 2, be2.height / 2]));
      }, [e13, P10]), Q = Le.useCallback((be2) => {
        a10 == null || a10({ id: c10, label: be2 });
      }, [a10]), oe2 = b10 ? Ra : Aa;
      return Le.createElement(hp, f8({ ref: r11 }, i10), Le.createElement(In, { font: S10, text: p10, color: w10.stroke, offsetX: v10[0], offsetY: v10[1], scale: P10, isEditing: t12, onChange: Q, onBlur: l10 }), Le.createElement(SVGContainer, { id: e13.id + "_svg" }, Le.createElement("defs", null, Le.createElement("mask", { id: e13.id + "_clip" }, Le.createElement("rect", { x: -100, y: -100, width: B10.width + 200, height: B10.height + 200, fill: "white" }), Le.createElement("rect", { x: B10.width / 2 - D10[0] / 2 * P10 + v10[0], y: B10.height / 2 - D10[1] / 2 * P10 + v10[1], width: D10[0] * P10, height: D10[1] * P10, rx: 4 * P10, ry: 4 * P10, fill: "black", opacity: 1 }))), Le.createElement("g", { pointerEvents: "none", opacity: n10 ? 0.3 : 1, mask: y10 || t12 ? `url(#${e13.id}_clip)` : "" }, Le.createElement(oe2, { id: c10, style: T10, start: u10.point, end: g10.point, bend: h10.point, arrowBend: e13.bend, decorationStart: m10 == null ? void 0 : m10.start, decorationEnd: m10 == null ? void 0 : m10.end, isDraw: T10.dash === "draw", isDarkMode: o10.isDarkMode }))));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13, bounds: t12 }) => {
      var y10, b10;
      let { style: n10, decorations: o10, label: i10, handles: { start: a10, bend: l10, end: r11 } } = e13, c10 = (b10 = (y10 = i10 == null ? void 0 : i10.trim()) == null ? void 0 : y10.length) != null ? b10 : 0 > 0, p10 = wt(n10), u10 = c10 ? Nn(i10, p10) : [0, 0], h10 = e.dist(l10.point, e.toFixed(e.med(a10.point, r11.point))) < 1, g10 = Le.useMemo(() => {
        let { start: S10, bend: w10, end: D10 } = e13.handles;
        if (h10)
          return e.dist(S10.point, D10.point);
        let B10 = Dn(S10.point, w10.point, D10.point), I10 = B10.slice(0, 2), P10 = B10[2], v10 = so(I10, P10, S10.point, D10.point);
        return Math.abs(v10);
      }, [e13.handles]), m10 = Math.max(0.5, Math.min(1, Math.max(g10 / (u10[1] + 128), g10 / (u10[0] + 128)))), T10 = Le.useMemo(() => {
        let S10 = this.getBounds(e13);
        return e.sub(e13.handles.bend.point, [S10.width / 2, S10.height / 2]);
      }, [e13, m10]);
      return Le.createElement(Le.Fragment, null, c10 && Le.createElement(Ha, { id: e13.id, scale: m10, offset: T10, bounds: t12, labelSize: u10 }), Le.createElement("path", { d: Ma(n10, a10.point, l10.point, r11.point, o10 == null ? void 0 : o10.start, o10 == null ? void 0 : o10.end), mask: c10 ? `url(#${e13.id}_clip)` : "" }), c10 && Le.createElement("rect", { x: t12.width / 2 - u10[0] / 2 * m10 + T10[0], y: t12.height / 2 - u10[1] / 2 * m10 + T10[1], width: u10[0] * m10, height: u10[1] * m10, rx: 4 * m10, ry: 4 * m10, fill: "transparent" }));
    }));
    d8(this, "getBounds", (e13) => {
      let t12 = Utils.getFromCache(this.boundsCache, e13, () => {
        let { handles: { start: n10, bend: o10, end: i10 } } = e13;
        return Utils.getBoundsFromPoints(Co(n10.point, o10.point, i10.point));
      });
      return Utils.translateBounds(t12, e13.point);
    });
    d8(this, "getRotatedBounds", (e13) => {
      let { handles: { start: t12, bend: n10, end: o10 } } = e13, i10 = Co(t12.point, n10.point, o10.point), { minX: a10, minY: l10, maxX: r11, maxY: c10 } = Utils.getBoundsFromPoints(i10);
      return e13.rotation !== 0 && (i10 = i10.map((p10) => e.rotWith(p10, [(a10 + r11) / 2, (l10 + c10) / 2], e13.rotation || 0))), Utils.translateBounds(Utils.getBoundsFromPoints(i10), e13.point);
    });
    d8(this, "getCenter", (e13) => {
      let { start: t12, end: n10 } = e13.handles;
      return e.add(e13.point, e.med(t12.point, n10.point));
    });
    d8(this, "shouldRender", (e13, t12) => t12.decorations !== e13.decorations || t12.handles !== e13.handles || t12.style !== e13.style || t12.label !== e13.label);
    d8(this, "hitTestPoint", (e13, t12) => {
      let { handles: { start: n10, bend: o10, end: i10 } } = e13, a10 = e.sub(t12, e13.point), l10 = Co(n10.point, o10.point, i10.point);
      for (let r11 = 1; r11 < l10.length; r11++)
        if (e.distanceToLineSegment(l10[r11 - 1], l10[r11], a10) < 1)
          return true;
      return false;
    });
    d8(this, "hitTestLineSegment", (e13, t12, n10) => {
      let { handles: { start: o10, bend: i10, end: a10 } } = e13, l10 = e.sub(t12, e13.point), r11 = e.sub(n10, e13.point), c10 = Co(o10.point, i10.point, a10.point);
      for (let p10 = 1; p10 < c10.length; p10++)
        if (intersectLineSegmentLineSegment(c10[p10 - 1], c10[p10], l10, r11).didIntersect)
          return true;
      return false;
    });
    d8(this, "hitTestBounds", (e13, t12) => {
      let { start: n10, end: o10, bend: i10 } = e13.handles, a10 = e.add(e13.point, n10.point), l10 = e.add(e13.point, o10.point);
      if (Utils.pointInBounds(a10, t12) || Utils.pointInBounds(l10, t12))
        return true;
      if (e.isEqual(e.med(n10.point, o10.point), i10.point))
        return intersectLineSegmentBounds(a10, l10, t12).length > 0;
      {
        let [r11, c10, p10] = Dn(n10.point, i10.point, o10.point), u10 = e.add(e13.point, [r11, c10]);
        return intersectArcBounds(u10, p10, a10, l10, t12).length > 0;
      }
    });
    d8(this, "transform", (e13, t12, { initialShape: n10, scaleX: o10, scaleY: i10 }) => {
      let a10 = this.getBounds(n10), l10 = ["start", "end"], r11 = f8({}, n10.handles);
      l10.forEach((b10) => {
        let [S10, w10] = r11[b10].point, D10 = S10 / a10.width, B10 = w10 / a10.height;
        r11[b10] = C5(f8({}, r11[b10]), { point: [t12.width * (o10 < 0 ? 1 - D10 : D10), t12.height * (i10 < 0 ? 1 - B10 : B10)] });
      });
      let { start: c10, bend: p10, end: u10 } = r11, h10 = e.dist(c10.point, u10.point), g10 = e.med(c10.point, u10.point), m10 = h10 / 2 * n10.bend, T10 = e.uni(e.vec(c10.point, u10.point)), y10 = e.add(g10, e.mul(e.per(T10), m10));
      return r11.bend = C5(f8({}, p10), { point: e.toFixed(Math.abs(m10) < 10 ? g10 : y10) }), { point: e.toFixed([t12.minX, t12.minY]), handles: r11 };
    });
    d8(this, "onDoubleClickHandle", (e13, t12) => {
      var n10, o10;
      switch (t12) {
        case "bend":
          return { bend: 0, handles: C5(f8({}, e13.handles), { bend: C5(f8({}, e13.handles.bend), { point: cs(e13.handles, e13.bend) }) }) };
        case "start":
          return { decorations: C5(f8({}, e13.decorations), { start: ((n10 = e13.decorations) == null ? void 0 : n10.start) ? void 0 : "arrow" }) };
        case "end":
          return { decorations: C5(f8({}, e13.decorations), { end: ((o10 = e13.decorations) == null ? void 0 : o10.end) ? void 0 : "arrow" }) };
      }
      return this;
    });
    d8(this, "onHandleChange", (e13, t12) => {
      let n10 = Utils.deepMerge(e13.handles, t12), o10 = e13.bend;
      if (n10 = Utils.deepMerge(n10, { start: { point: e.toFixed(n10.start.point) }, end: { point: e.toFixed(n10.end.point) } }), e.isEqual(n10.start.point, n10.end.point))
        return;
      if ("bend" in t12) {
        let { start: c10, end: p10, bend: u10 } = n10, h10 = e.dist(c10.point, p10.point), g10 = e.med(c10.point, p10.point), m10 = e.angle(c10.point, p10.point), T10 = e.uni(e.vec(c10.point, p10.point)), y10 = e.add(g10, e.mul(e.per(T10), h10)), b10 = e.sub(g10, e.mul(e.per(T10), h10)), S10 = e.nearestPointOnLineSegment(y10, b10, u10.point, true), D10 = e.dist(g10, S10) / (h10 / 2);
        o10 = Utils.clamp(D10, -0.99, 0.99);
        let B10 = e.angle(c10.point, S10);
        e.isEqual(g10, cs(n10, o10)) ? o10 = 0 : Ea(m10, m10 + Math.PI, B10) && (o10 *= -1);
      }
      let i10 = { point: e13.point, bend: o10, handles: C5(f8({}, n10), { bend: C5(f8({}, n10.bend), { point: cs(n10, o10) }) }) }, a10 = e13.point, l10 = this.getBounds(f8({}, i10)), r11 = e.sub([l10.minX, l10.minY], a10);
      return e.isEqual(r11, [0, 0]) || (Object.values(i10.handles).forEach((c10) => {
        c10.point = e.toFixed(e.sub(c10.point, r11));
      }), i10.point = e.toFixed(e.add(i10.point, r11))), i10;
    });
  }
};
var hp = M3("div", { width: "100%", height: "100%" });
var ei = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "group");
    d8(this, "canBind", true);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "id", type: "group", name: "Group", parentId: "page", childIndex: 1, point: [0, 0], size: [100, 100], rotation: 0, children: [], style: Ze }, e13));
    d8(this, "Component", he.Component(({ shape: e13, isBinding: t12, isGhost: n10, isHovered: o10, isSelected: i10, events: a10 }, l10) => {
      let { id: r11, size: c10 } = e13, p10 = 2, u10 = Math.max(0, c10[0] - p10 / 2), h10 = Math.max(0, c10[1] - p10 / 2), m10 = [[[p10 / 2, p10 / 2], [u10, p10 / 2], u10 - p10 / 2], [[u10, p10 / 2], [u10, h10], h10 - p10 / 2], [[u10, h10], [p10 / 2, h10], u10 - p10 / 2], [[p10 / 2, h10], [p10 / 2, p10 / 2], h10 - p10 / 2]].map(([T10, y10], b10) => un.createElement("line", { key: r11 + "_" + b10, x1: T10[0], y1: T10[1], x2: y10[0], y2: y10[1] }));
      return un.createElement(SVGContainer, f8({ ref: l10 }, a10), t12 && un.createElement("rect", { className: "tl-binding-indicator", strokeWidth: this.bindingDistance }), un.createElement("g", { opacity: n10 ? 0.3 : 1 }, un.createElement("rect", { x: 0, y: 0, width: c10[0], height: c10[1], fill: "transparent", pointerEvents: "all" }), un.createElement(za, { stroke: "black", opacity: o10 || i10 ? 1 : 0, strokeLinecap: "round", pointerEvents: "stroke" }, m10)));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { id: t12, size: n10 } = e13, o10 = 2, i10 = Math.max(0, n10[0] - o10 / 2), a10 = Math.max(0, n10[1] - o10 / 2), r11 = [[[o10 / 2, o10 / 2], [i10, o10 / 2], i10 - o10 / 2], [[i10, o10 / 2], [i10, a10], a10 - o10 / 2], [[i10, a10], [o10 / 2, a10], i10 - o10 / 2], [[o10 / 2, a10], [o10 / 2, o10 / 2], a10 - o10 / 2]].map(([c10, p10], u10) => un.createElement("line", { key: t12 + "_" + u10, x1: c10[0], y1: c10[1], x2: p10[0], y2: p10[1] }));
      return un.createElement(za, { strokeLinecap: "round", pointerEvents: "stroke" }, r11);
    }));
    d8(this, "getBounds", (e13) => Et(e13, this.boundsCache));
    d8(this, "shouldRender", (e13, t12) => t12.size !== e13.size || t12.style !== e13.style);
  }
};
var za = M3("g", { strokeWidth: "calc(1.5px * var(--tl-scale))", strokeDasharray: "calc(1px * var(--tl-scale)), calc(3px * var(--tl-scale))" });
var ni = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "sticky");
    d8(this, "canBind", true);
    d8(this, "canEdit", true);
    d8(this, "canClone", true);
    d8(this, "hideResizeHandles", true);
    d8(this, "showCloneHandles", true);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "id", type: "sticky", name: "Sticky", parentId: "page", childIndex: 1, point: [0, 0], size: [200, 200], text: "", rotation: 0, style: to }, e13));
    d8(this, "Component", he.Component(({ shape: e13, meta: t12, events: n10, isGhost: o10, isBinding: i10, isEditing: a10, onShapeBlur: l10, onShapeChange: r11 }, c10) => {
      let p10 = Zr(e13.style), { color: u10, fill: h10 } = Ns(e13.style, t12.isDarkMode), g10 = Oe.useRef(null), m10 = Oe.useRef(null), T10 = Oe.useRef(null), y10 = Oe.useRef(false), b10 = Oe.useCallback((v10) => {
        v10.stopPropagation();
      }, []), S10 = Oe.useCallback((v10) => {
        r11 == null || r11({ id: e13.id, type: e13.type, text: x7.normalizeText(v10) });
      }, [e13.id]), w10 = Oe.useCallback((v10) => {
        S10(v10.currentTarget.value);
      }, [r11, S10]), D10 = Oe.useCallback((v10) => {
        if (v10.key === "Escape") {
          v10.preventDefault(), v10.stopPropagation(), l10 == null || l10();
          return;
        }
        if (v10.key === "Tab" && e13.text.length === 0) {
          v10.preventDefault();
          return;
        }
        if (!(v10.key === "Meta" || v10.metaKey))
          v10.stopPropagation();
        else if (v10.key === "z" && v10.metaKey) {
          v10.shiftKey ? document.execCommand("redo", false) : document.execCommand("undo", false), v10.stopPropagation(), v10.preventDefault();
          return;
        }
        (v10.metaKey || v10.ctrlKey) && v10.key === "=" && v10.preventDefault(), v10.key === "Tab" && (v10.preventDefault(), v10.shiftKey ? Ge.unindent(v10.currentTarget) : Ge.indent(v10.currentTarget), r11 == null || r11(C5(f8({}, e13), { text: x7.normalizeText(v10.currentTarget.value) })));
      }, [e13, r11]), B10 = Oe.useCallback((v10) => {
        v10.currentTarget.setSelectionRange(0, 0), l10 == null || l10();
      }, []), I10 = Oe.useCallback((v10) => {
        !a10 || !y10.current || v10.currentTarget.select();
      }, [a10]);
      Oe.useEffect(() => {
        if (a10) {
          y10.current = true;
          let v10 = m10.current;
          v10.focus(), v10.select();
        }
      }, [a10]), Oe.useEffect(() => {
        let v10 = T10.current, { size: Q } = e13, { offsetHeight: oe2 } = v10, te = ti - Qt * 2, ke = Q[1] - Qt * 2;
        if (oe2 === ke)
          return;
        if (oe2 > te) {
          r11 == null || r11({ id: e13.id, size: [Q[0], oe2 + Qt * 2] });
          return;
        }
        if (oe2 < te && Q[1] > ti) {
          r11 == null || r11({ id: e13.id, size: [Q[0], ti] });
          return;
        }
        let be2 = m10.current;
        be2 == null || be2.focus();
      }, [e13.text, e13.size[1], e13.style]);
      let P10 = { font: p10, color: u10, textShadow: t12.isDarkMode ? "0.5px 0.5px 2px rgba(255, 255, 255,.25)" : "0.5px 0.5px 2px rgba(255, 255, 255,.5)" };
      return Oe.createElement(HTMLContainer, f8({ ref: c10 }, n10), Oe.createElement(Tp, { ref: g10, isDarkMode: t12.isDarkMode, isGhost: o10, style: f8({ backgroundColor: h10 }, P10) }, i10 && Oe.createElement("div", { className: "tl-binding-indicator", style: { position: "absolute", top: -this.bindingDistance, left: -this.bindingDistance, width: `calc(100% + ${this.bindingDistance * 2}px)`, height: `calc(100% + ${this.bindingDistance * 2}px)`, backgroundColor: "var(--tl-selectFill)" } }), Oe.createElement(bp, { ref: T10, isEditing: a10, alignment: e13.style.textAlign }, e13.text, "\u200B"), a10 && Oe.createElement(yp, { ref: m10, onPointerDown: b10, value: e13.text, onChange: w10, onKeyDown: D10, onFocus: I10, onBlur: B10, tabIndex: -1, autoComplete: "false", autoCapitalize: "false", autoCorrect: "false", autoSave: "false", autoFocus: true, spellCheck: true, alignment: e13.style.textAlign, onContextMenu: rt, onCopy: rt, onPaste: rt, onCut: rt })));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { size: [t12, n10] } = e13;
      return Oe.createElement("rect", { x: 0, y: 0, rx: 3, ry: 3, width: Math.max(1, t12), height: Math.max(1, n10) });
    }));
    d8(this, "getBounds", (e13) => Et(e13, this.boundsCache));
    d8(this, "shouldRender", (e13, t12) => t12.size !== e13.size || t12.style !== e13.style || t12.text !== e13.text);
    d8(this, "transform", (e13, t12, { scaleX: n10, scaleY: o10, transformOrigin: i10 }) => ({ point: e.toFixed([t12.minX + (t12.width - e13.size[0]) * (n10 < 0 ? 1 - i10[0] : i10[0]), t12.minY + (t12.height - e13.size[1]) * (o10 < 0 ? 1 - i10[1] : i10[1])]) }));
    d8(this, "transformSingle", (e13) => e13);
    d8(this, "getSvgElement", (e13, t12) => {
      let n10 = this.getBounds(e13), o10 = Utils.expandBounds(n10, -Qt), i10 = no(e13.text, e13.style, o10), a10 = Ns(e13.style, t12);
      i10.setAttribute("fill", a10.color), i10.setAttribute("transform", `translate(${Qt}, ${Qt})`);
      let l10 = document.createElementNS("http://www.w3.org/2000/svg", "g"), r11 = document.createElementNS("http://www.w3.org/2000/svg", "rect");
      return r11.setAttribute("width", n10.width + ""), r11.setAttribute("height", n10.height + ""), r11.setAttribute("fill", a10.fill), r11.setAttribute("rx", "3"), r11.setAttribute("ry", "3"), l10.appendChild(r11), l10.appendChild(i10), l10;
    });
  }
};
var Qt = 16;
var ti = 200;
var Tp = M3("div", { pointerEvents: "all", position: "relative", backgroundColor: "rgba(255, 220, 100)", fontFamily: "sans-serif", height: "100%", width: "100%", padding: Qt + "px", borderRadius: "3px", perspective: "800px", variants: { isGhost: { false: { opacity: 1 }, true: { transition: "opacity .2s", opacity: 0.3 } }, isDarkMode: { true: { boxShadow: "2px 3px 12px -2px rgba(0,0,0,.3), 1px 1px 4px rgba(0,0,0,.3), 1px 1px 2px rgba(0,0,0,.3)" }, false: { boxShadow: "2px 3px 12px -2px rgba(0,0,0,.2), 1px 1px 4px rgba(0,0,0,.16),  1px 1px 2px rgba(0,0,0,.16)" } } } });
var Fa = { whiteSpace: "pre-wrap", overflowWrap: "break-word" };
var bp = M3("div", f8({ position: "absolute", top: Qt, left: Qt, width: `calc(100% - ${Qt * 2}px)`, height: "fit-content", font: "inherit", pointerEvents: "none", userSelect: "none", variants: { isEditing: { true: { opacity: 1 }, false: { opacity: 1 } }, alignment: { ["start"]: { textAlign: "left" }, ["middle"]: { textAlign: "center" }, ["end"]: { textAlign: "right" }, ["justify"]: { textAlign: "justify" } } } }, Fa));
var yp = M3("textarea", C5(f8({ width: "100%", height: "100%", border: "none", overflow: "hidden", background: "none", outline: "none", textAlign: "left", font: "inherit", padding: 0, color: "transparent", verticalAlign: "top", resize: "none", caretColor: "black" }, Fa), { variants: { alignment: { ["start"]: { textAlign: "left" }, ["middle"]: { textAlign: "center" }, ["end"]: { textAlign: "right" }, ["justify"]: { textAlign: "justify" } } }, "&:focus": { outline: "none", border: "none" } }));
var si = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "text");
    d8(this, "isAspectRatioLocked", true);
    d8(this, "canEdit", true);
    d8(this, "canBind", true);
    d8(this, "canClone", true);
    d8(this, "bindingDistance", 16 / 2);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "id", type: "text", name: "Text", parentId: "page", childIndex: 1, point: [0, 0], rotation: 0, text: " ", style: to }, e13));
    d8(this, "texts", /* @__PURE__ */ new Map());
    d8(this, "Component", he.Component(({ shape: e13, isBinding: t12, isGhost: n10, isEditing: o10, onShapeBlur: i10, onShapeChange: a10, meta: l10, events: r11 }, c10) => {
      let { text: p10, style: u10 } = e13, h10 = le2(u10, l10.isDarkMode), g10 = wt(e13.style), m10 = je.useRef(null), T10 = je.useRef(false), y10 = je.useRef(p10);
      je.useLayoutEffect(() => {
        if (p10 !== y10.current) {
          let I10 = [0, 0];
          this.texts.set(e13.id, p10);
          let P10 = this.getBounds(e13), v10 = this.getBounds(e13);
          switch (e13.style.textAlign) {
            case "start":
              break;
            case "middle": {
              I10 = e.div([v10.width - P10.width, 0], 2);
              break;
            }
            case "end": {
              I10 = [v10.width - P10.width, 0];
              break;
            }
          }
          y10.current = p10, a10 == null || a10(C5(f8({}, e13), { id: e13.id, point: e.sub(e13.point, I10), text: p10 }));
        }
      }, [p10]);
      let b10 = je.useCallback((I10) => {
        let P10 = [0, 0], v10 = x7.normalizeText(I10.currentTarget.value), Q = this.getBounds(e13);
        this.texts.set(e13.id, v10);
        let oe2 = this.getBounds(C5(f8({}, e13), { text: v10 }));
        switch (e13.style.textAlign) {
          case "start":
            break;
          case "middle": {
            P10 = e.div([oe2.width - Q.width, 0], 2);
            break;
          }
          case "end": {
            P10 = [oe2.width - Q.width, 0];
            break;
          }
        }
        y10.current = v10, a10 == null || a10(C5(f8({}, e13), { id: e13.id, point: e.sub(e13.point, P10), text: v10 }));
      }, [e13.id, e13.point]), S10 = je.useCallback((I10) => {
        if (I10.key === "Escape") {
          I10.preventDefault(), I10.stopPropagation(), i10 == null || i10();
          return;
        }
        if (I10.key === "Tab" && e13.text.length === 0) {
          I10.preventDefault();
          return;
        }
        if (I10.key === "Enter" && (I10.metaKey || I10.ctrlKey)) {
          I10.preventDefault(), I10.stopPropagation(), m10.current.blur();
          return;
        }
        if (!(I10.key === "Meta" || I10.metaKey))
          I10.stopPropagation();
        else if (I10.key === "z" && I10.metaKey) {
          I10.shiftKey ? document.execCommand("redo", false) : document.execCommand("undo", false), I10.stopPropagation(), I10.preventDefault();
          return;
        }
        (I10.metaKey || I10.ctrlKey) && I10.key === "=" && I10.preventDefault(), I10.key === "Tab" && (I10.preventDefault(), I10.shiftKey ? Ge.unindent(I10.currentTarget) : Ge.indent(I10.currentTarget), a10 == null || a10(C5(f8({}, e13), { text: x7.normalizeText(I10.currentTarget.value) })));
      }, [e13, a10]), w10 = je.useCallback((I10) => {
        I10.currentTarget.setSelectionRange(0, 0), i10 == null || i10();
      }, []), D10 = je.useCallback((I10) => {
        !o10 || !T10.current || document.activeElement === I10.currentTarget && I10.currentTarget.select();
      }, [o10]), B10 = je.useCallback((I10) => {
        o10 && I10.stopPropagation();
      }, [o10]);
      return je.useEffect(() => {
        o10 ? (this.texts.set(e13.id, p10), requestAnimationFrame(() => {
          T10.current = true;
          let I10 = m10.current;
          I10 && (I10.focus(), I10.select());
        })) : i10 == null || i10();
      }, [o10]), je.createElement(HTMLContainer, f8({ ref: c10 }, r11), je.createElement(Ip, { isGhost: n10, isEditing: o10, onPointerDown: B10 }, je.createElement(Cp, { style: { font: g10, color: h10.stroke, textAlign: xo(u10.textAlign) } }, t12 && je.createElement("div", { className: "tl-binding-indicator", style: { position: "absolute", top: -this.bindingDistance, left: -this.bindingDistance, width: `calc(100% + ${this.bindingDistance * 2}px)`, height: `calc(100% + ${this.bindingDistance * 2}px)`, backgroundColor: "var(--tl-selectFill)" } }), o10 ? je.createElement(vp, { ref: m10, style: { font: g10, color: h10.stroke }, name: "text", tabIndex: -1, autoComplete: "false", autoCapitalize: "false", autoCorrect: "false", autoSave: "false", autoFocus: true, placeholder: "", spellCheck: "true", wrap: "off", dir: "auto", datatype: "wysiwyg", defaultValue: p10, color: h10.stroke, onFocus: D10, onChange: b10, onKeyDown: S10, onBlur: w10, onPointerDown: B10, onContextMenu: rt, onCopy: rt, onPaste: rt, onCut: rt }) : p10, "\u200B")));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { width: t12, height: n10 } = this.getBounds(e13);
      return je.createElement("rect", { x: 0, y: 0, width: t12, height: n10 });
    }));
    d8(this, "getBounds", (e13) => {
      let t12 = Utils.getFromCache(this.boundsCache, e13, () => {
        var i10;
        if (!Bn)
          return { minX: 0, minY: 0, maxX: 10, maxY: 10, width: 10, height: 10 };
        Bn.parentNode || document.body.appendChild(Bn), Bn.style.font = wt(e13.style), Bn.textContent = (i10 = this.texts.get(e13.id)) != null ? i10 : e13.text;
        let n10 = Bn.offsetWidth || 1, o10 = Bn.offsetHeight || 1;
        return { minX: 0, maxX: n10, minY: 0, maxY: o10, width: n10, height: o10 };
      });
      return Utils.translateBounds(t12, e13.point);
    });
    d8(this, "shouldRender", (e13, t12) => t12.text !== e13.text || t12.style.scale !== e13.style.scale || t12.style !== e13.style);
    d8(this, "transform", (e13, t12, { initialShape: n10, scaleX: o10, scaleY: i10 }) => {
      let { rotation: a10 = 0, style: { scale: l10 = 1 } } = n10, r11 = l10 * Math.abs(Math.min(o10, i10));
      return { point: [t12.minX, t12.minY], rotation: o10 < 0 && i10 >= 0 || i10 < 0 && o10 >= 0 ? -(a10 || 0) : a10, style: C5(f8({}, n10.style), { scale: r11 }) };
    });
    d8(this, "transformSingle", (e13, t12, { initialShape: n10, scaleX: o10, scaleY: i10 }) => {
      let { style: { scale: a10 = 1 } } = n10;
      return { point: e.toFixed([t12.minX, t12.minY]), style: C5(f8({}, n10.style), { scale: a10 * Math.max(Math.abs(i10), Math.abs(o10)) }) };
    });
    d8(this, "onDoubleClickBoundsHandle", (e13) => {
      let t12 = this.getCenter(e13), n10 = this.getCenter(C5(f8({}, e13), { style: C5(f8({}, e13.style), { scale: 1 }) }));
      return { style: C5(f8({}, e13.style), { scale: 1 }), point: e.toFixed(e.add(e13.point, e.sub(t12, n10))) };
    });
    d8(this, "getSvgElement", (e13, t12) => {
      let n10 = this.getBounds(e13), o10 = le2(e13.style, t12), i10 = no(e13.text, e13.style, n10);
      return i10.setAttribute("fill", o10.stroke), i10;
    });
  }
};
var Bn;
function xp() {
  var e13;
  (e13 = document.getElementById("__textMeasure")) == null || e13.remove();
  let s10 = document.createElement("pre");
  return s10.id = "__textMeasure", Object.assign(s10.style, { whiteSpace: "pre", width: "auto", border: "1px solid transparent", padding: "4px", margin: "0px", letterSpacing: Vn, opacity: "0", position: "absolute", top: "-500px", left: "0px", zIndex: "9999", pointerEvents: "none", userSelect: "none", alignmentBaseline: "mathematical", dominantBaseline: "mathematical" }), s10.tabIndex = -1, document.body.appendChild(s10), s10;
}
typeof window != "undefined" && (Bn = xp());
var Ip = M3("div", { width: "100%", height: "100%", variants: { isGhost: { false: { opacity: 1 }, true: { transition: "opacity .2s", opacity: 0.3 } }, isEditing: { false: { pointerEvents: "all", userSelect: "all" }, true: { pointerEvents: "none", userSelect: "none" } } } });
var ja = { whiteSpace: "pre-wrap", overflowWrap: "break-word" };
var Cp = M3("div", f8({ position: "absolute", width: "100%", height: "100%", padding: "4px", zIndex: 1, minHeight: 1, minWidth: 1, lineHeight: 1, letterSpacing: Vn, outline: 0, fontWeight: "500", backfaceVisibility: "hidden", userSelect: "none", pointerEvents: "none", WebkitUserSelect: "none", WebkitTouchCallout: "none", isEditing: { false: {}, true: { pointerEvents: "all", background: "$boundsBg", userSelect: "text", WebkitUserSelect: "text" } } }, ja));
var vp = M3("textarea", C5(f8({ position: "absolute", top: 0, left: 0, zIndex: 1, width: "100%", height: "100%", border: "none", padding: "4px", resize: "none", textAlign: "inherit", minHeight: "inherit", minWidth: "inherit", lineHeight: "inherit", letterSpacing: "inherit", outline: 0, fontWeight: "inherit", overflow: "hidden", backfaceVisibility: "hidden", display: "inline-block", pointerEvents: "all", background: "$boundsBg", userSelect: "text", WebkitUserSelect: "text" }, ja), { "&:focus": { outline: "none", border: "none" } }));
var Pp = { easing: (s10) => Math.sin(s10 * Math.PI / 2), simulatePressure: true };
var Bp = { easing: (s10) => s10 * s10, simulatePressure: false };
function ri(s10) {
  let e13 = le2(s10.style);
  return C5(f8({ size: 1 + e13.strokeWidth * 1.5, thinning: 0.65, streamline: 0.65, smoothing: 0.65 }, s10.points[1][2] === 0.5 ? Pp : Bp), { last: s10.isComplete });
}
function Ga(s10) {
  return s10.points.length < 2 ? "" : Utils.getSvgPathFromStroke(me(s10.points, ri(s10)).map((e13) => e13.point));
}
function Va(s10, e13) {
  return me(s10.points, e13);
}
function $a(s10) {
  if (s10.points.length < 2)
    return "";
  let e13 = ri(s10), t12 = Va(s10, e13);
  return Utils.getSvgPathFromStroke(ie(t12, e13));
}
function ai(s10) {
  let { points: e13 } = s10;
  if (e13.length < 2)
    return "M 0 0 L 0 0";
  let t12 = ri(s10), n10 = Va(s10, t12).map((a10) => a10.point.slice(0, 2)), o10 = e13[e13.length - 1].slice(0, 2);
  return p.isEqual(n10[0], o10) || n10.push(o10), Utils.getSvgPathFromStroke(n10, false);
}
var li = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "draw");
    d8(this, "pointsBoundsCache", /* @__PURE__ */ new WeakMap([]));
    d8(this, "shapeBoundsCache", /* @__PURE__ */ new Map());
    d8(this, "rotatedCache", /* @__PURE__ */ new WeakMap([]));
    d8(this, "pointCache", {});
    d8(this, "canClone", true);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "id", type: "draw", name: "Draw", parentId: "page", childIndex: 1, point: [0, 0], rotation: 0, style: Ze, points: [], isComplete: false }, e13));
    d8(this, "Component", he.Component(({ shape: e13, meta: t12, isSelected: n10, isGhost: o10, events: i10 }, a10) => {
      let { points: l10, style: r11, isComplete: c10 } = e13, p10 = Xe.useMemo(() => Ga(e13), [l10, r11.size]), u10 = Xe.useMemo(() => r11.dash === "draw" ? $a(e13) : ai(e13), [l10, r11.size, r11.dash, c10]), h10 = le2(r11, t12.isDarkMode), { stroke: g10, fill: m10, strokeWidth: T10 } = h10, y10 = this.getBounds(e13);
      if (y10.width <= T10 / 2 && y10.height <= T10 / 2) {
        let I10 = 1 + T10;
        return Xe.createElement(SVGContainer, f8({ ref: a10, id: e13.id + "_svg" }, i10), Xe.createElement("circle", { r: I10, fill: g10, stroke: g10, pointerEvents: "all", opacity: o10 ? 0.3 : 1 }));
      }
      let S10 = r11.isFilled && l10.length > 3 && e.dist(l10[0], l10[l10.length - 1]) < T10 * 2;
      if (e13.style.dash === "draw")
        return Xe.createElement(SVGContainer, f8({ ref: a10, id: e13.id + "_svg" }, i10), Xe.createElement("g", { opacity: o10 ? 0.3 : 1 }, Xe.createElement("path", { className: S10 || n10 ? "tl-fill-hitarea" : "tl-stroke-hitarea", d: u10 }), S10 && Xe.createElement("path", { d: p10, stroke: "none", fill: m10, strokeLinejoin: "round", strokeLinecap: "round", pointerEvents: "none" }), Xe.createElement("path", { d: u10, fill: g10, stroke: g10, strokeWidth: T10 / 2, strokeLinejoin: "round", strokeLinecap: "round", pointerEvents: "none" })));
      let w10 = { ["draw"]: "none", ["solid"]: "none", ["dotted"]: `0.1 ${T10 * 4}`, ["dashed"]: `${T10 * 4} ${T10 * 4}` }[r11.dash], D10 = { ["draw"]: "none", ["solid"]: "none", ["dotted"]: "0", ["dashed"]: "0" }[r11.dash], B10 = 1 + T10 * 1.5;
      return Xe.createElement(SVGContainer, f8({ ref: a10, id: e13.id + "_svg" }, i10), Xe.createElement("g", { opacity: o10 ? 0.3 : 1 }, Xe.createElement("path", { className: S10 && n10 ? "tl-fill-hitarea" : "tl-stroke-hitarea", d: u10 }), Xe.createElement("path", { d: u10, fill: S10 ? m10 : "none", stroke: "none", strokeWidth: Math.min(4, T10 * 2), strokeLinejoin: "round", strokeLinecap: "round", pointerEvents: "none" }), Xe.createElement("path", { d: u10, fill: "none", stroke: g10, strokeWidth: B10, strokeDasharray: w10, strokeDashoffset: D10, strokeLinejoin: "round", strokeLinecap: "round", pointerEvents: "none" })));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { points: t12 } = e13, n10 = Xe.useMemo(() => ai(e13), [t12]), o10 = this.getBounds(e13);
      return o10.width < 4 && o10.height < 4 ? Xe.createElement("circle", { x: o10.width / 2, y: o10.height / 2, r: 1 }) : Xe.createElement("path", { d: n10 });
    }));
    d8(this, "transform", (e13, t12, { initialShape: n10, scaleX: o10, scaleY: i10 }) => {
      let a10 = Utils.getFromCache(this.boundsCache, n10, () => Utils.getBoundsFromPoints(n10.points)), l10 = n10.points.map(([p10, u10, h10]) => [t12.width * (o10 < 0 ? 1 - p10 / a10.width : p10 / a10.width), t12.height * (i10 < 0 ? 1 - u10 / a10.height : u10 / a10.height), h10]), r11 = Utils.getBoundsFromPoints(e13.points), c10 = e.sub([t12.minX, t12.minY], [r11.minX, r11.minY]);
      return { points: l10, point: c10 };
    });
    d8(this, "getBounds", (e13) => {
      let t12 = !this.pointsBoundsCache.has(e13.points), n10 = this.pointCache[e13.id] !== e13.point;
      if (t12) {
        let o10 = Utils.getBoundsFromPoints(e13.points);
        this.pointsBoundsCache.set(e13.points, o10), this.shapeBoundsCache.set(e13.id, Utils.translateBounds(o10, e13.point)), this.pointCache[e13.id] = e13.point;
      } else
        n10 && !t12 && (this.pointCache[e13.id] = e13.point, this.shapeBoundsCache.set(e13.id, Utils.translateBounds(this.pointsBoundsCache.get(e13.points), e13.point)));
      return this.shapeBoundsCache.get(e13.id);
    });
    d8(this, "shouldRender", (e13, t12) => t12.points !== e13.points || t12.style !== e13.style || t12.isComplete !== e13.isComplete);
    d8(this, "hitTestPoint", (e13, t12) => {
      let n10 = e.sub(t12, e13.point);
      return Utils.pointInPolyline(n10, e13.points);
    });
    d8(this, "hitTestLineSegment", (e13, t12, n10) => {
      let { points: o10, point: i10 } = e13, a10 = e.sub(t12, i10), l10 = e.sub(n10, i10), r11 = this.getBounds(e13);
      if (r11.width < 8 && r11.height < 8)
        return e.distanceToLineSegment(t12, n10, Utils.getBoundsCenter(r11)) < 5;
      if (intersectLineSegmentBounds(a10, l10, r11)) {
        for (let c10 = 1; c10 < o10.length; c10++)
          if (intersectLineSegmentLineSegment(o10[c10 - 1], o10[c10], a10, l10).didIntersect)
            return true;
      }
      return false;
    });
    d8(this, "hitTestBounds", (e13, t12) => {
      if (!e13.rotation) {
        let i10 = this.getBounds(e13);
        return Utils.boundsContain(t12, i10) || (Utils.boundsContain(i10, t12) || intersectBoundsBounds(i10, t12).length > 0) && intersectBoundsPolyline(Utils.translateBounds(t12, e.neg(e13.point)), e13.points).length > 0;
      }
      let n10 = this.getRotatedBounds(e13), o10 = Utils.getFromCache(this.rotatedCache, e13, () => {
        let i10 = Utils.getBoundsCenter(Utils.getBoundsFromPoints(e13.points));
        return e13.points.map((a10) => e.rotWith(a10, i10, e13.rotation || 0));
      });
      return Utils.boundsContain(t12, n10) || intersectBoundsPolyline(Utils.translateBounds(t12, e.neg(e13.point)), o10).length > 0;
    });
  }
};
var ci = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "image");
    d8(this, "canBind", true);
    d8(this, "canClone", true);
    d8(this, "isAspectRatioLocked", true);
    d8(this, "showCloneHandles", true);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "image", type: "image", name: "Image", parentId: "page", childIndex: 1, point: [0, 0], size: [1, 1], rotation: 0, style: C5(f8({}, Ze), { isFilled: true }), assetId: "assetId" }, e13));
    d8(this, "Component", he.Component(({ shape: e13, asset: t12 = { src: "" }, isBinding: n10, isGhost: o10, meta: i10, events: a10, onShapeChange: l10 }, r11) => {
      let { size: c10, style: p10 } = e13, u10 = Gt.useRef(null), h10 = Gt.useRef(null);
      return Gt.useLayoutEffect(() => {
        let g10 = h10.current;
        if (!g10)
          return;
        let [m10, T10] = c10;
        g10.style.width = `${m10}px`, g10.style.height = `${T10}px`;
      }, [c10]), Gt.createElement(HTMLContainer, f8({ ref: r11 }, a10), n10 && Gt.createElement("div", { className: "tl-binding-indicator", style: { position: "absolute", top: `calc(${-this.bindingDistance}px * var(--tl-zoom))`, left: `calc(${-this.bindingDistance}px * var(--tl-zoom))`, width: `calc(100% + ${this.bindingDistance * 2}px * var(--tl-zoom))`, height: `calc(100% + ${this.bindingDistance * 2}px * var(--tl-zoom))`, backgroundColor: "var(--tl-selectFill)" } }), Gt.createElement(Hp, { ref: h10, isDarkMode: i10.isDarkMode, isFilled: p10.isFilled, isGhost: o10 }, Gt.createElement(zp, { id: e13.id + "_image", ref: u10, src: t12.src, alt: "tl_image_asset", draggable: false })));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { size: [t12, n10] } = e13;
      return Gt.createElement("rect", { x: 0, y: 0, rx: 2, ry: 2, width: Math.max(1, t12), height: Math.max(1, n10) });
    }));
    d8(this, "getBounds", (e13) => Et(e13, this.boundsCache));
    d8(this, "shouldRender", (e13, t12) => t12.size !== e13.size || t12.style !== e13.style);
    d8(this, "transform", wn);
    d8(this, "transformSingle", xn);
    d8(this, "getSvgElement", (e13) => {
      let t12 = this.getBounds(e13), n10 = document.createElementNS("http://www.w3.org/2000/svg", "image");
      return n10.setAttribute("width", `${t12.width}`), n10.setAttribute("height", `${t12.height}`), n10.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"), n10;
    });
  }
};
var Hp = re2("div", { pointerEvents: "all", position: "relative", fontFamily: "sans-serif", fontSize: "2em", height: "100%", width: "100%", borderRadius: "3px", perspective: "800px", overflow: "hidden", p: { userSelect: "none" }, img: { userSelect: "none" }, variants: { isGhost: { false: { opacity: 1 }, true: { transition: "opacity .2s", opacity: 0.3 } }, isFilled: { true: {}, false: {} }, isDarkMode: { true: {}, false: {} } }, compoundVariants: [{ isFilled: true, isDarkMode: true, css: { boxShadow: "2px 3px 12px -2px rgba(0,0,0,.3), 1px 1px 4px rgba(0,0,0,.3), 1px 1px 2px rgba(0,0,0,.3)" } }, { isFilled: true, isDarkMode: false, css: { boxShadow: "2px 3px 12px -2px rgba(0,0,0,.2), 1px 1px 4px rgba(0,0,0,.16),  1px 1px 2px rgba(0,0,0,.16)" } }] });
var zp = re2("img", { position: "absolute", top: 0, left: 0, width: "100%", height: "100%", maxWidth: "100%", minWidth: "100%", pointerEvents: "none", objectFit: "cover", userSelect: "none", borderRadius: 2 });
var pi = class extends he {
  constructor() {
    super(...arguments);
    d8(this, "type", "video");
    d8(this, "canBind", true);
    d8(this, "canEdit", true);
    d8(this, "canClone", true);
    d8(this, "isAspectRatioLocked", true);
    d8(this, "showCloneHandles", true);
    d8(this, "isStateful", true);
    d8(this, "getShape", (e13) => Utils.deepMerge({ id: "video", type: "video", name: "Video", parentId: "page", childIndex: 1, point: [0, 0], size: [1, 1], rotation: 0, style: Ze, assetId: "assetId", isPlaying: true, currentTime: 0 }, e13));
    d8(this, "Component", he.Component(({ shape: e13, asset: t12 = { src: "" }, isBinding: n10, isEditing: o10, isGhost: i10, meta: a10, events: l10, onShapeChange: r11 }, c10) => {
      let p10 = st.useRef(null), u10 = st.useRef(null), { currentTime: h10 = 0, size: g10, isPlaying: m10, style: T10 } = e13;
      st.useLayoutEffect(() => {
        let w10 = u10.current;
        if (!w10)
          return;
        let [D10, B10] = g10;
        w10.style.width = `${D10}px`, w10.style.height = `${B10}px`;
      }, [g10]), st.useLayoutEffect(() => {
        let w10 = p10.current;
        !w10 || (m10 ? w10.play() : w10.pause());
      }, [m10]), st.useLayoutEffect(() => {
        let w10 = p10.current;
        !w10 || h10 !== w10.currentTime && (w10.currentTime = h10);
      }, [h10]);
      let y10 = st.useCallback(() => {
        r11 == null || r11({ id: e13.id, isPlaying: true });
      }, []), b10 = st.useCallback(() => {
        r11 == null || r11({ id: e13.id, isPlaying: false });
      }, []), S10 = st.useCallback(() => {
        let w10 = p10.current;
        !w10 || !o10 || r11 == null || r11({ id: e13.id, currentTime: w10.currentTime });
      }, [o10]);
      return st.createElement(HTMLContainer, f8({ ref: c10 }, l10), n10 && st.createElement("div", { className: "tl-binding-indicator", style: { position: "absolute", top: -this.bindingDistance, left: -this.bindingDistance, width: `calc(100% + ${this.bindingDistance * 2}px)`, height: `calc(100% + ${this.bindingDistance * 2}px)`, backgroundColor: "var(--tl-selectFill)" } }), st.createElement(jp, { ref: u10, isDarkMode: a10.isDarkMode, isGhost: i10, isFilled: T10.isFilled }, st.createElement(Up, { ref: p10, id: e13.id + "_video", muted: true, loop: true, playsInline: true, disableRemotePlayback: true, disablePictureInPicture: true, controls: o10, autoPlay: m10, onPlay: y10, onPause: b10, onTimeUpdate: S10 }, st.createElement("source", { src: t12.src }))));
    }));
    d8(this, "Indicator", he.Indicator(({ shape: e13 }) => {
      let { size: [t12, n10] } = e13;
      return st.createElement("rect", { x: 0, y: 0, rx: 2, ry: 2, width: Math.max(1, t12), height: Math.max(1, n10) });
    }));
    d8(this, "getBounds", (e13) => Et(e13, this.boundsCache));
    d8(this, "shouldRender", (e13, t12) => t12.size !== e13.size || t12.style !== e13.style || t12.isPlaying !== e13.isPlaying);
    d8(this, "getSvgElement", (e13) => {
      let t12 = this.getBounds(e13), n10 = document.createElementNS("http://www.w3.org/2000/svg", "image");
      return n10.setAttribute("width", `${t12.width}`), n10.setAttribute("height", `${t12.height}`), n10.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"), n10;
    });
    d8(this, "transform", wn);
    d8(this, "transformSingle", xn);
  }
};
var jp = re2("div", { pointerEvents: "all", position: "relative", fontFamily: "sans-serif", fontSize: "2em", height: "100%", width: "100%", borderRadius: "3px", perspective: "800px", overflow: "hidden", p: { userSelect: "none" }, img: { userSelect: "none" }, variants: { isGhost: { false: { opacity: 1 }, true: { transition: "opacity .2s", opacity: 0.3 } }, isFilled: { true: {}, false: {} }, isDarkMode: { true: {}, false: {} } }, compoundVariants: [{ isFilled: true, isDarkMode: true, css: { boxShadow: "2px 3px 12px -2px rgba(0,0,0,.3), 1px 1px 4px rgba(0,0,0,.3), 1px 1px 2px rgba(0,0,0,.3)" } }, { isFilled: true, isDarkMode: false, css: { boxShadow: "2px 3px 12px -2px rgba(0,0,0,.2), 1px 1px 4px rgba(0,0,0,.16),  1px 1px 2px rgba(0,0,0,.16)" } }] });
var Up = re2("video", { position: "absolute", top: 0, left: 0, width: "100%", height: "100%", maxWidth: "100%", minWidth: "100%", pointerEvents: "none", objectFit: "cover", userSelect: "none", borderRadius: 2 });
var ui = new _s();
var hi = new Zs();
var mi = new qs();
var gi = new li();
var ko = new Qs();
var Gp = new si();
var Vp = new ei();
var ms = new ni();
var $p = new ci();
var Np = new pi();
var mn = { ["rectangle"]: ui, ["triangle"]: hi, ["ellipse"]: mi, ["draw"]: gi, ["arrow"]: ko, ["text"]: Gp, ["group"]: Vp, ["sticky"]: ms, ["image"]: $p, ["video"]: Np };
var _a3 = (s10) => typeof s10 == "string" ? mn[s10] : mn[s10.type];
function dt(s10) {
  if (s10 === null)
    return s10;
  if (s10 instanceof Date)
    return new Date(s10.getTime());
  if (typeof s10 == "object")
    if (typeof s10[Symbol.iterator] == "function") {
      let e13 = [];
      if (s10.length > 0)
        for (let t12 of s10)
          e13.push(dt(t12));
      return e13;
    } else {
      let e13 = Object.keys(s10), t12 = {};
      if (e13.length > 0)
        for (let n10 of e13)
          t12[n10] = dt(s10[n10]);
      return t12;
    }
  return s10;
}
var Ya = false;
var ie2 = class {
  static getShapeUtil(e13) {
    return _a3(e13);
  }
  static getSelectedShapes(e13, t12) {
    let n10 = ie2.getPage(e13, t12);
    return ie2.getSelectedIds(e13, t12).map((i10) => n10.shapes[i10]);
  }
  static screenToWorld(e13, t12) {
    let n10 = ie2.getPageState(e13, e13.appState.currentPageId).camera;
    return e.sub(e.div(t12, n10.zoom), n10.point);
  }
  static getCameraZoom(e13) {
    return Utils.clamp(e13, 0.1, 5);
  }
  static getPage(e13, t12) {
    return e13.document.pages[t12];
  }
  static getPageState(e13, t12) {
    return e13.document.pageStates[t12];
  }
  static getSelectedIds(e13, t12) {
    return ie2.getPageState(e13, t12).selectedIds;
  }
  static getShapes(e13, t12) {
    return Object.values(ie2.getPage(e13, t12).shapes);
  }
  static getCamera(e13, t12) {
    return ie2.getPageState(e13, t12).camera;
  }
  static getShape(e13, t12, n10) {
    return ie2.getPage(e13, n10).shapes[t12];
  }
  static getCenter(e13) {
    return ie2.getShapeUtil(e13).getCenter(e13);
  }
  static getBounds(e13) {
    return ie2.getShapeUtil(e13).getBounds(e13);
  }
  static getRotatedBounds(e13) {
    return ie2.getShapeUtil(e13).getRotatedBounds(e13);
  }
  static getSelectedBounds(e13) {
    return Utils.getCommonBounds(ie2.getSelectedShapes(e13, e13.appState.currentPageId).map((t12) => ie2.getShapeUtil(t12).getBounds(t12)));
  }
  static getParentId(e13, t12, n10) {
    return ie2.getShape(e13, t12, n10).parentId;
  }
  static getDocumentBranch(e13, t12, n10) {
    let o10 = ie2.getShape(e13, t12, n10);
    return o10.children === void 0 ? [t12] : [t12, ...o10.children.flatMap((i10) => ie2.getDocumentBranch(e13, i10, n10))];
  }
  static getSelectedBranchSnapshot(e13, t12, n10) {
    let o10 = ie2.getPage(e13, t12), i10 = ie2.getSelectedIds(e13, t12).flatMap((a10) => ie2.getDocumentBranch(e13, a10, t12).map((l10) => o10.shapes[l10])).filter((a10) => !a10.isLocked).map(Utils.deepClone);
    return n10 !== void 0 ? i10.map((a10) => f8({ id: a10.id }, n10(a10))) : i10;
  }
  static getSelectedShapeSnapshot(e13, t12, n10) {
    let o10 = ie2.getSelectedShapes(e13, t12).filter((i10) => !i10.isLocked).map(Utils.deepClone);
    return n10 !== void 0 ? o10.map((i10) => f8({ id: i10.id }, n10(i10))) : o10;
  }
  static getAllEffectedShapeIds(e13, t12, n10) {
    let o10 = ie2.getPage(e13, n10), i10 = new Set(t12);
    return t12.forEach((a10) => {
      let l10 = o10.shapes[a10];
      function r11(p10) {
        p10.children !== void 0 && p10.children.filter((u10) => !i10.has(u10)).forEach((u10) => {
          i10.add(u10), r11(o10.shapes[u10]);
        });
      }
      r11(l10);
      function c10(p10) {
        let u10 = p10.parentId;
        u10 !== o10.id && (i10.has(u10) || (i10.add(u10), c10(o10.shapes[u10])));
      }
      c10(l10), i10.forEach((p10) => {
        Object.values(o10.bindings).filter((u10) => u10.fromId === p10 || u10.toId === p10).forEach((u10) => i10.add(u10.fromId === p10 ? u10.toId : u10.fromId));
      });
    }), Array.from(i10.values());
  }
  static getLinkedShapeIds(e13, t12, n10, o10 = true) {
    let i10 = ie2.getSelectedIds(e13, t12), a10 = ie2.getPage(e13, t12), l10 = new Set(i10), r11 = /* @__PURE__ */ new Set(), c10 = [...i10], p10 = new Set(Object.values(a10.shapes).filter((u10) => {
      var h10;
      return u10.type === "arrow" && (u10.handles.start.bindingId || ((h10 = u10.handles) == null ? void 0 : h10.end.bindingId));
    }));
    for (; c10.length; ) {
      let u10 = c10.pop();
      if (!(u10 && p10.size))
        break;
      r11.has(u10) || (r11.add(u10), p10.forEach((h10) => {
        var S10, w10;
        let { handles: { start: { bindingId: g10 }, end: { bindingId: m10 } } } = h10, T10 = g10 ? a10.bindings[g10] : null, y10 = m10 ? a10.bindings[m10] : null, b10 = false;
        T10 && T10.toId === u10 ? (n10 === "center" ? b10 = true : ((S10 = h10.decorations) == null ? void 0 : S10.start) && y10 ? b10 = n10 === "left" : b10 = n10 === "right", b10 && (o10 && l10.add(h10.id), l10.add(u10), y10 && (l10.add(y10.toId), c10.push(y10.toId)))) : y10 && y10.toId === u10 && (n10 === "center" ? b10 = true : ((w10 = h10.decorations) == null ? void 0 : w10.end) && T10 ? b10 = n10 === "left" : b10 = n10 === "right", b10 && (o10 && l10.add(h10.id), l10.add(u10), T10 && (l10.add(T10.toId), c10.push(T10.toId)))), (!T10 || l10.has(T10.toId)) && (!y10 || l10.has(y10.toId)) && p10.delete(h10);
      }));
    }
    return Array.from(l10.values());
  }
  static getChildIndexAbove(e13, t12, n10) {
    let o10 = e13.document.pages[n10], i10 = o10.shapes[t12], a10;
    if (i10.parentId === o10.id)
      a10 = Object.values(o10.shapes).filter((c10) => c10.parentId === o10.id).sort((c10, p10) => c10.childIndex - p10.childIndex);
    else {
      let c10 = o10.shapes[i10.parentId];
      if (!c10.children)
        throw Error("No children in parent!");
      a10 = c10.children.map((p10) => o10.shapes[p10]).sort((p10, u10) => p10.childIndex - u10.childIndex);
    }
    let l10 = a10.indexOf(i10), r11 = a10[l10 + 1];
    return r11 ? r11.childIndex : i10.childIndex + 1;
  }
  static getBeforeShape(e13, t12) {
    return Object.fromEntries(Object.keys(t12).map((n10) => [n10, e13[n10]]));
  }
  static mutateShapes(e13, t12, n10, o10) {
    let i10 = {}, a10 = {};
    t12.forEach((r11, c10) => {
      let p10 = ie2.getShape(e13, r11, o10);
      if (p10.isLocked)
        return;
      let u10 = n10(p10, c10);
      u10 && (i10[r11] = ie2.getBeforeShape(p10, u10), a10[r11] = u10);
    });
    let l10 = Utils.deepMerge(e13, { document: { pages: { [e13.appState.currentPageId]: { shapes: a10 } } } });
    return { before: i10, after: a10, data: l10 };
  }
  static createShapes(e13, t12, n10) {
    let o10 = { document: { pages: { [n10]: { shapes: f8({}, Object.fromEntries(t12.flatMap((a10) => {
      let l10 = [[a10.id, void 0]];
      if (a10.parentId !== n10) {
        let r11 = ie2.getShape(e13, a10.parentId, n10);
        if (!r11.children)
          throw Error("No children in parent!");
        l10.push([r11.id, { children: r11.children }]);
      }
      return l10;
    }))) } } } }, i10 = { document: { pages: { [n10]: { shapes: { shapes: f8({}, Object.fromEntries(t12.flatMap((a10) => {
      let l10 = [[a10.id, a10]];
      if (a10.parentId !== n10) {
        let r11 = ie2.getShape(e13, a10.parentId, n10);
        if (!r11.children)
          throw Error("No children in parent!");
        l10.push([r11.id, { children: [...r11.children, a10.id] }]);
      }
      return l10;
    }))) } } } } };
    return { before: o10, after: i10 };
  }
  static deleteShapes(e13, t12, n10) {
    n10 = n10 || e13.appState.currentPageId;
    let o10 = ie2.getPage(e13, n10), i10 = typeof t12[0] == "string" ? t12 : t12.map((r11) => r11.id), a10 = { document: { pages: { [n10]: { shapes: f8({}, Object.fromEntries(i10.flatMap((r11) => {
      let c10 = o10.shapes[r11], p10 = [[c10.id, c10]];
      if (c10.parentId !== n10) {
        let u10 = o10.shapes[c10.parentId];
        if (!u10.children)
          throw Error("No children in parent!");
        p10.push([u10.id, { children: u10.children }]);
      }
      return p10;
    }))), bindings: f8({}, Object.fromEntries(Object.values(o10.bindings).filter((r11) => i10.includes(r11.fromId) || i10.includes(r11.toId)).map((r11) => [r11.id, r11]))) } } } }, l10 = { document: { pages: { [n10]: { shapes: f8({}, Object.fromEntries(i10.flatMap((r11) => {
      let c10 = o10.shapes[r11], p10 = [[c10.id, void 0]];
      if (c10.parentId !== o10.id) {
        let u10 = o10.shapes[c10.parentId];
        if (!u10.children)
          throw Error("No children in parent!");
        p10.push([u10.id, { children: u10.children.filter((h10) => h10 !== c10.id) }]);
      }
      return p10;
    }))) } } } };
    return { before: a10, after: l10 };
  }
  static onSessionComplete(e13) {
    var n10, o10;
    let t12 = (o10 = (n10 = ie2.getShapeUtil(e13)).onSessionComplete) == null ? void 0 : o10.call(n10, e13);
    return t12 ? f8(f8({}, e13), t12) : e13;
  }
  static onChildrenChange(e13, t12, n10) {
    var i10, a10;
    if (!t12.children)
      return;
    let o10 = (a10 = (i10 = ie2.getShapeUtil(t12)).onChildrenChange) == null ? void 0 : a10.call(i10, t12, t12.children.map((l10) => ie2.getShape(e13, l10, n10)));
    return o10 ? f8(f8({}, t12), o10) : t12;
  }
  static updateArrowBindings(e13, t12) {
    var a10, l10, r11, c10, p10, u10;
    let n10 = { start: dt(t12.handles.start), end: dt(t12.handles.end) }, o10 = { isBound: false, handle: t12.handles.start, point: e.add(t12.handles.start.point, t12.point) }, i10 = { isBound: false, handle: t12.handles.end, point: e.add(t12.handles.end.point, t12.point) };
    if (t12.handles.start.bindingId) {
      let h10 = ((a10 = t12.decorations) == null ? void 0 : a10.start) !== void 0, g10 = t12.handles.start, m10 = e13.bindings[t12.handles.start.bindingId];
      if (!m10)
        throw Error("Could not find a binding to match the start handle's bindingId");
      let T10 = e13.shapes[m10.toId], y10 = ie2.getShapeUtil(T10), b10 = y10.getBounds(T10), S10 = y10.getExpandedBounds(T10), w10 = h10 ? Utils.expandBounds(b10, m10.distance) : b10, { minX: D10, minY: B10, width: I10, height: P10 } = S10, v10 = e.add([D10, B10], e.mulV([I10, P10], e.rotWith(m10.point, [0.5, 0.5], T10.rotation || 0)));
      o10 = { isBound: true, hasDecoration: h10, binding: m10, handle: g10, point: v10, util: y10, target: T10, bounds: b10, expandedBounds: S10, intersectBounds: w10, center: y10.getCenter(T10) };
    }
    if (t12.handles.end.bindingId) {
      let h10 = ((l10 = t12.decorations) == null ? void 0 : l10.end) !== void 0, g10 = t12.handles.end, m10 = e13.bindings[t12.handles.end.bindingId];
      if (!m10)
        throw Error("Could not find a binding to match the end handle's bindingId");
      let T10 = e13.shapes[m10.toId], y10 = ie2.getShapeUtil(T10), b10 = y10.getBounds(T10), S10 = y10.getExpandedBounds(T10), w10 = h10 ? Utils.expandBounds(b10, m10.distance) : b10, { minX: D10, minY: B10, width: I10, height: P10 } = S10, v10 = e.add([D10, B10], e.mulV([I10, P10], e.rotWith(m10.point, [0.5, 0.5], T10.rotation || 0)));
      i10 = { isBound: true, hasDecoration: h10, binding: m10, handle: g10, point: v10, util: y10, target: T10, bounds: b10, expandedBounds: S10, intersectBounds: w10, center: y10.getCenter(T10) };
    }
    for (let h10 of ["end", "start"]) {
      let g10 = h10 === "start" ? o10 : i10, m10 = h10 === "start" ? i10 : o10;
      if (g10.isBound)
        if (!g10.binding.distance)
          n10[h10].point = e.sub(g10.point, t12.point);
        else {
          let T10 = e.uni(e.sub(g10.point, m10.point));
          switch (g10.target.type) {
            case "ellipse": {
              let y10 = intersectRayEllipse(m10.point, T10, g10.center, g10.target.radius[0] + (g10.hasDecoration ? g10.binding.distance : 0), g10.target.radius[1] + (g10.hasDecoration ? g10.binding.distance : 0), g10.target.rotation || 0).points.sort((b10, S10) => e.dist(b10, m10.point) - e.dist(S10, m10.point));
              y10[0] !== void 0 && (n10[h10].point = e.toFixed(e.sub(y10[0], t12.point)));
              break;
            }
            case "triangle": {
              let y10 = g10.target.point, b10 = Ft(g10.target.size, g10.hasDecoration ? 16 : 0, g10.target.rotation).map((w10) => e.add(w10, y10)), S10 = Utils.pointsToLineSegments(b10, true).map(([w10, D10]) => intersectRayLineSegment(m10.point, T10, w10, D10)).filter((w10) => w10.didIntersect).flatMap((w10) => w10.points).sort((w10, D10) => e.dist(w10, m10.point) - e.dist(D10, m10.point));
              S10[0] !== void 0 && (n10[h10].point = e.toFixed(e.sub(S10[0], t12.point)));
              break;
            }
            default: {
              let y10 = intersectRayBounds(m10.point, T10, g10.intersectBounds, g10.target.rotation).filter((S10) => S10.didIntersect).map((S10) => S10.points[0]).sort((S10, w10) => e.dist(S10, m10.point) - e.dist(w10, m10.point));
              if (!y10[0])
                continue;
              let b10;
              if (m10.isBound && (b10 = intersectRayBounds(m10.point, T10, m10.intersectBounds, m10.target.rotation).filter((w10) => w10.didIntersect).map((w10) => w10.points[0]).sort((w10, D10) => e.dist(w10, m10.point) - e.dist(D10, m10.point))[0]), m10.isBound && (y10.length < 2 || b10 && y10[0] && Math.ceil(e.dist(y10[0], b10)) < 16 * 2.5 || Utils.boundsContain(g10.expandedBounds, m10.expandedBounds) || Utils.boundsCollide(g10.expandedBounds, m10.expandedBounds))) {
                let S10 = e.uni(e.sub(m10.point, g10.point)), w10 = intersectRayBounds(g10.point, S10, g10.bounds, g10.target.rotation).filter((D10) => D10.didIntersect).map((D10) => D10.points[0]);
                if (!w10[0])
                  continue;
                n10[h10].point = e.toFixed(e.sub(w10[0], t12.point)), n10[h10 === "start" ? "end" : "start"].point = e.toFixed(e.add(e.sub(w10[0], t12.point), e.mul(S10, Math.min(e.dist(w10[0], m10.point), 16 * 2.5 * (Utils.boundsContain(m10.bounds, g10.intersectBounds) ? -1 : 1)))));
              } else if (!m10.isBound && (y10[0] && e.dist(y10[0], m10.point) < 16 * 2.5 || Utils.pointInBounds(m10.point, g10.intersectBounds))) {
                let S10 = e.uni(e.sub(g10.center, m10.point));
                return (c10 = (r11 = ie2.getShapeUtil(t12)).onHandleChange) == null ? void 0 : c10.call(r11, t12, { [h10]: C5(f8({}, t12.handles[h10]), { point: e.toFixed(e.add(e.sub(m10.point, t12.point), e.mul(S10, 16 * 2.5))) }) });
              } else
                y10[0] && (n10[h10].point = e.toFixed(e.sub(y10[0], t12.point)));
            }
          }
        }
    }
    return (u10 = (p10 = ie2.getShapeUtil(t12)).onHandleChange) == null ? void 0 : u10.call(p10, t12, n10);
  }
  static transform(e13, t12, n10) {
    let o10 = ie2.getShapeUtil(e13).transform(e13, t12, n10);
    return o10 ? f8(f8({}, e13), o10) : e13;
  }
  static transformSingle(e13, t12, n10) {
    let o10 = ie2.getShapeUtil(e13).transformSingle(e13, t12, n10);
    return o10 ? f8(f8({}, e13), o10) : e13;
  }
  static getRotatedShapeMutation(e13, t12, n10, o10) {
    var c10, p10;
    let i10 = e.sub(t12, e13.point), a10 = e.rotWith(t12, n10, o10), l10 = e.toFixed(e.sub(a10, i10));
    if (e13.handles !== void 0)
      return (p10 = (c10 = this.getShapeUtil(e13)).onHandleChange) == null ? void 0 : p10.call(c10, C5(f8({}, e13), { point: l10 }), Object.fromEntries(Object.entries(e13.handles).map(([h10, g10]) => {
        let m10 = e.toFixed(e.rotWith(g10.point, i10, o10));
        return [h10, C5(f8({}, g10), { point: m10 })];
      })));
    let r11 = Utils.clampRadians((e13.rotation || 0) + o10);
    return { point: l10, rotation: r11 };
  }
  static updateParents(e13, t12, n10) {
    let o10 = ie2.getPage(e13, t12);
    if (n10.length === 0)
      return;
    let { shapes: i10 } = ie2.getPage(e13, t12), a10 = Array.from(new Set(n10.map((l10) => i10[l10].parentId).values())).filter((l10) => l10 !== o10.id);
    for (let l10 of a10) {
      let r11 = i10[l10];
      if (!r11.children)
        throw Error("A shape is parented to a shape without a children array.");
      ie2.onChildrenChange(e13, r11, t12);
    }
    ie2.updateParents(e13, t12, a10);
  }
  static getBinding(e13, t12, n10) {
    return ie2.getPage(e13, n10).bindings[t12];
  }
  static getBindings(e13, t12) {
    let n10 = ie2.getPage(e13, t12);
    return Object.values(n10.bindings);
  }
  static getBindableShapeIds(e13) {
    return ie2.getShapes(e13, e13.appState.currentPageId).filter((t12) => ie2.getShapeUtil(t12).canBind).sort((t12, n10) => n10.childIndex - t12.childIndex).map((t12) => t12.id);
  }
  static getBindingsWithShapeIds(e13, t12, n10) {
    return Array.from(new Set(ie2.getBindings(e13, n10).filter((o10) => t12.includes(o10.toId) || t12.includes(o10.fromId))).values());
  }
  static getRelatedBindings(e13, t12, n10) {
    let o10 = new Set(t12), i10 = ie2.getPage(e13, n10), a10 = Object.values(i10.bindings), l10 = new Set(a10.filter((p10) => o10.has(p10.toId) || o10.has(p10.fromId))), r11 = l10.size, c10 = -1;
    for (; c10 !== 0; )
      l10.forEach((p10) => {
        let u10 = p10.fromId;
        for (let h10 of a10)
          h10.fromId === u10 && l10.add(h10), h10.toId === u10 && l10.add(h10);
      }), c10 = l10.size - r11, r11 = l10.size;
    return Array.from(l10.values());
  }
  static normalizeText(e13) {
    return e13.replace(ie2.fixNewLines, `
`).split(`
`).map((t12) => t12 || " ").join(`
`);
  }
  static assertShapeHasProperty(e13, t12) {
    if (e13[t12] === void 0)
      throw new Error();
  }
  static warn(e13) {
    Ya && console.warn(e13);
  }
  static error(e13) {
    Ya && console.error(e13);
  }
  static getSvgString(e13, t12 = 1) {
    let n10 = e13.cloneNode(true);
    return e13.setAttribute("width", +e13.getAttribute("width") * t12 + ""), e13.setAttribute("height", +e13.getAttribute("height") * t12 + ""), new XMLSerializer().serializeToString(n10).replaceAll("&#10;      ", "").replaceAll(/((\s|")[0-9]*\.[0-9]{2})([0-9]*)(\b|"|\))/g, "$1");
  }
  static getSvgAsDataUrl(e13, t12 = 1) {
    let n10 = ie2.getSvgString(e13, t12);
    return `data:image/svg+xml;base64,${window.btoa(unescape(n10))}`;
  }
  static getImageForSvg(o10) {
    return ee(this, arguments, function* (e13, t12 = "png", n10 = {}) {
      let { scale: i10 = 2, quality: a10 = 1 } = n10, l10 = ie2.getSvgString(e13, i10), r11 = +e13.getAttribute("width"), c10 = +e13.getAttribute("height");
      if (!l10)
        return;
      let p10 = yield new Promise((h10) => {
        let g10 = new Image();
        g10.crossOrigin = "anonymous";
        let T10 = `data:image/svg+xml;base64,${window.btoa(unescape(encodeURIComponent(l10)))}`;
        g10.onload = () => {
          let y10 = document.createElement("canvas"), b10 = y10.getContext("2d");
          y10.width = r11, y10.height = c10, b10.drawImage(g10, 0, 0, r11, c10), URL.revokeObjectURL(T10), h10(y10);
        }, g10.onerror = () => {
          console.warn("Could not convert that SVG to an image.");
        }, g10.src = T10;
      });
      return yield new Promise((h10) => p10.toBlob((g10) => h10(g10), "image/" + t12, a10));
    });
  }
};
var x7 = ie2;
d8(x7, "copyStringToClipboard", (e13) => {
  try {
    navigator.clipboard && navigator.clipboard.write([new ClipboardItem({ "text/plain": new Blob([e13], { type: "text/plain" }) })]);
  } catch (t12) {
    let n10 = document.createElement("textarea");
    n10.setAttribute("position", "fixed"), n10.setAttribute("top", "0"), n10.setAttribute("readonly", "true"), n10.setAttribute("contenteditable", "true"), n10.style.position = "fixed", n10.value = e13, document.body.appendChild(n10), n10.focus(), n10.select();
    try {
      let o10 = document.createRange();
      o10.selectNodeContents(n10);
      let i10 = window.getSelection();
      i10 && (i10.removeAllRanges(), i10.addRange(o10), n10.setSelectionRange(0, n10.value.length)), document.execCommand("copy");
    } catch (o10) {
    } finally {
      document.body.removeChild(n10);
    }
  }
}), d8(x7, "flattenShape", (e13, t12) => {
  var n10;
  return [t12, ...((n10 = t12.children) != null ? n10 : []).map((o10) => ie2.getShape(e13, o10, e13.appState.currentPageId)).sort((o10, i10) => o10.childIndex - i10.childIndex).flatMap((o10) => ie2.flattenShape(e13, o10))];
}), d8(x7, "flattenPage", (e13, t12) => Object.values(e13.document.pages[t12].shapes).sort((n10, o10) => n10.childIndex - o10.childIndex).reduce((n10, o10) => [...n10, ...ie2.flattenShape(e13, o10)], [])), d8(x7, "getTopChildIndex", (e13, t12) => {
  let n10 = ie2.getShapes(e13, t12);
  return n10.length === 0 ? 1 : n10.filter((o10) => o10.parentId === t12).sort((o10, i10) => i10.childIndex - o10.childIndex)[0].childIndex + 1;
}), d8(x7, "fixNewLines", /\r?\n|\r/g);
function Xa(s10, e13, t12) {
  let { currentPageId: n10 } = s10, o10 = e13.map((h10) => s10.getShape(h10)), i10 = o10.map((h10) => ({ id: h10.id, point: [...h10.point], bounds: x7.getBounds(h10) })), a10 = Utils.getCommonBounds(i10.map(({ bounds: h10 }) => h10)), l10 = a10.minX + a10.width / 2, r11 = a10.minY + a10.height / 2, c10 = Object.fromEntries(i10.map(({ id: h10, point: g10, bounds: m10 }) => [h10, { prev: g10, next: { ["top"]: [g10[0], a10.minY], ["centerVertical"]: [g10[0], r11 - m10.height / 2], ["bottom"]: [g10[0], a10.maxY - m10.height], ["left"]: [a10.minX, g10[1]], ["centerHorizontal"]: [l10 - m10.width / 2, g10[1]], ["right"]: [a10.maxX - m10.width, g10[1]] }[t12] }])), { before: p10, after: u10 } = x7.mutateShapes(s10.state, e13, (h10) => c10[h10.id] ? { point: c10[h10.id].next } : h10, n10);
  return o10.forEach((h10) => {
    if (h10.type === "group") {
      let g10 = e.sub(u10[h10.id].point, p10[h10.id].point);
      h10.children.forEach((m10) => {
        let T10 = s10.getShape(m10);
        p10[T10.id] = { point: T10.point }, u10[T10.id] = { point: e.add(T10.point, g10) };
      }), delete p10[h10.id], delete u10[h10.id];
    }
  }), { id: "align", before: { document: { pages: { [n10]: { shapes: p10 } }, pageStates: { [n10]: { selectedIds: e13 } } } }, after: { document: { pages: { [n10]: { shapes: u10 } }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
function qa(s10, e13) {
  return { id: "change_page", before: { appState: { currentPageId: s10.currentPageId } }, after: { appState: { currentPageId: e13 } } };
}
function Ja(s10, e13) {
  var o10;
  let t12 = s10, n10 = new Set(e13);
  for (; n10.has(t12); )
    t12 = ((o10 = /^.*(\d+)$/.exec(t12)) == null ? void 0 : o10[1]) ? t12.replace(/(\d+)(?=\D?)$/, (i10) => (+i10 + 1).toString()) : `${t12} 1`;
  return t12;
}
function Qa(s10, e13, t12 = Utils.uniqueId(), n10 = "Page") {
  let { currentPageId: o10 } = s10, i10 = Object.values(s10.state.document.pages).sort((p10, u10) => {
    var h10, g10;
    return ((h10 = p10.childIndex) != null ? h10 : 0) - ((g10 = u10.childIndex) != null ? g10 : 0);
  }), a10 = i10[i10.length - 1], l10 = (a10 == null ? void 0 : a10.childIndex) ? (a10 == null ? void 0 : a10.childIndex) + 1 : 1, r11 = { id: t12, name: Ja(n10, i10.map((p10) => {
    var u10;
    return (u10 = p10.name) != null ? u10 : "";
  })), childIndex: l10, shapes: {}, bindings: {} }, c10 = { id: t12, selectedIds: [], camera: { point: e13, zoom: 1 }, editingId: void 0, bindingId: void 0, hoveredId: void 0, pointedId: void 0 };
  return { id: "create_page", before: { appState: { currentPageId: o10 }, document: { pages: { [t12]: void 0 }, pageStates: { [t12]: void 0 } } }, after: { appState: { currentPageId: r11.id }, document: { pages: { [t12]: r11 }, pageStates: { [t12]: c10 } } } };
}
function Si(s10, e13, t12 = []) {
  let { currentPageId: n10 } = s10, o10 = {}, i10 = {};
  e13.forEach((r11) => {
    o10[r11.id] = void 0, i10[r11.id] = r11;
  });
  let a10 = {}, l10 = {};
  return t12.forEach((r11) => {
    a10[r11.id] = void 0, l10[r11.id] = r11;
  }), { id: "create", before: { document: { pages: { [n10]: { shapes: o10, bindings: a10 } }, pageStates: { [n10]: { selectedIds: [...s10.selectedIds] } } } }, after: { document: { pages: { [n10]: { shapes: i10, bindings: l10 } }, pageStates: { [n10]: { selectedIds: e13.map((r11) => r11.id) } } } } };
}
function ed(s10, e13) {
  let { currentPageId: t12, document: { pages: n10, pageStates: o10 } } = s10, i10 = Object.values(n10).sort((r11, c10) => (r11.childIndex || 0) - (c10.childIndex || 0)), a10 = i10.findIndex((r11) => r11.id === e13), l10;
  return e13 === t12 ? a10 === i10.length - 1 ? l10 = i10[i10.length - 2].id : l10 = i10[a10 + 1].id : l10 = t12, { id: "delete_page", before: { appState: { currentPageId: e13 }, document: { pages: { [e13]: f8({}, n10[e13]) }, pageStates: { [e13]: f8({}, o10[e13]) } } }, after: { appState: { currentPageId: l10 }, document: { pages: { [e13]: void 0 }, pageStates: { [e13]: void 0 } } } };
}
function td(s10, e13, t12) {
  let n10 = { shapes: {}, bindings: {} }, o10 = { shapes: {}, bindings: {} }, i10 = [], a10 = /* @__PURE__ */ new Set(), l10 = /* @__PURE__ */ new Set();
  e13.filter((c10) => !x7.getShape(s10, c10, t12).isLocked).forEach((c10) => {
    a10.add(c10);
    let p10 = x7.getShape(s10, c10, t12);
    n10.shapes[c10] = p10, o10.shapes[c10] = void 0, p10.children !== void 0 && p10.children.forEach((u10) => {
      a10.add(u10);
      let h10 = x7.getShape(s10, u10, t12);
      n10.shapes[u10] = h10, o10.shapes[u10] = void 0;
    }), p10.parentId !== t12 && i10.push(x7.getShape(s10, p10.parentId, t12)), p10.assetId && l10.add(p10.assetId);
  }), i10.forEach((c10) => {
    var p10;
    e13.includes(c10.id) || (a10.add(c10.id), n10.shapes[c10.id] = { children: c10.children }, o10.shapes[c10.id] = { children: c10.children.filter((u10) => !e13.includes(u10)) }, ((p10 = o10.shapes[c10.id]) == null ? void 0 : p10.children.length) === 0 && (o10.shapes[c10.id] = void 0, n10.shapes[c10.id] = x7.getShape(s10, c10.id, t12)));
  });
  let r11 = x7.getPage(s10, t12);
  return Object.values(r11.bindings).filter((c10) => a10.has(c10.fromId) || a10.has(c10.toId)).forEach((c10) => {
    for (let p10 of [c10.toId, c10.fromId])
      if (o10.shapes[p10] === void 0) {
        n10.bindings[c10.id] = c10, o10.bindings[c10.id] = void 0;
        let u10 = r11.shapes[p10];
        u10 && u10.handles && Object.values(u10.handles).filter((h10) => h10.bindingId === c10.id).forEach((h10) => {
          var g10, m10, T10, y10, b10, S10;
          n10.shapes[p10] = C5(f8({}, n10.shapes[p10]), { handles: C5(f8({}, (g10 = n10.shapes[p10]) == null ? void 0 : g10.handles), { [h10.id]: C5(f8({}, (T10 = (m10 = n10.shapes[p10]) == null ? void 0 : m10.handles) == null ? void 0 : T10[h10.id]), { bindingId: c10.id }) }) }), a10.has(p10) || (o10.shapes[p10] = C5(f8({}, o10.shapes[p10]), { handles: C5(f8({}, (y10 = o10.shapes[p10]) == null ? void 0 : y10.handles), { [h10.id]: C5(f8({}, (S10 = (b10 = o10.shapes[p10]) == null ? void 0 : b10.handles) == null ? void 0 : S10[h10.id]), { bindingId: void 0 }) }) }));
        });
      }
  }), Object.values(s10.document.pages).flatMap((c10) => Object.values(c10.shapes)).forEach((c10) => {
    "assetId" in c10 && c10.assetId && !a10.has(c10.id) && l10.delete(c10.assetId);
  }), { before: n10, after: o10, assetsToRemove: Array.from(l10) };
}
var Zp = (s10, e13) => {
  let t12 = f8({}, s10);
  return e13.forEach((n10) => t12[n10] = void 0), t12;
};
function Ti(s10, e13, t12 = s10.currentPageId) {
  let { pageState: n10, selectedIds: o10, document: { assets: i10 } } = s10, { before: a10, after: l10, assetsToRemove: r11 } = td(s10.state, e13, t12), c10 = Zp(i10, r11);
  return { id: "delete", before: { document: { assets: i10, pages: { [t12]: a10 }, pageStates: { [t12]: { selectedIds: [...s10.selectedIds] } } } }, after: { document: { assets: c10, pages: { [t12]: l10 }, pageStates: { [t12]: { selectedIds: o10.filter((p10) => !e13.includes(p10)), hoveredId: n10.hoveredId && e13.includes(n10.hoveredId) ? void 0 : n10.hoveredId } } } } };
}
function od(s10, e13, t12) {
  let { currentPageId: n10 } = s10, o10 = e13.map((r11) => s10.getShape(r11)), i10 = Object.fromEntries(qp(o10, t12).map((r11) => [r11.id, r11])), { before: a10, after: l10 } = x7.mutateShapes(s10.state, e13.filter((r11) => i10[r11] !== void 0), (r11) => ({ point: i10[r11.id].next }), n10);
  return o10.forEach((r11) => {
    if (r11.type === "group") {
      let c10 = p.sub(l10[r11.id].point, a10[r11.id].point);
      r11.children.forEach((p10) => {
        let u10 = s10.getShape(p10);
        a10[u10.id] = { point: u10.point }, l10[u10.id] = { point: p.add(u10.point, c10) };
      }), delete a10[r11.id], delete l10[r11.id];
    }
  }), { id: "distribute", before: { document: { pages: { [n10]: { shapes: a10 } }, pageStates: { [n10]: { selectedIds: e13 } } } }, after: { document: { pages: { [n10]: { shapes: l10 } }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
function qp(s10, e13) {
  let t12 = s10.map((a10) => {
    let l10 = x7.getShapeUtil(a10);
    return { id: a10.id, point: [...a10.point], bounds: l10.getBounds(a10), center: l10.getCenter(a10) };
  }), n10 = t12.length, o10 = Utils.getCommonBounds(t12.map(({ bounds: a10 }) => a10)), i10 = [];
  switch (e13) {
    case "horizontal": {
      let a10 = t12.reduce((l10, r11) => l10 + r11.bounds.width, 0);
      if (a10 > o10.width) {
        let l10 = t12.sort((h10, g10) => h10.bounds.minX - g10.bounds.minX)[0], r11 = t12.sort((h10, g10) => g10.bounds.maxX - h10.bounds.maxX)[0], c10 = t12.filter((h10) => h10 !== l10 && h10 !== r11).sort((h10, g10) => h10.center[0] - g10.center[0]), p10 = (r11.center[0] - l10.center[0]) / (n10 - 1), u10 = l10.center[0] + p10;
        c10.forEach(({ id: h10, point: g10, bounds: m10 }, T10) => {
          i10.push({ id: h10, prev: g10, next: [u10 + p10 * T10 - m10.width / 2, m10.minY] });
        });
      } else {
        let l10 = t12.sort((p10, u10) => p10.center[0] - u10.center[0]), r11 = o10.minX, c10 = (o10.width - a10) / (n10 - 1);
        l10.forEach(({ id: p10, point: u10, bounds: h10 }) => {
          i10.push({ id: p10, prev: u10, next: [r11, h10.minY] }), r11 += h10.width + c10;
        });
      }
      break;
    }
    case "vertical": {
      let a10 = t12.reduce((l10, r11) => l10 + r11.bounds.height, 0);
      if (a10 > o10.height) {
        let l10 = t12.sort((h10, g10) => h10.bounds.minY - g10.bounds.minY)[0], r11 = t12.sort((h10, g10) => g10.bounds.maxY - h10.bounds.maxY)[0], c10 = t12.filter((h10) => h10 !== l10 && h10 !== r11).sort((h10, g10) => h10.center[1] - g10.center[1]), p10 = (r11.center[1] - l10.center[1]) / (n10 - 1), u10 = l10.center[1] + p10;
        c10.forEach(({ id: h10, point: g10, bounds: m10 }, T10) => {
          i10.push({ id: h10, prev: g10, next: [m10.minX, u10 + p10 * T10 - m10.height / 2] });
        });
      } else {
        let l10 = t12.sort((p10, u10) => p10.center[1] - u10.center[1]), r11 = o10.minY, c10 = (o10.height - a10) / (n10 - 1);
        l10.forEach(({ id: p10, point: u10, bounds: h10 }) => {
          i10.push({ id: p10, prev: u10, next: [h10.minX, r11] }), r11 += h10.height + c10;
        });
      }
      break;
    }
  }
  return i10;
}
function sd(s10, e13) {
  let t12 = Utils.uniqueId(), { currentPageId: n10, page: o10, pageState: { camera: i10 } } = s10, a10 = C5(f8({}, o10), { id: t12, name: o10.name + " Copy", shapes: Object.fromEntries(Object.entries(o10.shapes).map(([l10, r11]) => [l10, C5(f8({}, r11), { parentId: r11.parentId === e13 ? t12 : r11.parentId })])) });
  return { id: "duplicate_page", before: { appState: { currentPageId: n10 }, document: { pages: { [t12]: void 0 }, pageStates: { [t12]: void 0 } } }, after: { appState: { currentPageId: t12 }, document: { pages: { [t12]: a10 }, pageStates: { [t12]: C5(f8({}, o10), { id: t12, selectedIds: [], camera: f8({}, i10), editingId: void 0, bindingId: void 0, hoveredId: void 0, pointedId: void 0 }) } } } };
}
function id(s10, e13, t12) {
  let { selectedIds: n10, currentPageId: o10, page: i10, shapes: a10 } = s10, l10 = { shapes: {}, bindings: {} }, r11 = { shapes: {}, bindings: {} }, c10 = {}, p10 = e13.map((g10) => s10.getShape(g10)).filter((g10) => !e13.includes(g10.parentId));
  p10.forEach((g10) => {
    let m10 = Utils.uniqueId();
    if (l10.shapes[m10] = void 0, r11.shapes[m10] = C5(f8({}, Utils.deepClone(g10)), { id: m10, childIndex: x7.getChildIndexAbove(s10.state, g10.id, o10) }), g10.children && (r11.shapes[m10].children = []), g10.parentId !== o10) {
      let T10 = s10.getShape(g10.parentId);
      l10.shapes[T10.id] = C5(f8({}, l10.shapes[T10.id]), { children: T10.children }), r11.shapes[T10.id] = C5(f8({}, r11.shapes[T10.id]), { children: [...(r11.shapes[T10.id] || T10).children, m10] });
    }
    c10[g10.id] = m10;
  }), p10.forEach((g10) => {
    g10.children && g10.children.forEach((m10) => {
      var S10, w10;
      let T10 = s10.getShape(m10), y10 = Utils.uniqueId(), b10 = c10[g10.id];
      l10.shapes[y10] = void 0, r11.shapes[y10] = C5(f8({}, Utils.deepClone(T10)), { id: y10, parentId: b10, childIndex: x7.getChildIndexAbove(s10.state, T10.id, o10) }), c10[m10] = y10, (w10 = (S10 = r11.shapes[c10[g10.id]]) == null ? void 0 : S10.children) == null || w10.push(y10);
    });
  });
  let u10 = new Set(Object.keys(c10));
  Object.values(i10.bindings).filter((g10) => u10.has(g10.fromId) || u10.has(g10.toId)).forEach((g10) => {
    if (u10.has(g10.fromId))
      if (u10.has(g10.toId)) {
        let m10 = Utils.uniqueId(), T10 = C5(f8({}, Utils.deepClone(g10)), { id: m10, fromId: c10[g10.fromId], toId: c10[g10.toId] });
        l10.bindings[m10] = void 0, r11.bindings[m10] = T10;
        let y10 = r11.shapes[T10.fromId];
        Object.values(y10.handles).forEach((b10) => {
          b10.bindingId === g10.id && (b10.bindingId = m10);
        });
      } else {
        let m10 = r11.shapes[c10[g10.fromId]];
        Object.values(m10.handles).forEach((T10) => {
          T10.bindingId === g10.id && (T10.bindingId = void 0);
        });
      }
  });
  let h10 = Object.values(r11.shapes);
  if (t12) {
    let g10 = Utils.getCommonBounds(h10.map((T10) => x7.getBounds(T10))), m10 = Utils.getBoundsCenter(g10);
    h10.forEach((T10) => {
      !T10.point || (T10.point = e.sub(t12, e.sub(m10, T10.point)));
    });
  } else {
    let g10 = [16, 16];
    h10.forEach((m10) => {
      !m10.point || (m10.point = e.add(m10.point, g10));
    });
  }
  return h10.forEach((g10) => {
    g10.isLocked && (g10.isLocked = false);
  }), { id: "duplicate", before: { document: { pages: { [o10]: l10 }, pageStates: { [o10]: { selectedIds: n10 } } } }, after: { document: { pages: { [o10]: r11 }, pageStates: { [o10]: { selectedIds: Array.from(u10.values()).map((g10) => c10[g10]) } } } } };
}
function wi(s10, e13, t12) {
  let { selectedIds: n10, currentPageId: o10, page: { shapes: i10 } } = s10, a10 = e13.map((p10) => x7.getBounds(i10[p10])), l10 = Utils.getCommonBounds(a10), { before: r11, after: c10 } = x7.mutateShapes(s10.state, e13, (p10) => {
    let u10 = x7.getBounds(p10);
    switch (t12) {
      case "horizontal": {
        let h10 = Utils.getRelativeTransformedBoundingBox(l10, l10, u10, true, false);
        return x7.getShapeUtil(p10).transform(p10, h10, { type: TLBoundsCorner.TopLeft, scaleX: -1, scaleY: 1, initialShape: p10, transformOrigin: [0.5, 0.5] });
      }
      case "vertical": {
        let h10 = Utils.getRelativeTransformedBoundingBox(l10, l10, u10, false, true);
        return x7.getShapeUtil(p10).transform(p10, h10, { type: TLBoundsCorner.TopLeft, scaleX: 1, scaleY: -1, initialShape: p10, transformOrigin: [0.5, 0.5] });
      }
    }
  }, o10);
  return { id: "flip", before: { document: { pages: { [o10]: { shapes: r11 } }, pageStates: { [o10]: { selectedIds: n10 } } } }, after: { document: { pages: { [o10]: { shapes: c10 } }, pageStates: { [o10]: { selectedIds: e13 } } } } };
}
function ad(s10, e13, t12, n10) {
  var D10, B10;
  if (e13.length < 2)
    return;
  let o10 = {}, i10 = {}, a10 = {}, l10 = {}, r11 = [...e13], c10 = [], p10 = [], u10 = [];
  for (let I10 of e13) {
    let P10 = s10.getShape(I10);
    if (!P10.isLocked)
      if (P10.children === void 0)
        c10.push(P10);
      else {
        let v10 = P10.children.filter((Q) => !s10.getShape(Q).isLocked);
        u10.push(P10), r11.push(...v10), c10.push(...v10.map((Q) => s10.getShape(Q)).filter(Boolean));
      }
  }
  if (c10.every((I10) => I10.parentId === c10[0].parentId) && c10[0].parentId !== n10 && ((D10 = s10.getShape(c10[0].parentId).children) == null ? void 0 : D10.length) === r11.length)
    return;
  let h10 = x7.flattenPage(s10.state, n10), g10 = Object.fromEntries(c10.map((I10) => [I10.id, h10.indexOf(I10)])), m10 = c10.sort((I10, P10) => g10[I10.id] - g10[P10.id]), T10 = n10, y10 = (m10.filter((I10) => I10.parentId === n10)[0] || m10[0]).childIndex, b10 = Utils.getCommonBounds(c10.map((I10) => x7.getBounds(I10)));
  for (o10[t12] = void 0, i10[t12] = x7.getShapeUtil("group").create({ id: t12, childIndex: y10, parentId: T10, point: [b10.minX, b10.minY], size: [b10.width, b10.height], children: m10.map((I10) => I10.id) }), m10.forEach((I10, P10) => {
    if (I10.parentId !== n10) {
      let v10 = s10.getShape(I10.parentId);
      u10.push(v10);
    }
    o10[I10.id] = C5(f8({}, o10[I10.id]), { parentId: I10.parentId, childIndex: I10.childIndex }), i10[I10.id] = C5(f8({}, i10[I10.id]), { parentId: t12, childIndex: P10 + 1 });
  }); u10.length > 0; ) {
    let I10 = u10.pop();
    if (!I10)
      break;
    let P10 = (((B10 = o10[I10.id]) == null ? void 0 : B10.children) || I10.children).filter((v10) => v10 && !(r11.includes(v10) || p10.includes(v10)));
    P10.length === 0 ? (o10[I10.id] = I10, i10[I10.id] = void 0, I10.parentId !== n10 && (p10.push(I10.id), u10.push(s10.getShape(I10.parentId)))) : (o10[I10.id] = C5(f8({}, o10[I10.id]), { children: I10.children }), i10[I10.id] = C5(f8({}, i10[I10.id]), { children: P10 }));
  }
  let { bindings: S10 } = s10, w10 = new Set(p10);
  return S10.forEach((I10) => {
    for (let P10 of [I10.toId, I10.fromId])
      if (w10.has(P10)) {
        a10[I10.id] = I10, l10[I10.id] = void 0;
        let v10 = s10.getShape(P10);
        v10.handles && Object.values(v10.handles).filter((Q) => Q.bindingId === I10.id).forEach((Q) => {
          var oe2, te;
          o10[P10] = C5(f8({}, o10[P10]), { handles: C5(f8({}, (oe2 = o10[P10]) == null ? void 0 : oe2.handles), { [Q.id]: { bindingId: I10.id } }) }), p10.includes(P10) || (i10[P10] = C5(f8({}, i10[P10]), { handles: C5(f8({}, (te = i10[P10]) == null ? void 0 : te.handles), { [Q.id]: { bindingId: void 0 } }) }));
        });
      }
  }), { id: "group", before: { document: { pages: { [n10]: { shapes: o10, bindings: a10 } }, pageStates: { [n10]: { selectedIds: e13 } } } }, after: { document: { pages: { [n10]: { shapes: i10, bindings: a10 } }, pageStates: { [n10]: { selectedIds: [t12] } } } } };
}
function ld(s10, e13, t12, n10, o10) {
  let { page: i10 } = s10, a10 = { before: { shapes: {}, bindings: {} }, after: { shapes: {}, bindings: {} } }, l10 = { before: { shapes: {}, bindings: {} }, after: { shapes: {}, bindings: {} } }, r11 = /* @__PURE__ */ new Set(), c10 = /* @__PURE__ */ new Set();
  e13.map((S10) => s10.getShape(S10, n10)).filter((S10) => !S10.isLocked).forEach((S10) => {
    r11.add(S10.id), c10.add(S10), S10.children !== void 0 && S10.children.forEach((w10) => {
      r11.add(w10), c10.add(s10.getShape(w10, n10));
    });
  });
  let p10 = x7.getTopChildIndex(s10.state, o10), u10 = Array.from(c10.values());
  u10.forEach((S10, w10) => {
    if (a10.before.shapes[S10.id] = S10, a10.after.shapes[S10.id] = void 0, l10.before.shapes[S10.id] = void 0, l10.after.shapes[S10.id] = S10, !r11.has(S10.parentId) && (l10.after.shapes[S10.id] = C5(f8({}, S10), { parentId: o10, childIndex: p10 + w10 }), S10.parentId !== n10)) {
      let D10 = s10.getShape(S10.parentId, n10);
      a10.before.shapes[D10.id] = { children: D10.children }, a10.after.shapes[D10.id] = { children: D10.children.filter((B10) => B10 !== S10.id) };
    }
  }), Object.values(i10.bindings).filter((S10) => r11.has(S10.fromId) || r11.has(S10.toId)).forEach((S10) => {
    a10.before.bindings[S10.id] = S10, a10.after.bindings[S10.id] = void 0;
    let w10 = s10.getShape(S10.fromId, n10);
    if (r11.has(S10.fromId) && r11.has(S10.toId))
      l10.before.bindings[S10.id] = void 0, l10.after.bindings[S10.id] = S10;
    else if (r11.has(S10.fromId)) {
      let B10 = s10.getShape(S10.fromId, n10), P10 = Object.values(w10.handles).find((Q) => Q.bindingId === S10.id).id, v10 = l10.after.shapes[B10.id];
      v10.handles = C5(f8({}, v10.handles), { [P10]: C5(f8({}, v10.handles[P10]), { bindingId: void 0 }) });
    } else {
      let B10 = s10.getShape(S10.fromId, n10), I10 = Object.values(w10.handles).find((P10) => P10.bindingId === S10.id);
      a10.before.shapes[B10.id] = { handles: { [I10.id]: { bindingId: S10.id } } }, a10.after.shapes[B10.id] = { handles: { [I10.id]: { bindingId: void 0 } } };
    }
  });
  let h10 = s10.state.document.pageStates[o10], g10 = Utils.getCommonBounds(u10.map((S10) => x7.getBounds(S10))), m10 = x7.getCameraZoom(t12.width < t12.height ? (t12.width - 128) / g10.width : (t12.height - 128) / g10.height), T10 = (t12.width - g10.width * m10) / 2 / m10, y10 = (t12.height - g10.height * m10) / 2 / m10, b10 = e.toFixed(e.add([-g10.minX, -g10.minY], [T10, y10]));
  return { id: "move_to_page", before: { appState: { currentPageId: n10 }, document: { pages: { [n10]: a10.before, [o10]: l10.before }, pageStates: { [n10]: { selectedIds: e13 }, [o10]: { selectedIds: h10.selectedIds, camera: h10.camera } } } }, after: { appState: { currentPageId: o10 }, document: { pages: { [n10]: a10.after, [o10]: l10.after }, pageStates: { [n10]: { selectedIds: [] }, [o10]: { selectedIds: e13, camera: { zoom: m10, point: b10 } } } } } };
}
function cd(s10, e13, t12) {
  let { pages: n10 } = s10.document, o10 = n10[e13], i10 = Object.values(n10).sort((r11, c10) => {
    var p10, u10;
    return ((p10 = r11.childIndex) != null ? p10 : 0) - ((u10 = c10.childIndex) != null ? u10 : 0);
  }), a10 = i10.indexOf(o10), l10 = [...i10];
  return l10.splice(a10, 1), l10.splice(t12 > a10 ? t12 - 1 : t12, 0, o10), { id: "move_page", before: { document: { pages: Object.fromEntries(i10.map((r11) => [r11.id, { childIndex: r11.childIndex }])) } }, after: { document: { pages: Object.fromEntries(l10.map((r11, c10) => [r11.id, { childIndex: c10 }])) } } };
}
function Do(s10, e13, t12) {
  let { currentPageId: n10, page: o10 } = s10, i10 = new Set(e13.map((p10) => s10.getShape(p10).parentId)), a10 = { before: {}, after: {} }, l10, r11, c10;
  return Array.from(i10.values()).forEach((p10) => {
    let u10 = [];
    if (p10 === o10.id)
      u10 = Object.values(o10.shapes).sort((m10, T10) => m10.childIndex - T10.childIndex);
    else {
      let m10 = s10.getShape(p10);
      if (!m10.children)
        throw Error("No children in parent!");
      u10 = m10.children.map((T10) => s10.getShape(T10)).sort((T10, y10) => T10.childIndex - y10.childIndex);
    }
    let h10 = u10.map((m10) => m10.id), g10 = e13.filter((m10) => h10.includes(m10)).map((m10) => h10.indexOf(m10)).sort((m10, T10) => m10 - T10);
    if (g10.length !== h10.length)
      switch (t12) {
        case "toBack": {
          for (let m10 = 0; m10 < h10.length; m10++)
            if (!g10.includes(m10)) {
              l10 = m10;
              break;
            }
          r11 = u10[l10].childIndex, c10 = r11 / (g10.length + 1), a10 = x7.mutateShapes(s10.state, g10.map((m10) => u10[m10].id).reverse(), (m10, T10) => ({ childIndex: r11 - (T10 + 1) * c10 }), n10);
          break;
        }
        case "toFront": {
          for (let m10 = h10.length - 1; m10 >= 0; m10--)
            if (!g10.includes(m10)) {
              l10 = m10;
              break;
            }
          r11 = u10[l10].childIndex, c10 = 1, a10 = x7.mutateShapes(s10.state, g10.map((m10) => u10[m10].id), (m10, T10) => ({ childIndex: r11 + (T10 + 1) }), n10);
          break;
        }
        case "backward": {
          let m10 = {};
          for (let T10 = h10.length - 1; T10 >= 0; T10--)
            if (g10.includes(T10)) {
              for (let y10 = T10; y10 >= 0; y10--)
                if (!g10.includes(y10)) {
                  let b10 = u10[y10].childIndex, S10, w10;
                  y10 === 0 ? (S10 = b10 / 2, w10 = b10 / 2 / (T10 - y10 + 1)) : (S10 = u10[y10 - 1].childIndex, w10 = (b10 - S10) / (T10 - y10 + 1), S10 += w10);
                  for (let D10 = 0; D10 < T10 - y10; D10++)
                    m10[u10[y10 + D10 + 1].id] = S10 + w10 * D10;
                  break;
                }
            }
          Object.values(m10).length > 0 && (a10 = x7.mutateShapes(s10.state, g10.map((T10) => u10[T10].id), (T10) => ({ childIndex: m10[T10.id] }), n10));
          break;
        }
        case "forward": {
          let m10 = {};
          for (let T10 = 0; T10 < h10.length; T10++)
            if (g10.includes(T10)) {
              for (let y10 = T10; y10 < h10.length; y10++)
                if (!g10.includes(y10)) {
                  r11 = u10[y10].childIndex;
                  let b10 = y10 === h10.length - 1 ? 1 : (u10[y10 + 1].childIndex - r11) / (y10 - T10 + 1);
                  for (let S10 = 0; S10 < y10 - T10; S10++)
                    m10[u10[T10 + S10].id] = r11 + b10 * (S10 + 1);
                  break;
                }
            }
          Object.values(m10).length > 0 && (a10 = x7.mutateShapes(s10.state, g10.map((T10) => u10[T10].id), (T10) => ({ childIndex: m10[T10.id] }), n10));
          break;
        }
      }
  }), { id: "move", before: { document: { pages: { [n10]: { shapes: a10.before } }, pageStates: { [n10]: { selectedIds: e13 } } } }, after: { document: { pages: { [n10]: { shapes: a10.after } }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
function pd(s10, e13, t12) {
  let { page: n10 } = s10;
  return { id: "rename_page", before: { document: { pages: { [e13]: { name: n10.name } } } }, after: { document: { pages: { [e13]: { name: t12 } } } } };
}
function xi(s10, e13, t12) {
  let { currentPageId: n10 } = s10, { before: o10, after: i10 } = x7.mutateShapes(s10.state, e13, (a10) => {
    var l10, r11;
    return (r11 = (l10 = s10.getShapeUtil(a10)).onDoubleClickBoundsHandle) == null ? void 0 : r11.call(l10, a10);
  }, t12);
  return { id: "reset_bounds", before: { document: { pages: { [n10]: { shapes: o10 } }, pageStates: { [n10]: { selectedIds: e13 } } } }, after: { document: { pages: { [n10]: { shapes: i10 } }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
var tu = Math.PI * 2;
function hd(s10, e13, t12 = -tu / 4) {
  let { currentPageId: n10 } = s10, o10 = {}, i10 = {}, a10 = e13.flatMap((r11) => {
    let c10 = s10.getShape(r11);
    return c10.children ? c10.children.map((p10) => s10.getShape(p10)) : c10;
  }).filter((r11) => !r11.isLocked), l10 = Utils.getBoundsCenter(Utils.getCommonBounds(a10.map((r11) => x7.getBounds(r11))));
  return a10.forEach((r11) => {
    let c10 = x7.getRotatedShapeMutation(r11, x7.getCenter(r11), l10, t12);
    !c10 || (o10[r11.id] = x7.getBeforeShape(r11, c10), i10[r11.id] = c10);
  }), { id: "rotate", before: { document: { pages: { [n10]: { shapes: o10 } }, pageStates: { [n10]: { selectedIds: e13 } } } }, after: { document: { pages: { [n10]: { shapes: i10 } }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
function gd(s10, e13, t12) {
  let { currentPageId: n10, selectedIds: o10 } = s10, i10 = e13.map((u10) => s10.getShape(u10)), a10 = i10.map((u10) => x7.getBounds(u10)), l10 = Utils.getCommonBounds(a10), r11 = e13.flatMap((u10) => {
    let h10 = s10.getShape(u10);
    return h10.children ? h10.children : h10.id;
  }).filter((u10) => !s10.getShape(u10).isLocked), { before: c10, after: p10 } = x7.mutateShapes(s10.state, r11, (u10) => {
    let h10 = x7.getBounds(u10);
    switch (t12) {
      case "horizontal": {
        let g10 = C5(f8({}, h10), { minX: l10.minX, maxX: l10.maxX, width: l10.width });
        return x7.getShapeUtil(u10).transformSingle(u10, g10, { type: TLBoundsCorner.TopLeft, scaleX: g10.width / h10.width, scaleY: 1, initialShape: u10, transformOrigin: [0.5, 0.5] });
      }
      case "vertical": {
        let g10 = C5(f8({}, h10), { minY: l10.minY, maxY: l10.maxY, height: l10.height });
        return x7.getShapeUtil(u10).transformSingle(u10, g10, { type: TLBoundsCorner.TopLeft, scaleX: 1, scaleY: g10.height / h10.height, initialShape: u10, transformOrigin: [0.5, 0.5] });
      }
    }
  }, n10);
  return i10.forEach((u10) => {
    u10.type === "group" && (delete c10[u10.id], delete p10[u10.id]);
  }), { id: "stretch", before: { document: { pages: { [n10]: { shapes: c10 } }, pageStates: { [n10]: { selectedIds: o10 } } } }, after: { document: { pages: { [n10]: { shapes: p10 } }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
function fd(s10, e13, t12) {
  let { currentPageId: n10, selectedIds: o10 } = s10, i10 = e13.flatMap((r11) => x7.getDocumentBranch(s10.state, r11, n10)).filter((r11) => !s10.getShape(r11).isLocked), a10 = {}, l10 = {};
  return i10.map((r11) => s10.getShape(r11)).filter((r11) => !r11.isLocked).forEach((r11) => {
    a10[r11.id] = { style: f8({}, Object.fromEntries(Object.keys(t12).map((c10) => [c10, r11.style[c10]]))) }, l10[r11.id] = { style: t12 }, r11.type === "text" && (a10[r11.id].point = r11.point, l10[r11.id].point = e.toFixed(e.add(r11.point, e.sub(s10.getShapeUtil(r11).getCenter(r11), s10.getShapeUtil(r11).getCenter(C5(f8({}, r11), { style: f8(f8({}, r11.style), t12) }))))));
  }), { id: "style", before: { document: { pages: { [n10]: { shapes: a10 } }, pageStates: { [n10]: { selectedIds: o10 } } }, appState: { currentStyle: f8({}, s10.appState.currentStyle) } }, after: { document: { pages: { [n10]: { shapes: l10 } }, pageStates: { [n10]: { selectedIds: e13 } } }, appState: { currentStyle: t12 } } };
}
function Sd(s10, e13, t12) {
  let { currentPageId: n10, selectedIds: o10 } = s10, i10 = Object.fromEntries(e13.map((l10) => {
    var r11;
    return [l10, { decorations: { [t12]: (r11 = s10.getShape(l10).decorations) == null ? void 0 : r11[t12] } }];
  })), a10 = Object.fromEntries(e13.filter((l10) => !s10.getShape(l10).isLocked).map((l10) => {
    var r11;
    return [l10, { decorations: { [t12]: ((r11 = s10.getShape(l10).decorations) == null ? void 0 : r11[t12]) ? void 0 : "arrow" } }];
  }));
  return { id: "toggle_decorations", before: { document: { pages: { [n10]: { shapes: i10 } }, pageStates: { [n10]: { selectedIds: o10 } } } }, after: { document: { pages: { [n10]: { shapes: a10 } }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
function gs(s10, e13, t12) {
  let { currentPageId: n10 } = s10, o10 = e13.map((r11) => s10.getShape(r11)).filter((r11) => t12 === "isLocked" ? true : !r11.isLocked), i10 = o10.every((r11) => r11[t12]), a10 = {}, l10 = {};
  return o10.forEach((r11) => {
    a10[r11.id] = { [t12]: r11[t12] }, l10[r11.id] = { [t12]: !i10 };
  }), { id: "toggle", before: { document: { pages: { [n10]: { shapes: a10 } }, pageStates: { [n10]: { selectedIds: e13 } } } }, after: { document: { pages: { [n10]: { shapes: l10 } }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
function bd(s10, e13, t12) {
  let { currentPageId: n10, selectedIds: o10 } = s10;
  s10.rotationInfo.selectedIds = [...o10];
  let i10 = { shapes: {}, bindings: {} }, a10 = { shapes: {}, bindings: {} }, l10 = e13.flatMap((p10) => {
    let u10 = s10.getShape(p10);
    return u10.children ? u10.children : u10.id;
  }).filter((p10) => !s10.getShape(p10).isLocked), r11 = x7.mutateShapes(s10.state, l10, (p10) => ({ point: e.toFixed(e.add(p10.point, t12)) }), n10);
  return i10.shapes = r11.before, a10.shapes = r11.after, x7.getBindings(s10.state, n10).filter((p10) => e13.includes(p10.fromId) && !e13.includes(p10.toId)).forEach((p10) => {
    i10.bindings[p10.id] = p10, a10.bindings[p10.id] = void 0;
    for (let u10 of [p10.toId, p10.fromId]) {
      let h10 = s10.getShape(u10);
      !h10.handles || Object.values(h10.handles).filter((g10) => g10.bindingId === p10.id).forEach((g10) => {
        var m10, T10;
        i10.shapes[u10] = C5(f8({}, i10.shapes[u10]), { handles: C5(f8({}, (m10 = i10.shapes[u10]) == null ? void 0 : m10.handles), { [g10.id]: { bindingId: p10.id } }) }), a10.shapes[u10] = C5(f8({}, a10.shapes[u10]), { handles: C5(f8({}, (T10 = a10.shapes[u10]) == null ? void 0 : T10.handles), { [g10.id]: { bindingId: void 0 } }) });
      });
    }
  }), { id: "translate", before: { document: { pages: { [n10]: i10 }, pageStates: { [n10]: { selectedIds: e13 } } } }, after: { document: { pages: { [n10]: a10 }, pageStates: { [n10]: { selectedIds: e13 } } } } };
}
function yd(s10, e13, t12, n10) {
  let { bindings: o10 } = s10, i10 = {}, a10 = {}, l10 = {}, r11 = {}, c10 = e13, p10 = e13.filter((u10) => !t12.find((h10) => h10.id === u10));
  return t12.filter((u10) => !u10.isLocked).forEach((u10) => {
    let h10 = [], g10 = [];
    i10[u10.id] = u10, a10[u10.id] = void 0, u10.children.forEach((S10) => {
      p10.push(S10);
      let w10 = s10.getShape(S10, n10);
      h10.push(w10);
    });
    let m10 = u10.childIndex, y10 = (x7.getChildIndexAbove(s10.state, u10.id, n10) - m10) / h10.length;
    h10.sort((S10, w10) => S10.childIndex - w10.childIndex).forEach((S10, w10) => {
      i10[S10.id] = { parentId: S10.parentId, childIndex: S10.childIndex }, a10[S10.id] = { parentId: n10, childIndex: m10 + y10 * w10 };
    }), o10.filter((S10) => S10.toId === u10.id || S10.fromId === u10.id).forEach((S10) => {
      for (let w10 of [S10.toId, S10.fromId])
        if (a10[w10] === void 0) {
          l10[S10.id] = S10, r11[S10.id] = void 0;
          let D10 = s10.getShape(w10, n10);
          D10.handles && Object.values(D10.handles).filter((B10) => B10.bindingId === S10.id).forEach((B10) => {
            var I10, P10;
            i10[w10] = C5(f8({}, i10[w10]), { handles: C5(f8({}, (I10 = i10[w10]) == null ? void 0 : I10.handles), { [B10.id]: { bindingId: S10.id } }) }), g10.includes(w10) || (a10[w10] = C5(f8({}, a10[w10]), { handles: C5(f8({}, (P10 = a10[w10]) == null ? void 0 : P10.handles), { [B10.id]: { bindingId: void 0 } }) }));
          });
        }
    });
  }), { id: "ungroup", before: { document: { pages: { [n10]: { shapes: i10, bindings: l10 } }, pageStates: { [n10]: { selectedIds: c10 } } } }, after: { document: { pages: { [n10]: { shapes: a10, bindings: l10 } }, pageStates: { [n10]: { selectedIds: p10 } } } } };
}
function Ci(s10, e13, t12) {
  let n10 = e13.map((i10) => i10.id), o10 = x7.mutateShapes(s10.state, n10.filter((i10) => !s10.getShape(i10, t12).isLocked), (i10, a10) => e13[a10], t12);
  return { id: "update", before: { document: { pages: { [t12]: { shapes: o10.before } } } }, after: { document: { pages: { [t12]: { shapes: o10.after } } } } };
}
function wd(s10, e13, t12) {
  let { currentPageId: n10, selectedIds: o10 } = s10, i10 = e13.map((c10) => s10.getShape(c10)).filter((c10) => t12.isLocked ? true : !c10.isLocked), a10 = {}, l10 = {}, r11 = Object.keys(t12);
  return i10.forEach((c10) => {
    a10[c10.id] = Object.fromEntries(r11.map((p10) => [p10, c10[p10]])), l10[c10.id] = t12;
  }), { id: "set_props", before: { document: { pages: { [n10]: { shapes: a10 } }, pageStates: { [n10]: { selectedIds: o10 } } } }, after: { document: { pages: { [n10]: { shapes: l10 } }, pageStates: { [n10]: { selectedIds: o10 } } } } };
}
function xd(s10, e13, t12 = {}) {
  let { currentPageId: n10 } = s10, { point: o10, select: i10, overwrite: a10 } = t12, l10 = s10.document.pages[n10], r11 = { shapes: {}, bindings: {} }, c10 = {}, p10 = { shapes: {}, bindings: {} };
  if (a10) {
    for (let h10 of e13.shapes)
      r11.shapes[h10.id] = l10.shapes[h10.id], p10.shapes[h10.id] = h10;
    if (e13.bindings)
      for (let h10 of e13.bindings)
        r11.bindings[h10.id] = l10.bindings[h10.id], p10.bindings[h10.id] = h10;
    if (e13.assets)
      for (let h10 of e13.assets)
        c10[h10.id] = h10;
  } else {
    let h10 = {}, g10 = x7.getTopChildIndex(s10.state, n10), m10 = e13.shapes.sort((b10, S10) => b10.childIndex - S10.childIndex).map((b10) => {
      let S10 = Utils.uniqueId();
      return h10[b10.id] = S10, C5(f8({}, Utils.deepClone(b10)), { id: S10 });
    }), T10 = /* @__PURE__ */ new Set();
    for (; m10.length > 0; ) {
      let b10 = m10.shift();
      if (!b10)
        break;
      if (T10.add(b10.id), b10.parentId === "currentPageId")
        b10.parentId = n10, b10.childIndex = g10++;
      else {
        b10.parentId = h10[b10.parentId];
        let S10 = p10.shapes[b10.parentId];
        if (!S10) {
          T10.has(b10.id) && (b10.parentId = "currentPageId"), m10.push(b10);
          continue;
        }
        S10.children.push(b10.id);
      }
      b10.children && (b10.children = []), r11.shapes[b10.id] = void 0, p10.shapes[b10.id] = b10;
    }
    Object.values(p10.shapes).forEach((b10) => {
      b10.children && b10.children.length === 0 && (delete r11.shapes[b10.id], delete p10.shapes[b10.id]);
    }), e13.bindings && e13.bindings.forEach((b10) => {
      let S10 = Utils.uniqueId();
      h10[b10.id] = S10;
      let w10 = h10[b10.toId], D10 = h10[b10.fromId];
      if (!w10 || !D10) {
        if (D10) {
          let v10 = p10.shapes[D10].handles;
          v10 && Object.values(v10).forEach((Q) => {
            Q.bindingId === b10.id && (Q.bindingId = void 0);
          });
        }
        if (w10) {
          let v10 = p10.shapes[w10].handles;
          v10 && Object.values(v10).forEach((Q) => {
            Q.bindingId === b10.id && (Q.bindingId = void 0);
          });
        }
        return;
      }
      let B10 = p10.shapes[D10].handles;
      B10 && Object.values(B10).forEach((v10) => {
        v10.bindingId === b10.id && (v10.bindingId = S10);
      }), p10.shapes[w10].handles && Object.values(p10.shapes[w10].handles).forEach((v10) => {
        v10.bindingId === b10.id && (v10.bindingId = S10);
      });
      let P10 = C5(f8({}, Utils.deepClone(b10)), { id: S10, toId: w10, fromId: D10 });
      r11.bindings[P10.id] = void 0, p10.bindings[P10.id] = P10;
    });
    let y10 = Object.values(p10.shapes);
    if (y10.length > 0)
      if (o10) {
        let b10 = Utils.getCommonBounds(y10.map((w10) => x7.getBounds(w10))), S10 = Utils.getBoundsCenter(b10);
        y10.forEach((w10) => {
          !w10.point || (w10.point = e.sub(o10, e.sub(S10, w10.point)));
        });
      } else {
        let b10 = Utils.getCommonBounds(y10.map(x7.getBounds));
        if (!(Utils.boundsContain(s10.viewport, b10) || Utils.boundsCollide(s10.viewport, b10))) {
          let S10 = e.toFixed(s10.getPagePoint(s10.centerPoint)), w10 = Utils.centerBounds(b10, S10), D10 = e.sub(Utils.getBoundsCenter(w10), Utils.getBoundsCenter(b10));
          y10.forEach((B10) => {
            B10.point = e.toFixed(e.add(B10.point, D10));
          });
        }
      }
    if (e13.assets)
      for (let b10 of e13.assets)
        c10[b10.id] = b10;
  }
  let u10 = document.createElement("textarea");
  return Object.values(p10.shapes).forEach((h10) => {
    "text" in h10 && (u10.innerHTML = h10.text, h10.text = u10.value), "label" in h10 && (u10.innerHTML = h10.label, h10.label = u10.value);
  }), u10.remove(), { id: "insert", before: { document: { pages: { [n10]: r11 }, pageStates: { [n10]: { selectedIds: [...s10.selectedIds] } } } }, after: { document: { pages: { [n10]: p10 }, assets: c10, pageStates: { [n10]: { selectedIds: i10 ? Object.keys(p10.shapes) : [...s10.selectedIds] } } } } };
}
var Ae = class {
  constructor(e13) {
    this.app = e13;
  }
};
var vi = class extends Ae {
  constructor(e13, t12, n10, o10 = false) {
    super(e13);
    d8(this, "type", "arrow");
    d8(this, "performanceMode");
    d8(this, "status", "translatingHandle");
    d8(this, "newStartBindingId", Utils.uniqueId());
    d8(this, "draggedBindingId", Utils.uniqueId());
    d8(this, "didBind", false);
    d8(this, "initialShape");
    d8(this, "handleId");
    d8(this, "bindableShapeIds");
    d8(this, "initialBinding");
    d8(this, "startBindingShapeId");
    d8(this, "isCreate");
    d8(this, "start", () => {
    });
    d8(this, "update", () => {
      var B10, I10, P10;
      let { initialShape: e14 } = this, { currentPoint: t13, shiftKey: n11, altKey: o11, metaKey: i11, currentGrid: a11, settings: { showGrid: l11 } } = this.app, r12 = this.app.getShape(e14.id);
      if (r12.isLocked)
        return;
      let { handles: c11 } = e14, p11 = this.handleId;
      if (!c11[p11].canBind)
        return;
      let u11 = e.sub(t13, e.add(c11[p11].point, e14.point));
      if (n11) {
        let v10 = o11 ? e.med(c11.start.point, c11.end.point) : c11[p11 === "start" ? "end" : "start"].point, Q = c11[p11].point, oe2 = e.add(Q, u11), te = e.angle(v10, oe2), ke = e.rotWith(oe2, v10, Utils.snapAngleToSegments(te, 24) - te);
        u11 = e.add(u11, e.sub(ke, oe2));
      }
      let h10 = e.add(c11[p11].point, u11), g10 = { [p11]: C5(f8({}, c11[p11]), { point: l11 ? e.snap(h10, a11) : e.toFixed(h10), bindingId: void 0 }) }, m10 = mn["arrow"], T10 = (B10 = m10.onHandleChange) == null ? void 0 : B10.call(m10, e14, g10);
      if (!T10)
        return;
      let y10 = { shape: Utils.deepMerge(r12, T10), bindings: {} }, b10, S10 = y10.shape.handles[this.handleId], w10 = y10.shape.handles[this.handleId === "start" ? "end" : "start"];
      if (this.startBindingShapeId) {
        let v10, Q = this.app.page.shapes[this.startBindingShapeId], oe2 = x7.getShapeUtil(Q), te = oe2.getCenter(Q), ke = y10.shape.handles.start, be2 = y10.shape.handles.end, xe = e.add(ke.point, y10.shape.point);
        e.isEqual(xe, te) && xe[1]++;
        let Me = te, Fe = oe2.hitTestPoint(Q, t13), _e = e.uni(e.sub(xe, Me)), ot = this.app.getBinding(this.newStartBindingId) !== void 0;
        !i11 && !oe2.hitTestPoint(Q, e.add(y10.shape.point, be2.point)) && (v10 = this.findBindingPoint(r12, Q, "start", this.newStartBindingId, te, Me, _e, Fe)), v10 && !ot ? (this.didBind = true, y10.bindings[this.newStartBindingId] = v10, y10.shape = Utils.deepMerge(y10.shape, { handles: { start: { bindingId: v10.id } } })) : !v10 && ot && (this.didBind = false, y10.bindings[this.newStartBindingId] = void 0, y10.shape = Utils.deepMerge(e14, { handles: { start: { bindingId: void 0 } } }));
      }
      if (!i11) {
        let v10 = e.add(w10.point, y10.shape.point), Q = e.add(S10.point, y10.shape.point), oe2 = e.uni(e.sub(Q, v10)), te = e.add(y10.shape.point, y10.shape.handles.start.point), ke = e.add(y10.shape.point, y10.shape.handles.end.point), be2 = this.bindableShapeIds.map((xe) => this.app.page.shapes[xe]).sort((xe, Me) => Me.childIndex - xe.childIndex).filter((xe) => {
          if (xe.isLocked)
            return false;
          let Me = x7.getShapeUtil(xe);
          return ![te, ke].every((Fe) => Me.hitTestPoint(xe, Fe));
        });
        for (let xe of be2)
          if (b10 = this.findBindingPoint(r12, xe, this.handleId, this.draggedBindingId, Q, v10, oe2, o11), b10)
            break;
      }
      if (b10)
        this.didBind = true, y10.bindings[this.draggedBindingId] = b10, y10.shape = Utils.deepMerge(y10.shape, { handles: { [this.handleId]: { bindingId: this.draggedBindingId } } });
      else {
        this.didBind = this.didBind || false;
        let v10 = r12.handles[this.handleId].bindingId;
        v10 !== void 0 && (y10.bindings[v10] = void 0, y10.shape = Utils.deepMerge(y10.shape, { handles: { [this.handleId]: { bindingId: void 0 } } }));
      }
      let D10 = (P10 = (I10 = x7.getShapeUtil(y10.shape)).onHandleChange) == null ? void 0 : P10.call(I10, y10.shape, y10.shape.handles);
      return { document: { pages: { [this.app.currentPageId]: { shapes: { [r12.id]: f8(f8({}, y10.shape), D10 != null ? D10 : {}) }, bindings: y10.bindings } }, pageStates: { [this.app.currentPageId]: { bindingId: y10.shape.handles[p11].bindingId } } } };
    });
    d8(this, "cancel", () => {
      let { initialShape: e14, initialBinding: t13, newStartBindingId: n11, draggedBindingId: o11 } = this, i11 = x7.onSessionComplete(this.app.page.shapes[e14.id]), a11 = this.isCreate || e.dist(i11.handles.start.point, i11.handles.end.point) < 4, l11 = {};
      return l11[o11] = void 0, t13 && (l11[t13.id] = a11 ? void 0 : t13), n11 && (l11[n11] = void 0), { document: { pages: { [this.app.currentPageId]: { shapes: { [e14.id]: a11 ? void 0 : e14 }, bindings: l11 } }, pageStates: { [this.app.currentPageId]: { selectedIds: a11 ? [] : [e14.id], bindingId: void 0, hoveredId: void 0, editingId: void 0 } } } };
    });
    d8(this, "complete", () => {
      let { initialShape: e14, initialBinding: t13, newStartBindingId: n11, startBindingShapeId: o11, handleId: i11 } = this, a11 = x7.onSessionComplete(this.app.page.shapes[e14.id]), l11 = a11.handles[i11].bindingId, r12 = e.dist(a11.handles.start.point, a11.handles.end.point);
      if (!(l11 || t13) && r12 < 4)
        return this.cancel();
      let c11 = {}, p11 = {};
      return t13 && (c11[t13.id] = this.isCreate ? void 0 : t13, p11[t13.id] = void 0), l11 && (c11[l11] = void 0, p11[l11] = this.app.page.bindings[l11]), o11 && (c11[n11] = void 0, p11[n11] = this.app.page.bindings[n11]), { id: "arrow", before: { document: { pages: { [this.app.currentPageId]: { shapes: { [e14.id]: this.isCreate ? void 0 : e14 }, bindings: c11 } }, pageStates: { [this.app.currentPageId]: { selectedIds: this.isCreate ? [] : [e14.id], bindingId: void 0, hoveredId: void 0, editingId: void 0 } } } }, after: { document: { pages: { [this.app.currentPageId]: { shapes: { [e14.id]: a11 }, bindings: p11 } }, pageStates: { [this.app.currentPageId]: { selectedIds: [e14.id], bindingId: void 0, hoveredId: void 0, editingId: void 0 } } } } };
    });
    d8(this, "findBindingPoint", (e14, t13, n11, o11, i11, a11, l11, r12) => {
      let p11 = x7.getShapeUtil(t13.type).getBindingPoint(t13, e14, i11, a11, l11, r12);
      if (!!p11)
        return { id: o11, type: "arrow", fromId: e14.id, toId: t13.id, handleId: n11, point: e.toFixed(p11.point), distance: p11.distance };
    });
    var c10, p10, u10;
    this.isCreate = o10;
    let { currentPageId: i10 } = e13.state.appState, a10 = e13.state.document.pages[i10];
    this.handleId = n10, this.initialShape = dt(a10.shapes[t12]), this.bindableShapeIds = x7.getBindableShapeIds(e13.state).filter((h10) => !(h10 === this.initialShape.id || h10 === this.initialShape.parentId));
    let l10 = (c10 = this.initialShape.handles[n10 === "start" ? "end" : "start"]) == null ? void 0 : c10.bindingId;
    if (l10) {
      let h10 = (p10 = a10.bindings[l10]) == null ? void 0 : p10.toId;
      h10 && (this.bindableShapeIds = this.bindableShapeIds.filter((g10) => g10 !== h10));
    }
    let { originPoint: r11 } = this.app;
    if (this.isCreate)
      this.startBindingShapeId = (u10 = this.bindableShapeIds.map((h10) => a10.shapes[h10]).filter((h10) => !h10.isLocked && Utils.pointInBounds(r11, x7.getShapeUtil(h10).getBounds(h10))).sort((h10, g10) => g10.childIndex - h10.childIndex)[0]) == null ? void 0 : u10.id, this.startBindingShapeId && this.bindableShapeIds.splice(this.bindableShapeIds.indexOf(this.startBindingShapeId), 1);
    else {
      let h10 = this.initialShape.handles[this.handleId].bindingId;
      h10 ? this.initialBinding = a10.bindings[h10] : this.initialShape.handles[this.handleId].bindingId = void 0;
    }
  }
};
var ki = class extends Ae {
  constructor(e13) {
    super(e13);
    d8(this, "type", "brush");
    d8(this, "performanceMode");
    d8(this, "status", "brushing");
    d8(this, "initialSelectedIds");
    d8(this, "shapesToTest");
    d8(this, "start", () => {
    });
    d8(this, "update", () => {
      let { initialSelectedIds: e14, shapesToTest: t13, app: { metaKey: n10, settings: o10, originPoint: i10, currentPoint: a10 } } = this, l10 = Utils.getBoundsFromPoints([i10, a10]), r11 = o10.isCadSelectMode ? !n10 && i10[0] < a10[0] : n10, c10 = /* @__PURE__ */ new Set(), p10 = new Set(e14);
      t13.forEach(({ id: m10, selectId: T10 }) => {
        let y10 = this.app.getShape(m10);
        if (!c10.has(T10)) {
          let b10 = this.app.getShapeUtil(y10);
          (r11 ? Utils.boundsContain(l10, b10.getBounds(y10)) : b10.hitTestBounds(y10, l10)) ? (c10.add(T10), p10.has(T10) || p10.add(T10)) : p10.has(T10) && p10.delete(T10);
        }
      });
      let u10 = this.app.selectedIds, h10 = p10.size !== u10.length || u10.some((m10) => !p10.has(m10)), g10 = h10 ? Array.from(p10.values()) : u10;
      return h10 ? { appState: { selectByContain: r11 }, document: { pageStates: { [this.app.currentPageId]: { brush: l10, selectedIds: g10 } } } } : { document: { pageStates: { [this.app.currentPageId]: { brush: l10 } } } };
    });
    d8(this, "cancel", () => ({ appState: { selectByContain: false }, document: { pageStates: { [this.app.currentPageId]: { brush: null, selectedIds: Array.from(this.initialSelectedIds.values()) } } } }));
    d8(this, "complete", () => ({ appState: { selectByContain: false }, document: { pageStates: { [this.app.currentPageId]: { brush: null, selectedIds: [...this.app.selectedIds] } } } }));
    let { currentPageId: t12 } = e13;
    this.initialSelectedIds = new Set(this.app.selectedIds), this.shapesToTest = this.app.shapes.filter((n10) => !(n10.isLocked || n10.isHidden || n10.parentId !== t12 || this.initialSelectedIds.has(n10.id) || this.initialSelectedIds.has(n10.parentId))).map((n10) => ({ id: n10.id, bounds: this.app.getShapeUtil(n10).getBounds(n10), selectId: n10.id })), this.update();
  }
};
var Di = class extends Ae {
  constructor(e13, t12) {
    super(e13);
    d8(this, "type", "draw");
    d8(this, "performanceMode");
    d8(this, "status", "creating");
    d8(this, "topLeft");
    d8(this, "points");
    d8(this, "initialShape");
    d8(this, "lastAdjustedPoint");
    d8(this, "shiftedPoints", []);
    d8(this, "shapeId");
    d8(this, "isLocked");
    d8(this, "isExtending");
    d8(this, "lockedDirection");
    d8(this, "start", () => {
      var i11;
      let e14 = this.app.originPoint, t13 = [0, 0, (i11 = e14[2]) != null ? i11 : 0.5];
      this.points.push(t13);
      let n11 = [Math.min(this.topLeft[0], e14[0]), Math.min(this.topLeft[1], e14[1])], o11 = e.sub(n11, e14);
      return this.topLeft = n11, this.shiftedPoints = this.points.map((a11) => e.toFixed(e.sub(a11, o11)).concat(a11[2])), { document: { pages: { [this.app.currentPageId]: { shapes: { [this.shapeId]: { point: this.topLeft, points: this.shiftedPoints } } } }, pageStates: { [this.app.currentPageId]: { selectedIds: [this.shapeId] } } } };
    });
    d8(this, "update", () => {
      let { shapeId: e14 } = this, { currentPoint: t13, originPoint: n11, shiftKey: o11 } = this.app;
      if (!this.lockedDirection && this.points.length > 1) {
        let a11 = Utils.getBoundsFromPoints(this.points);
        (a11.width > 8 || a11.height > 8) && (this.lockedDirection = a11.width > a11.height ? "horizontal" : "vertical");
      }
      if (o11) {
        if (!this.isLocked && this.points.length > 2) {
          if (!this.lockedDirection) {
            let l11 = Utils.getBoundsFromPoints(this.points);
            this.lockedDirection = l11.width > l11.height ? "horizontal" : "vertical";
          }
          this.isLocked = true;
          let a11 = [...this.lastAdjustedPoint];
          this.lockedDirection === "vertical" ? a11[0] = 0 : a11[1] = 0, this.points.push(a11.concat(t13[2]));
        }
      } else
        this.isLocked && (this.isLocked = false);
      this.isLocked && (this.lockedDirection === "vertical" ? t13[0] = n11[0] : t13[1] = n11[1]);
      let i11 = this.addPoint(t13);
      if (!!i11)
        return { document: { pages: { [this.app.currentPageId]: { shapes: { [e14]: i11 } } }, pageStates: { [this.app.currentPageId]: { selectedIds: [e14] } } } };
    });
    d8(this, "cancel", () => {
      let { shapeId: e14 } = this, t13 = this.app.currentPageId;
      return { document: { pages: { [t13]: { shapes: { [e14]: this.isExtending ? this.initialShape : void 0 } } }, pageStates: { [t13]: { selectedIds: [] } } } };
    });
    d8(this, "complete", () => {
      let { shapeId: e14 } = this, t13 = this.app.currentPageId, n11 = this.app.getShape(e14);
      return { id: "create_draw", before: { document: { pages: { [t13]: { shapes: { [e14]: this.isExtending ? this.initialShape : void 0 } } }, pageStates: { [t13]: { selectedIds: [] } } } }, after: { document: { pages: { [t13]: { shapes: { [e14]: C5(f8({}, n11), { point: e.toFixed(n11.point), points: n11.points.map((o11) => e.toFixed(o11)), isComplete: true }) } } }, pageStates: { [this.app.currentPageId]: { selectedIds: [] } } } } };
    });
    d8(this, "addPoint", (e14) => {
      let { originPoint: t13 } = this.app, n11 = e.toFixed(e.sub(e14, t13)).concat(e14[2]);
      if (e.isEqual(this.lastAdjustedPoint, n11))
        return;
      this.points.push(n11), this.lastAdjustedPoint = n11;
      let o11 = [...this.topLeft], i11 = [Math.min(this.topLeft[0], e14[0]), Math.min(this.topLeft[1], e14[1])], a11 = e.sub(i11, t13), l11;
      return o11[0] !== i11[0] || o11[1] !== i11[1] ? (this.topLeft = i11, l11 = this.points.map((r12) => e.toFixed(e.sub(r12, a11)).concat(r12[2]))) : l11 = [...this.shiftedPoints, e.sub(n11, a11).concat(n11[2])], this.shiftedPoints = l11, { point: this.topLeft, points: l11 };
    });
    var r11;
    let { originPoint: n10 } = this.app;
    this.shapeId = t12, this.initialShape = this.app.getShape(t12), this.topLeft = [...this.initialShape.point];
    let o10 = [0, 0, (r11 = n10[2]) != null ? r11 : 0.5], i10 = e.sub(n10, this.topLeft), a10 = this.initialShape.points.map((c10) => e.sub(c10, i10).concat(c10[2]));
    this.isExtending = a10.length > 0;
    let l10 = [];
    if (this.isExtending) {
      let c10 = a10[a10.length - 1];
      if (c10) {
        l10.push(c10, c10);
        let p10 = Math.floor(e.dist(c10, o10) / 16);
        if (p10 > 1)
          for (let u10 = 0; u10 < p10; u10++) {
            let h10 = u10 / (p10 - 1);
            l10.push(e.lrp(c10, o10, h10).concat(c10[2]));
          }
        else
          l10.push(o10, o10);
      }
    } else
      l10.push(o10);
    this.points = [...a10, ...l10], this.shiftedPoints = this.points.map((c10) => e.add(c10, i10).concat(c10[2])), this.lastAdjustedPoint = this.points[this.points.length - 1];
  }
};
var Bi = class extends Ae {
  constructor(e13, t12, n10, o10 = "move_handle") {
    super(e13);
    d8(this, "type", "handle");
    d8(this, "performanceMode");
    d8(this, "status", "translatingHandle");
    d8(this, "commandId");
    d8(this, "topLeft");
    d8(this, "shiftKey", false);
    d8(this, "initialShape");
    d8(this, "handleId");
    d8(this, "start", () => {
    });
    d8(this, "update", () => {
      var p10, u10;
      let { initialShape: e14, app: { currentPageId: t13, currentPoint: n11 } } = this, o11 = this.app.getShape(e14.id);
      if (o11.isLocked)
        return;
      let i11 = o11.handles, a10 = this.handleId, l10 = e.sub(n11, i11[a10].point), r11 = { [a10]: C5(f8({}, i11[a10]), { point: e.sub(e.add(i11[a10].point, l10), o11.point) }) }, c10 = (u10 = (p10 = x7.getShapeUtil(o11)).onHandleChange) == null ? void 0 : u10.call(p10, o11, r11);
      if (!!c10)
        return { document: { pages: { [t13]: { shapes: { [o11.id]: c10 } } } } };
    });
    d8(this, "cancel", () => {
      let { initialShape: e14, app: { currentPageId: t13 } } = this;
      return { document: { pages: { [t13]: { shapes: { [e14.id]: e14 } } } } };
    });
    d8(this, "complete", () => {
      let { initialShape: e14, app: { currentPageId: t13 } } = this;
      return { id: this.commandId, before: { document: { pages: { [t13]: { shapes: { [e14.id]: e14 } } } } }, after: { document: { pages: { [t13]: { shapes: { [e14.id]: x7.onSessionComplete(this.app.getShape(this.initialShape.id)) } } } } } };
    });
    let { originPoint: i10 } = e13;
    this.topLeft = [...i10], this.handleId = n10, this.initialShape = this.app.getShape(t12), this.commandId = o10;
  }
};
var Mi = class extends Ae {
  constructor(e13) {
    super(e13);
    d8(this, "type", "rotate");
    d8(this, "status", "transforming");
    d8(this, "performanceMode");
    d8(this, "delta", [0, 0]);
    d8(this, "commonBoundsCenter");
    d8(this, "initialAngle");
    d8(this, "initialShapes");
    d8(this, "changes", {});
    d8(this, "start", () => {
    });
    d8(this, "update", () => {
      let { commonBoundsCenter: e14, initialShapes: t13, app: { currentPageId: n11, currentPoint: o11, shiftKey: i11 } } = this, a10 = {}, l10 = e.angle(e14, o11) - this.initialAngle;
      return i11 && (l10 = Utils.snapAngleToSegments(l10, 24)), t13.forEach(({ center: r11, shape: c10 }) => {
        let { rotation: p10 = 0 } = c10, u10 = 0;
        i11 && (u10 = Utils.snapAngleToSegments(p10, 24) - p10);
        let h10 = x7.getRotatedShapeMutation(c10, r11, e14, i11 ? l10 + u10 : l10);
        h10 && (a10[c10.id] = h10);
      }), this.changes = a10, { document: { pages: { [n11]: { shapes: a10 } } } };
    });
    d8(this, "cancel", () => {
      let { initialShapes: e14, app: { currentPageId: t13 } } = this, n11 = {};
      return e14.forEach(({ shape: o11 }) => n11[o11.id] = o11), { document: { pages: { [t13]: { shapes: n11 } } } };
    });
    d8(this, "complete", () => {
      let { initialShapes: e14, app: { currentPageId: t13 } } = this, n11 = {}, o11 = this.changes;
      return e14.forEach(({ shape: { id: i11, point: a10, rotation: l10, handles: r11 } }) => {
        n11[i11] = { point: a10, rotation: l10, handles: r11 };
      }), { id: "rotate", before: { document: { pages: { [t13]: { shapes: n11 } } } }, after: { document: { pages: { [t13]: { shapes: o11 } } } } };
    });
    let { app: { currentPageId: t12, pageState: n10, originPoint: o10 } } = this, i10 = x7.getSelectedBranchSnapshot(e13.state, t12).filter((a10) => !a10.isLocked);
    if (i10.length === 0)
      throw Error("No selected shapes!");
    if (e13.rotationInfo.selectedIds === n10.selectedIds) {
      if (e13.rotationInfo.center === void 0)
        throw Error("We should have a center for rotation!");
      this.commonBoundsCenter = e13.rotationInfo.center;
    } else
      this.commonBoundsCenter = Utils.getBoundsCenter(Utils.getCommonBounds(i10.map(x7.getBounds))), e13.rotationInfo.selectedIds = n10.selectedIds, e13.rotationInfo.center = this.commonBoundsCenter;
    this.initialShapes = i10.filter((a10) => a10.children === void 0).map((a10) => ({ shape: a10, center: this.app.getShapeUtil(a10).getCenter(a10) })), this.initialAngle = e.angle(this.commonBoundsCenter, o10);
  }
};
var Ei = class extends Ae {
  constructor(e13, t12 = TLBoundsCorner.BottomRight, n10 = false) {
    super(e13);
    this.transformType = t12;
    this.isCreate = n10;
    d8(this, "type", "transform");
    d8(this, "performanceMode");
    d8(this, "status", "transforming");
    d8(this, "scaleX", 1);
    d8(this, "scaleY", 1);
    d8(this, "initialShapes");
    d8(this, "initialShapeIds");
    d8(this, "initialSelectedIds");
    d8(this, "shapeBounds");
    d8(this, "hasUnlockedShapes");
    d8(this, "isAllAspectRatioLocked");
    d8(this, "initialCommonBounds");
    d8(this, "snapInfo", { state: "empty" });
    d8(this, "prevPoint", [0, 0]);
    d8(this, "speed", 1);
    d8(this, "start", () => {
      this.snapInfo = { state: "ready", bounds: this.app.shapes.filter((e14) => !this.initialShapeIds.includes(e14.id)).map((e14) => Utils.getBoundsWithCenter(x7.getRotatedBounds(e14))) };
    });
    d8(this, "update", () => {
      let { transformType: e14, shapeBounds: t13, initialCommonBounds: n11, isAllAspectRatioLocked: o11, app: { currentPageId: i11, pageState: { camera: a11 }, viewport: l10, currentPoint: r11, previousPoint: c10, originPoint: p10, shiftKey: u10, altKey: h10, metaKey: g10, currentGrid: m10, settings: { isSnapping: T10, showGrid: y10 } } } = this, b10 = {}, S10 = h10 ? e.mul(e.sub(r11, p10), 2) : e.sub(r11, p10), w10 = Utils.getTransformedBoundingBox(n11, e14, S10, 0, u10 || o11);
      h10 && (w10 = f8(f8({}, w10), Utils.centerBounds(w10, Utils.getBoundsCenter(n11)))), y10 && (w10 = f8(f8({}, w10), Utils.snapBoundsToGrid(w10, m10)));
      let B10 = e.dist(r11, c10) - this.speed;
      this.speed = this.speed + B10 * (B10 > 1 ? 0.5 : 0.15);
      let I10 = [];
      if ((T10 && !g10 || !T10 && g10) && this.speed * a11.zoom < 10 && this.snapInfo.state === "ready") {
        let P10 = Utils.getSnapPoints(Utils.getBoundsWithCenter(w10), this.snapInfo.bounds.filter((v10) => Utils.boundsContain(l10, v10) || Utils.boundsCollide(l10, v10)), 5 / a11.zoom);
        P10 && (I10 = P10.snapLines, w10 = Utils.getTransformedBoundingBox(n11, e14, e.sub(S10, P10.offset), 0, u10 || o11));
      }
      return this.scaleX = w10.scaleX, this.scaleY = w10.scaleY, t13.forEach(({ initialShape: P10, initialShapeBounds: v10, transformOrigin: Q }) => {
        let oe2 = Utils.getRelativeTransformedBoundingBox(w10, n11, v10, this.scaleX < 0, this.scaleY < 0);
        y10 && (oe2 = Utils.snapBoundsToGrid(oe2, m10));
        let te = x7.transform(this.app.getShape(P10.id), oe2, { type: this.transformType, initialShape: P10, scaleX: this.scaleX, scaleY: this.scaleY, transformOrigin: Q });
        b10[P10.id] = te;
      }), { appState: { snapLines: I10 }, document: { pages: { [i11]: { shapes: b10 } } } };
    });
    d8(this, "cancel", () => {
      let { shapeBounds: e14, app: { currentPageId: t13 } } = this, n11 = {};
      return this.isCreate ? e14.forEach((o11) => n11[o11.initialShape.id] = void 0) : e14.forEach((o11) => n11[o11.initialShape.id] = o11.initialShape), { appState: { snapLines: [] }, document: { pages: { [t13]: { shapes: n11 } }, pageStates: { [t13]: { selectedIds: this.isCreate ? [] : e14.map((o11) => o11.initialShape.id) } } } };
    });
    d8(this, "complete", () => {
      let { isCreate: e14, shapeBounds: t13, hasUnlockedShapes: n11, app: { currentPageId: o11 } } = this;
      if (!n11)
        return;
      if (this.isCreate && e.dist(this.app.originPoint, this.app.currentPoint) < 2)
        return this.cancel();
      let i11 = {}, a11 = {}, l10, r11;
      return e14 ? (l10 = [], r11 = [], t13.forEach(({ initialShape: c10 }) => {
        i11[c10.id] = void 0, a11[c10.id] = this.app.getShape(c10.id);
      })) : (l10 = this.initialSelectedIds, r11 = this.initialSelectedIds, t13.forEach(({ initialShape: c10 }) => {
        i11[c10.id] = c10, a11[c10.id] = this.app.getShape(c10.id);
      })), { id: "transform", before: { appState: { snapLines: [] }, document: { pages: { [o11]: { shapes: i11 } }, pageStates: { [o11]: { selectedIds: l10, hoveredId: void 0, editingId: void 0 } } } }, after: { appState: { snapLines: [] }, document: { pages: { [o11]: { shapes: a11 } }, pageStates: { [o11]: { selectedIds: r11, hoveredId: void 0, editingId: void 0 } } } } };
    });
    this.initialSelectedIds = [...this.app.selectedIds], this.app.rotationInfo.selectedIds = [...this.initialSelectedIds], this.initialShapes = x7.getSelectedBranchSnapshot(this.app.state, this.app.currentPageId).filter((l10) => !l10.isLocked), this.initialShapeIds = this.initialShapes.map((l10) => l10.id), this.hasUnlockedShapes = this.initialShapes.length > 0, this.isAllAspectRatioLocked = this.initialShapes.every((l10) => l10.isAspectRatioLocked || x7.getShapeUtil(l10).isAspectRatioLocked);
    let o10 = Object.fromEntries(this.initialShapes.map((l10) => [l10.id, x7.getBounds(l10)])), i10 = Object.values(o10);
    this.initialCommonBounds = Utils.getCommonBounds(i10);
    let a10 = Utils.getBoundsFromPoints(i10.map(Utils.getBoundsCenter));
    this.shapeBounds = this.initialShapes.map((l10) => {
      let r11 = o10[l10.id], c10 = Utils.getBoundsCenter(r11), p10 = (c10[0] - a10.minX) / a10.width, u10 = (c10[1] - a10.minY) / a10.height;
      return { initialShape: l10, initialShapeBounds: r11, transformOrigin: [p10, u10] };
    });
  }
};
var Ri = class extends Ae {
  constructor(e13, t12, n10, o10 = false) {
    super(e13);
    d8(this, "type", "transformSingle");
    d8(this, "status", "transforming");
    d8(this, "performanceMode");
    d8(this, "transformType");
    d8(this, "scaleX", 1);
    d8(this, "scaleY", 1);
    d8(this, "isCreate");
    d8(this, "initialShape");
    d8(this, "initialShapeBounds");
    d8(this, "initialCommonBounds");
    d8(this, "snapInfo", { state: "empty" });
    d8(this, "prevPoint", [0, 0]);
    d8(this, "speed", 1);
    d8(this, "start", () => {
      this.snapInfo = { state: "ready", bounds: this.app.shapes.filter((e14) => e14.id !== this.initialShape.id).map((e14) => Utils.getBoundsWithCenter(x7.getRotatedBounds(e14))) };
    });
    d8(this, "update", () => {
      let { transformType: e14, initialShape: t13, initialShapeBounds: n11, app: { settings: { isSnapping: o11, showGrid: i11 }, currentPageId: a10, pageState: { camera: l10 }, viewport: r11, currentPoint: c10, previousPoint: p10, originPoint: u10, currentGrid: h10, shiftKey: g10, altKey: m10, metaKey: T10 } } = this;
      if (t13.isLocked)
        return;
      let y10 = {}, b10 = m10 ? e.mul(e.sub(c10, u10), 2) : e.sub(c10, u10), S10 = this.app.getShape(t13.id), w10 = x7.getShapeUtil(S10), D10 = Utils.getTransformedBoundingBox(n11, e14, b10, S10.rotation, g10 || S10.isAspectRatioLocked || w10.isAspectRatioLocked);
      m10 && (D10 = f8(f8({}, D10), Utils.centerBounds(D10, Utils.getBoundsCenter(n11)))), i11 && (D10 = f8(f8({}, D10), Utils.snapBoundsToGrid(D10, h10)));
      let I10 = e.dist(c10, p10) - this.speed;
      this.speed = this.speed + I10 * (I10 > 1 ? 0.5 : 0.15);
      let P10 = [];
      if ((o11 && !T10 || !o11 && T10) && !t13.rotation && this.speed * l10.zoom < 10 && this.snapInfo.state === "ready") {
        let Q = Utils.getSnapPoints(Utils.getBoundsWithCenter(D10), this.snapInfo.bounds.filter((oe2) => Utils.boundsContain(r11, oe2) || Utils.boundsCollide(r11, oe2)), 5 / l10.zoom);
        Q && (P10 = Q.snapLines, D10 = Utils.getTransformedBoundingBox(n11, e14, e.sub(b10, Q.offset), S10.rotation, g10 || S10.isAspectRatioLocked || w10.isAspectRatioLocked));
      }
      let v10 = x7.getShapeUtil(S10).transformSingle(S10, D10, { initialShape: t13, type: this.transformType, scaleX: D10.scaleX, scaleY: D10.scaleY, transformOrigin: [0.5, 0.5] });
      return v10 && (y10[S10.id] = v10), i11 && v10 && v10.point && (v10.point = e.snap(v10.point, h10)), { appState: { snapLines: P10 }, document: { pages: { [a10]: { shapes: y10 } } } };
    });
    d8(this, "cancel", () => {
      let { initialShape: e14, app: { currentPageId: t13 } } = this, n11 = {};
      return this.isCreate ? n11[e14.id] = void 0 : n11[e14.id] = e14, { appState: { snapLines: [] }, document: { pages: { [t13]: { shapes: n11 } }, pageStates: { [t13]: { selectedIds: this.isCreate ? [] : [e14.id] } } } };
    });
    d8(this, "complete", () => {
      let { initialShape: e14, app: { currentPageId: t13 } } = this;
      if (e14.isLocked)
        return;
      if (this.isCreate && e.dist(this.app.originPoint, this.app.currentPoint) < 2)
        return this.cancel();
      let n11 = {}, o11 = {};
      return n11[e14.id] = this.isCreate ? void 0 : e14, o11[e14.id] = x7.onSessionComplete(this.app.getShape(e14.id)), { id: "transform_single", before: { appState: { snapLines: [] }, document: { pages: { [t13]: { shapes: n11 } }, pageStates: { [t13]: { selectedIds: this.isCreate ? [] : [e14.id], editingId: void 0, hoveredId: void 0 } } } }, after: { appState: { snapLines: [] }, document: { pages: { [t13]: { shapes: o11 } }, pageStates: { [t13]: { selectedIds: [e14.id], editingId: void 0, hoveredId: void 0 } } } } };
    });
    this.isCreate = o10, this.transformType = n10;
    let i10 = this.app.getShape(t12);
    this.initialShape = i10, this.initialShapeBounds = x7.getBounds(i10), this.initialCommonBounds = x7.getRotatedBounds(i10), this.app.rotationInfo.selectedIds = [i10.id];
  }
};
var Li = class extends Ae {
  constructor(e13, t12 = false, n10 = false) {
    super(e13);
    d8(this, "performanceMode");
    d8(this, "type", "translate");
    d8(this, "status", "translating");
    d8(this, "delta", [0, 0]);
    d8(this, "prev", [0, 0]);
    d8(this, "prevPoint", [0, 0]);
    d8(this, "speed", 1);
    d8(this, "cloneInfo", { state: "empty" });
    d8(this, "snapInfo", { state: "empty" });
    d8(this, "snapLines", []);
    d8(this, "isCloning", false);
    d8(this, "isCreate");
    d8(this, "link");
    d8(this, "initialIds");
    d8(this, "hasUnlockedShapes");
    d8(this, "initialSelectedIds");
    d8(this, "initialCommonBounds");
    d8(this, "initialShapes");
    d8(this, "initialParentChildren");
    d8(this, "bindingsToDelete");
    d8(this, "start", () => {
      let { bindingsToDelete: e14, initialIds: t13, app: { currentPageId: n11, page: o11 } } = this, i11 = [], a11 = [];
      if (Object.values(o11.shapes).forEach((r12) => {
        let c10 = Utils.getBoundsWithCenter(x7.getRotatedBounds(r12));
        i11.push(c10), t13.has(r12.id) || a11.push(c10);
      }), this.snapInfo = { state: "ready", bounds: i11, others: a11 }, e14.length === 0)
        return;
      let l11 = {};
      return e14.forEach((r12) => l11[r12.id] = void 0), { document: { pages: { [n11]: { bindings: l11 } } } };
    });
    d8(this, "update", () => {
      let { initialParentChildren: e14, initialShapes: t13, initialCommonBounds: n11, bindingsToDelete: o11, app: { pageState: { camera: i11 }, settings: { isSnapping: a11, showGrid: l11 }, currentPageId: r12, viewport: c10, selectedIds: p10, currentPoint: u10, previousPoint: h10, originPoint: g10, altKey: m10, shiftKey: T10, metaKey: y10, currentGrid: b10 } } = this, S10 = {}, w10 = {}, D10 = {}, B10 = e.sub(u10, g10), I10 = false;
      this.isCreate || (m10 && !this.isCloning ? (this.isCloning = true, I10 = true) : !m10 && this.isCloning && (this.isCloning = false, I10 = true)), T10 && (Math.abs(B10[0]) < Math.abs(B10[1]) ? B10[0] = 0 : B10[1] = 0);
      let v10 = e.dist(u10, h10) - this.speed;
      if (this.speed = this.speed + v10 * (v10 > 1 ? 0.5 : 0.15), this.snapLines = [], (a11 && !y10 || !a11 && y10) && this.speed * i11.zoom < 10 && this.snapInfo.state === "ready") {
        let Q = Utils.getSnapPoints(Utils.getBoundsWithCenter(l11 ? Utils.snapBoundsToGrid(Utils.translateBounds(n11, B10), b10) : Utils.translateBounds(n11, B10)), (this.isCloning ? this.snapInfo.bounds : this.snapInfo.others).filter((oe2) => Utils.boundsContain(c10, oe2) || Utils.boundsCollide(c10, oe2)), 5 / i11.zoom);
        Q && (this.snapLines = Q.snapLines, B10 = e.sub(B10, Q.offset));
      }
      if (this.prev = B10, this.isCloning)
        if (I10) {
          if (this.cloneInfo.state === "empty" && this.createCloneInfo(), this.cloneInfo.state === "empty")
            throw Error;
          let { clones: Q, clonedBindings: oe2 } = this.cloneInfo;
          this.isCloning = true, o11.forEach((te) => S10[te.id] = te), t13.forEach((te) => w10[te.id] = { point: te.point }), Q.forEach((te) => {
            var ke;
            if (w10[te.id] = f8({}, te), te.parentId !== r12 && !p10.includes(te.parentId)) {
              let be2 = ((ke = w10[te.parentId]) == null ? void 0 : ke.children) || e14[te.parentId];
              be2.includes(te.id) || (w10[te.parentId] = C5(f8({}, w10[te.parentId]), { children: [...be2, te.id] }));
            }
          });
          for (let te of oe2)
            S10[te.id] = te;
          D10.selectedIds = Q.map((te) => te.id), Q.forEach((te) => {
            w10[te.id] = C5(f8({}, te), { point: l11 ? e.snap(e.toFixed(e.add(te.point, B10)), b10) : e.toFixed(e.add(te.point, B10)) });
          });
        } else {
          if (this.cloneInfo.state === "empty")
            throw Error;
          let { clones: Q } = this.cloneInfo;
          Q.forEach((oe2) => {
            w10[oe2.id] = { point: l11 ? e.snap(e.toFixed(e.add(oe2.point, B10)), b10) : e.toFixed(e.add(oe2.point, B10)) };
          });
        }
      else if (I10) {
        if (this.cloneInfo.state === "empty")
          throw Error;
        let { clones: Q, clonedBindings: oe2 } = this.cloneInfo;
        this.isCloning = false, o11.forEach((te) => S10[te.id] = void 0), Q.forEach((te) => {
          te.parentId !== r12 && (w10[te.parentId] = C5(f8({}, w10[te.parentId]), { children: e14[te.parentId] }));
        }), Q.forEach((te) => w10[te.id] = void 0), t13.forEach((te) => {
          w10[te.id] = { point: l11 ? e.snap(e.toFixed(e.add(te.point, B10)), b10) : e.toFixed(e.add(te.point, B10)) };
        });
        for (let te of oe2)
          S10[te.id] = void 0;
        D10.selectedIds = t13.map((te) => te.id);
      } else
        t13.forEach((Q) => {
          w10[Q.id] = { point: l11 ? e.snap(e.toFixed(e.add(Q.point, B10)), b10) : e.toFixed(e.add(Q.point, B10)) };
        });
      return { appState: { snapLines: this.snapLines }, document: { pages: { [r12]: { shapes: w10, bindings: S10 } }, pageStates: { [r12]: D10 } } };
    });
    d8(this, "cancel", () => {
      let { initialShapes: e14, initialSelectedIds: t13, bindingsToDelete: n11, app: { currentPageId: o11 } } = this, i11 = {}, a11 = {}, l11 = { editingId: void 0, hoveredId: void 0 };
      if (n11.forEach((r12) => i11[r12.id] = r12), this.isCreate ? (e14.forEach(({ id: r12 }) => a11[r12] = void 0), l11.selectedIds = []) : (e14.forEach(({ id: r12, point: c10 }) => a11[r12] = C5(f8({}, a11[r12]), { point: c10 })), l11.selectedIds = t13), this.cloneInfo.state === "ready") {
        let { clones: r12, clonedBindings: c10 } = this.cloneInfo;
        r12.forEach((p10) => a11[p10.id] = void 0), c10.forEach((p10) => i11[p10.id] = void 0);
      }
      return { appState: { snapLines: [] }, document: { pages: { [o11]: { shapes: a11, bindings: i11 } }, pageStates: { [o11]: l11 } } };
    });
    d8(this, "complete", () => {
      let { initialShapes: e14, initialParentChildren: t13, bindingsToDelete: n11, app: { currentPageId: o11 } } = this, i11 = {}, a11 = {}, l11 = {}, r12 = {};
      if (this.isCloning) {
        if (this.cloneInfo.state === "empty" && this.createCloneInfo(), this.cloneInfo.state !== "ready")
          throw Error;
        let { clones: c10, clonedBindings: p10 } = this.cloneInfo;
        c10.forEach((u10) => {
          a11[u10.id] = void 0, r12[u10.id] = this.app.getShape(u10.id), u10.parentId !== o11 && (a11[u10.parentId] = C5(f8({}, a11[u10.parentId]), { children: t13[u10.parentId] }), r12[u10.parentId] = C5(f8({}, r12[u10.parentId]), { children: this.app.getShape(u10.parentId).children }));
        }), p10.forEach((u10) => {
          i11[u10.id] = void 0, l11[u10.id] = this.app.getBinding(u10.id);
        });
      } else
        e14.forEach((c10) => {
          a11[c10.id] = this.isCreate ? void 0 : C5(f8({}, a11[c10.id]), { point: c10.point }), r12[c10.id] = f8(f8({}, r12[c10.id]), this.isCreate ? this.app.getShape(c10.id) : { point: this.app.getShape(c10.id).point });
        });
      return n11.forEach((c10) => {
        i11[c10.id] = c10;
        for (let p10 of [c10.toId, c10.fromId]) {
          let u10 = this.app.getShape(p10);
          !u10.handles || Object.values(u10.handles).filter((h10) => h10.bindingId === c10.id).forEach((h10) => {
            a11[p10] = C5(f8({}, a11[p10]), { handles: {} }), r12[p10] = C5(f8({}, r12[p10]), { handles: {} }), a11[p10].handles[h10.id] = { bindingId: c10.id }, r12[p10].handles[h10.id] = { bindingId: void 0 };
          });
        }
      }), { id: "translate", before: { appState: { snapLines: [] }, document: { pages: { [o11]: { shapes: a11, bindings: i11 } }, pageStates: { [o11]: { selectedIds: this.isCreate ? [] : [...this.initialSelectedIds] } } } }, after: { appState: { snapLines: [] }, document: { pages: { [o11]: { shapes: r12, bindings: l11 } }, pageStates: { [o11]: { selectedIds: [...this.app.selectedIds] } } } } };
    });
    d8(this, "createCloneInfo", () => {
      let { initialShapes: e14, initialParentChildren: t13, app: { selectedIds: n11, currentPageId: o11, page: i11 } } = this, a11 = {}, l11 = {}, r12 = [], c10 = [];
      e14.forEach((u10) => {
        let h10 = Utils.uniqueId();
        t13[h10] = t13[u10.id], a11[u10.id] = h10;
        let g10 = C5(f8({}, Utils.deepClone(u10)), { id: h10, parentId: u10.parentId, childIndex: x7.getChildIndexAbove(this.app.state, u10.id, o11) });
        if (g10.type === "video") {
          let m10 = document.getElementById(u10.id + "_video");
          m10 && (g10.currentTime = (m10.currentTime + 16) % m10.duration);
        }
        c10.push(g10);
      }), c10.forEach((u10) => {
        u10.children !== void 0 && (u10.children = u10.children.map((h10) => a11[h10]));
      }), c10.forEach((u10) => {
        n11.includes(u10.parentId) && (u10.parentId = a11[u10.parentId]);
      });
      let p10 = new Set(Object.keys(a11));
      Object.values(i11.bindings).filter((u10) => p10.has(u10.fromId) || p10.has(u10.toId)).forEach((u10) => {
        if (p10.has(u10.fromId) && p10.has(u10.toId)) {
          let h10 = Utils.uniqueId(), g10 = C5(f8({}, Utils.deepClone(u10)), { id: h10, fromId: a11[u10.fromId] || u10.fromId, toId: a11[u10.toId] || u10.toId });
          l11[u10.id] = h10, r12.push(g10);
        }
      }), c10.forEach((u10) => {
        if (u10.handles && u10.handles)
          for (let h10 in u10.handles) {
            let g10 = u10.handles[h10];
            g10.bindingId = g10.bindingId ? l11[g10.bindingId] : void 0;
          }
      }), c10.forEach((u10) => {
        if (i11.shapes[u10.id])
          throw Error("uh oh, we didn't clone correctly");
      }), this.cloneInfo = { state: "ready", clones: c10, cloneMap: a11, clonedBindings: r12 };
    });
    this.isCreate = t12, this.link = n10;
    let { currentPageId: o10, selectedIds: i10, page: a10 } = this.app;
    this.initialSelectedIds = [...i10];
    let l10 = (n10 ? x7.getLinkedShapeIds(this.app.state, o10, n10, false) : i10).map((c10) => this.app.getShape(c10)).filter((c10) => !c10.isLocked), r11 = new Set(l10.map((c10) => c10.id));
    this.hasUnlockedShapes = l10.length > 0, this.initialShapes = Array.from(new Set(l10.filter((c10) => !r11.has(c10.parentId)).flatMap((c10) => c10.children ? [c10, ...c10.children.map((p10) => this.app.getShape(p10))] : [c10])).values()), this.initialIds = new Set(this.initialShapes.map((c10) => c10.id)), this.bindingsToDelete = [], Object.values(a10.bindings).filter((c10) => this.initialIds.has(c10.fromId) || this.initialIds.has(c10.toId)).forEach((c10) => {
      this.initialIds.has(c10.fromId) && (this.initialIds.has(c10.toId) || this.bindingsToDelete.push(c10));
    }), this.initialParentChildren = {}, this.initialShapes.map((c10) => c10.parentId).filter((c10) => c10 !== a10.id).forEach((c10) => {
      this.initialParentChildren[c10] = this.app.getShape(c10).children;
    }), this.initialCommonBounds = Utils.getCommonBounds(this.initialShapes.map(x7.getRotatedBounds)), this.app.rotationInfo.selectedIds = [...this.app.selectedIds];
  }
};
var Ai = class extends Ae {
  constructor(e13) {
    super(e13);
    d8(this, "type", "draw");
    d8(this, "performanceMode");
    d8(this, "status", "creating");
    d8(this, "isLocked");
    d8(this, "lockedDirection");
    d8(this, "erasedShapes", /* @__PURE__ */ new Set());
    d8(this, "erasedBindings", /* @__PURE__ */ new Set());
    d8(this, "initialSelectedShapes");
    d8(this, "erasableShapes");
    d8(this, "prevPoint");
    d8(this, "prevEraseShapesSize", 0);
    d8(this, "interval");
    d8(this, "timestamp1", 0);
    d8(this, "timestamp2", 0);
    d8(this, "prevErasePoint", []);
    d8(this, "loop", () => {
      let e14 = Date.now(), t12 = e14 - this.timestamp1, n10 = e14 - this.timestamp2, { eraseLine: o10 } = this.app.appState, i10 = [...o10], a10 = false;
      t12 > 16 && this.prevErasePoint !== this.prevPoint && (a10 = true, i10 = [...o10, this.prevPoint], this.prevErasePoint = this.prevPoint), n10 > 32 && i10.length > 1 && (a10 = true, i10.splice(0, Math.ceil(i10.length * 0.1)), this.timestamp2 = e14), a10 && this.app.patchState({ appState: { eraseLine: i10 } }, "eraseline"), this.interval = requestAnimationFrame(this.loop);
    });
    d8(this, "start", () => {
    });
    d8(this, "update", () => {
      let { page: e14, shiftKey: t12, originPoint: n10, currentPoint: o10, zoom: i10 } = this.app;
      if (t12) {
        if (!this.isLocked && e.dist(n10, o10) > 4 / i10) {
          if (!this.lockedDirection) {
            let c10 = e.sub(o10, n10);
            this.lockedDirection = c10[0] > c10[1] ? "horizontal" : "vertical";
          }
          this.isLocked = true;
        }
      } else
        this.isLocked && (this.isLocked = false);
      this.isLocked && (this.lockedDirection === "vertical" ? o10[0] = n10[0] : o10[1] = n10[1]);
      let a10 = e.toFixed(e.add(n10, e.sub(o10, n10))), l10 = /* @__PURE__ */ new Set([]);
      this.erasableShapes.forEach((c10) => {
        if (!this.erasedShapes.has(c10) && this.app.getShapeUtil(c10).hitTestLineSegment(c10, this.prevPoint, a10) && (this.erasedShapes.add(c10), l10.add(c10.id), c10.children !== void 0))
          for (let p10 of c10.children)
            this.erasedShapes.add(this.app.getShape(p10)), l10.add(p10);
      }), Object.values(e14.bindings).forEach((c10) => {
        for (let p10 of [c10.toId, c10.fromId])
          l10.has(p10) && this.erasedBindings.add(c10);
      }), this.erasedShapes.forEach((c10) => {
        this.app.getShape(c10.id) || (this.erasedShapes.delete(c10), this.erasableShapes.delete(c10), l10.delete(c10.id));
      });
      let r11 = Array.from(this.erasedShapes.values());
      if (this.prevPoint = a10, r11.length !== this.prevEraseShapesSize)
        return this.prevEraseShapesSize = r11.length, { document: { pages: { [e14.id]: { shapes: Object.fromEntries(r11.map((c10) => [c10.id, { isGhost: true }])) } } } };
    });
    d8(this, "cancel", () => {
      let { page: e14 } = this.app;
      cancelAnimationFrame(this.interval), this.erasedShapes.forEach((n10) => {
        this.app.getShape(n10.id) || (this.erasedShapes.delete(n10), this.erasableShapes.delete(n10));
      });
      let t12 = Array.from(this.erasedShapes.values());
      return { document: { pages: { [e14.id]: { shapes: Object.fromEntries(t12.map((n10) => [n10.id, { isGhost: false }])) } }, pageStates: { [e14.id]: { selectedIds: this.initialSelectedShapes.map((n10) => n10.id) } } }, appState: { eraseLine: [] } };
    });
    d8(this, "complete", () => {
      let { page: e14 } = this.app;
      cancelAnimationFrame(this.interval), this.erasedShapes.forEach((r11) => {
        this.app.getShape(r11.id) || (this.erasedShapes.delete(r11), this.erasableShapes.delete(r11));
      }), this.erasedBindings.forEach((r11) => {
        this.app.getBinding(r11.id) || this.erasedBindings.delete(r11);
      });
      let t12 = Array.from(this.erasedShapes.values()), n10 = Array.from(this.erasedBindings.values()), o10 = t12.map((r11) => r11.id), i10 = n10.map((r11) => r11.id), a10 = { shapes: Object.fromEntries(t12.map((r11) => [r11.id, r11])), bindings: Object.fromEntries(n10.map((r11) => [r11.id, r11])) }, l10 = { shapes: Object.fromEntries(t12.map((r11) => [r11.id, void 0])), bindings: Object.fromEntries(n10.map((r11) => [r11.id, void 0])) };
      return this.app.shapes.forEach((r11) => {
        r11.handles && !l10.shapes[r11.id] && Object.values(r11.handles).forEach((c10) => {
          var p10, u10;
          c10.bindingId && i10.includes(c10.bindingId) && (a10.shapes[r11.id] = C5(f8({}, a10.shapes[r11.id]), { handles: C5(f8({}, (p10 = a10.shapes[r11.id]) == null ? void 0 : p10.handles), { [c10.id]: c10 }) }), o10.includes(r11.id) || (l10.shapes[r11.id] = C5(f8({}, l10.shapes[r11.id]), { handles: C5(f8({}, (u10 = l10.shapes[r11.id]) == null ? void 0 : u10.handles), { [c10.id]: C5(f8({}, c10), { bindingId: void 0 }) }) })));
        });
      }), { id: "erase", before: { document: { pages: { [e14.id]: a10 }, pageStates: { [e14.id]: { selectedIds: this.initialSelectedShapes.filter((r11) => !!this.app.getShape(r11.id)).map((r11) => r11.id) } } }, appState: { eraseLine: [] } }, after: { document: { pages: { [e14.id]: l10 }, pageStates: { [e14.id]: { selectedIds: this.initialSelectedShapes.filter((r11) => !!this.app.getShape(r11.id)).filter((r11) => !o10.includes(r11.id)).map((r11) => r11.id) } } }, appState: { eraseLine: [] } } };
    });
    this.prevPoint = [...e13.originPoint], this.initialSelectedShapes = this.app.selectedIds.map((t12) => this.app.getShape(t12)), this.erasableShapes = new Set(this.app.shapes.filter((t12) => !t12.isLocked)), this.interval = this.loop();
  }
};
var Hi = class extends Ae {
  constructor(e13, t12) {
    super(e13);
    d8(this, "type", "grid");
    d8(this, "performanceMode");
    d8(this, "status", "translating");
    d8(this, "shape");
    d8(this, "bounds");
    d8(this, "initialSelectedIds");
    d8(this, "initialSiblings");
    d8(this, "grid", {});
    d8(this, "columns", 1);
    d8(this, "rows", 1);
    d8(this, "isCopying", false);
    d8(this, "start", () => {
    });
    d8(this, "update", () => {
      let { currentPageId: e14, altKey: t13, shiftKey: n11, currentPoint: o10 } = this.app, i10 = {}, a10 = {}, l10 = Utils.getBoundsCenter(this.bounds), r11 = e.sub(o10, l10);
      n11 && (Math.abs(r11[0]) < Math.abs(r11[1]) ? r11[0] = 0 : r11[1] = 0);
      let c10 = this.bounds.width + 32, p10 = this.bounds.height + 32, u10 = Math.ceil(r11[0] / c10), h10 = Math.ceil(r11[1] / p10), g10 = Math.min(u10, 0), m10 = Math.min(h10, 0), T10 = Math.max(u10, 1), y10 = Math.max(h10, 1), b10 = /* @__PURE__ */ new Set(), S10 = t13;
      S10 !== this.isCopying && (Object.values(this.grid).filter((w10) => w10 !== this.shape.id).forEach((w10) => i10[w10] = void 0), this.grid = { "0_0": this.shape.id }, this.isCopying = S10);
      for (let w10 = g10; w10 < T10; w10++)
        for (let D10 = m10; D10 < y10; D10++) {
          let B10 = `${w10}_${D10}`;
          if (b10.add(B10), this.grid[B10] || w10 === 0 && D10 === 0)
            continue;
          let I10 = this.getClone(e.add(this.shape.point, [w10 * c10, D10 * p10]), S10);
          i10[I10.id] = I10, this.grid[B10] = I10.id;
        }
      if (Object.entries(this.grid).forEach(([w10, D10]) => {
        b10.has(w10) || (i10[D10] = void 0, delete this.grid[w10]);
      }), Object.values(i10).length !== 0)
        return this.initialSiblings && (i10[this.shape.parentId] = { children: [...this.initialSiblings, ...Object.values(this.grid)] }), { document: { pages: { [e14]: { shapes: i10 } }, pageStates: { [e14]: a10 } } };
    });
    d8(this, "cancel", () => {
      let { currentPageId: e14 } = this.app, t13 = {};
      return Object.values(this.grid).forEach((n11) => {
        t13[n11] = void 0;
      }), t13[this.shape.id] = C5(f8({}, t13[this.shape.id]), { point: this.shape.point }), this.initialSiblings && (t13[this.shape.parentId] = { children: [...this.initialSiblings, this.shape.id] }), { document: { pages: { [e14]: { shapes: t13 } }, pageStates: { [e14]: { selectedIds: [this.shape.id] } } } };
    });
    d8(this, "complete", () => {
      let { currentPageId: e14 } = this.app, t13 = {}, n11 = {}, o10 = [];
      if (Object.values(this.grid).forEach((i10) => {
        t13[i10] = void 0, n11[i10] = this.app.getShape(i10), o10.push(i10);
      }), t13[this.shape.id] = this.shape, this.initialSiblings && (t13[this.shape.parentId] = { children: [...this.initialSiblings, this.shape.id] }, n11[this.shape.parentId] = { children: [...this.initialSiblings, ...Object.values(this.grid)] }), o10.length !== 1)
        return { id: "grid", before: { document: { pages: { [e14]: { shapes: t13 } }, pageStates: { [e14]: { selectedIds: [], hoveredId: void 0 } } } }, after: { document: { pages: { [e14]: { shapes: n11 } }, pageStates: { [e14]: { selectedIds: o10, hoveredId: void 0 } } } } };
    });
    d8(this, "getClone", (e14, t13) => {
      let n11 = C5(f8({}, this.shape), { id: Utils.uniqueId(), point: e14 });
      return t13 || n11.type === "sticky" && (n11.text = ""), n11;
    });
    var n10;
    this.shape = this.app.getShape(t12), this.grid["0_0"] = this.shape.id, this.bounds = this.app.getShapeBounds(t12), this.initialSelectedIds = [...this.app.selectedIds], this.shape.parentId !== this.app.currentPageId && (this.initialSiblings = (n10 = this.app.getShape(this.shape.parentId).children) == null ? void 0 : n10.filter((o10) => o10 !== this.shape.id));
  }
};
var zi = class extends Ae {
  constructor(e13, t12, n10) {
    super(e13);
    d8(this, "type", "edit");
    d8(this, "performanceMode");
    d8(this, "initialShape");
    d8(this, "initialSelectedIds");
    d8(this, "currentPageId");
    d8(this, "isCreating");
    d8(this, "start", () => {
    });
    d8(this, "update", () => {
    });
    d8(this, "cancel", () => ({ document: { pages: { [this.currentPageId]: { shapes: { [this.initialShape.id]: this.isCreating ? void 0 : this.initialShape } } }, pageStates: { [this.currentPageId]: { selectedIds: this.isCreating ? [] : this.initialSelectedIds, editingId: void 0 } } } }));
    d8(this, "complete", () => {
      let e14 = this.app.getShape(this.initialShape.id);
      return { id: "edit", before: { document: { pages: { [this.currentPageId]: { shapes: { [this.initialShape.id]: this.isCreating ? void 0 : this.initialShape } } }, pageStates: { [this.currentPageId]: { selectedIds: this.isCreating ? [] : this.initialSelectedIds, editingId: void 0 } } } }, after: { document: { pages: { [this.currentPageId]: { shapes: { [this.initialShape.id]: e14 } } }, pageStates: { [this.currentPageId]: { selectedIds: [e14.id], editingId: void 0 } } } } };
    });
    this.initialShape = e13.getShape(t12, e13.currentPageId), this.currentPageId = e13.currentPageId, this.isCreating = n10, this.initialSelectedIds = [...e13.selectedIds];
  }
};
var iu = { ["arrow"]: vi, ["brush"]: ki, ["draw"]: Di, ["erase"]: Ai, ["handle"]: Bi, ["rotate"]: Mi, ["transform"]: Ei, ["transformSingle"]: Ri, ["translate"]: Li, ["grid"]: Hi, ["edit"]: zi };
var Pd = (s10) => iu[s10];
var Ue = class extends Hs {
  constructor(e13) {
    super();
    this.app = e13;
    d8(this, "type", "select");
    d8(this, "previous");
    d8(this, "status", "idle");
    d8(this, "setStatus", (e14) => {
      this.status = e14, this.app.setStatus(this.status);
    });
    d8(this, "onEnter", () => {
      this.setStatus("idle");
    });
    d8(this, "onExit", () => {
      this.setStatus("idle");
    });
    d8(this, "onCancel", () => {
      this.status === "idle" ? this.app.selectTool("select") : this.setStatus("idle"), this.app.cancelSession();
    });
    d8(this, "getNextChildIndex", () => {
      let { shapes: e14, appState: { currentPageId: t12 } } = this.app;
      return e14.length === 0 ? 1 : e14.filter((n10) => n10.parentId === t12).sort((n10, o10) => o10.childIndex - n10.childIndex)[0].childIndex + 1;
    });
    d8(this, "onPinchStart", () => {
      this.app.cancelSession(), this.setStatus("pinching");
    });
    d8(this, "onPinchEnd", () => {
      Utils.isMobileSafari() && this.app.undoSelect(), this.setStatus("idle");
    });
    d8(this, "onPinch", (e14, t12) => {
      var n10;
      this.status === "pinching" && (isNaN(e14.delta[0]) || isNaN(e14.delta[1]) || (this.app.pinchZoom(e14.point, e14.delta, e14.delta[2]), (n10 = this.onPointerMove) == null || n10.call(this, e14, t12)));
    });
    d8(this, "onKeyDown", (e14) => {
      if (e14 === "Escape") {
        this.onCancel();
        return;
      }
      if (e14 === "Meta" || e14 === "Control" || e14 === "Alt") {
        this.app.updateSession();
        return;
      }
    });
    d8(this, "onKeyUp", (e14) => {
      if (e14 === "Meta" || e14 === "Control" || e14 === "Alt") {
        this.app.updateSession();
        return;
      }
    });
    d8(this, "onPointerMove", () => {
      this.status === "creating" && this.app.updateSession();
    });
    d8(this, "onPointerUp", () => {
      if (this.status === "creating") {
        this.app.completeSession();
        let { isToolLocked: e14 } = this.app.appState;
        e14 || this.app.selectTool("select");
      }
      this.setStatus("idle");
    });
  }
};
var Ro = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "select");
    d8(this, "pointedId");
    d8(this, "selectedGroupId");
    d8(this, "pointedHandleId");
    d8(this, "pointedBoundsHandle");
    d8(this, "pointedLinkHandleId");
    d8(this, "onEnter", () => {
      this.setStatus("idle");
    });
    d8(this, "onExit", () => {
      this.setStatus("idle");
    });
    d8(this, "clonePaint", (e13) => {
      if (this.app.selectedIds.length === 0)
        return;
      let t12 = this.app.selectedIds.map((c10) => this.app.getShape(c10)), n10 = Utils.expandBounds(Utils.getCommonBounds(t12.map(x7.getBounds)), 16), o10 = Utils.getBoundsCenter(n10), i10 = [n10.width, n10.height], a10 = [o10[0] + i10[0] * Math.floor((e13[0] + i10[0] / 2 - o10[0]) / i10[0]), o10[1] + i10[1] * Math.floor((e13[1] + i10[1] / 2 - o10[1]) / i10[1])], l10 = Utils.centerBounds(n10, a10);
      this.app.shapes.some((c10) => x7.getShapeUtil(c10).hitTestBounds(c10, l10)) || this.app.duplicate(this.app.selectedIds, a10);
    });
    d8(this, "getShapeClone", (e13, t12) => {
      let n10 = this.app.getShape(e13), o10 = x7.getShapeUtil(n10);
      if (o10.canClone) {
        let i10 = o10.getBounds(n10), a10 = o10.getCenter(n10), l10 = { top: [i10.minX, i10.minY - (i10.height + 32)], right: [i10.maxX + 32, i10.minY], bottom: [i10.minX, i10.maxY + 32], left: [i10.minX - (i10.width + 32), i10.minY], topLeft: [i10.minX - (i10.width + 32), i10.minY - (i10.height + 32)], topRight: [i10.maxX + 32, i10.minY - (i10.height + 32)], bottomLeft: [i10.minX - (i10.width + 32), i10.maxY + 32], bottomRight: [i10.maxX + 32, i10.maxY + 32] }[t12];
        if (n10.rotation !== 0) {
          let p10 = p.add(l10, [i10.width / 2, i10.height / 2]), u10 = p.rotWith(p10, a10, n10.rotation || 0);
          l10 = p.sub(u10, [i10.width / 2, i10.height / 2]);
        }
        let r11 = Utils.uniqueId(), c10 = C5(f8({}, n10), { id: r11, point: l10 });
        return c10.type === "sticky" && (c10.text = ""), c10;
      }
    });
    d8(this, "onCancel", () => {
      this.app.session ? this.app.cancelSession() : this.selectNone(), this.setStatus("idle");
    });
    d8(this, "onKeyDown", (e13, t12, n10) => {
      switch (e13) {
        case "Escape": {
          this.onCancel();
          break;
        }
        case "Tab": {
          if (this.app.readOnly)
            return;
          if (!this.app.pageState.editingId && this.status === "idle" && this.app.selectedIds.length === 1) {
            let [o10] = this.app.selectedIds, i10 = this.getShapeClone(o10, "right");
            i10 && (this.app.createShapes(i10), this.setStatus("idle"), i10.type === "sticky" && (this.app.select(i10.id), this.app.setEditingId(i10.id)));
          }
          break;
        }
        case "Meta":
        case "Control":
        case "Alt": {
          this.app.updateSession();
          break;
        }
        case "Enter": {
          if (this.app.readOnly)
            return;
          let { pageState: o10 } = this.app;
          o10.selectedIds.length === 1 && !o10.editingId && (this.app.setEditingId(o10.selectedIds[0]), n10.preventDefault());
        }
      }
    });
    d8(this, "onKeyUp", (e13, t12) => {
      if (this.status === "clonePainting" && !(t12.altKey && t12.shiftKey)) {
        this.setStatus("idle");
        return;
      }
      if (e13 === "Meta" || e13 === "Control" || e13 === "Alt") {
        this.app.updateSession();
        return;
      }
    });
    d8(this, "onPointerMove", () => {
      let { originPoint: e13, currentPoint: t12 } = this.app;
      if (this.app.readOnly && this.app.isPointing) {
        this.app.session ? this.app.updateSession() : p.dist(e13, t12) > 3 && (this.app.startSession("brush"), this.setStatus("brushing"));
        return;
      }
      switch (this.status) {
        case "pointingBoundsHandle": {
          if (!this.pointedBoundsHandle)
            throw Error("No pointed bounds handle");
          if (p.dist(e13, t12) > 3) {
            if (this.pointedBoundsHandle === "rotate")
              this.setStatus("rotating"), this.app.startSession("rotate");
            else if (this.pointedBoundsHandle === "center" || this.pointedBoundsHandle === "left" || this.pointedBoundsHandle === "right")
              this.setStatus("translating"), this.app.startSession("translate", false, this.pointedBoundsHandle);
            else {
              this.setStatus("transforming");
              let n10 = this.app.selectedIds.flatMap((o10) => x7.getDocumentBranch(this.app.state, o10, this.app.currentPageId));
              n10.length === 1 ? this.app.startSession("transformSingle", n10[0], this.pointedBoundsHandle) : this.app.startSession("transform", this.pointedBoundsHandle);
            }
            this.app.updateSession();
          }
          break;
        }
        case "pointingCanvas": {
          p.dist(e13, t12) > 3 && (this.app.startSession("brush"), this.setStatus("brushing"));
          break;
        }
        case "pointingClone": {
          p.dist(e13, t12) > 3 && (this.setStatus("translatingClone"), this.app.startSession("translate"), this.app.updateSession());
          break;
        }
        case "pointingBounds": {
          p.dist(e13, t12) > 3 && (this.setStatus("translating"), this.app.startSession("translate"), this.app.updateSession());
          break;
        }
        case "pointingHandle": {
          if (!this.pointedHandleId)
            throw Error("No pointed handle");
          if (p.dist(e13, t12) > 3) {
            this.setStatus("translatingHandle");
            let n10 = this.app.getShape(this.app.selectedIds[0]);
            n10 && (this.pointedHandleId === "bend" ? (this.app.startSession("handle", n10.id, this.pointedHandleId), this.app.updateSession()) : (this.app.startSession("arrow", n10.id, this.pointedHandleId, false), this.app.updateSession()));
          }
          break;
        }
        case "clonePainting": {
          this.clonePaint(t12);
          break;
        }
        default:
          if (this.app.session) {
            this.app.updateSession();
            break;
          }
      }
    });
    d8(this, "onPointerDown", (e13, t12) => {
      if (e13.target === "canvas" && this.status === "idle") {
        let { currentPoint: n10 } = this.app;
        if (e13.spaceKey && t12.buttons === 1)
          return;
        if (this.status === "idle" && e13.altKey && e13.shiftKey) {
          this.setStatus("clonePainting"), this.clonePaint(n10);
          return;
        }
        if (!e13.shiftKey) {
          if (this.app.onShapeBlur(), e13.altKey && this.app.selectedIds.length > 0) {
            this.app.duplicate(this.app.selectedIds, n10);
            return;
          }
          this.selectNone();
        }
        this.setStatus("pointingCanvas");
      }
    });
    d8(this, "onPointerUp", (e13) => {
      var t12;
      if (this.status === "translatingClone" || this.status === "pointingClone") {
        this.pointedId && (this.app.completeSession(), this.app.setEditingId(this.pointedId)), this.setStatus("idle"), this.pointedId = void 0;
        return;
      }
      if (this.status === "pointingBounds") {
        if (e13.target === "bounds")
          this.selectNone();
        else if (this.app.isSelected(e13.target))
          e13.shiftKey ? this.pointedId !== e13.target && this.deselect(e13.target) : this.pointedId !== e13.target && this.app.selectedIds.length > 1 && this.select(e13.target);
        else if (this.pointedId === e13.target) {
          if (this.app.getShape(e13.target).isLocked)
            return;
          e13.shiftKey ? this.pushSelect(e13.target) : this.select(e13.target);
        }
      }
      this.setStatus("idle"), this.pointedBoundsHandle = void 0, this.pointedHandleId = void 0, this.pointedId = void 0, ((t12 = this.app.session) == null ? void 0 : t12.type) !== "edit" && this.app.completeSession();
    });
    d8(this, "onDoubleClickCanvas", () => {
      !this.app.readOnly;
    });
    d8(this, "onPointShape", (e13, t12) => {
      if (e13.spaceKey && t12.buttons === 1 || this.app.getShape(e13.target).isLocked)
        return;
      let { editingId: n10, hoveredId: o10 } = this.app.pageState;
      if (n10 && e13.target !== n10 && this.app.onShapeBlur(), (this.status === "idle" || this.status === "pointingBounds") && e13.metaKey && e13.shiftKey && o10) {
        this.pointedId = o10, this.app.isSelected(o10) ? this.deselect(o10) : (this.pushSelect(o10), this.setStatus("pointingBounds"));
        return;
      }
      if (this.status === "pointingBounds") {
        let { parentId: i10 } = this.app.getShape(e13.target);
        this.pointedId = i10 === this.app.currentPageId ? e13.target : i10;
        return;
      }
      if (this.status === "idle") {
        if (this.setStatus("pointingBounds"), e13.metaKey) {
          e13.shiftKey || this.selectNone(), this.app.startSession("brush"), this.setStatus("brushing");
          return;
        }
        let i10, { parentId: a10 } = this.app.getShape(e13.target);
        a10 === this.app.currentPageId ? (i10 = e13.target, this.selectedGroupId = void 0) : a10 === this.selectedGroupId ? i10 = e13.target : (i10 = a10, this.selectedGroupId = void 0), this.app.isSelected(i10) || (this.pointedId = i10, e13.shiftKey ? this.pushSelect(i10) : this.select(i10));
      }
    });
    d8(this, "onDoubleClickShape", (e13) => {
      if (this.app.readOnly)
        return;
      let t12 = this.app.getShape(e13.target);
      if (t12.isLocked) {
        this.app.select(e13.target);
        return;
      }
      x7.getShapeUtil(t12.type).canEdit && (t12.parentId === this.app.currentPageId || t12.parentId === this.selectedGroupId) && this.app.setEditingId(e13.target), t12.parentId !== this.app.currentPageId && (this.selectedGroupId = t12.parentId), this.app.select(e13.target);
    });
    d8(this, "onRightPointShape", (e13) => {
      this.app.isSelected(e13.target) || this.app.select(e13.target);
    });
    d8(this, "onHoverShape", (e13) => {
      this.app.setHoveredId(e13.target);
    });
    d8(this, "onUnhoverShape", (e13) => {
      let { currentPageId: t12 } = this.app;
      requestAnimationFrame(() => {
        t12 === this.app.currentPageId && this.app.pageState.hoveredId === e13.target && this.app.setHoveredId(void 0);
      });
    });
    d8(this, "onPointBounds", (e13) => {
      if (e13.metaKey) {
        e13.shiftKey || this.selectNone(), this.app.startSession("brush"), this.setStatus("brushing");
        return;
      }
      this.setStatus("pointingBounds");
    });
    d8(this, "onRightPointBounds", (e13, t12) => {
      t12.stopPropagation();
    });
    d8(this, "onReleaseBounds", () => {
      (this.status === "translating" || this.status === "brushing") && this.app.completeSession(), this.setStatus("idle");
    });
    d8(this, "onPointBoundsHandle", (e13) => {
      this.pointedBoundsHandle = e13.target, this.setStatus("pointingBoundsHandle");
    });
    d8(this, "onDoubleClickBoundsHandle", (e13) => {
      switch (e13.target) {
        case "center":
        case "left":
        case "right": {
          this.app.select(...x7.getLinkedShapeIds(this.app.state, this.app.currentPageId, e13.target, e13.shiftKey));
          break;
        }
        default:
          if (this.app.selectedIds.length === 1) {
            this.app.resetBounds(this.app.selectedIds);
            let t12 = this.app.getShape(this.app.selectedIds[0]);
            "label" in t12 && this.app.setEditingId(t12.id);
          }
      }
    });
    d8(this, "onReleaseBoundsHandle", () => {
      this.setStatus("idle");
    });
    d8(this, "onPointHandle", (e13) => {
      this.pointedHandleId = e13.target, this.setStatus("pointingHandle");
    });
    d8(this, "onDoubleClickHandle", (e13) => {
      if (e13.target === "bend") {
        let { selectedIds: t12 } = this.app;
        if (t12.length !== 1)
          return;
        let n10 = this.app.getShape(t12[0]);
        x7.getShapeUtil(n10.type).canEdit && (n10.parentId === this.app.currentPageId || n10.parentId === this.selectedGroupId) && this.app.setEditingId(n10.id);
        return;
      }
      this.app.toggleDecoration(e13.target);
    });
    d8(this, "onReleaseHandle", () => {
      this.setStatus("idle");
    });
    d8(this, "onShapeClone", (e13) => {
      let t12 = this.app.selectedIds[0], n10 = this.getShapeClone(t12, e13.target);
      e13.target === "left" || e13.target === "right" || e13.target === "top" || e13.target === "bottom" ? n10 && (this.app.createShapes(n10), this.pointedId = n10.id, this.setStatus("pointingClone")) : (this.setStatus("gridCloning"), this.app.startSession("grid", t12));
    });
  }
  deselect(e13) {
    this.app.select(...this.app.selectedIds.filter((t12) => t12 !== e13));
  }
  select(e13) {
    this.app.select(e13);
  }
  pushSelect(e13) {
    let t12 = this.app.getShape(e13);
    this.app.select(...this.app.selectedIds.filter((n10) => n10 !== t12.parentId), e13);
  }
  selectNone() {
    this.app.selectNone();
  }
};
var Lo = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "erase");
    d8(this, "status", "idle");
    d8(this, "onPointerDown", () => {
      this.app.readOnly || this.status === "idle" && this.setStatus("pointing");
    });
    d8(this, "onPointerMove", (e13) => {
      if (!this.app.readOnly)
        switch (this.status) {
          case "pointing": {
            p.dist(e13.origin, e13.point) > 3 && (this.app.startSession("erase"), this.app.updateSession(), this.setStatus("erasing"));
            break;
          }
          case "erasing":
            this.app.updateSession();
        }
    });
    d8(this, "onPointerUp", () => {
      if (!this.app.readOnly) {
        switch (this.status) {
          case "pointing": {
            let e13 = this.app.shapes.filter((t12) => !t12.isLocked).filter((t12) => this.app.getShapeUtil(t12).hitTestPoint(t12, this.app.currentPoint)).flatMap((t12) => t12.children ? [t12.id, ...t12.children] : t12.id);
            this.app.delete(e13);
            break;
          }
          case "erasing":
            this.app.completeSession();
        }
        this.setStatus("idle");
      }
    });
    d8(this, "onCancel", () => {
      this.status === "idle" ? this.previous ? this.app.selectTool(this.previous) : this.app.selectTool("select") : this.setStatus("idle"), this.app.cancelSession();
    });
  }
};
var Ao = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "text");
    d8(this, "stopEditingShape", () => {
      this.setStatus("idle"), this.app.appState.isToolLocked || this.app.selectTool("select");
    });
    d8(this, "onKeyUp", () => {
    });
    d8(this, "onKeyDown", () => {
    });
    d8(this, "onPointerDown", () => {
      if (this.status === "creating") {
        this.stopEditingShape();
        return;
      }
      if (this.status === "idle") {
        let { currentPoint: e13, currentGrid: t12, settings: { showGrid: n10 } } = this.app;
        this.app.createTextShapeAtPoint(n10 ? p.snap(e13, t12) : e13, void 0, true), this.setStatus("creating");
        return;
      }
    });
    d8(this, "onPointerUp", () => {
    });
    d8(this, "onPointShape", (e13) => {
      if (this.app.readOnly)
        return;
      let t12 = this.app.getShape(e13.target);
      t12.type === "text" && (this.setStatus("idle"), this.app.setEditingId(t12.id));
    });
    d8(this, "onShapeBlur", () => {
      this.app.readOnly || this.stopEditingShape();
    });
  }
};
var Ho = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "draw");
    d8(this, "lastShapeId");
    d8(this, "onEnter", () => {
      this.lastShapeId = void 0;
    });
    d8(this, "onCancel", () => {
      switch (this.status) {
        case "idle": {
          this.app.selectTool("select");
          break;
        }
        default: {
          this.setStatus("idle");
          break;
        }
      }
      this.app.cancelSession();
    });
    d8(this, "onPointerDown", (e13) => {
      if (this.status !== "idle" || this.app.readOnly)
        return;
      let { currentPoint: t12, appState: { currentPageId: n10, currentStyle: o10 } } = this.app, i10 = this.lastShapeId && this.app.getShape(this.lastShapeId);
      if (e13.shiftKey && i10)
        this.app.startSession("draw", i10.id), this.setStatus("extending");
      else {
        let a10 = this.getNextChildIndex(), l10 = Utils.uniqueId(), r11 = gi.create({ id: l10, parentId: n10, childIndex: a10, point: t12, style: f8({}, o10) });
        this.lastShapeId = l10, this.app.patchCreate([r11]), this.app.startSession("draw", l10), this.setStatus("creating");
      }
    });
    d8(this, "onPointerMove", () => {
      if (!this.app.readOnly)
        switch (this.status) {
          case "extending":
          case "creating":
            this.app.updateSession();
        }
    });
    d8(this, "onPointerUp", () => {
      this.app.completeSession(), this.setStatus("idle");
    });
  }
};
var zo = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "ellipse");
    d8(this, "onPointerDown", () => {
      if (this.app.readOnly || this.status !== "idle")
        return;
      let { currentPoint: e13, currentGrid: t12, settings: { showGrid: n10 }, appState: { currentPageId: o10, currentStyle: i10 } } = this.app, a10 = this.getNextChildIndex(), l10 = Utils.uniqueId(), r11 = mi.create({ id: l10, parentId: o10, childIndex: a10, point: n10 ? p.snap(e13, t12) : e13, style: f8({}, i10) });
      this.app.patchCreate([r11]), this.app.startSession("transformSingle", r11.id, TLBoundsCorner.BottomRight, true), this.setStatus("creating");
    });
  }
};
var Oo = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "rectangle");
    d8(this, "onPointerDown", () => {
      if (this.app.readOnly || this.status !== "idle")
        return;
      let { currentPoint: e13, currentGrid: t12, settings: { showGrid: n10 }, appState: { currentPageId: o10, currentStyle: i10 } } = this.app, a10 = this.getNextChildIndex(), l10 = Utils.uniqueId(), r11 = ui.create({ id: l10, parentId: o10, childIndex: a10, point: n10 ? p.snap(e13, t12) : e13, style: f8({}, i10) });
      this.app.patchCreate([r11]), this.app.startSession("transformSingle", r11.id, TLBoundsCorner.BottomRight, true), this.setStatus("creating");
    });
  }
};
var Fo = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "triangle");
    d8(this, "onPointerDown", () => {
      if (this.app.readOnly || this.status !== "idle")
        return;
      let { currentPoint: e13, currentGrid: t12, settings: { showGrid: n10 }, appState: { currentPageId: o10, currentStyle: i10 } } = this.app, a10 = this.getNextChildIndex(), l10 = Utils.uniqueId(), r11 = hi.create({ id: l10, parentId: o10, childIndex: a10, point: n10 ? p.snap(e13, t12) : e13, style: f8({}, i10) });
      this.app.patchCreate([r11]), this.app.startSession("transformSingle", r11.id, TLBoundsCorner.BottomRight, true), this.setStatus("creating");
    });
  }
};
var jo = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "line");
    d8(this, "onPointerDown", () => {
      if (this.app.readOnly || this.status !== "idle")
        return;
      let { currentPoint: e13, currentGrid: t12, settings: { showGrid: n10 }, appState: { currentPageId: o10, currentStyle: i10 } } = this.app, a10 = this.getNextChildIndex(), l10 = Utils.uniqueId(), r11 = ko.create({ id: l10, parentId: o10, childIndex: a10, point: n10 ? p.snap(e13, t12) : e13, decorations: { start: void 0, end: void 0 }, style: f8({}, i10) });
      this.app.patchCreate([r11]), this.app.startSession("arrow", r11.id, "end", true), this.setStatus("creating");
    });
  }
};
var Uo = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "arrow");
    d8(this, "onPointerDown", () => {
      if (this.status !== "idle")
        return;
      let { currentPoint: e13, currentGrid: t12, settings: { showGrid: n10 }, appState: { currentPageId: o10, currentStyle: i10 } } = this.app, a10 = this.getNextChildIndex(), l10 = Utils.uniqueId(), r11 = ko.create({ id: l10, parentId: o10, childIndex: a10, point: n10 ? p.snap(e13, t12) : e13, style: f8({}, i10) });
      this.app.patchCreate([r11]), this.app.startSession("arrow", r11.id, "end", true), this.setStatus("creating");
    });
  }
};
var Go = class extends Ue {
  constructor() {
    super(...arguments);
    d8(this, "type", "sticky");
    d8(this, "shapeId");
    d8(this, "onPointerDown", () => {
      if (!this.app.readOnly) {
        if (this.status === "creating") {
          this.setStatus("idle"), this.app.appState.isToolLocked || this.app.selectTool("select");
          return;
        }
        if (this.status === "idle") {
          let { currentPoint: e13, currentGrid: t12, settings: { showGrid: n10 }, appState: { currentPageId: o10, currentStyle: i10 } } = this.app, a10 = this.getNextChildIndex(), l10 = Utils.uniqueId();
          this.shapeId = l10;
          let r11 = ms.create({ id: l10, parentId: o10, childIndex: a10, point: n10 ? p.snap(e13, t12) : e13, style: f8({}, i10) }), c10 = ms.getBounds(r11);
          r11.point = p.sub(r11.point, [c10.width / 2, c10.height / 2]), this.app.patchCreate([r11]), this.app.startSession("translate"), this.setStatus("creating");
        }
      }
    });
    d8(this, "onPointerUp", () => {
      this.app.readOnly || this.status === "creating" && (this.setStatus("idle"), this.app.completeSession(), this.app.selectTool("select"), this.app.setEditingId(this.shapeId));
    });
  }
};
var Oi = class {
  constructor(e13, t12, n10, o10) {
    d8(this, "_idbId");
    d8(this, "initialState");
    d8(this, "store");
    d8(this, "pointer", -1);
    d8(this, "_state");
    d8(this, "_status", "loading");
    d8(this, "stack", []);
    d8(this, "_snapshot");
    d8(this, "useStore");
    d8(this, "ready");
    d8(this, "isPaused", false);
    d8(this, "persist", (e14, t13) => {
      if (this._status === "ready" && (this.onPersist && this.onPersist(this._state, e14, t13), this._idbId))
        return set4(this._idbId, this._state).catch((n11) => console.error(n11));
    });
    d8(this, "applyPatch", (e14, t13) => {
      let n11 = this._state, o11 = Utils.deepMerge(this._state, e14), i10 = this.cleanup(o11, n11, e14, t13);
      return this.onStateWillChange && this.onStateWillChange(i10, t13), this._state = i10, this.store.setState(this._state, true), this.onStateDidChange && this.onStateDidChange(this._state, t13), this;
    });
    d8(this, "migrate", (e14) => e14);
    d8(this, "cleanup", (e14, t13, n11, o11) => e14);
    d8(this, "onStateWillChange");
    d8(this, "onStateDidChange");
    d8(this, "patchState", (e14, t13) => (this.applyPatch(e14, t13), this.onPatch && this.onPatch(this._state, e14, t13), this));
    d8(this, "replaceState", (e14, t13) => {
      let n11 = this.cleanup(e14, this._state, e14, t13);
      return this.onStateWillChange && this.onStateWillChange(n11, "replace"), this._state = n11, this.store.setState(this._state, true), this.onStateDidChange && this.onStateDidChange(this._state, "replace"), this;
    });
    d8(this, "setState", (e14, t13 = e14.id) => (this.pointer < this.stack.length - 1 && (this.stack = this.stack.slice(0, this.pointer + 1)), this.stack.push(C5(f8({}, e14), { id: t13 })), this.pointer = this.stack.length - 1, this.applyPatch(e14.after, t13), this.onCommand && this.onCommand(this._state, e14, t13), this.persist(e14.after, t13), this));
    d8(this, "onReady");
    d8(this, "onPatch");
    d8(this, "onCommand");
    d8(this, "onPersist");
    d8(this, "onReplace");
    d8(this, "onReset");
    d8(this, "onResetHistory");
    d8(this, "onUndo");
    d8(this, "onRedo");
    d8(this, "reset", () => (this.onStateWillChange && this.onStateWillChange(this.initialState, "reset"), this._state = this.initialState, this.store.setState(this._state, true), this.resetHistory(), this.persist({}, "reset"), this.onStateDidChange && this.onStateDidChange(this._state, "reset"), this.onReset && this.onReset(this._state), this));
    d8(this, "replaceHistory", (e14, t13 = e14.length - 1) => (this.stack = e14, this.pointer = t13, this.onReplace && this.onReplace(this._state), this));
    d8(this, "resetHistory", () => (this.stack = [], this.pointer = -1, this.onResetHistory && this.onResetHistory(this._state), this));
    d8(this, "undo", () => {
      if (!this.isPaused) {
        if (!this.canUndo)
          return this;
        let e14 = this.stack[this.pointer];
        this.pointer--, this.applyPatch(e14.before, "undo"), this.persist(e14.before, "undo");
      }
      return this.onUndo && this.onUndo(this._state), this;
    });
    d8(this, "redo", () => {
      if (!this.isPaused) {
        if (!this.canRedo)
          return this;
        this.pointer++;
        let e14 = this.stack[this.pointer];
        this.applyPatch(e14.after, "redo"), this.persist(e14.after, "undo");
      }
      return this.onRedo && this.onRedo(this._state), this;
    });
    d8(this, "setSnapshot", () => (this._snapshot = f8({}, this._state), this));
    d8(this, "forceUpdate", () => {
      this.store.setState(this._state, true);
    });
    this._idbId = t12, this._state = dt(e13), this._snapshot = dt(e13), this.initialState = dt(e13), this.store = createStore2(() => this._state), this.useStore = create2(this.store), this.ready = new Promise((i10) => {
      let a10 = "none";
      this._idbId ? (a10 = "restored", get3(this._idbId).then((l10) => ee(this, null, function* () {
        if (l10) {
          let r11 = l10;
          if (n10) {
            let p10 = yield get3(t12 + "_version");
            p10 && p10 < n10 && (r11 = o10 ? o10(l10, e13, p10) : e13, a10 = "migrated");
          }
          yield set4(t12 + "_version", n10 || -1);
          let c10 = this._state.appState.isEmptyCanvas;
          r11 = this.migrate(r11), this._state = dt(r11), this._snapshot = dt(r11), this._state.appState.isEmptyCanvas = c10, this.store.setState(this._state, true);
        } else
          yield set4(t12 + "_version", n10 || -1);
        this._status = "ready", i10(a10);
      })).catch((l10) => console.error(l10))) : (this._status = "ready", i10(a10));
    }).then((i10) => (this.onReady && this.onReady(i10), i10));
  }
  pause() {
    this.isPaused = true;
  }
  resume() {
    this.isPaused = false;
  }
  get canUndo() {
    return this.pointer > -1;
  }
  get canRedo() {
    return this.pointer < this.stack.length - 1;
  }
  get state() {
    return this._state;
  }
  get status() {
    return this._status;
  }
  get snapshot() {
    return this._snapshot;
  }
};
var Md = "tldraw_clipboard";
function Ed() {
  return ee(this, null, function* () {
    return get3(Md);
  });
}
function Rd(s10) {
  return ee(this, null, function* () {
    return set4(Md, s10);
  });
}
var Fi = Utils.uniqueId();
var Ne = class extends Oi {
  constructor(e13, t12 = {}) {
    super(Ne.defaultState, e13, Ne.version, (n10, o10, i10) => sn(C5(f8({}, o10), { document: C5(f8(f8({}, o10.document), n10.document), { version: i10 }) }), Ne.version));
    d8(this, "callbacks", {});
    d8(this, "tools", { select: new Ro(this), erase: new Lo(this), ["text"]: new Ao(this), ["draw"]: new Ho(this), ["ellipse"]: new zo(this), ["rectangle"]: new Oo(this), ["triangle"]: new Fo(this), ["line"]: new jo(this), ["arrow"]: new Uo(this), ["sticky"]: new Go(this) });
    d8(this, "currentTool", this.tools.select);
    d8(this, "session");
    d8(this, "readOnly", false);
    d8(this, "isDirty", false);
    d8(this, "isCreating", false);
    d8(this, "originPoint", [0, 0]);
    d8(this, "currentPoint", [0, 0]);
    d8(this, "previousPoint", [0, 0]);
    d8(this, "shiftKey", false);
    d8(this, "altKey", false);
    d8(this, "metaKey", false);
    d8(this, "ctrlKey", false);
    d8(this, "spaceKey", false);
    d8(this, "isPointing", false);
    d8(this, "isForcePanning", false);
    d8(this, "editingStartTime", -1);
    d8(this, "fileSystemHandle", null);
    d8(this, "viewport", Utils.getBoundsFromPoints([[0, 0], [100, 100]]));
    d8(this, "rendererBounds", Utils.getBoundsFromPoints([[0, 0], [100, 100]]));
    d8(this, "selectHistory", { stack: [[]], pointer: 0 });
    d8(this, "clipboard");
    d8(this, "rotationInfo", { selectedIds: [], center: [0, 0] });
    d8(this, "migrate", (e14) => sn(e14, Ne.version));
    d8(this, "onReady", () => {
      var e14, t13;
      this.loadDocument(this.document), Ur().then((n10) => {
        this.fileSystemHandle = n10;
      });
      try {
        this.patchState(C5(f8({}, sn(this.state, Ne.version)), { appState: { status: "idle" } }));
      } catch (n10) {
        console.error("The data appears to be corrupted. Resetting!", n10), localStorage.setItem(this.document.id + "_corrupted", JSON.stringify(this.document)), this.patchState(C5(f8({}, Ne.defaultState), { appState: C5(f8({}, Ne.defaultState.appState), { status: "idle" }) }));
      }
      (t13 = (e14 = this.callbacks).onMount) == null || t13.call(e14, this);
    });
    d8(this, "cleanup", (e14, t13) => {
      var a10;
      let n10 = f8({}, e14);
      n10.document !== t13.document && Object.entries(n10.document.pages).forEach(([l10, r11]) => {
        if (r11 === void 0) {
          delete n10.document.pages[l10], delete n10.document.pageStates[l10];
          return;
        }
        let c10 = t13.document.pages[l10], p10 = {};
        if (!c10 || r11.shapes !== c10.shapes || r11.bindings !== c10.bindings) {
          r11.shapes = f8({}, r11.shapes), r11.bindings = f8({}, r11.bindings);
          let h10 = /* @__PURE__ */ new Set();
          Object.entries(r11.shapes).forEach(([T10, y10]) => {
            var S10;
            let b10;
            y10 ? b10 = y10.parentId : (b10 = (S10 = c10 == null ? void 0 : c10.shapes[T10]) == null ? void 0 : S10.parentId, delete r11.shapes[T10]), r11.id === n10.appState.currentPageId && (c10 == null ? void 0 : c10.shapes[T10]) !== y10 && (p10[T10] = y10), b10 && b10 !== l10 && r11.shapes[b10] !== void 0 && h10.add(r11.shapes[b10]);
          }), Object.keys(r11.bindings).forEach((T10) => {
            r11.bindings[T10] || delete r11.bindings[T10];
          }), n10.document.pages[l10] = r11;
          let g10 = x7.getRelatedBindings(n10, Object.keys(p10), l10), m10 = /* @__PURE__ */ new Set();
          g10.forEach((T10) => {
            if (!r11.bindings[T10.id])
              return;
            let y10 = r11.shapes[T10.toId], b10 = r11.shapes[T10.fromId];
            if (!(y10 && b10)) {
              delete n10.document.pages[l10].bindings[T10.id];
              return;
            }
            if (m10.has(b10))
              return;
            let S10 = x7.updateArrowBindings(r11, b10);
            if (m10.add(b10), S10) {
              let w10 = f8(f8({}, b10), S10);
              r11.shapes[b10.id] = w10;
            }
          }), h10.forEach((T10) => {
            if (!T10)
              throw Error("no group!");
            let y10 = T10.children.filter((S10) => r11.shapes[S10] !== void 0), b10 = Utils.getCommonBounds(y10.map((S10) => r11.shapes[S10]).filter(Boolean).map((S10) => x7.getRotatedBounds(S10)));
            r11.shapes[T10.id] = C5(f8({}, T10), { point: [b10.minX, b10.minY], size: [b10.width, b10.height], children: y10 });
          });
        }
        let u10 = f8({}, n10.document.pageStates[l10]);
        u10.brush || delete u10.brush, u10.hoveredId && !r11.shapes[u10.hoveredId] && delete u10.hoveredId, u10.bindingId && !r11.bindings[u10.bindingId] && (x7.warn(`Could not find the binding of ${l10}`), delete u10.bindingId), u10.editingId && !r11.shapes[u10.editingId] && (x7.warn("Could not find the editing shape!"), delete u10.editingId), n10.document.pageStates[l10] = u10;
      }), Object.keys((a10 = n10.document.assets) != null ? a10 : {}).forEach((l10) => {
        var r11, c10;
        ((r11 = n10.document.assets) == null ? void 0 : r11[l10]) || (c10 = n10.document.assets) == null || delete c10[l10];
      });
      let o10 = n10.appState.currentPageId, i10 = n10.document.pageStates[o10];
      if (n10.room && n10.room !== t13.room) {
        let l10 = C5(f8({}, n10.room), { users: f8({}, n10.room.users) });
        t13.room && Object.values(t13.room.users).filter(Boolean).forEach((r11) => {
          l10.users[r11.id] === void 0 && delete l10.users[r11.id];
        }), n10.room = l10;
      }
      return n10.room && (n10.room.users[n10.room.userId] = C5(f8({}, n10.room.users[n10.room.userId]), { point: this.currentPoint, selectedIds: i10.selectedIds })), this.readOnly && (n10.document.pages = t13.document.pages), n10;
    });
    d8(this, "broadcastPatch", (e14, t13) => {
      var c10, p10, u10, h10, g10, m10, T10, y10, b10;
      let n10 = {}, o10 = {}, i10 = {}, a10 = (u10 = (p10 = (c10 = e14 == null ? void 0 : e14.document) == null ? void 0 : c10.pages) == null ? void 0 : p10[this.currentPageId]) == null ? void 0 : u10.shapes, l10 = (m10 = (g10 = (h10 = e14 == null ? void 0 : e14.document) == null ? void 0 : h10.pages) == null ? void 0 : g10[this.currentPageId]) == null ? void 0 : m10.bindings, r11 = (T10 = e14 == null ? void 0 : e14.document) == null ? void 0 : T10.assets;
      a10 && Object.keys(a10).forEach((S10) => {
        n10[S10] = this.getShape(S10, this.currentPageId);
      }), l10 && Object.keys(l10).forEach((S10) => {
        o10[S10] = this.getBinding(S10, this.currentPageId);
      }), r11 && Object.keys(r11).forEach((S10) => {
        i10[S10] = this.document.assets[S10];
      }), (b10 = (y10 = this.callbacks).onChangePage) == null || b10.call(y10, this, n10, o10, i10, t13);
    });
    d8(this, "onPatch", (e14, t13, n10) => {
      var o10, i10, a10, l10, r11, c10;
      (this.callbacks.onChangePage && ((i10 = (o10 = t13 == null ? void 0 : t13.document) == null ? void 0 : o10.pages) == null ? void 0 : i10[this.currentPageId]) || ((a10 = t13 == null ? void 0 : t13.document) == null ? void 0 : a10.assets)) && (((l10 = t13 == null ? void 0 : t13.document) == null ? void 0 : l10.assets) || this.session && this.session.type !== "brush" && this.session.type !== "erase" && this.session.type !== "draw") && this.broadcastPatch(t13, false), (c10 = (r11 = this.callbacks).onPatch) == null || c10.call(r11, this, t13, n10);
    });
    d8(this, "onCommand", (e14, t13, n10) => {
      var o10, i10;
      this.clearSelectHistory(), this.isDirty = true, (i10 = (o10 = this.callbacks).onCommand) == null || i10.call(o10, this, t13, n10);
    });
    d8(this, "onReplace", () => {
      this.clearSelectHistory(), this.isDirty = false;
    });
    d8(this, "onUndo", () => {
      var e14, t13;
      this.rotationInfo.selectedIds = [...this.selectedIds], (t13 = (e14 = this.callbacks).onUndo) == null || t13.call(e14, this);
    });
    d8(this, "onRedo", () => {
      var e14, t13;
      this.rotationInfo.selectedIds = [...this.selectedIds], (t13 = (e14 = this.callbacks).onRedo) == null || t13.call(e14, this);
    });
    d8(this, "onPersist", (e14, t13) => {
      var n10, o10;
      (o10 = (n10 = this.callbacks).onPersist) == null || o10.call(n10, this), this.broadcastPatch(t13, true);
    });
    d8(this, "prevSelectedIds", this.selectedIds);
    d8(this, "onStateDidChange", (e14, t13) => {
      var n10, o10, i10, a10;
      (o10 = (n10 = this.callbacks).onChange) == null || o10.call(n10, this, t13), this.room && this.selectedIds !== this.prevSelectedIds && ((a10 = (i10 = this.callbacks).onChangePresence) == null || a10.call(i10, this, C5(f8({}, this.room.users[this.room.userId]), { selectedIds: this.selectedIds, session: !!this.session })), this.prevSelectedIds = this.selectedIds);
    });
    d8(this, "justSent", false);
    d8(this, "prevShapes", this.page.shapes);
    d8(this, "prevBindings", this.page.bindings);
    d8(this, "prevAssets", this.document.assets);
    d8(this, "getReservedContent", (e14, t13 = this.currentPageId) => {
      let { bindings: n10 } = this.document.pages[t13], o10 = {}, i10 = {}, a10 = Object.values(n10), l10 = new Map(a10.map((g10) => [g10.toId, g10])), r11 = new Map(a10.map((g10) => [g10.fromId, g10])), c10 = [l10, r11], p10 = [];
      this.session && e14.forEach((g10) => p10.push(g10)), this.pageState.editingId && p10.push(this.pageState.editingId);
      let u10 = new Set(p10), h10 = /* @__PURE__ */ new Set();
      for (; p10.length > 0; ) {
        let g10 = p10.pop();
        if (!g10)
          break;
        if (h10.has(g10))
          continue;
        h10.add(g10);
        let m10 = this.getShape(g10);
        o10[g10] = m10, m10.parentId !== t13 && p10.push(m10.parentId), m10.children && p10.push(...m10.children), c10.map((T10) => T10.get(m10.id)).filter(Boolean).forEach((T10) => {
          i10[T10.id] = T10, p10.push(T10.toId, T10.fromId);
        });
      }
      return { reservedShapes: o10, reservedBindings: i10, strongReservedShapeIds: u10 };
    });
    d8(this, "replacePageContent", (e14, t13, n10, o10 = this.currentPageId) => {
      if (this.justSent)
        return this.justSent = false, this;
      let i10 = this.document.pages[this.currentPageId];
      return Object.values(e14).forEach((a10) => {
        a10.parentId !== o10 && !(i10.shapes[a10.parentId] || e14[a10.parentId]) && (console.warn("Added a shape without a parent on the page"), a10.parentId = o10);
      }), this.useStore.setState((a10) => {
        let { hoveredId: l10, editingId: r11, bindingId: c10, selectedIds: p10 } = a10.document.pageStates[o10], u10 = [...p10], h10 = r11 && a10.document.pages[this.currentPageId].shapes[r11];
        h10 && u10.push(h10.id);
        let { reservedShapes: g10, reservedBindings: m10, strongReservedShapeIds: T10 } = this.getReservedContent(u10, this.currentPageId);
        Object.values(g10).filter((P10) => !("text" in P10)).forEach((P10) => {
          let v10 = e14[P10.id];
          if (!!v10) {
            if (!(P10.type === "arrow" || T10.has(P10.id))) {
              e14[P10.id] = v10;
              return;
            }
            "decorations" in v10 && "decorations" in P10 && (e14[P10.id] = C5(f8({}, P10), { decorations: v10.decorations })), P10.style = v10.style;
          }
        }), this.prevShapes = e14, this.prevBindings = t13, this.prevAssets = n10;
        let y10 = f8(f8({}, e14), g10);
        h10 && (y10[h10.id] = h10);
        let b10 = f8(f8({}, t13), m10), S10 = f8({}, n10), w10 = C5(f8({}, a10), { document: C5(f8({}, a10.document), { pages: { [o10]: C5(f8({}, a10.document.pages[o10]), { shapes: y10, bindings: b10 }) }, assets: S10, pageStates: C5(f8({}, a10.document.pageStates), { [o10]: C5(f8({}, a10.document.pageStates[o10]), { selectedIds: p10.filter((P10) => y10[P10] !== void 0), hoveredId: l10 ? y10[l10] === void 0 ? void 0 : l10 : void 0, editingId: r11, bindingId: c10 ? b10[c10] === void 0 ? void 0 : c10 : void 0 }) }) }) }), D10 = w10.document.pages[o10], B10 = x7.getRelatedBindings(w10, Object.keys(y10), o10), I10 = /* @__PURE__ */ new Set();
        return B10.forEach((P10) => {
          if (!D10.bindings[P10.id])
            return;
          let v10 = D10.shapes[P10.fromId];
          if (I10.has(v10))
            return;
          let Q = x7.updateArrowBindings(D10, v10);
          if (I10.add(v10), Q) {
            let oe2 = f8(f8({}, v10), Q);
            D10.shapes[v10.id] = oe2;
          }
        }), Object.values(y10).forEach((P10) => {
          if (P10.type !== "group")
            return;
          let v10 = P10.children.filter((oe2) => D10.shapes[oe2] !== void 0), Q = Utils.getCommonBounds(v10.map((oe2) => D10.shapes[oe2]).filter(Boolean).map((oe2) => x7.getRotatedBounds(oe2)));
          D10.shapes[P10.id] = C5(f8({}, P10), { point: [Q.minX, Q.minY], size: [Q.width, Q.height], children: v10 });
        }), this.state.document = w10.document, w10;
      }, true), this;
    });
    d8(this, "updateBounds", (e14) => {
      this.rendererBounds = e14;
      let { point: t13, zoom: n10 } = this.camera;
      this.updateViewport(t13, n10), !this.readOnly && this.session && this.session.update();
    });
    d8(this, "updateViewport", (e14, t13) => {
      let { width: n10, height: o10 } = this.rendererBounds, [i10, a10] = e.sub(e.div([0, 0], t13), e14), [l10, r11] = e.sub(e.div([n10, o10], t13), e14);
      this.viewport = { minX: i10, minY: a10, maxX: l10, maxY: r11, height: l10 - i10, width: r11 - a10 };
    });
    d8(this, "setEditingId", (e14, t13 = false) => {
      if (!this.readOnly) {
        if (e14)
          this.startSession("edit", e14, t13);
        else {
          if (!this.pageState.editingId)
            return;
          this.completeSession();
        }
        this.editingStartTime = performance.now(), this.patchState({ document: { pageStates: { [this.currentPageId]: { editingId: e14 } } } }, "set_editing_id");
      }
    });
    d8(this, "setHoveredId", (e14) => {
      this.patchState({ document: { pageStates: { [this.currentPageId]: { hoveredId: e14 } } } }, "set_hovered_id");
    });
    d8(this, "setSetting", (e14, t13) => {
      if (this.session)
        return this;
      let n10 = { settings: { [e14]: typeof t13 == "function" ? t13(this.settings[e14]) : t13 } };
      return this.patchState(n10, `settings:${e14}`), this.persist(n10), this;
    });
    d8(this, "toggleFocusMode", () => {
      if (this.session)
        return this;
      let e14 = { settings: { isFocusMode: !this.settings.isFocusMode } };
      return this.patchState(e14, "settings:toggled_focus_mode"), this.persist(e14), this;
    });
    d8(this, "togglePenMode", () => {
      if (this.session)
        return this;
      let e14 = { settings: { isPenMode: !this.settings.isPenMode } };
      return this.patchState(e14, "settings:toggled_pen_mode"), this.persist(e14), this;
    });
    d8(this, "toggleDarkMode", () => {
      if (this.session)
        return this;
      let e14 = { settings: { isDarkMode: !this.settings.isDarkMode } };
      return this.patchState(e14, "settings:toggled_dark_mode"), this.persist(e14), this;
    });
    d8(this, "toggleZoomSnap", () => {
      if (this.session)
        return this;
      let e14 = { settings: { isZoomSnap: !this.settings.isZoomSnap } };
      return this.patchState(e14, "settings:toggled_zoom_snap"), this.persist(e14), this;
    });
    d8(this, "toggleDebugMode", () => {
      if (this.session)
        return this;
      let e14 = { settings: { isDebugMode: !this.settings.isDebugMode } };
      return this.patchState(e14, "settings:toggled_debug"), this.persist(e14), this;
    });
    d8(this, "setMenuOpen", (e14) => {
      let t13 = { appState: { isMenuOpen: e14 } };
      return this.patchState(t13, "ui:toggled_menu_opened"), this.persist(t13), this;
    });
    d8(this, "setIsLoading", (e14) => {
      let t13 = { appState: { isLoading: e14 } };
      return this.patchState(t13, "ui:toggled_is_loading"), this.persist(t13), this;
    });
    d8(this, "setDisableAssets", (e14) => (this.patchState({ appState: { disableAssets: e14 } }, "ui:toggled_disable_images"), this));
    d8(this, "toggleGrid", () => {
      if (this.session)
        return this;
      let e14 = { settings: { showGrid: !this.settings.showGrid } };
      return this.patchState(e14, "settings:toggled_grid"), this.persist(e14), this;
    });
    d8(this, "selectTool", (e14) => {
      if (this.readOnly || this.session)
        return this;
      this.isPointing = false;
      let t13 = this.tools[e14];
      return t13 === this.currentTool ? (this.patchState({ appState: { isToolLocked: false } }), this) : (this.currentTool.onExit(), t13.previous = this.currentTool.type, this.currentTool = t13, this.currentTool.onEnter(), this.patchState({ appState: { activeTool: e14, isToolLocked: false } }, `selected_tool:${e14}`));
    });
    d8(this, "toggleToolLock", () => this.session ? this : this.patchState({ appState: { isToolLocked: !this.appState.isToolLocked } }, "toggled_tool_lock"));
    d8(this, "resetDocument", () => {
      if (this.session)
        return this;
      this.session = void 0, this.currentTool = this.tools.select;
      let e14 = Ne.defaultDocument;
      return e14.pages.page.name = "Page 1", this.resetHistory().clearSelectHistory().loadDocument(Ne.defaultDocument).persist({}), this;
    });
    d8(this, "updateUsers", (e14, t13 = false) => {
      this.patchState({ room: { users: Object.fromEntries(e14.map((n10) => [n10.id, n10])) } }, t13 ? "room:self:update" : "room:user:update");
    });
    d8(this, "removeUser", (e14) => {
      this.patchState({ room: { users: { [e14]: void 0 } } });
    });
    d8(this, "mergeDocument", (e14) => {
      if (this.document.id !== e14.id)
        return this.replaceState(C5(f8({}, sn(C5(f8({}, this.state), { document: e14 }), Ne.version)), { appState: C5(f8({}, this.appState), { currentPageId: Object.keys(e14.pages)[0] }) })), this;
      let t13 = f8({}, this.document.pageStates), n10 = C5(f8({}, this.appState), { currentPageId: e14.pages[this.currentPageId] ? this.currentPageId : Object.keys(e14.pages)[0], pages: Object.values(e14.pages).map((i10, a10) => ({ id: i10.id, name: i10.name, childIndex: i10.childIndex || a10 })) });
      this.resetHistory(), Object.keys(this.document.pages).forEach((i10) => {
        e14.pages[i10] || (i10 === this.appState.currentPageId && (this.cancelSession(), this.selectNone()), t13[i10] = void 0);
      }), this.session && this.selectedIds.filter((i10) => !e14.pages[this.currentPageId].shapes[i10]).forEach((i10) => e14.pages[this.currentPageId].shapes[i10] = this.page.shapes[i10]), Object.entries(t13).forEach(([i10, a10]) => {
        a10.selectedIds = a10.selectedIds.filter((l10) => !!e14.pages[i10].shapes[l10]);
      });
      let { editingId: o10 } = this.pageState;
      return o10 && (e14.pages[this.currentPageId].shapes[o10] = this.page.shapes[o10], t13[this.currentPageId].selectedIds = [o10]), this.replaceState(C5(f8({}, sn(C5(f8({}, this.state), { document: C5(f8({}, e14), { pageStates: t13 }) }), Ne.version)), { appState: n10 }), "merge");
    });
    d8(this, "updateDocument", (e14, t13 = "updated_document") => {
      let n10 = this.state, o10 = C5(f8({}, n10), { document: f8({}, n10.document) });
      e14.pages[this.currentPageId] || (o10.appState = C5(f8({}, n10.appState), { currentPageId: Object.keys(e14.pages)[0] }));
      let i10 = 1;
      for (let a10 of Object.values(e14.pages))
        a10 !== n10.document.pages[a10.id] && (o10.document.pages[a10.id] = a10, a10.name || (o10.document.pages[a10.id].name = `Page ${i10 + 1}`, i10++));
      for (let a10 of Object.values(e14.pageStates))
        if (a10 !== n10.document.pageStates[a10.id]) {
          o10.document.pageStates[a10.id] = a10;
          let l10 = e14.pages[a10.id], r11 = ["bindingId", "editingId", "hoveredId", "pointedId"];
          for (let c10 of r11)
            l10.shapes[c10] || (a10[c10] = void 0);
          a10.selectedIds = a10.selectedIds.filter((c10) => !!e14.pages[l10.id].shapes[c10]);
        }
      return this.replaceState(sn(o10, o10.document.version || 0), `${t13}:${e14.id}`);
    });
    d8(this, "loadRoom", (e14) => (this.patchState({ room: { id: e14, userId: Fi, users: { [Fi]: { id: Fi, color: Us[Math.floor(Math.random() * Us.length)], point: [100, 100], selectedIds: [], activeShapes: [] } } } }), this));
    d8(this, "loadDocument", (e14) => {
      this.selectNone(), this.resetHistory(), this.clearSelectHistory(), this.session = void 0;
      let t13 = C5(f8({}, Ne.defaultState), { settings: f8({}, this.state.settings), document: e14, appState: C5(f8(f8({}, Ne.defaultState.appState), this.state.appState), { currentPageId: Object.keys(e14.pages)[0], disableAssets: this.disableAssets }) });
      this.replaceState(sn(t13, Ne.version), "loaded_document");
      let { point: n10, zoom: o10 } = this.camera;
      return this.updateViewport(n10, o10), this;
    });
    d8(this, "newProject", () => {
      !this.isLocal || (this.fileSystemHandle = null, this.resetDocument());
    });
    d8(this, "saveProject", () => ee(this, null, function* () {
      if (!this.readOnly) {
        try {
          let e14 = yield Gs(sn(this.state, Ne.version).document, this.fileSystemHandle);
          this.fileSystemHandle = e14, this.persist({}), this.isDirty = false;
        } catch (e14) {
          console.error(e14.message);
        }
        return this;
      }
    }));
    d8(this, "saveProjectAs", () => ee(this, null, function* () {
      try {
        let e14 = yield Gs(this.document, null);
        this.fileSystemHandle = e14, this.persist({}), this.isDirty = false;
      } catch (e14) {
        console.error(e14.message);
      }
      return this;
    }));
    d8(this, "openProject", () => ee(this, null, function* () {
      if (!!this.isLocal)
        try {
          let e14 = yield Vr();
          if (!e14)
            throw Error();
          let { fileHandle: t13, document: n10 } = e14;
          this.loadDocument(n10), this.fileSystemHandle = t13, this.zoomToFit(), this.persist({});
        } catch (e14) {
          console.error(e14);
        } finally {
          this.persist({});
        }
    }));
    d8(this, "openAsset", () => ee(this, null, function* () {
      if (!this.disableAssets)
        try {
          let e14 = yield $r();
          if (Array.isArray(e14))
            this.addMediaFromFiles(e14, this.centerPoint);
          else {
            if (!e14)
              return;
            this.addMediaFromFiles([e14]);
          }
        } catch (e14) {
          console.error(e14);
        } finally {
          this.persist({});
        }
    }));
    d8(this, "signOut", () => {
    });
    d8(this, "getAppState", () => this.appState);
    d8(this, "getPage", (e14 = this.currentPageId) => x7.getPage(this.state, e14 || this.currentPageId));
    d8(this, "getShapes", (e14 = this.currentPageId) => x7.getShapes(this.state, e14 || this.currentPageId));
    d8(this, "getBindings", (e14 = this.currentPageId) => x7.getBindings(this.state, e14 || this.currentPageId));
    d8(this, "getShape", (e14, t13 = this.currentPageId) => x7.getShape(this.state, e14, t13));
    d8(this, "getShapeBounds", (e14, t13 = this.currentPageId) => x7.getBounds(this.getShape(e14, t13)));
    d8(this, "getBinding", (e14, t13 = this.currentPageId) => x7.getBinding(this.state, e14, t13));
    d8(this, "getPageState", (e14 = this.currentPageId) => x7.getPageState(this.state, e14 || this.currentPageId));
    d8(this, "getPagePoint", (e14, t13 = this.currentPageId) => {
      let { camera: n10 } = this.getPageState(t13);
      return e.sub(e.div(e14, n10.zoom), n10.point);
    });
    d8(this, "createPage", (e14, t13) => {
      if (this.readOnly)
        return this;
      let { width: n10, height: o10 } = this.rendererBounds;
      return this.setState(Qa(this, [-n10 / 2, -o10 / 2], e14, t13));
    });
    d8(this, "changePage", (e14) => this.setState(qa(this, e14)));
    d8(this, "movePage", (e14, t13) => this.readOnly ? this : this.setState(cd(this, e14, t13)));
    d8(this, "renamePage", (e14, t13) => this.readOnly ? this : this.setState(pd(this, e14, t13)));
    d8(this, "duplicatePage", (e14) => this.readOnly ? this : this.setState(sd(this, e14)));
    d8(this, "deletePage", (e14) => this.readOnly ? this : Object.values(this.document.pages).length <= 1 ? this : this.setState(ed(this, e14 || this.currentPageId)));
    d8(this, "cut", (e14 = this.selectedIds, t13) => (t13 == null || t13.preventDefault(), this.copy(e14, t13), this.readOnly || this.delete(e14), this));
    d8(this, "copy", (e14 = this.selectedIds, t13) => {
      var i10;
      t13 == null || t13.preventDefault(), this.clipboard = this.getContent(e14);
      let o10 = `<tldraw>${JSON.stringify(f8({ type: "tldr/clipboard" }, this.clipboard))}</tldraw>`;
      return Rd(o10), t13 && ((i10 = t13.clipboardData) == null || i10.setData("text/html", o10)), navigator.clipboard && window.ClipboardItem && navigator.clipboard.write([new ClipboardItem({ "text/html": new Blob([o10], { type: "text/html" }) })]), this;
    });
    d8(this, "paste", (e14, t13) => ee(this, null, function* () {
      var c10, p10;
      if (this.readOnly)
        return;
      let n10 = [], o10 = [], i10, a10 = (u10) => ee(this, null, function* () {
        let h10 = document.createElement("div");
        h10.innerHTML = u10;
        let g10 = h10.firstChild;
        g10.style.setProperty("background-color", "transparent"), console.log(u10);
        let m10 = yield x7.getImageForSvg(g10, "svg", { scale: 1, quality: 1 });
        if (m10) {
          let T10 = new File([m10], "image.svg");
          o10.push(T10);
        } else
          l10(u10);
      }), l10 = (u10) => {
        let h10 = this.getPagePoint(e14 != null ? e14 : this.centerPoint, this.currentPageId), g10 = u10.includes(`
`);
        n10.push(x7.getShapeUtil("text").getShape({ id: Utils.uniqueId(), type: "text", parentId: this.appState.currentPageId, text: x7.normalizeText(u10.trim()), point: h10, style: C5(f8({}, this.appState.currentStyle), { textAlign: g10 ? "start" : this.appState.currentStyle.textAlign }) }));
      }, r11 = (u10) => {
        var h10;
        try {
          let g10 = (h10 = u10.match(/<tldraw>(.*)<\/tldraw>/)) == null ? void 0 : h10[1];
          if (!g10)
            return;
          let m10 = JSON.parse(g10);
          if (m10.type === "tldr/clipboard") {
            i10 = m10;
            return;
          } else
            throw Error("Not tldraw data!");
        } catch (g10) {
          l10(u10);
        }
      };
      if (t13 !== void 0) {
        let u10 = Array.from((p10 = (c10 = t13.clipboardData) == null ? void 0 : c10.items) != null ? p10 : []);
        yield Promise.all(u10.map((h10) => ee(this, null, function* () {
          var T10;
          let { type: g10, kind: m10 } = h10;
          switch (m10) {
            case "string": {
              let y10 = yield new Promise((b10) => h10.getAsString(b10));
              switch (g10) {
                case "text/html": {
                  if ((T10 = y10.match(/<tldraw>(.*)<\/tldraw>/)) == null ? void 0 : T10[1]) {
                    r11(y10);
                    return;
                  }
                  break;
                }
                case "text/plain": {
                  console.log(y10), y10.startsWith("<svg") ? a10(y10) : l10(y10);
                  break;
                }
              }
              break;
            }
            case "file": {
              let y10 = h10.getAsFile();
              y10 && o10.push(y10);
              break;
            }
          }
        })));
      }
      if (i10)
        return this.insertContent(i10, { point: e14, select: true }), this;
      if (o10.length)
        return this.addMediaFromFiles(o10, e14), this;
      if (n10.length) {
        let u10 = this.getPagePoint(e14 != null ? e14 : this.centerPoint, this.currentPageId), h10 = e.add(u10, [0, 0]);
        return n10.forEach((g10, m10) => {
          let T10 = x7.getBounds(g10);
          m10 === 0 && (h10[0] -= T10.width / 2, h10[1] -= T10.height / 2), g10.point = [...h10], h10[0] += T10.width;
        }), this.createShapes(...n10), this;
      }
      return this.clipboard ? this.insertContent(this.clipboard) : Ed().then((u10) => {
        u10 && r11(u10);
      }), this;
    }));
    d8(this, "getSvg", (...n10) => ee(this, [...n10], function* (e14 = this.selectedIds.length ? this.selectedIds : Object.keys(this.page.shapes), t13 = {}) {
      if (e14.length === 0)
        return;
      let o10 = document.createElementNS("http://www.w3.org/2000/svg", "svg"), i10 = document.createElementNS("http://www.w3.org/2000/svg", "defs"), a10 = document.createElementNS("http://www.w3.org/2000/svg", "style");
      if (typeof window != "undefined" && window.focus(), t13.includeFonts)
        try {
          let { fonts: p10 } = yield fetch(Ne.assetSrc, { mode: "no-cors" }).then((u10) => u10.json());
          a10.textContent = `
          @font-face {
            font-family: 'Caveat Brush';
            src: url(data:application/x-font-woff;charset=utf-8;base64,${p10.caveat}) format('woff');
            font-weight: 500;
            font-style: normal;
          }
          @font-face {
            font-family: 'Source Code Pro';
            src: url(data:application/x-font-woff;charset=utf-8;base64,${p10.source_code_pro}) format('woff');
            font-weight: 500;
            font-style: normal;
          }
          @font-face {
            font-family: 'Source Sans Pro';
            src: url(data:application/x-font-woff;charset=utf-8;base64,${p10.source_sans_pro}) format('woff');
            font-weight: 500;
            font-style: normal;
          }
          @font-face {
            font-family: 'Crimson Pro';
            src: url(data:application/x-font-woff;charset=utf-8;base64,${p10.crimson_pro}) format('woff');
            font-weight: 500;
            font-style: normal;
          }
          `;
        } catch (p10) {
          x7.warn("Could not find tldraw-assets.json file.");
        }
      else
        a10.textContent = "@import url('https://fonts.googleapis.com/css2?family=Caveat+Brush&family=Source+Code+Pro&family=Source+Sans+Pro&family=Crimson+Pro&display=block');";
      i10.append(a10), o10.append(i10);
      let l10 = e14.map((p10) => this.getShape(p10, this.currentPageId)).sort((p10, u10) => p10.childIndex - u10.childIndex), r11 = Utils.getCommonBounds(l10.map(x7.getRotatedBounds)), c10 = (p10) => {
        let u10 = x7.getShapeUtil(p10), h10 = u10.getBounds(p10), g10 = u10.getSvgElement(p10, this.settings.isDarkMode);
        if (!!g10)
          return p10.type === "image" ? g10.setAttribute("xlink:href", this.document.assets[p10.assetId].src) : p10.type === "video" && g10.setAttribute("xlink:href", this.serializeVideo(p10.id)), g10.setAttribute("transform", `translate(${(16 + p10.point[0] - r11.minX).toFixed(2)}, ${(16 + p10.point[1] - r11.minY).toFixed(2)}) rotate(${((p10.rotation || 0) * 180 / Math.PI).toFixed(2)}, ${(h10.width / 2).toFixed(2)}, ${(h10.height / 2).toFixed(2)})`), g10;
      };
      return l10.forEach((p10) => {
        var h10;
        if ((h10 = p10.children) == null ? void 0 : h10.length) {
          let g10 = document.createElementNS("http://www.w3.org/2000/svg", "g");
          p10.children.forEach((m10) => {
            let T10 = this.getShape(m10, this.currentPageId), y10 = c10(T10);
            y10 && g10.append(y10);
          }), o10.append(g10);
          return;
        }
        let u10 = c10(p10);
        u10 && o10.append(u10);
      }), o10.setAttribute("viewBox", [0, 0, r11.width + 16 * 2, r11.height + 16 * 2].join(" ")), o10.setAttribute("width", r11.width.toString()), o10.setAttribute("height", r11.height.toString()), t13.transparentBackground ? o10.style.setProperty("background-color", "transparent") : o10.style.setProperty("background-color", this.settings.isDarkMode ? "#212529" : "rgb(248, 249, 250)"), o10.querySelectorAll(".tl-fill-hitarea, .tl-stroke-hitarea, .tl-binding-indicator").forEach((p10) => p10.remove()), o10;
    }));
    d8(this, "copySvg", (...t13) => ee(this, [...t13], function* (e14 = this.selectedIds.length ? this.selectedIds : Object.keys(this.page.shapes)) {
      if (e14.length === 0)
        return;
      let n10 = yield this.getSvg(e14);
      if (!n10)
        return;
      let o10 = x7.getSvgString(n10, 1);
      this.clipboard = this.getContent(e14);
      let i10 = JSON.stringify(f8({ type: "tldr/clipboard" }, this.clipboard));
      return navigator.clipboard && window.ClipboardItem && navigator.clipboard.write([new ClipboardItem({ "text/html": new Blob([i10], { type: "text/html" }), "text/plain": new Blob([o10], { type: "text/plain" }) })]), o10;
    }));
    d8(this, "getContent", (e14) => {
      let t13 = this.getPage(this.currentPageId);
      if (e14 && e14.length === 0 || (e14 || (e14 = this.selectedIds), e14.length === 0 && (e14 = Object.keys(t13.shapes)), e14.length === 0))
        return;
      let n10 = e14.map((l10) => t13.shapes[l10]).flatMap((l10) => {
        var r11;
        return [l10, ...((r11 = l10.children) != null ? r11 : []).map((c10) => t13.shapes[c10])];
      }).map(dt), o10 = new Set(n10.map((l10) => l10.id));
      n10.forEach((l10) => {
        l10.parentId === this.currentPageId && (l10.parentId = "currentPageId");
      });
      let i10 = Object.values(t13.bindings).filter((l10) => {
        if (o10.has(l10.fromId) || o10.has(l10.toId))
          return true;
        if (o10.has(l10.fromId)) {
          let c10 = n10.find((p10) => p10.id === l10.fromId).handles;
          c10 && Object.values(c10).forEach((p10) => {
            p10.bindingId === l10.id && (p10.bindingId = void 0);
          });
        }
        if (o10.has(l10.toId)) {
          let c10 = n10.find((p10) => p10.id === l10.toId).handles;
          c10 && Object.values(c10).forEach((p10) => {
            p10.bindingId === l10.id && (p10.bindingId = void 0);
          });
        }
        return false;
      }).map(dt), a10 = [...new Set(n10.map((l10) => {
        if (!!l10.assetId)
          return this.document.assets[l10.assetId];
      }).filter(Boolean).map(dt))];
      return { shapes: n10, bindings: i10, assets: a10 };
    });
    d8(this, "copyJson", (e14 = this.selectedIds) => {
      let t13 = this.getContent(e14);
      return t13 && x7.copyStringToClipboard(JSON.stringify(t13)), this;
    });
    d8(this, "exportJson", (e14 = this.selectedIds) => {
      let t13 = this.getContent(e14);
      if (t13) {
        let n10 = new Blob([JSON.stringify(t13)], { type: "application/json" }), o10 = URL.createObjectURL(n10), i10 = document.createElement("a");
        i10.href = o10, i10.download = "export.json", i10.click();
      }
      return this;
    });
    d8(this, "insertContent", (e14, t13 = {}) => this.setState(xd(this, e14, t13), "insert_content"));
    d8(this, "getImage", (...n10) => ee(this, [...n10], function* (e14 = "png", t13 = {}) {
      let { ids: o10 = this.selectedIds.length ? this.selectedIds : Object.keys(this.page.shapes) } = t13, i10 = yield this.getSvg(o10, { includeFonts: e14 !== "svg", transparentBackground: e14 === "png" });
      if (!i10)
        return;
      if (e14 === "svg") {
        let l10 = x7.getSvgString(i10, 1);
        return new Blob([l10], { type: "image/svg+xml" });
      }
      let a10 = yield x7.getImageForSvg(i10, e14, t13);
      if (!!a10)
        return a10;
    }));
    d8(this, "copyImage", (...n10) => ee(this, [...n10], function* (e14 = "png", t13 = {}) {
      if (e14 === "svg") {
        this.copySvg(t13.ids);
        return;
      }
      if (!(navigator.clipboard && window.ClipboardItem)) {
        console.warn("Sorry, your browser does not support copying images.");
        return;
      }
      let o10 = yield this.getImage(e14, t13);
      !o10 || navigator.clipboard.write([new ClipboardItem({ [o10.type]: o10 })]);
    }));
    d8(this, "exportImage", (...n10) => ee(this, [...n10], function* (e14 = "png", t13 = {}) {
      var l10;
      let { pageId: o10 = this.currentPageId } = t13, i10 = yield this.getImage(e14, t13);
      if (!i10)
        return;
      let a10 = (l10 = this.document.pages[o10].name) != null ? l10 : "export";
      if (this.callbacks.onExport)
        this.callbacks.onExport(this, { name: a10, type: e14, blob: i10 });
      else {
        let r11 = URL.createObjectURL(i10), c10 = document.createElement("a");
        c10.href = r11, c10.download = `${a10}.${e14}`, c10.click();
      }
    }));
    d8(this, "setCamera", (e14, t13, n10) => (this.updateViewport(e14, t13), this.patchState({ document: { pageStates: { [this.currentPageId]: { camera: { point: e14, zoom: t13 } } } } }, n10), this));
    d8(this, "resetCamera", () => this.setCamera(this.centerPoint, 1, "reset_camera"));
    d8(this, "pan", (e14) => {
      let { camera: t13 } = this.pageState;
      return this.setCamera(e.toFixed(e.sub(t13.point, e14)), t13.zoom, "panned");
    });
    d8(this, "pinchZoom", (e14, t13, n10) => {
      let { camera: o10 } = this.pageState, i10 = e.sub(o10.point, e.div(t13, o10.zoom)), a10 = n10, l10 = e.sub(e.div(e14, o10.zoom), i10), r11 = e.sub(e.div(e14, a10), i10);
      return this.setCamera(e.toFixed(e.add(i10, e.sub(r11, l10))), a10, "pinch_zoomed");
    });
    d8(this, "zoomTo", (e14, t13 = this.centerPoint) => {
      let { zoom: n10, point: o10 } = this.camera, i10 = e.sub(e.div(t13, n10), o10), a10 = e.sub(e.div(t13, e14), o10);
      return this.setCamera(e.toFixed(e.add(o10, e.sub(a10, i10))), e14, "zoomed_camera");
    });
    d8(this, "zoomIn", () => {
      let e14 = Math.round(this.camera.zoom * 100 / 25), t13 = x7.getCameraZoom((e14 + 1) * 0.25);
      return this.zoomTo(t13);
    });
    d8(this, "zoomOut", () => {
      let e14 = Math.round(this.camera.zoom * 100 / 25), t13 = x7.getCameraZoom((e14 - 1) * 0.25);
      return this.zoomTo(t13);
    });
    d8(this, "zoomToFit", () => {
      let { shapes: e14, pageState: { camera: t13 } } = this;
      if (e14.length === 0)
        return this;
      let { rendererBounds: n10 } = this, o10 = Utils.getCommonBounds(e14.map(x7.getBounds)), i10 = x7.getCameraZoom(Math.min((n10.width - 128) / o10.width, (n10.height - 128) / o10.height));
      i10 = t13.zoom === i10 || t13.zoom < 1 ? Math.min(1, i10) : i10;
      let a10 = (n10.width - o10.width * i10) / 2 / i10, l10 = (n10.height - o10.height * i10) / 2 / i10;
      return this.setCamera(e.toFixed(e.sub([a10, l10], [o10.minX, o10.minY])), i10, "zoomed_to_fit");
    });
    d8(this, "zoomToSelection", () => {
      if (this.selectedIds.length === 0)
        return this;
      let { rendererBounds: e14 } = this, t13 = x7.getSelectedBounds(this.state), n10 = x7.getCameraZoom(Math.min((e14.width - 128) / t13.width, (e14.height - 128) / t13.height));
      n10 = this.camera.zoom === n10 || this.camera.zoom < 1 ? Math.min(1, n10) : n10;
      let o10 = (e14.width - t13.width * n10) / 2 / n10, i10 = (e14.height - t13.height * n10) / 2 / n10;
      return this.setCamera(e.toFixed(e.sub([o10, i10], [t13.minX, t13.minY])), n10, "zoomed_to_selection");
    });
    d8(this, "zoomToContent", () => {
      let e14 = this.shapes, t13 = this.pageState;
      if (e14.length === 0)
        return this;
      let { rendererBounds: n10 } = this, { zoom: o10 } = t13.camera, i10 = Utils.getCommonBounds(e14.map(x7.getBounds)), a10 = (n10.width - i10.width * o10) / 2 / o10, l10 = (n10.height - i10.height * o10) / 2 / o10;
      return this.setCamera(e.toFixed(e.sub([a10, l10], [i10.minX, i10.minY])), this.camera.zoom, "zoomed_to_content");
    });
    d8(this, "resetZoom", () => this.zoomTo(1));
    d8(this, "zoomBy", Utils.throttle((e14, t13) => {
      let { zoom: n10 } = this.camera, o10 = x7.getCameraZoom(n10 - e14 * n10);
      return this.zoomTo(o10, t13);
    }, 16));
    d8(this, "clearSelectHistory", () => (this.selectHistory.pointer = 0, this.selectHistory.stack = [this.selectedIds], this));
    d8(this, "addToSelectHistory", (e14) => (this.selectHistory.pointer < this.selectHistory.stack.length && (this.selectHistory.stack = this.selectHistory.stack.slice(0, this.selectHistory.pointer + 1)), this.selectHistory.pointer++, this.selectHistory.stack.push(e14), this));
    d8(this, "setSelectedIds", (e14, t13 = false) => {
      let n10 = t13 ? [...this.pageState.selectedIds, ...e14] : [...e14];
      return this.patchState({ appState: { activeTool: "select" }, document: { pageStates: { [this.currentPageId]: { selectedIds: n10 } } } }, "selected");
    });
    d8(this, "undoSelect", () => (this.selectHistory.pointer > 0 && (this.selectHistory.pointer--, this.setSelectedIds(this.selectHistory.stack[this.selectHistory.pointer])), this));
    d8(this, "redoSelect", () => (this.selectHistory.pointer < this.selectHistory.stack.length - 1 && (this.selectHistory.pointer++, this.setSelectedIds(this.selectHistory.stack[this.selectHistory.pointer])), this));
    d8(this, "select", (...e14) => (e14.forEach((t13) => {
      if (!this.page.shapes[t13])
        throw Error(`That shape does not exist on page ${this.currentPageId}`);
    }), this.setSelectedIds(e14), this.addToSelectHistory(e14), this));
    d8(this, "selectAll", (e14 = this.currentPageId) => this.session ? this : (this.setSelectedIds(Object.values(this.document.pages[e14].shapes).filter((t13) => t13.parentId === e14).map((t13) => t13.id)), this.addToSelectHistory(this.selectedIds), this.selectTool("select"), this));
    d8(this, "selectNone", () => (this.setSelectedIds([]), this.addToSelectHistory(this.selectedIds), this));
    d8(this, "startSession", (e14, ...t13) => {
      var i10, a10;
      if (this.readOnly && e14 !== "brush")
        return this;
      this.session && (x7.warn(`Already in a session! (${this.session.constructor.name})`), this.cancelSession());
      let n10 = Pd(e14);
      this.session = new n10(this, ...t13);
      let o10 = this.session.start();
      return o10 && this.patchState(o10, `session:start_${this.session.constructor.name}`), (a10 = (i10 = this.callbacks).onSessionStart) == null || a10.call(i10, this, this.session.constructor.name), this;
    });
    d8(this, "updateSession", () => {
      let { session: e14 } = this;
      if (!e14)
        return this;
      let t13 = e14.update();
      return t13 ? this.patchState(t13, `session:${e14 == null ? void 0 : e14.constructor.name}`) : this;
    });
    d8(this, "cancelSession", () => {
      var n10, o10;
      let { session: e14 } = this;
      if (!e14)
        return this;
      this.session = void 0;
      let t13 = e14.cancel();
      return t13 && this.patchState(t13, `session:cancel:${e14.constructor.name}`), this.setEditingId(), (o10 = (n10 = this.callbacks).onSessionEnd) == null || o10.call(n10, this, e14.constructor.name), this;
    });
    d8(this, "completeSession", () => {
      var n10, o10, i10, a10, l10, r11, c10, p10, u10;
      let { session: e14 } = this;
      if (!e14)
        return this;
      this.session = void 0;
      let t13 = e14.complete();
      if (t13 === void 0)
        this.isCreating = false, this.patchState({ appState: { status: "idle" }, document: { pageStates: { [this.currentPageId]: { editingId: void 0, bindingId: void 0, hoveredId: void 0 } } } }, `session:complete:${e14.constructor.name}`);
      else if ("after" in t13) {
        if (this.isCreating) {
          if (t13.before = { appState: C5(f8({}, t13.before.appState), { status: "idle" }), document: { pages: { [this.currentPageId]: { shapes: Object.fromEntries(this.selectedIds.map((h10) => [h10, void 0])) } }, pageStates: { [this.currentPageId]: { selectedIds: [], editingId: null, bindingId: null, hoveredId: null } } } }, this.appState.isToolLocked) {
            let h10 = ((i10 = (o10 = (n10 = t13.after) == null ? void 0 : n10.document) == null ? void 0 : o10.pageStates) == null ? void 0 : i10[this.currentPageId]) || {};
            h10.selectedIds = [];
          }
          this.isCreating = false;
        }
        t13.after.appState = C5(f8({}, t13.after.appState), { status: "idle" }), t13.after.document = C5(f8({}, t13.after.document), { pageStates: C5(f8({}, (a10 = t13.after.document) == null ? void 0 : a10.pageStates), { [this.currentPageId]: C5(f8({}, (((l10 = t13.after.document) == null ? void 0 : l10.pageStates) || {})[this.currentPageId]), { editingId: null }) }) }), this.setState(t13, `session:complete:${e14.constructor.name}`);
      } else
        this.patchState(C5(f8({}, t13), { appState: C5(f8({}, t13.appState), { status: "idle" }), document: C5(f8({}, t13.document), { pageStates: { [this.currentPageId]: C5(f8({}, (c10 = (r11 = t13.document) == null ? void 0 : r11.pageStates) == null ? void 0 : c10[this.currentPageId]), { editingId: null }) } }) }), `session:complete:${e14.constructor.name}`);
      return (u10 = (p10 = this.callbacks).onSessionEnd) == null || u10.call(p10, this, e14.constructor.name), this;
    });
    d8(this, "createShapes", (...e14) => e14.length === 0 ? this : this.create(e14.map((t13) => x7.getShapeUtil(t13.type).create(f8({ parentId: this.currentPageId }, t13)))));
    d8(this, "updateShapes", (...e14) => {
      let t13 = this.document.pages[this.currentPageId].shapes, n10 = e14.filter((o10) => t13[o10.id]);
      return n10.length === 0 ? this : this.setState(Ci(this, n10, this.currentPageId), "updated_shapes");
    });
    d8(this, "create", (e14 = [], t13 = []) => e14.length === 0 ? this : this.setState(Si(this, e14, t13)));
    d8(this, "patchCreate", (e14 = [], t13 = []) => e14.length === 0 ? this : this.patchState(Si(this, e14, t13).after));
    d8(this, "delete", (e14 = this.selectedIds) => {
      var n10, o10;
      if (e14.length === 0)
        return this;
      let t13 = Ti(this, e14);
      if (this.callbacks.onAssetDelete && ((n10 = t13.before.document) == null ? void 0 : n10.assets) && ((o10 = t13.after.document) == null ? void 0 : o10.assets)) {
        let i10 = Object.keys(t13.before.document.assets).filter((r11) => !!t13.before.document.assets[r11]), a10 = Object.keys(t13.after.document.assets).filter((r11) => !!t13.after.document.assets[r11]);
        i10.filter((r11) => !a10.includes(r11)).forEach((r11) => this.callbacks.onAssetDelete(this, r11));
      }
      return this.setState(t13);
    });
    d8(this, "deleteAll", () => (this.selectAll(), this.delete(), this));
    d8(this, "style", (e14, t13 = this.selectedIds) => this.setState(fd(this, t13, e14)));
    d8(this, "align", (e14, t13 = this.selectedIds) => t13.length < 2 ? this : this.setState(Xa(this, t13, e14)));
    d8(this, "distribute", (e14, t13 = this.selectedIds) => t13.length < 3 ? this : this.setState(od(this, t13, e14)));
    d8(this, "stretch", (e14, t13 = this.selectedIds) => t13.length < 2 ? this : this.setState(gd(this, t13, e14)));
    d8(this, "flipHorizontal", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(wi(this, e14, "horizontal")));
    d8(this, "flipVertical", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(wi(this, e14, "vertical")));
    d8(this, "moveToPage", (e14, t13 = this.currentPageId, n10 = this.selectedIds) => {
      if (n10.length === 0)
        return this;
      let { rendererBounds: o10 } = this;
      return this.setState(ld(this, n10, o10, t13, e14)), this;
    });
    d8(this, "moveToBack", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(Do(this, e14, "toBack")));
    d8(this, "moveBackward", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(Do(this, e14, "backward")));
    d8(this, "moveForward", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(Do(this, e14, "forward")));
    d8(this, "moveToFront", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(Do(this, e14, "toFront")));
    d8(this, "nudge", (e14, t13 = false, n10 = this.selectedIds) => {
      if (n10.length === 0)
        return this;
      let o10 = t13 ? this.settings.showGrid ? this.currentGrid * 4 : 10 : this.settings.showGrid ? this.currentGrid : 1;
      return this.setState(bd(this, n10, e.mul(e14, o10)));
    });
    d8(this, "duplicate", (e14 = this.selectedIds, t13) => this.readOnly ? this : e14.length === 0 ? this : this.setState(id(this, e14, t13)));
    d8(this, "resetBounds", (e14 = this.selectedIds) => {
      let t13 = xi(this, e14, this.currentPageId);
      return this.setState(xi(this, e14, this.currentPageId), t13.id);
    });
    d8(this, "toggleHidden", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(gs(this, e14, "isHidden")));
    d8(this, "toggleLocked", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(gs(this, e14, "isLocked")));
    d8(this, "toggleAspectRatioLocked", (e14 = this.selectedIds) => e14.length === 0 ? this : this.setState(gs(this, e14, "isAspectRatioLocked")));
    d8(this, "toggleDecoration", (e14, t13 = this.selectedIds) => t13.length === 0 || !(e14 === "start" || e14 === "end") ? this : this.setState(Sd(this, t13, e14)));
    d8(this, "setShapeProps", (e14, t13 = this.selectedIds) => this.setState(wd(this, t13, e14)));
    d8(this, "rotate", (e14 = Math.PI * -0.5, t13 = this.selectedIds) => {
      if (t13.length === 0)
        return this;
      let n10 = hd(this, t13, e14);
      return n10 ? this.setState(n10) : this;
    });
    d8(this, "group", (e14 = this.selectedIds, t13 = Utils.uniqueId(), n10 = this.currentPageId) => {
      if (this.readOnly)
        return this;
      if (e14.length === 1 && this.getShape(e14[0], n10).type === "group")
        return this.ungroup(e14, n10);
      if (e14.length < 2)
        return this;
      let o10 = ad(this, e14, t13, n10);
      return o10 ? this.setState(o10) : this;
    });
    d8(this, "ungroup", (e14 = this.selectedIds, t13 = this.currentPageId) => {
      if (this.readOnly)
        return this;
      let n10 = e14.map((i10) => this.getShape(i10, t13)).filter((i10) => i10.type === "group");
      if (n10.length === 0)
        return this;
      let o10 = yd(this, e14, n10, t13);
      return o10 ? this.setState(o10) : this;
    });
    d8(this, "cancel", () => {
      var e14, t13;
      return (t13 = (e14 = this.currentTool).onCancel) == null || t13.call(e14), this;
    });
    d8(this, "addMediaFromFiles", (n10, ...o10) => ee(this, [n10, ...o10], function* (e14, t13 = this.centerPoint) {
      this.setIsLoading(true);
      let i10 = [], a10 = this.getPagePoint(t13);
      for (let l10 of e14) {
        let r11 = Utils.uniqueId(), c10 = l10.name.match(/\.[0-9a-z]+$/i);
        if (!c10)
          throw Error("No extension");
        let p10 = es.includes(c10[0].toLowerCase()), u10 = ts.includes(c10[0].toLowerCase());
        if (!(p10 || u10))
          throw Error("Wrong extension");
        let h10 = p10 ? "image" : "video", g10 = p10 ? "image" : "video", m10;
        try {
          if (this.callbacks.onAssetCreate) {
            let T10 = yield this.callbacks.onAssetCreate(this, l10, r11);
            if (!T10)
              throw Error("Asset creation callback returned false");
            m10 = T10;
          } else
            m10 = yield Nr(l10);
          if (typeof m10 == "string") {
            let T10 = [0, 0];
            if (p10) {
              if (c10[0] == ".svg") {
                let S10, w10 = yield Kr(l10), D10 = this.getViewboxFromSVG(w10);
                D10 && (S10 = D10.split(" "), T10[0] = parseFloat(S10[2]), T10[1] = parseFloat(S10[3]));
              }
              e.isEqual(T10, [0, 0]) && (T10 = yield Wr(m10));
            } else
              T10 = yield _r(m10);
            let y10 = Object.values(this.document.assets).find((S10) => S10.type === g10 && S10.src === m10), b10;
            if (y10)
              b10 = y10.id;
            else {
              b10 = Utils.uniqueId();
              let S10 = { id: b10, type: g10, name: l10.name, src: m10, size: T10 };
              this.patchState({ document: { assets: { [b10]: S10 } } });
            }
            i10.push(this.getImageOrVideoShapeAtPoint(r11, h10, t13, T10, b10));
          }
        } catch (T10) {
          console.warn(T10);
        }
      }
      if (i10.length) {
        let l10 = e.add(a10, [0, 0]);
        i10.forEach((c10, p10) => {
          let u10 = x7.getBounds(c10);
          p10 === 0 && (l10[0] -= u10.width / 2, l10[1] -= u10.height / 2), c10.point = [...l10], l10[0] += u10.width;
        });
        let r11 = Utils.getCommonBounds(i10.map(x7.getBounds));
        this.createShapes(...i10), Utils.boundsContain(this.viewport, r11) || (this.zoomToSelection(), this.zoom > 1 && this.resetZoom());
      }
      return this.setIsLoading(false), this;
    }));
    d8(this, "getViewboxFromSVG", (e14) => {
      let t13 = /.*?viewBox=["'](-?[\d.]+[, ]+-?[\d.]+[, ][\d.]+[, ][\d.]+)["']/;
      if (typeof e14 == "string") {
        let n10 = e14.match(t13);
        return n10 && n10.length >= 2 ? n10[1] : null;
      }
      return console.warn("could not get viewbox from svg string"), this.setIsLoading(false), null;
    });
    d8(this, "onKeyDown", (e14, t13, n10) => {
      var o10, i10;
      switch (n10.key) {
        case "/": {
          if (this.status === "idle" && !this.pageState.editingId) {
            let { shiftKey: a10, metaKey: l10, altKey: r11, ctrlKey: c10, spaceKey: p10 } = this;
            this.onPointerDown({ target: "canvas", pointerId: 0, origin: t13.point, point: t13.point, delta: [0, 0], pressure: 0.5, shiftKey: a10, ctrlKey: c10, metaKey: l10, altKey: r11, spaceKey: p10 }, { shiftKey: a10, altKey: r11, ctrlKey: c10, pointerId: 0, clientX: t13.point[0], clientY: t13.point[1] });
          }
          break;
        }
        case "Escape": {
          this.cancel();
          break;
        }
        case "Meta": {
          this.metaKey = true;
          break;
        }
        case "Alt": {
          this.altKey = true;
          break;
        }
        case "Control": {
          this.ctrlKey = true;
          break;
        }
        case " ": {
          this.isForcePanning = true, this.spaceKey = true;
          break;
        }
      }
      return (i10 = (o10 = this.currentTool).onKeyDown) == null || i10.call(o10, e14, t13, n10), this;
    });
    d8(this, "onKeyUp", (e14, t13, n10) => {
      var o10, i10;
      if (!!t13) {
        switch (n10.key) {
          case "/": {
            let { currentPoint: a10, shiftKey: l10, metaKey: r11, altKey: c10, ctrlKey: p10, spaceKey: u10 } = this;
            this.onPointerUp({ target: "canvas", pointerId: 0, origin: a10, point: a10, delta: [0, 0], pressure: 0.5, shiftKey: l10, ctrlKey: p10, metaKey: r11, altKey: c10, spaceKey: u10 }, { shiftKey: l10, altKey: c10, ctrlKey: p10, pointerId: 0, clientX: a10[0], clientY: a10[1] });
            break;
          }
          case "Meta": {
            this.metaKey = false;
            break;
          }
          case "Alt": {
            this.altKey = false;
            break;
          }
          case "Control": {
            this.ctrlKey = false;
            break;
          }
          case " ": {
            this.isForcePanning = false, this.spaceKey = false;
            break;
          }
        }
        (i10 = (o10 = this.currentTool).onKeyUp) == null || i10.call(o10, e14, t13, n10);
      }
    });
    d8(this, "refreshBoundingBoxes", () => {
      let e14 = this.shapes.map((n10) => [n10.id, f8({ point: [...n10.point] }, "label" in n10 && { label: "" })]), t13 = this.shapes.map((n10) => [n10.id, f8({ point: [...n10.point] }, "label" in n10 && { label: n10.label })]);
      qr(), this.patchState({ document: { pages: { [this.currentPageId]: { shapes: Object.fromEntries(e14) } } } }), this.patchState({ document: { pages: { [this.currentPageId]: { shapes: Object.fromEntries(t13) } } } });
    });
    d8(this, "onDragOver", (e14) => {
      e14.preventDefault();
    });
    d8(this, "onDrop", (e14) => ee(this, null, function* () {
      var t13;
      return e14.preventDefault(), this.disableAssets ? this : (((t13 = e14.dataTransfer.files) == null ? void 0 : t13.length) && this.addMediaFromFiles(Object.values(e14.dataTransfer.files), [e14.clientX, e14.clientY]), this);
    }));
    d8(this, "onPinchStart", (e14, t13) => {
      var n10, o10;
      (o10 = (n10 = this.currentTool).onPinchStart) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onPinchEnd", (e14, t13) => {
      var n10, o10;
      return (o10 = (n10 = this.currentTool).onPinchEnd) == null ? void 0 : o10.call(n10, e14, t13);
    });
    d8(this, "onPinch", (e14, t13) => {
      var n10, o10;
      return (o10 = (n10 = this.currentTool).onPinch) == null ? void 0 : o10.call(n10, e14, t13);
    });
    d8(this, "onPan", (e14, t13) => {
      if (this.appState.status === "pinching")
        return;
      let n10 = e.div(e14.delta, this.camera.zoom), o10 = this.camera.point, i10 = e.sub(o10, n10);
      e.isEqual(i10, o10) || (this.pan(n10), this.isForcePanning || this.onPointerMove(e14, t13));
    });
    d8(this, "onZoom", (e14, t13) => {
      if (this.state.appState.status !== "idle")
        return;
      let n10 = e14.delta[2] / 50;
      this.zoomBy(n10, e14.point), this.onPointerMove(e14, t13);
    });
    d8(this, "updateInputs", (e14) => {
      this.currentPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.shiftKey = e14.shiftKey, this.altKey = e14.altKey, this.ctrlKey = e14.ctrlKey, this.metaKey = e14.metaKey;
    });
    d8(this, "onPointerMove", (e14, t13) => {
      var n10, o10, i10, a10, l10;
      if (this.previousPoint = this.currentPoint, this.updateInputs(e14, t13), this.isForcePanning && this.isPointing) {
        (n10 = this.onPan) == null || n10.call(this, C5(f8({}, e14), { delta: e.neg(e14.delta) }), t13);
        return;
      }
      if ((i10 = (o10 = this.currentTool).onPointerMove) == null || i10.call(o10, e14, t13), this.state.room) {
        let { users: r11, userId: c10 } = this.state.room;
        (l10 = (a10 = this.callbacks).onChangePresence) == null || l10.call(a10, this, C5(f8({}, r11[c10]), { point: this.getPagePoint(e14.point), session: !!this.session }));
      }
    });
    d8(this, "onPointerDown", (e14, t13) => {
      var n10, o10;
      if (t13.buttons === 4)
        this.isForcePanning = true;
      else if (this.isPointing)
        return;
      this.isPointing = true, this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), !this.isForcePanning && ((o10 = (n10 = this.currentTool).onPointerDown) == null || o10.call(n10, e14, t13));
    });
    d8(this, "onPointerUp", (e14, t13) => {
      var n10, o10;
      this.isPointing = false, this.shiftKey || (this.isForcePanning = false), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onPointerUp) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onPointCanvas", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onPointCanvas) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDoubleClickCanvas", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDoubleClickCanvas) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onRightPointCanvas", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onRightPointCanvas) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDragCanvas", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDragCanvas) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onReleaseCanvas", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onReleaseCanvas) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onPointShape", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onPointShape) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onReleaseShape", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onReleaseShape) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDoubleClickShape", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDoubleClickShape) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onRightPointShape", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onRightPointShape) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDragShape", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDragShape) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onHoverShape", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onHoverShape) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onUnhoverShape", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onUnhoverShape) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onPointBounds", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onPointBounds) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDoubleClickBounds", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDoubleClickBounds) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onRightPointBounds", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onRightPointBounds) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDragBounds", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDragBounds) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onHoverBounds", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onHoverBounds) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onUnhoverBounds", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onUnhoverBounds) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onReleaseBounds", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onReleaseBounds) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onPointBoundsHandle", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onPointBoundsHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDoubleClickBoundsHandle", (e14, t13) => {
      var o10, i10;
      if (this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (i10 = (o10 = this.currentTool).onDoubleClickBoundsHandle) == null || i10.call(o10, e14, t13), this.selectedIds.length !== 1)
        return;
      let n10 = this.getShape(this.selectedIds[0]);
      if (n10.type === "image" || n10.type === "video") {
        let a10 = this.document.assets[n10.assetId], l10 = x7.getShapeUtil(n10), r11 = l10.getCenter(n10), c10 = l10.getCenter(C5(f8({}, n10), { size: a10.size })), p10 = e.sub(c10, r11);
        this.updateShapes({ id: n10.id, point: e.sub(n10.point, p10), size: a10.size });
      }
    });
    d8(this, "onRightPointBoundsHandle", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onRightPointBoundsHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDragBoundsHandle", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDragBoundsHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onHoverBoundsHandle", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onHoverBoundsHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onUnhoverBoundsHandle", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onUnhoverBoundsHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onReleaseBoundsHandle", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onReleaseBoundsHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onPointHandle", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onPointHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDoubleClickHandle", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDoubleClickHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onRightPointHandle", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onRightPointHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onDragHandle", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onDragHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onHoverHandle", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onHoverHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onUnhoverHandle", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onUnhoverHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onReleaseHandle", (e14, t13) => {
      var n10, o10;
      this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onReleaseHandle) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onShapeChange", (e14) => {
      let t13 = this.document.pages[this.currentPageId].shapes, n10 = f8(f8({}, t13[e14.id]), e14), o10 = Ci(this, [n10], this.currentPageId).after;
      return this.patchState(o10, "patched_shapes");
    });
    d8(this, "onShapeBlur", () => {
      var n10, o10;
      if (performance.now() - this.editingStartTime < 50)
        return;
      let { editingId: e14 } = this.pageState, { isToolLocked: t13 } = this.getAppState();
      if (e14) {
        let i10 = this.getShape(e14);
        this.setEditingId(), i10.type === "text" && (i10.text.trim().length <= 0 ? this.patchState(Ti(this, [e14]).after, "delete_empty_text") : t13 || this.select(e14));
      }
      (o10 = (n10 = this.currentTool).onShapeBlur) == null || o10.call(n10);
    });
    d8(this, "onShapeClone", (e14, t13) => {
      var n10, o10;
      this.originPoint = this.getPagePoint(e14.point).concat(e14.pressure), this.updateInputs(e14, t13), (o10 = (n10 = this.currentTool).onShapeClone) == null || o10.call(n10, e14, t13);
    });
    d8(this, "onRenderCountChange", (e14) => {
      let t13 = this.getAppState();
      t13.isEmptyCanvas && e14.length > 0 ? this.patchState({ appState: { isEmptyCanvas: false } }, "empty_canvas:false") : !t13.isEmptyCanvas && e14.length <= 0 && this.patchState({ appState: { isEmptyCanvas: true } }, "empty_canvas:true");
    });
    d8(this, "onError", () => {
    });
    d8(this, "getShapeUtil", x7.getShapeUtil);
    this.callbacks = t12;
  }
  setStatus(e13) {
    return this.patchState({ appState: { status: e13 } }, `set_status:${e13}`);
  }
  get isMenuOpen() {
    return this.appState.isMenuOpen;
  }
  get isLoading() {
    return this.appState.isLoading;
  }
  get disableAssets() {
    return this.appState.disableAssets;
  }
  get history() {
    return this.stack.slice(0, this.pointer + 1);
  }
  set history(e13) {
    this.replaceHistory(e13);
  }
  get document() {
    return this.state.document;
  }
  get settings() {
    return this.state.settings;
  }
  get appState() {
    return this.state.appState;
  }
  get currentPageId() {
    return this.state.appState.currentPageId;
  }
  get page() {
    return this.state.document.pages[this.currentPageId];
  }
  get shapes() {
    return Object.values(this.page.shapes);
  }
  get bindings() {
    return Object.values(this.page.bindings);
  }
  get assets() {
    return Object.values(this.document.assets);
  }
  get pageState() {
    return this.state.document.pageStates[this.currentPageId];
  }
  get camera() {
    return this.pageState.camera;
  }
  get zoom() {
    return this.pageState.camera.zoom;
  }
  get selectedIds() {
    return this.pageState.selectedIds;
  }
  createTextShapeAtPoint(e13, t12, n10) {
    let { shapes: o10, appState: { currentPageId: i10, currentStyle: a10 } } = this, l10 = o10.length === 0 ? 1 : o10.filter((u10) => u10.parentId === i10).sort((u10, h10) => h10.childIndex - u10.childIndex)[0].childIndex + 1, r11 = mn["text"], c10 = r11.create({ id: t12 || Utils.uniqueId(), parentId: i10, childIndex: l10, point: e13, style: f8({}, a10) }), p10 = r11.getBounds(c10);
    return c10.point = e.sub(c10.point, [p10.width / 2, p10.height / 2]), n10 ? this.patchCreate([x7.getShapeUtil(c10.type).create(c10)]) : this.createShapes(c10), this.setEditingId(c10.id, true), this;
  }
  getImageOrVideoShapeAtPoint(e13, t12, n10, o10, i10) {
    let { shapes: a10, appState: { currentPageId: l10, currentStyle: r11 } } = this, c10 = a10.length === 0 ? 1 : a10.filter((h10) => h10.parentId === l10).sort((h10, g10) => g10.childIndex - h10.childIndex)[0].childIndex + 1, p10 = mn[t12];
    if (o10[0] > this.viewport.width) {
      let h10 = o10[1] / o10[0];
      o10[0] = this.viewport.width - 128 / this.camera.zoom * 2, o10[1] = o10[0] * h10, (o10[1] < 32 || o10[1] < 32) && (o10[1] = 32, o10[0] = o10[1] / h10);
    } else if (o10[1] > this.viewport.height) {
      let h10 = o10[0] / o10[1];
      o10[1] = this.viewport.height - 128 / this.camera.zoom * 2, o10[0] = o10[1] * h10, (o10[1] < 32 || o10[1] < 32) && (o10[0] = 32, o10[1] = o10[0] / h10);
    }
    return p10.create({ id: e13, parentId: l10, childIndex: c10, point: n10, size: o10, style: f8({}, r11), assetId: i10 });
  }
  isSelected(e13) {
    return this.selectedIds.includes(e13);
  }
  serializeVideo(e13) {
    let t12 = document.getElementById(e13 + "_video");
    if (t12) {
      let n10 = document.createElement("canvas");
      return n10.width = t12.videoWidth, n10.height = t12.videoHeight, n10.getContext("2d").drawImage(t12, 0, 0), n10.toDataURL("image/png");
    } else
      throw new Error("Video with id " + e13 + " not found");
  }
  serializeImage(e13) {
    let t12 = document.getElementById(e13 + "_image");
    if (t12) {
      let n10 = document.createElement("canvas");
      return n10.width = t12.width, n10.height = t12.height, n10.getContext("2d").drawImage(t12, 0, 0), n10.toDataURL("image/png");
    } else
      throw new Error("Image with id " + e13 + " not found");
  }
  patchAssets(e13) {
    this.document.assets = f8(f8({}, this.document.assets), e13);
  }
  get room() {
    return this.state.room;
  }
  get isLocal() {
    return this.state.room === void 0 || this.state.room.id === "local";
  }
  get status() {
    return this.appState.status;
  }
  get currentUser() {
    if (!!this.state.room)
      return this.state.room.users[this.state.room.userId];
  }
  get centerPoint() {
    let { width: e13, height: t12 } = this.rendererBounds;
    return e.toFixed([e13 / 2, t12 / 2]);
  }
  get currentGrid() {
    let { zoom: e13 } = this.camera;
    return e13 < 0.15 ? 8 * 16 : e13 < 1 ? 8 * 4 : 8 * 1;
  }
};
var Sn = Ne;
d8(Sn, "version", 15.4), d8(Sn, "defaultDocument", { id: "doc", name: "New Document", version: Ne.version, pages: { page: { id: "page", name: "Page 1", childIndex: 1, shapes: {}, bindings: {} } }, pageStates: { page: { id: "page", selectedIds: [], camera: { point: [0, 0], zoom: 1 } } }, assets: {} }), d8(Sn, "defaultState", { settings: { isCadSelectMode: false, isPenMode: false, isDarkMode: false, isZoomSnap: false, isFocusMode: false, isSnapping: false, isDebugMode: false, isReadonlyMode: false, keepStyleMenuOpen: false, nudgeDistanceLarge: 16, nudgeDistanceSmall: 1, showRotateHandles: true, showBindingHandles: true, showCloneHandles: false, showGrid: false, language: "en", dockPosition: "bottom" }, appState: { status: "idle", activeTool: "select", hoveredId: void 0, currentPageId: "page", currentStyle: Ze, isToolLocked: false, isMenuOpen: false, isEmptyCanvas: false, eraseLine: [], snapLines: [], isLoading: false, disableAssets: false }, document: Ne.defaultDocument }), d8(Sn, "assetSrc", "tldraw-assets.json");
var Kte = { select: Ro, erase: Lo, ["text"]: Ao, ["draw"]: Ho, ["ellipse"]: zo, ["rectangle"]: Oo, ["triangle"]: Fo, ["line"]: jo, ["arrow"]: Uo, ["sticky"]: Go };
function Ld(s10) {
  let e13 = ae(), t12 = Ts.useCallback((r11 = false) => {
    let c10 = s10.current;
    return r11 && (e13.isMenuOpen || e13.settings.keepStyleMenuOpen) ? true : c10 && (document.activeElement === c10 || c10.contains(document.activeElement));
  }, [s10]);
  Ts.useEffect(() => {
    if (!e13)
      return;
    let r11 = (u10) => {
      if (!!t12(true)) {
        if (e13.readOnly) {
          e13.copy(void 0, u10);
          return;
        }
        e13.cut(void 0, u10);
      }
    }, c10 = (u10) => {
      !t12(true) || e13.copy(void 0, u10);
    }, p10 = (u10) => {
      !t12(true) || e13.readOnly || e13.paste(void 0, u10);
    };
    return document.addEventListener("cut", r11), document.addEventListener("copy", c10), document.addEventListener("paste", p10), () => {
      document.removeEventListener("cut", r11), document.removeEventListener("copy", c10), document.removeEventListener("paste", p10);
    };
  }, [e13]), useHotkeys("v,1", () => {
    !t12(true) || e13.selectTool("select");
  }, [e13, s10.current]), useHotkeys("d,p,2", () => {
    !t12(true) || e13.selectTool("draw");
  }, void 0, [e13]), useHotkeys("e,3", () => {
    !t12(true) || e13.selectTool("erase");
  }, void 0, [e13]), useHotkeys("r,4", () => {
    !t12(true) || e13.selectTool("rectangle");
  }, void 0, [e13]), useHotkeys("o,5", () => {
    !t12(true) || e13.selectTool("ellipse");
  }, void 0, [e13]), useHotkeys("g,6", () => {
    !t12() || e13.selectTool("triangle");
  }, void 0, [e13]), useHotkeys("l,7", () => {
    !t12(true) || e13.selectTool("line");
  }, void 0, [e13]), useHotkeys("a,8", () => {
    !t12(true) || e13.selectTool("arrow");
  }, void 0, [e13]), useHotkeys("t,9", () => {
    !t12(true) || e13.selectTool("text");
  }, void 0, [e13]), useHotkeys("s,0", () => {
    !t12(true) || e13.selectTool("sticky");
  }, void 0, [e13]), useHotkeys("ctrl+shift+d,\u2318+shift+d", (r11) => {
    !t12(true) || (e13.toggleDarkMode(), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("ctrl+.,\u2318+.", () => {
    !t12(true) || e13.toggleFocusMode();
  }, void 0, [e13]), useHotkeys("ctrl+shift+g,\u2318+shift+g", () => {
    !t12(true) || e13.toggleGrid();
  }, void 0, [e13]);
  let { onNewProject: n10, onOpenProject: o10, onSaveProject: i10, onSaveProjectAs: a10, onOpenMedia: l10 } = bs();
  useHotkeys("ctrl+n,\u2318+n", (r11) => {
    !t12() || n10(r11);
  }, void 0, [e13]), useHotkeys("ctrl+s,\u2318+s", (r11) => {
    !t12() || i10(r11);
  }, void 0, [e13]), useHotkeys("ctrl+shift+s,\u2318+shift+s", (r11) => {
    !t12() || a10(r11);
  }, void 0, [e13]), useHotkeys("ctrl+o,\u2318+o", (r11) => {
    !t12() || o10(r11);
  }, void 0, [e13]), useHotkeys("ctrl+u,\u2318+u", (r11) => {
    !t12() || l10(r11);
  }, void 0, [e13]), useHotkeys("\u2318+z,ctrl+z", (r11) => {
    r11.preventDefault(), !!t12(true) && (e13.session ? e13.cancelSession() : e13.undo());
  }, void 0, [e13]), useHotkeys("ctrl+shift+z,\u2318+shift+z", () => {
    !t12(true) || (e13.session ? e13.cancelSession() : e13.redo());
  }, void 0, [e13]), useHotkeys("\u2318+u,ctrl+u", () => {
    !t12() || e13.undoSelect();
  }, void 0, [e13]), useHotkeys("ctrl+shift-u,\u2318+shift+u", () => {
    !t12() || e13.redoSelect();
  }, void 0, [e13]), useHotkeys("ctrl+=,\u2318+=,ctrl+num_subtract,\u2318+num_subtract", (r11) => {
    !t12(true) || (e13.zoomIn(), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("ctrl+-,\u2318+-,ctrl+num_add,\u2318+num_add", (r11) => {
    !t12(true) || (e13.zoomOut(), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("shift+0,ctrl+numpad_0,\u2318+numpad_0", () => {
    !t12(true) || e13.resetZoom();
  }, void 0, [e13]), useHotkeys("shift+1", () => {
    !t12(true) || e13.zoomToFit();
  }, void 0, [e13]), useHotkeys("shift+2", () => {
    !t12(true) || e13.zoomToSelection();
  }, void 0, [e13]), useHotkeys("ctrl+d,\u2318+d", (r11) => {
    !t12() || (e13.duplicate(), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("shift+h", () => {
    !t12(true) || e13.flipHorizontal();
  }, void 0, [e13]), useHotkeys("shift+v", () => {
    !t12(true) || e13.flipVertical();
  }, void 0, [e13]), useHotkeys("escape", () => {
    !t12(true) || e13.cancel();
  }, void 0, [e13]), useHotkeys("backspace,del", () => {
    !t12() || e13.delete();
  }, void 0, [e13]), useHotkeys("\u2318+a,ctrl+a", () => {
    !t12(true) || e13.selectAll();
  }, void 0, [e13]), useHotkeys("up", () => {
    !t12() || e13.nudge([0, -1], false);
  }, void 0, [e13]), useHotkeys("right", () => {
    !t12() || e13.nudge([1, 0], false);
  }, void 0, [e13]), useHotkeys("down", () => {
    !t12() || e13.nudge([0, 1], false);
  }, void 0, [e13]), useHotkeys("left", () => {
    !t12() || e13.nudge([-1, 0], false);
  }, void 0, [e13]), useHotkeys("shift+up", () => {
    !t12() || e13.nudge([0, -1], true);
  }, void 0, [e13]), useHotkeys("shift+right", () => {
    !t12() || e13.nudge([1, 0], true);
  }, void 0, [e13]), useHotkeys("shift+down", () => {
    !t12() || e13.nudge([0, 1], true);
  }, void 0, [e13]), useHotkeys("shift+left", () => {
    !t12() || e13.nudge([-1, 0], true);
  }, void 0, [e13]), useHotkeys("\u2318+shift+l,ctrl+shift+l", () => {
    !t12() || e13.toggleLocked();
  }, void 0, [e13]), useHotkeys("\u2318+shift+c,ctrl+shift+c", (r11) => {
    !t12() || (e13.copySvg(), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("\u2318+g,ctrl+g", (r11) => {
    !t12() || (e13.group(), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("\u2318+shift+g,ctrl+shift+g", (r11) => {
    !t12() || (e13.ungroup(), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("[", () => {
    !t12(true) || e13.moveBackward();
  }, void 0, [e13]), useHotkeys("]", () => {
    !t12(true) || e13.moveForward();
  }, void 0, [e13]), useHotkeys("shift+[", () => {
    !t12(true) || e13.moveToBack();
  }, void 0, [e13]), useHotkeys("shift+]", () => {
    !t12(true) || e13.moveToFront();
  }, void 0, [e13]), useHotkeys("ctrl+shift+backspace,\u2318+shift+backspace", (r11) => {
    !t12() || (e13.settings.isDebugMode && e13.resetDocument(), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("alt+command+l,alt+ctrl+l", (r11) => {
    !t12(true) || (e13.style({ textAlign: "start" }), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("alt+command+t,alt+ctrl+t", (r11) => {
    !t12(true) || (e13.style({ textAlign: "middle" }), r11.preventDefault());
  }, void 0, [e13]), useHotkeys("alt+command+r,alt+ctrl+r", (r11) => {
    !t12(true) || (e13.style({ textAlign: "end" }), r11.preventDefault());
  }, void 0, [e13]);
}
var ji = ys.createContext({});
function ae() {
  return ys.useContext(ji);
}
var Ui = /* @__PURE__ */ new Map();
var ws = "tldraw-fonts";
var Bu = `
@import url('https://fonts.googleapis.com/css2?family=Caveat+Brush&family=Source+Code+Pro&family=Source+Sans+Pro&family=Crimson+Pro&display=block');

@font-face {
  font-family: 'Recursive';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImKsvxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)
    format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,
    U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@font-face {
  font-family: 'Recursive';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImKsvxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)
    format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,
    U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@font-face {
  font-family: 'Recursive Mono';
  font-style: normal;
  font-weight: 420;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/recursive/v23/8vI-7wMr0mhh-RQChyHEH06TlXhq_gukbYrFMk1QuAIcyEwG_X-dpEfaE5YaERmK-CImqvTxvU-MXGX2fSqasNfUlTGZnI14ZeY.woff2)
    format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,
    U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
`;
function Hd() {
  Ad.useLayoutEffect(() => {
    if (Ui.get(ws))
      return;
    let s10 = document.createElement("style");
    return s10.innerHTML = Bu, s10.setAttribute("id", ws), document.head.appendChild(s10), Ui.set(ws, s10), () => {
      s10 && document.head.contains(s10) && (document.head.removeChild(s10), Ui.delete(ws));
    };
  }, []);
}
function bs() {
  let s10 = ae(), e13 = po.useCallback((a10) => ee(this, null, function* () {
    var l10, r11;
    a10 && s10.callbacks.onOpenProject && a10.preventDefault(), (r11 = (l10 = s10.callbacks).onNewProject) == null || r11.call(l10, s10);
  }), [s10]), t12 = po.useCallback((a10) => {
    var l10, r11;
    a10 && s10.callbacks.onOpenProject && a10.preventDefault(), (r11 = (l10 = s10.callbacks).onSaveProject) == null || r11.call(l10, s10);
  }, [s10]), n10 = po.useCallback((a10) => {
    var l10, r11;
    a10 && s10.callbacks.onOpenProject && a10.preventDefault(), (r11 = (l10 = s10.callbacks).onSaveProjectAs) == null || r11.call(l10, s10);
  }, [s10]), o10 = po.useCallback((a10) => ee(this, null, function* () {
    var l10, r11;
    a10 && s10.callbacks.onOpenProject && a10.preventDefault(), (r11 = (l10 = s10.callbacks).onOpenProject) == null || r11.call(l10, s10);
  }), [s10]), i10 = po.useCallback((a10) => ee(this, null, function* () {
    var l10, r11;
    a10 && s10.callbacks.onOpenMedia && a10.preventDefault(), (r11 = (l10 = s10.callbacks).onOpenMedia) == null || r11.call(l10, s10);
  }), [s10]);
  return { onNewProject: e13, onSaveProject: t12, onSaveProjectAs: n10, onOpenProject: o10, onOpenMedia: i10 };
}
function Mu() {
  let s10 = Yn.useCallback((a10) => ee(this, null, function* () {
    a10.isDirty && (a10.fileSystemHandle ? window.confirm("Do you want to save changes to your current project?") && (yield a10.saveProject()) : window.confirm("Do you want to save your current project?") && (yield a10.saveProject()));
  }), []), e13 = Yn.useCallback((a10) => ee(this, null, function* () {
    window.confirm("Do you want to create a new project?") && (yield s10(a10), a10.newProject());
  }), [s10]), t12 = Yn.useCallback((a10) => {
    a10.saveProject();
  }, []), n10 = Yn.useCallback((a10) => {
    a10.saveProjectAs();
  }, []), o10 = Yn.useCallback((a10) => ee(this, null, function* () {
    yield s10(a10), a10.openProject();
  }), [s10]), i10 = Yn.useCallback((a10) => ee(this, null, function* () {
    var l10;
    (l10 = a10.openAsset) == null || l10.call(a10);
  }), []);
  return { onNewProject: e13, onSaveProject: t12, onSaveProjectAs: n10, onOpenProject: o10, onOpenMedia: i10 };
}
var Eu = "\u0627\u0644\u0644\u0648\u0646";
var Ru = "\u064A\u0645\u0644\u0623";
var Lu = "\u0645\u062A\u0642\u0637\u0639";
var Au = "\u062D\u062C\u0645";
var Hu = "\u062A\u0628\u0642\u0649 \u0645\u0641\u062A\u0648\u062D\u0629";
var zu = "\u0627\u0644\u062E\u0637";
var Ou = "\u0645\u062D\u0627\u0630\u0627\u0629";
var Fu = "\u0627\u0644\u0623\u0646\u0645\u0627\u0637";
var ju = "\u062A\u0643\u0628\u064A\u0631";
var Uu = "\u062A\u0635\u063A\u064A\u0631";
var Gu = "\u0625\u0644\u0649";
var Vu = "\u0644\u0644\u0627\u062E\u062A\u064A\u0627\u0631";
var $u = "\u062A\u0646\u0627\u0633\u0628";
var Nu = "\u0623\u062F\u0648\u0627\u062A";
var Ku = "\u0627\u0644\u062A\u062D\u0648\u064A\u0644\u0627\u062A";
var Wu = "\u0645\u0644\u0641";
var _u = "\u062A\u062D\u0631\u064A\u0631";
var Yu = "\u0645\u0639\u0627\u064A\u0646\u0629";
var Zu = "\u0627\u0644\u062A\u0641\u0636\u064A\u0644\u0627\u062A";
var Xu = "\u062A\u0633\u062C\u064A\u0644 \u0627\u0644\u062F\u062E\u0648\u0644";
var qu = "\u062E\u0631\u0648\u062C";
var Ju = "\u0628\u0631\u0639\u0627\u064A\u0629";
var Qu = "\u0643\u0646 \u0631\u0627\u0639\u064A\u0627\u064B";
var eh = "\u0627\u0644\u0639\u0648\u062F\u0629 \u0625\u0644\u0649 \u0627\u0644\u0645\u062D\u062A\u0648\u0649";
var th = "\u062A\u0643\u0628\u064A\u0631 \u0644\u0644\u062A\u062D\u062F\u064A\u062F";
var nh = "\u062A\u0643\u0628\u064A\u0631 \u0644\u062A\u0646\u0627\u0633\u0628";
var oh = "\u062A\u0643\u0628\u064A\u0631 \u0625\u0644\u0649";
var sh = "\u0627\u0644\u0648\u0636\u0639 \u0627\u0644\u062F\u0627\u0643\u0646";
var ih = "\u0648\u0636\u0639 \u0627\u0644\u062A\u0631\u0643\u064A\u0632";
var rh = "\u0648\u0636\u0639 \u0627\u0644\u062A\u0635\u062D\u064A\u062D";
var ah = "\u0627\u0638\u0647\u0631 \u0627\u0644\u0634\u0628\u0643\u0629";
var dh = "\u0627\u0633\u062A\u062E\u062F\u0627\u0645 \u0627\u0644\u062A\u062D\u062F\u064A\u062F CAD";
var lh = "\u0627\u0644\u0627\u062D\u062A\u0641\u0627\u0638 \u0628\u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0646\u0645\u0637 \u0645\u0641\u062A\u0648\u062D\u0629";
var ch = "\u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0644\u0642\u0637\u0627\u062A \u062F\u0627\u0626\u0645\u064B\u0627";
var ph = "\u062A\u062F\u0648\u064A\u0631 \u0627\u0644\u0645\u0642\u0627\u0628\u0636";
var uh = "\u0645\u0642\u0627\u0628\u0636 \u0645\u0644\u0632\u0645\u0629";
var hh = "\u0645\u0642\u0627\u0628\u0636 \u0627\u0633\u062A\u0646\u0633\u0627\u062E";
var mh = "\u0627\u0644\u063A\u0627\u0621";
var gh = "\u0625\u0639\u0627\u062F\u0629";
var fh = "\u0642\u0637\u0639";
var Sh = "\u0646\u0633\u062D";
var Th = "\u0644\u0635\u0642";
var bh = "\u0646\u0633\u062E \u0627\u0644\u0649";
var yh = "\u0635\u062F\u0631 \u0627\u0644\u0649";
var wh = "\u0627\u062E\u062A\u0631 \u0627\u0644\u0643\u0644";
var xh = "\u0644\u0627 \u062A\u062E\u062A\u0631 \u0634\u064A\u0621";
var Ih = "\u062D\u0630\u0641";
var Ch = "\u0645\u0634\u0631\u0648\u0639 \u062C\u062F\u064A\u062F";
var vh = "\u0641\u062A\u062D";
var kh = "\u062D\u0641\u0638";
var Dh = "\u062D\u0641\u0638 \u0628\u0627\u0633\u0645";
var Ph = "\u062A\u062D\u0645\u064A\u0644 \u0627\u0644\u0648\u0633\u0627\u0626\u0637";
var Bh = "\u0625\u0646\u0634\u0627\u0621 \u0635\u0641\u062D\u0629";
var Mh = "\u0635\u0641\u062D\u0629 \u062C\u062F\u064A\u062F\u0629";
var Eh = "\u0627\u0633\u0645 \u0627\u0644\u0635\u0641\u062D\u0629";
var Rh = "\u0646\u0633\u062E";
var Lh = "\u0627\u0644\u063A\u0627\u0621";
var Ah = "\u0646\u0633\u062E \u0631\u0627\u0628\u0637 \u0627\u0644\u062F\u0639\u0648\u0629";
var Hh = "\u0646\u0633\u062E \u0631\u0627\u0628\u0637 \u062F\u0639\u0648\u0629 \u0627\u0644\u0642\u0631\u0627\u0621\u0629 \u0641\u0642\u0637";
var zh = "\u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0645\u0634\u0631\u0648\u0639 \u0645\u062A\u0639\u062F\u062F \u0627\u0644\u0644\u0627\u0639\u0628\u064A\u0646";
var Oh = "\u0646\u0633\u062E \u0625\u0644\u0649 \u0645\u0634\u0631\u0648\u0639 \u0645\u062A\u0639\u062F\u062F \u0627\u0644\u0644\u0627\u0639\u0628\u064A\u0646";
var Fh = "\u0627\u062E\u062A\u0631";
var jh = "\u0645\u0645\u062D\u0627\u0629";
var Uh = "\u0631\u0633\u0645";
var Gh = "\u0633\u0647\u0645";
var Vh = "\u0646\u0635";
var $h = "\u0644\u0627\u0635\u0642";
var Nh = "\u0645\u0631\u0628\u0639";
var Kh = "\u0628\u064A\u0636\u0627\u0648\u064A";
var Wh = "\u0645\u062B\u0644\u062B";
var _h = "\u062E\u0637";
var Yh = "\u062F\u0648\u0651\u0631";
var Zh = "\u0642\u0641\u0644 \u0646\u0633\u0628\u0629 \u0627\u0644\u0627\u0628\u0639\u0627\u062F";
var Xh = "\u0641\u062A\u062D \u0642\u0641\u0644 \u0646\u0633\u0628\u0629 \u0627\u0644\u0627\u0628\u0639\u0627\u062F";
var qh = "\u062C\u0645\u0651\u0639";
var Jh = "\u0641\u0643 \u0627\u0644\u062A\u062C\u0645\u0639";
var Qh = "\u0627\u0646\u062A\u0642\u0644 \u0625\u0644\u0649 \u0627\u0644\u062E\u0644\u0641";
var em = "\u062A\u062D\u0631\u064A\u0643 \u0644\u0644\u062E\u0644\u0641";
var tm = "\u062A\u062D\u0631\u064A\u0643 \u0644\u0644\u0623\u0645\u0627\u0645";
var nm = "\u062A\u062D\u0631\u0643 \u0644\u0644\u0623\u0645\u0627\u0645";
var om = "\u0625\u0639\u0627\u062F\u0629 \u0636\u0628\u0637 \u0627\u0644\u0632\u0627\u0648\u064A\u0629";
var sm = "\u0642\u0641\u0644";
var im = "\u0627\u0644\u063A\u0627\u0621 \u0627\u0644\u0642\u0641\u0644";
var rm = "\u0627\u0646\u0642\u0644 \u0625\u0644\u0649 \u0627\u0644\u0635\u0641\u062D\u0629";
var am = "\u0627\u0646\u0639\u0643\u0627\u0633 \u0623\u0641\u0642\u064A";
var dm = "\u0627\u0646\u0639\u0643\u0627\u0633 \u0639\u0645\u0648\u062F\u064A";
var lm = "\u062D\u0631\u0651\u0643";
var cm = "\u0644\u0644\u0627\u0645\u0627\u0645";
var pm = "\u0644\u0644\u062E\u0644\u0641";
var um = "\u0644\u0644\u0648\u0631\u0627\u0621";
var hm = "\u062E\u0644\u0641";
var mm = "\u0644\u063A\u0629";
var gm = "\u0644\u0644\u0645\u0632\u064A\u062F";
var fm = "\u0645\u0648\u0642\u0639 \u0627\u0644\u0627\u062F\u0648\u0627\u062A";
var Sm = "\u0627\u0633\u0641\u0644";
var Tm = "\u064A\u0633\u0627\u0631";
var bm = "\u064A\u0645\u064A\u0646";
var ym = "\u0623\u0639\u0644\u0649";
var wm = "\u0635\u0641\u062D\u0629";
var xm = "\u0627\u062E\u062A\u0635\u0627\u0631\u0627\u062A \u0644\u0648\u062D\u0629 \u0627\u0644\u0645\u0641\u0627\u062A\u064A\u062D";
var Im = "\u0628\u062D\u062B";
var Cm = "{dots}\u062A\u062D\u0645\u064A\u0644 ";
var zd = { "style.menu.color": Eu, "style.menu.fill": Ru, "style.menu.dash": Lu, "style.menu.size": Au, "style.menu.keep.open": Hu, "style.menu.font": zu, "style.menu.align": Ou, styles: Fu, "zoom.in": ju, "zoom.out": Uu, to: Gu, "to.selection": Vu, "to.fit": $u, "menu.tools": Nu, "menu.transform": Ku, "menu.file": Wu, "menu.edit": _u, "menu.view": Yu, "menu.preferences": Zu, "menu.sign.in": Xu, "menu.sign.out": qu, sponsored: Ju, "become.a.sponsor": Qu, "zoom.to.content": eh, "zoom.to.selection": th, "zoom.to.fit": nh, "zoom.to": oh, "preferences.dark.mode": sh, "preferences.focus.mode": ih, "preferences.debug.mode": rh, "preferences.show.grid": ah, "preferences.use.cad.selection": dh, "preferences.keep.stylemenu.open": lh, "preferences.always.show.snaps": ch, "preferences.rotate.handles": ph, "preferences.binding.handles": uh, "preferences.clone.handles": hh, undo: mh, redo: gh, cut: fh, copy: Sh, paste: Th, "copy.as": bh, "export.as": yh, "select.all": wh, "select.none": xh, delete: Ih, "new.project": Ch, open: vh, save: kh, "save.as": Dh, "upload.media": Ph, "create.page": Bh, "new.page": Mh, "page.name": Eh, duplicate: Rh, cancel: Lh, "copy.invite.link": Ah, "copy.readonly.link": Hh, "create.multiplayer.project": zh, "copy.multiplayer.project": Oh, select: Fh, eraser: jh, draw: Uh, arrow: Gh, text: Vh, sticky: $h, Rectangle: Nh, Ellipse: Kh, Triangle: Wh, Line: _h, rotate: Yh, "lock.aspect.ratio": Zh, "unlock.aspect.ratio": Xh, group: qh, ungroup: Jh, "move.to.back": Qh, "move.backward": em, "move.forward": tm, "move.to.front": nm, "reset.angle": om, lock: sm, unlock: im, "move.to.page": rm, "flip.horizontal": am, "flip.vertical": dm, move: lm, "to.front": cm, forward: pm, backward: um, back: hm, language: mm, "translation.link": gm, "dock.position": fm, bottom: Sm, left: Tm, right: bm, top: ym, page: wm, "keyboard.shortcuts": xm, search: Im, loading: Cm };
var vm = "Farve";
var km = "Fyld";
var Dm = "Streg";
var Pm = "St\xF8rrelse";
var Bm = "Hold \xE5ben";
var Mm = "Skrifttype";
var Em = "Juster";
var Rm = "Format";
var Lm = "Zoom ind";
var Am = "Zoom ud";
var Hm = "til";
var zm = "Til valgte";
var Om = "Til l\xE6rred";
var Fm = "Fil";
var jm = "Rediger";
var Um = "Vis";
var Gm = "Indstillinger";
var Vm = "Log ind";
var $m = "Log ud";
var Nm = "Sponsoreret";
var Km = "Bliv sponsor";
var Wm = "Zoom til valgte";
var _m = "Zoom til l\xE6rred";
var Ym = "Zoom til";
var Zm = "M\xF8rkt udseende";
var Xm = "Fokus tilstand";
var qm = "Debug tilstand";
var Jm = "Vis net";
var Qm = "Brug CAD udv\xE6lgelse";
var eg = "Hold formatmenuen \xE5ben";
var tg = "Vis altid snaps";
var ng = "Roteringsh\xE5ndtag";
var og = "Bindingsh\xE5ndtag";
var sg = "Kloningsh\xE5ndtag";
var ig = "Fortryd";
var rg = "Gentag";
var ag = "Klip";
var dg = "Kopier";
var lg = "Inds\xE6t";
var cg = "Kopier som";
var pg = "Eksporter som";
var ug = "V\xE6lg alt";
var hg = "Frav\xE6lg alt";
var mg = "Slet";
var gg = "Nyt projekt";
var fg = "\xC5ben";
var Sg = "Gem";
var Tg = "Gem som";
var bg = "Upload medie";
var yg = "Opret side";
var wg = "Ny side";
var xg = "Sidenavn";
var Ig = "Dupliker";
var Cg = "Fortryd";
var vg = "Kopier invitationslink";
var kg = "Opret multiplayer projekt";
var Dg = "Kopier til multiplayer projekt";
var Pg = "V\xE6lg";
var Bg = "Viskel\xE6der";
var Mg = "Tegn";
var Eg = "Pil";
var Rg = "Tekst";
var Lg = "Note";
var Ag = "Rektangel";
var Hg = "Ellipse";
var zg = "Trekant";
var Og = "Linje";
var Fg = "Roter";
var jg = "L\xE5s billedformat";
var Ug = "Frig\xF8r billedformat";
var Gg = "Grupper";
var Vg = "Opdel gruppe";
var $g = "Placer bagerst";
var Ng = "Flyt tilbage";
var Kg = "Flyt frem";
var Wg = "L\xE6g forrest";
var _g = "Nulstil vinkel";
var Yg = "L\xE5s";
var Zg = "L\xE5s op";
var Xg = "Flyt til side";
var qg = "Vend vandret";
var Jg = "Vend lodret";
var Qg = "Flyt";
var ef = "Forrest";
var tf = "Frem";
var nf = "Tilbage";
var of = "Bagerst";
var sf = "Sprog";
var Od = { "style.menu.color": vm, "style.menu.fill": km, "style.menu.dash": Dm, "style.menu.size": Pm, "style.menu.keep.open": Bm, "style.menu.font": Mm, "style.menu.align": Em, styles: Rm, "zoom.in": Lm, "zoom.out": Am, to: Hm, "to.selection": zm, "to.fit": Om, "menu.file": Fm, "menu.edit": jm, "menu.view": Um, "menu.preferences": Gm, "menu.sign.in": Vm, "menu.sign.out": $m, sponsored: Nm, "become.a.sponsor": Km, "zoom.to.selection": Wm, "zoom.to.fit": _m, "zoom.to": Ym, "preferences.dark.mode": Zm, "preferences.focus.mode": Xm, "preferences.debug.mode": qm, "preferences.show.grid": Jm, "preferences.use.cad.selection": Qm, "preferences.keep.stylemenu.open": eg, "preferences.always.show.snaps": tg, "preferences.rotate.handles": ng, "preferences.binding.handles": og, "preferences.clone.handles": sg, undo: ig, redo: rg, cut: ag, copy: dg, paste: lg, "copy.as": cg, "export.as": pg, "select.all": ug, "select.none": hg, delete: mg, "new.project": gg, open: fg, save: Sg, "save.as": Tg, "upload.media": bg, "create.page": yg, "new.page": wg, "page.name": xg, duplicate: Ig, cancel: Cg, "copy.invite.link": vg, "create.multiplayer.project": kg, "copy.multiplayer.project": Dg, select: Pg, eraser: Bg, draw: Mg, arrow: Eg, text: Rg, sticky: Lg, Rectangle: Ag, Ellipse: Hg, Triangle: zg, Line: Og, rotate: Fg, "lock.aspect.ratio": jg, "unlock.aspect.ratio": Ug, group: Gg, ungroup: Vg, "move.to.back": $g, "move.backward": Ng, "move.forward": Kg, "move.to.front": Wg, "reset.angle": _g, lock: Yg, unlock: Zg, "move.to.page": Xg, "flip.horizontal": qg, "flip.vertical": Jg, move: Qg, "to.front": ef, forward: tf, backward: nf, back: of, language: sf };
var rf = "Farbe";
var af = "F\xFCllen";
var df = "Strich";
var lf = "Gr\xF6\xDFe";
var cf = "Offen halten";
var pf = "Schriftart";
var uf = "Ausrichten";
var hf = "Stile";
var mf = "Heranzoomen";
var gf = "Herauszoomen";
var ff = "zu";
var Sf = "Zur Auswahl";
var Tf = "Anpassen";
var bf = "Datei";
var yf = "Bearbeiten";
var wf = "Ansicht";
var xf = "Pr\xE4ferenzen";
var If = "Einloggen";
var Cf = "Ausloggen";
var vf = "Gesponsert";
var kf = "Sponsor werden";
var Df = "Zur Auswahl zoomen";
var Pf = "Zoom anpassen";
var Bf = "Zoomen nach";
var Mf = "Dunkler Modus";
var Ef = "Fokus Modus";
var Rf = "Debug Modus";
var Lf = "Gitter anzeigen";
var Af = "CAD Auswahl verwenden";
var Hf = "Stilmen\xFC offen halten";
var zf = "Hilfslinien immer anzeigen";
var Of = "Rotiergriffe";
var Ff = "Bindegriffe";
var jf = "Klongriffe";
var Uf = "R\xFCckg\xE4ngig machen";
var Gf = "Wiederherstellen";
var Vf = "Ausschneiden";
var $f = "Kopieren";
var Nf = "Einf\xFCgen";
var Kf = "Kopieren als";
var Wf = "Exportieren als";
var _f = "Alles ausw\xE4hlen";
var Yf = "Nichts ausw\xE4hlen";
var Zf = "L\xF6schen";
var Xf = "Neues Projekt";
var qf = "\xD6ffnen";
var Jf = "Speichern";
var Qf = "Speichern als";
var eS = "Medien hochladen";
var tS = "Seite erstellen";
var nS = "Neue Seite";
var oS = "Seitenname";
var sS = "Duplizieren";
var iS = "Abbrechen";
var rS = "Einladungslink kopieren";
var aS = "Mehrspielerprojekt kreieren";
var dS = "In Mehrspielerprojekt kopieren";
var lS = "Ausw\xE4hlen";
var cS = "Radierer";
var pS = "Malen";
var uS = "Pfeil";
var hS = "Text";
var mS = "Notiz";
var gS = "Rechteck";
var fS = "Ellipse";
var SS = "Dreieck";
var TS = "Linie";
var bS = "Drehen";
var yS = "Seitenverh\xE4ltnis sperren";
var wS = "Seitenverh\xE4ltnis entsperren";
var xS = "Gruppieren";
var IS = "Gruppierung aufheben";
var CS = "Nach Hinten verschieben";
var vS = "R\xFCckw\xE4rts schieben";
var kS = "Vorw\xE4rts schieben";
var DS = "Nach Vorne verschieben";
var PS = "Winkel zur\xFCcksetzen";
var BS = "Sperren";
var MS = "Entsperren";
var ES = "Zu Seite verschieben";
var RS = "Horizontal spiegeln";
var LS = "Vertikal spiegeln";
var AS = "Verschieben";
var HS = "Nach Vorne";
var zS = "Vorw\xE4rts";
var OS = "R\xFCckw\xE4rts";
var FS = "Hinten";
var jS = "Sprache";
var Fd = { "style.menu.color": rf, "style.menu.fill": af, "style.menu.dash": df, "style.menu.size": lf, "style.menu.keep.open": cf, "style.menu.font": pf, "style.menu.align": uf, styles: hf, "zoom.in": mf, "zoom.out": gf, to: ff, "to.selection": Sf, "to.fit": Tf, "menu.file": bf, "menu.edit": yf, "menu.view": wf, "menu.preferences": xf, "menu.sign.in": If, "menu.sign.out": Cf, sponsored: vf, "become.a.sponsor": kf, "zoom.to.selection": Df, "zoom.to.fit": Pf, "zoom.to": Bf, "preferences.dark.mode": Mf, "preferences.focus.mode": Ef, "preferences.debug.mode": Rf, "preferences.show.grid": Lf, "preferences.use.cad.selection": Af, "preferences.keep.stylemenu.open": Hf, "preferences.always.show.snaps": zf, "preferences.rotate.handles": Of, "preferences.binding.handles": Ff, "preferences.clone.handles": jf, undo: Uf, redo: Gf, cut: Vf, copy: $f, paste: Nf, "copy.as": Kf, "export.as": Wf, "select.all": _f, "select.none": Yf, delete: Zf, "new.project": Xf, open: qf, save: Jf, "save.as": Qf, "upload.media": eS, "create.page": tS, "new.page": nS, "page.name": oS, duplicate: sS, cancel: iS, "copy.invite.link": rS, "create.multiplayer.project": aS, "copy.multiplayer.project": dS, select: lS, eraser: cS, draw: pS, arrow: uS, text: hS, sticky: mS, Rectangle: gS, Ellipse: fS, Triangle: SS, Line: TS, rotate: bS, "lock.aspect.ratio": yS, "unlock.aspect.ratio": wS, group: xS, ungroup: IS, "move.to.back": CS, "move.backward": vS, "move.forward": kS, "move.to.front": DS, "reset.angle": PS, lock: BS, unlock: MS, "move.to.page": ES, "flip.horizontal": RS, "flip.vertical": LS, move: AS, "to.front": HS, forward: zS, backward: OS, back: FS, language: jS };
var jd = {};
var GS = "Color";
var VS = "Relleno";
var $S = "L\xEDnea";
var NS = "Tama\xF1o";
var KS = "Mantener abierto";
var WS = "Fuente";
var _S = "Alineaci\xF3n";
var YS = "Estilos";
var ZS = "Acercar";
var XS = "Alejar";
var qS = "A";
var JS = "A la selecci\xF3n";
var QS = "Ajustar";
var eT = "Archivo";
var tT = "Editar";
var nT = "Ver";
var oT = "Preferencias";
var sT = "Iniciar sesi\xF3n";
var iT = "Cerrar sesi\xF3n";
var rT = "Patrocinado";
var aT = "Convi\xE9rtete en patrocinador";
var dT = "Acercar al contenido";
var lT = "Acercar a la selecci\xF3n";
var cT = "Ajustar a la ventana";
var pT = "Acercar a";
var uT = "Modo oscuro";
var hT = "Modo concentraci\xF3n";
var mT = "Modo depuraci\xF3n";
var gT = "Mostrar cuadr\xEDcula";
var fT = "Usar selecci\xF3n CAD";
var ST = "Mantener men\xFA de estilos abierto";
var TT = "Mostrar puntos de ajuste";
var bT = "Control de rotaci\xF3n";
var yT = "Control de vinculaci\xF3n";
var wT = "Control de clonaci\xF3n";
var xT = "Deshacer";
var IT = "Rehacer";
var CT = "Cortar";
var vT = "Copiar";
var kT = "Pegar";
var DT = "Copiar como";
var PT = "Exportar como";
var BT = "Selecionar todo";
var MT = "Selecionar nada";
var ET = "Borrar";
var RT = "Nuevo Proyecto";
var LT = "Abrir";
var AT = "Guardar";
var HT = "Guardar como";
var zT = "Subir medios";
var OT = "Crear p\xE1gina";
var FT = "Nueva p\xE1gina";
var jT = "Nombre de p\xE1gina";
var UT = "Duplicar";
var GT = "Cancelar";
var VT = "Copiar invitaci\xF3n";
var $T = "Copiar invitaci\xF3n (solo lectura)";
var NT = "Crear proyecto multijugador";
var KT = "Copiar proyecto multijugador";
var WT = "Seleccionar";
var _T = "Borrador";
var YT = "Dibujar";
var ZT = "Flecha";
var XT = "Texto";
var qT = "Pegatina";
var JT = "Rect\xE1ngulo";
var QT = "Elipse";
var eb = "Tri\xE1ngulo";
var tb = "L\xEDnea";
var nb = "Rotar";
var ob = "Bloquear relaci\xF3n de aspecto";
var sb = "Desbloquear relaci\xF3n de aspecto";
var ib = "Agrupar";
var rb = "Desagrupar";
var ab = "Mover al fondo";
var db = "Mover atr\xE1s";
var lb = "Mover adelante";
var cb = "Mover al frente";
var pb = "Restablecer \xE1ngulo";
var ub = "Bloquear";
var hb = "Desbloquear";
var mb = "Mover a p\xE1gina";
var gb = "Voltear horizontalmente";
var fb = "Voltear verticalmente";
var Sb = "Mover";
var Tb = "Al frente";
var bb = "Adelante";
var yb = "Atr\xE1s";
var wb = "Fondo";
var xb = "Idioma";
var Ib = "Saber m\xE1s";
var Cb = "Posici\xF3n del dock";
var vb = "Abajo";
var kb = "Atajos de teclado";
var Db = "Cargando{dots}";
var Pb = "Izquierda";
var Bb = "Derecha";
var Mb = "Arriba";
var Eb = "Buscar";
var Rb = "P\xE1gina";
var Ud = { "style.menu.color": GS, "style.menu.fill": VS, "style.menu.dash": $S, "style.menu.size": NS, "style.menu.keep.open": KS, "style.menu.font": WS, "style.menu.align": _S, styles: YS, "zoom.in": ZS, "zoom.out": XS, to: qS, "to.selection": JS, "to.fit": QS, "menu.file": eT, "menu.edit": tT, "menu.view": nT, "menu.preferences": oT, "menu.sign.in": sT, "menu.sign.out": iT, sponsored: rT, "become.a.sponsor": aT, "zoom.to.content": dT, "zoom.to.selection": lT, "zoom.to.fit": cT, "zoom.to": pT, "preferences.dark.mode": uT, "preferences.focus.mode": hT, "preferences.debug.mode": mT, "preferences.show.grid": gT, "preferences.use.cad.selection": fT, "preferences.keep.stylemenu.open": ST, "preferences.always.show.snaps": TT, "preferences.rotate.handles": bT, "preferences.binding.handles": yT, "preferences.clone.handles": wT, undo: xT, redo: IT, cut: CT, copy: vT, paste: kT, "copy.as": DT, "export.as": PT, "select.all": BT, "select.none": MT, delete: ET, "new.project": RT, open: LT, save: AT, "save.as": HT, "upload.media": zT, "create.page": OT, "new.page": FT, "page.name": jT, duplicate: UT, cancel: GT, "copy.invite.link": VT, "copy.readonly.link": $T, "create.multiplayer.project": NT, "copy.multiplayer.project": KT, select: WT, eraser: _T, draw: YT, arrow: ZT, text: XT, sticky: qT, Rectangle: JT, Ellipse: QT, Triangle: eb, Line: tb, rotate: nb, "lock.aspect.ratio": ob, "unlock.aspect.ratio": sb, group: ib, ungroup: rb, "move.to.back": ab, "move.backward": db, "move.forward": lb, "move.to.front": cb, "reset.angle": pb, lock: ub, unlock: hb, "move.to.page": mb, "flip.horizontal": gb, "flip.vertical": fb, move: Sb, "to.front": Tb, forward: bb, backward: yb, back: wb, language: xb, "translation.link": Ib, "dock.position": Cb, bottom: vb, "keyboard.shortcuts": kb, loading: Db, left: Pb, right: Bb, top: Mb, search: Eb, page: Rb };
var Lb = "\u0631\u0646\u06AF";
var Ab = "\u062A\u0648\u067E\u064F\u0631";
var Hb = "\u062E\u0637\u200C \u0686\u06CC\u0646";
var zb = "\u0627\u0646\u062F\u0627\u0632\u0647";
var Ob = "\u0628\u0627\u0632 \u0628\u0627\u0634";
var Fb = "\u0641\u0648\u0646\u062A";
var jb = "\u062A\u0631\u0627\u0632";
var Ub = "\u0627\u0633\u062A\u0627\u06CC\u0644\u200C\u0647\u0627";
var Gb = "\u0632\u0648\u0645 \u062C\u0644\u0648";
var Vb = "\u0632\u0648\u0645 \u0639\u0642\u0628";
var $b = "\u0628\u0647";
var Nb = "\u0628\u0647 \u0627\u0646\u062A\u062E\u0627\u0628\u200C\u0634\u062F\u0647\u200C\u0647\u0627";
var Kb = "\u0628\u0647 \u06A9\u0644 \u0635\u0641\u062D\u0647";
var Wb = "\u0641\u0627\u06CC\u0644";
var _b = "\u0648\u06CC\u0631\u0627\u06CC\u0634";
var Yb = "\u0646\u0645\u0627\u06CC\u0634";
var Zb = "\u062A\u0646\u0638\u06CC\u0645\u200C\u0647\u0627";
var Xb = "\u0648\u0631\u0648\u062F";
var qb = "\u062E\u0631\u0648\u062C";
var Jb = "\u062D\u0627\u0645\u06CC\u0627\u0646";
var Qb = " \u062D\u0627\u0645\u06CC \u0634\u0648";
var ey = "\u0646\u0645\u0627\u06CC\u0634 \u0627\u0646\u062A\u062E\u0627\u0628\u200C\u0634\u062F\u0647\u200C\u0647\u0627";
var ty = "\u0646\u0645\u0627\u06CC\u0634 \u06A9\u0644 \u0635\u0641\u062D\u0647";
var ny = "\u0632\u0648\u0645 \u0628\u0647 ";
var oy = "\u062D\u0627\u0644\u062A \u0634\u0628";
var sy = "\u062D\u0627\u0644\u062A \u062A\u0645\u0631\u06A9\u0632";
var iy = "\u062D\u0627\u0644\u062A \u0639\u06CC\u0628\u200C\u06CC\u0627\u06CC\u06CC";
var ry = "\u0646\u0645\u0627\u06CC\u0634 \u062E\u0637\u0648\u0637 \u0631\u0627\u0647\u0646\u0645\u0627";
var ay = "\u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u0627\u0632 \u062D\u0627\u0644\u062A \u0627\u0646\u062A\u062E\u0627\u0628\u06CC CAD";
var dy = "\u0645\u0646\u0648\u06CC \u0627\u0633\u062A\u0627\u06CC\u0644 \u0628\u0627\u0632 \u0628\u0627\u0634\u0647";
var ly = "\u0631\u0627\u0647\u0646\u0645\u0627\u06CC \u0644\u0628\u0647\u200C\u0647\u0627 \u0631\u0648 \u0646\u0634\u0648\u0646 \u0628\u062F\u0647";
var cy = "\u062F\u0633\u062A\u06AF\u06CC\u0631\u0647\u200C\u0647\u0627\u06CC \u0686\u0631\u062E\u0634 \u0631\u0648 \u0646\u0634\u0648\u0646 \u0628\u062F\u0647";
var py = "\u062F\u0633\u062A\u0647\u0654 \u0644\u0628\u0647\u200C\u0647\u0627 \u0631\u0648 \u0646\u0634\u0648\u0646 \u0628\u062F\u0647";
var uy = "\u062F\u0633\u062A\u06AF\u06CC\u0631\u0647\u200C\u0647\u0627\u06CC \u06A9\u067E\u06CC \u0631\u0648 \u0646\u0634\u0648\u0646 \u0628\u062F\u0647";
var hy = "\u06CC\u0647 \u0642\u062F\u0645 \u0639\u0642\u0628";
var my = "\u06CC\u0647 \u0642\u062F\u0645 \u062C\u0644\u0648";
var gy = "\u0628\u0631\u06CC\u062F\u0646";
var fy = "\u06A9\u067E\u06CC";
var Sy = "\u062C\u0627\u06CC\u200C\u06AF\u0630\u0627\u0631\u06CC";
var Ty = "\u06A9\u067E\u06CC \u0628\u0647\u200C\u200C\u0639\u0646\u0648\u0627\u0646";
var by = "\u062E\u0631\u0648\u062C\u06CC \u0628\u0627 \u0641\u0631\u0645\u062A";
var yy = "\u0627\u0646\u062A\u062E\u0627\u0628 \u0647\u0645\u0647";
var wy = "\u0627\u0646\u062A\u062E\u0627\u0628 \u0647\u06CC\u0686";
var xy = " \u067E\u0627\u06A9\u200C\u06A9\u0631\u062F\u0646";
var Iy = "\u067E\u0631\u0648\u0698\u0647\u0654 \u062A\u0627\u0632\u0647";
var Cy = "\u0628\u0627\u0632 \u06A9\u0646";
var vy = "\u0630\u062E\u06CC\u0631\u0647";
var ky = "\u0630\u062E\u06CC\u0631\u0647 \u0628\u0627 \u0627\u0633\u0645";
var Dy = "\u0622\u067E\u0644\u0648\u062F \u0639\u06A9\u0633";
var Py = "\u0633\u0627\u062E\u062A \u0635\u0641\u062D\u0647";
var By = "\u0635\u0641\u062D\u0647\u0654 \u062A\u0627\u0632\u0647";
var My = "\u0627\u0633\u0645 \u0635\u0641\u062D\u0647";
var Ey = "\u06A9\u067E\u06CC \u062F\u0631\u062C\u0627";
var Ry = "\u0628\u06CC\u200C\u062E\u06CC\u0627\u0644";
var Ly = "\u06A9\u067E\u06CC \u0644\u06CC\u0646\u06A9 \u062F\u0639\u0648\u062A";
var Ay = "\u0633\u0627\u062E\u062A \u067E\u0631\u0648\u0698\u0647\u0654 \u0686\u0646\u062F\u0646\u0641\u0631\u0647";
var Hy = "\u06A9\u067E\u06CC \u062F\u0631 \u067E\u0631\u0648\u0698\u0647\u0654 \u0686\u0646\u062F\u0646\u0641\u0631\u0647";
var zy = "\u0627\u0646\u062A\u062E\u0627\u0628";
var Oy = "\u067E\u0627\u06A9\u200C\u06A9\u0646";
var Fy = "\u0631\u0633\u0645";
var jy = "\u0641\u0644\u0650\u0634";
var Uy = "\u0645\u062A\u0646";
var Gy = "\u06CC\u0627\u062F\u062F\u0627\u0634\u062A";
var Vy = "\u0686\u0627\u0631\u06AF\u0648\u0634";
var $y = "\u06AF\u0631\u062F\u06CC";
var Ny = "\u0633\u0647\u200C\u06AF\u0648\u0634";
var Ky = "\u062E\u0637";
var Wy = "\u0686\u0631\u062E\u0634";
var _y = "\u062A\u062B\u0628\u06CC\u062A \u0646\u0633\u0628\u062A \u0627\u0628\u0639\u0627\u062F";
var Yy = "\u0646\u0633\u0628\u062A \u0627\u0628\u0639\u0627\u062F \u0645\u062A\u063A\u06CC\u0631";
var Zy = "\u062C\u0645\u0639 \u06A9\u0646";
var Xy = "\u062C\u062F\u0627 \u06A9\u0646";
var qy = "\u0628\u0628\u0631 \u0622\u062E\u0631";
var Jy = "\u0628\u0628\u0631 \u0639\u0642\u0628";
var Qy = "\u0628\u0628\u0631 \u0627\u0648\u0644";
var e1 = "\u0628\u0628\u0631 \u062C\u0644\u0648";
var t1 = "\u062D\u0630\u0641 \u0686\u0631\u062E\u0634";
var n1 = "\u0642\u0641\u0644\u200C \u06A9\u0646";
var o1 = "\u0628\u0627\u0632 \u06A9\u0646";
var s1 = "\u0628\u0628\u0631 \u0628\u0647 \u0635\u0641\u062D\u0647";
var i1 = "\u0628\u0631\u06AF\u0631\u062F\u0648\u0646 \u0627\u0641\u0642\u06CC";
var r1 = "\u0628\u0631\u06AF\u0631\u062F\u0648\u0646 \u0639\u0645\u0648\u062F\u06CC";
var a1 = "\u062C\u0627\u0628\u0647\u200C\u062C\u0627\u0634 \u06A9\u0646";
var d1 = "\u0628\u0647 \u0627\u0648\u0644";
var l1 = "\u0628\u0647 \u062C\u0644\u0648";
var c1 = "\u0628\u0647 \u0639\u0642\u0628";
var p1 = "\u0628\u0647 \u0622\u062E\u0631";
var u1 = "\u0632\u0628\u0627\u0646";
var Gd = { "style.menu.color": Lb, "style.menu.fill": Ab, "style.menu.dash": Hb, "style.menu.size": zb, "style.menu.keep.open": Ob, "style.menu.font": Fb, "style.menu.align": jb, styles: Ub, "zoom.in": Gb, "zoom.out": Vb, to: $b, "to.selection": Nb, "to.fit": Kb, "menu.file": Wb, "menu.edit": _b, "menu.view": Yb, "menu.preferences": Zb, "menu.sign.in": Xb, "menu.sign.out": qb, sponsored: Jb, "become.a.sponsor": Qb, "zoom.to.selection": ey, "zoom.to.fit": ty, "zoom.to": ny, "preferences.dark.mode": oy, "preferences.focus.mode": sy, "preferences.debug.mode": iy, "preferences.show.grid": ry, "preferences.use.cad.selection": ay, "preferences.keep.stylemenu.open": dy, "preferences.always.show.snaps": ly, "preferences.rotate.handles": cy, "preferences.binding.handles": py, "preferences.clone.handles": uy, undo: hy, redo: my, cut: gy, copy: fy, paste: Sy, "copy.as": Ty, "export.as": by, "select.all": yy, "select.none": wy, delete: xy, "new.project": Iy, open: Cy, save: vy, "save.as": ky, "upload.media": Dy, "create.page": Py, "new.page": By, "page.name": My, duplicate: Ey, cancel: Ry, "copy.invite.link": Ly, "create.multiplayer.project": Ay, "copy.multiplayer.project": Hy, select: zy, eraser: Oy, draw: Fy, arrow: jy, text: Uy, sticky: Gy, Rectangle: Vy, Ellipse: $y, Triangle: Ny, Line: Ky, rotate: Wy, "lock.aspect.ratio": _y, "unlock.aspect.ratio": Yy, group: Zy, ungroup: Xy, "move.to.back": qy, "move.backward": Jy, "move.forward": Qy, "move.to.front": e1, "reset.angle": t1, lock: n1, unlock: o1, "move.to.page": s1, "flip.horizontal": i1, "flip.vertical": r1, move: a1, "to.front": d1, forward: l1, backward: c1, back: p1, language: u1 };
var h1 = "Couleur";
var m1 = "Remplir";
var g1 = "Bordure";
var f1 = "Taille";
var S1 = "Toujours afficher le menu";
var T1 = "Police";
var b1 = "Alignement";
var y1 = "Styles";
var w1 = "Zoom avant";
var x1 = "Zoom arri\xE8re";
var I1 = "\xC0";
var C1 = "S\xE9lection";
var v1 = "Contenu";
var k1 = "Outils";
var D1 = "Transformation";
var P1 = "Fichier";
var B1 = "\xC9dition";
var M1 = "Afficher";
var E1 = "Pr\xE9f\xE9rences";
var R1 = "S'authentifier";
var L1 = "Se d\xE9connecter";
var A1 = "Sponsoris\xE9";
var H1 = "Devenir un sponsor";
var z1 = "Retour au contenu";
var O1 = "Ajuster le zoom \xE0 la s\xE9lection";
var F1 = "Adapter le zoom au contenu";
var j1 = "R\xE9tablir le zoom \xE0";
var U1 = "Mode sombre";
var G1 = "Mode focus";
var V1 = "Afficher la barre d\xE9veloppeur";
var $1 = "Afficher la grille";
var N1 = "Utiliser la s\xE9lection CAD";
var K1 = "Toujours afficher le menu styles";
var W1 = "Afficher les rep\xE8res dynamiques";
var _1 = "Manier la rotation";
var Y1 = "Manier les liaisons";
var Z1 = "Manier le clonage";
var X1 = "Annuler";
var q1 = "R\xE9tablir";
var J1 = "Couper";
var Q1 = "Copier";
var e0 = "Coller";
var t0 = "Copier au format";
var n0 = "Exporter au format";
var o0 = "Tout s\xE9lectionner";
var s0 = "Tout d\xE9s\xE9lectionner";
var i0 = "Supprimer";
var r0 = "Nouveau project";
var a0 = "Ouvrir";
var d0 = "Enregistrer";
var l0 = "Enregistrer sous";
var c0 = "Importer un m\xE9dia";
var p0 = "Cr\xE9er une page";
var u0 = "Nouvelle Page";
var h0 = "Nom de la page";
var m0 = "Dupliquer";
var g0 = "Annuler";
var f0 = "Copier le lien d'invitation";
var S0 = "Copier le lien en lecture seule d'invitation";
var T0 = "Cr\xE9er un project multi-joueurs";
var b0 = "Copier dans un projet multi-joueurs";
var y0 = "S\xE9lection";
var w0 = "Gomme";
var x0 = "Crayon";
var I0 = "Fl\xE8che";
var C0 = "Texte";
var v0 = "Note";
var k0 = "Rectangle";
var D0 = "Cercle";
var P0 = "Triangle";
var B0 = "Ligne";
var M0 = "Rotation";
var E0 = "Verrouiller les proportions";
var R0 = "D\xE9verrouiller les proportions";
var L0 = "Grouper";
var A0 = "D\xE9grouper";
var H0 = "D\xE9placer \xE0 l'arri\xE8re-plan";
var z0 = "Reculer d'un plan";
var O0 = "Avancer d'un plan";
var F0 = "Placer au premier plan";
var j0 = "R\xE9initialiser la rotation";
var U0 = "Verrouiller";
var G0 = "D\xE9verrouiller";
var V0 = "D\xE9placer vers la page";
var $0 = "Retourner horizontalement";
var N0 = "Retourner verticalement";
var K0 = "Disposition";
var W0 = "Placer au premier plan";
var _0 = "Avancer d'un plan";
var Y0 = "Reculer d'un plan";
var Z0 = "D\xE9placer \xE0 l'arri\xE8re-plan";
var X0 = "Langage";
var q0 = "Position du dock";
var J0 = "En bas";
var Q0 = "Raccourci clavier";
var ew = "Chargement{dots}";
var tw = "\xC0 gauche";
var nw = "\xC0 droite";
var ow = "En haut";
var sw = "Page";
var Vd = { "style.menu.color": h1, "style.menu.fill": m1, "style.menu.dash": g1, "style.menu.size": f1, "style.menu.keep.open": S1, "style.menu.font": T1, "style.menu.align": b1, styles: y1, "zoom.in": w1, "zoom.out": x1, to: I1, "to.selection": C1, "to.fit": v1, "menu.tools": k1, "menu.transform": D1, "menu.file": P1, "menu.edit": B1, "menu.view": M1, "menu.preferences": E1, "menu.sign.in": R1, "menu.sign.out": L1, sponsored: A1, "become.a.sponsor": H1, "zoom.to.content": z1, "zoom.to.selection": O1, "zoom.to.fit": F1, "zoom.to": j1, "preferences.dark.mode": U1, "preferences.focus.mode": G1, "preferences.debug.mode": V1, "preferences.show.grid": $1, "preferences.use.cad.selection": N1, "preferences.keep.stylemenu.open": K1, "preferences.always.show.snaps": W1, "preferences.rotate.handles": _1, "preferences.binding.handles": Y1, "preferences.clone.handles": Z1, undo: X1, redo: q1, cut: J1, copy: Q1, paste: e0, "copy.as": t0, "export.as": n0, "select.all": o0, "select.none": s0, delete: i0, "new.project": r0, open: a0, save: d0, "save.as": l0, "upload.media": c0, "create.page": p0, "new.page": u0, "page.name": h0, duplicate: m0, cancel: g0, "copy.invite.link": f0, "copy.readonly.link": S0, "create.multiplayer.project": T0, "copy.multiplayer.project": b0, select: y0, eraser: w0, draw: x0, arrow: I0, text: C0, sticky: v0, Rectangle: k0, Ellipse: D0, Triangle: P0, Line: B0, rotate: M0, "lock.aspect.ratio": E0, "unlock.aspect.ratio": R0, group: L0, ungroup: A0, "move.to.back": H0, "move.backward": z0, "move.forward": O0, "move.to.front": F0, "reset.angle": j0, lock: U0, unlock: G0, "move.to.page": V0, "flip.horizontal": $0, "flip.vertical": N0, move: K0, "to.front": W0, forward: _0, backward: Y0, back: Z0, language: X0, "dock.position": q0, bottom: J0, "keyboard.shortcuts": Q0, loading: ew, left: tw, right: nw, top: ow, page: sw };
var iw = "\u05E6\u05D1\u05E2";
var rw = "\u05DE\u05DC\u05D0";
var aw = "\u05D2\u05D1\u05D5\u05DC";
var dw = "\u05D2\u05D5\u05D3\u05DC";
var lw = "\u05D4\u05E9\u05D0\u05E8 \u05E4\u05EA\u05D5\u05D7";
var cw = "\u05D2\u05D5\u05E4\u05DF";
var pw = "\u05D9\u05D9\u05E9\u05D5\u05E8";
var uw = "\u05E2\u05D9\u05E6\u05D5\u05D1";
var hw = "\u05D4\u05D2\u05D3\u05DC \u05EA\u05E6\u05D5\u05D2\u05D4";
var mw = "\u05D4\u05E7\u05D8\u05DF \u05EA\u05E6\u05D5\u05D2\u05D4";
var gw = "\u05DC";
var fw = "\u05DC\u05E1\u05D9\u05DE\u05D5\u05DF";
var Sw = "\u05DC\u05D4\u05EA\u05D0\u05DE\u05D4";
var Tw = "\u05E7\u05D5\u05D1\u05E5";
var bw = "\u05E2\u05E8\u05D9\u05DB\u05D4";
var yw = "\u05EA\u05E6\u05D5\u05D2\u05D4";
var ww = "\u05DE\u05D0\u05E4\u05D9\u05D9\u05E0\u05D9\u05DD";
var xw = "\u05D4\u05D9\u05E8\u05E9\u05DD";
var Iw = "\u05D4\u05EA\u05E0\u05EA\u05E7";
var Cw = "\u05D7\u05E1\u05D5\u05EA";
var vw = "\u05DE\u05EA\u05DF \u05D7\u05E1\u05D5\u05EA";
var kw = "\u05D6\u05D5\u05DD \u05DC\u05D1\u05D7\u05D9\u05E8\u05D4";
var Dw = "\u05D6\u05D5\u05DD \u05DC\u05D4\u05EA\u05D0\u05DE\u05D4";
var Pw = "\u05D6\u05D5\u05DD \u05DC";
var Bw = "\u05DE\u05E6\u05D1 \u05D7\u05E9\u05D5\u05DA";
var Mw = "\u05DE\u05E6\u05D1 \u05E4\u05D5\u05E7\u05D5\u05E1";
var Ew = "\u05DE\u05E6\u05D1 \u05D3\u05D9\u05D1\u05D0\u05D2";
var Rw = "(\u05D2\u05E8\u05D9\u05D3)\u05D4\u05E8\u05D0\u05D4 \u05E8\u05E9\u05EA \u05E2\u05D9\u05DE\u05D5\u05D3";
var Lw = "\u05E1\u05D9\u05DE\u05D5\u05DF CAD";
var Aw = "\u05D4\u05E9\u05D0\u05E8 \u05EA\u05E4\u05E8\u05D9\u05D8 \u05E2\u05D9\u05E6\u05D5\u05D1 \u05E4\u05EA\u05D5\u05D7";
var Hw = "\u05D4\u05E8\u05D0\u05D4 \u05E7\u05D5\u05D5\u05D9 \u05DE\u05EA\u05D0\u05E8";
var zw = "\u05D4\u05E8\u05D0\u05D4 \u05D9\u05D3\u05D9\u05D5\u05EA \u05E1\u05D9\u05D1\u05D5\u05D1";
var Ow = "\u05D4\u05E8\u05D0\u05D4 \u05D9\u05D3\u05D9\u05D5\u05EA \u05E7\u05E9\u05D9\u05E8\u05D4";
var Fw = "\u05D4\u05E8\u05D0\u05D4 \u05D9\u05D3\u05D9\u05D5\u05EA \u05E9\u05D9\u05DB\u05E4\u05D5\u05DC";
var jw = "\u05D1\u05D8\u05DC";
var Uw = "\u05E2\u05E9\u05D4 \u05DE\u05D7\u05D3\u05E9";
var Gw = "\u05D2\u05D6\u05D5\u05E8";
var Vw = "\u05D4\u05E2\u05EA\u05E7";
var $w = "\u05D4\u05D3\u05D1\u05E7";
var Nw = "\u05D4\u05E2\u05EA\u05E7 \u05DB";
var Kw = "\u05D9\u05D9\u05E6\u05D0 \u05DB";
var Ww = "\u05D1\u05D7\u05E8 \u05D4\u05DB\u05DC";
var _w = "\u05D1\u05D8\u05DC \u05D1\u05D7\u05D9\u05E8\u05D4";
var Yw = "\u05DE\u05D7\u05E7";
var Zw = "\u05E4\u05E8\u05D5\u05D9\u05E7\u05D8 \u05D7\u05D3\u05E9";
var Xw = "\u05E4\u05EA\u05D7";
var qw = "\u05E9\u05DE\u05D5\u05E8";
var Jw = "\u05E9\u05DE\u05D5\u05E8 \u05DB";
var Qw = "\u05D4\u05E2\u05DC\u05D0\u05EA \u05DE\u05D3\u05D9\u05D4";
var ex = "\u05E6\u05D5\u05E8 \u05D3\u05E3";
var tx = "\u05D3\u05E3 \u05D7\u05D3\u05E9";
var nx = "\u05E9\u05DD \u05D4\u05D3\u05E3";
var ox = "\u05E9\u05DB\u05E4\u05DC";
var sx = "\u05D1\u05D8\u05DC";
var ix = "\u05D4\u05E2\u05EA\u05E7 \u05E7\u05D9\u05E9\u05D5\u05E8 \u05D4\u05D6\u05DE\u05E0\u05D4";
var rx = "\u05E6\u05D5\u05E8 \u05E4\u05E8\u05D5\u05D9\u05E7\u05D8 \u05E8\u05D1 \u05DE\u05E9\u05EA\u05EA\u05E4\u05D9\u05DD";
var ax = "\u05D4\u05E2\u05EA\u05E7 \u05DC\u05E4\u05E8\u05D5\u05D9\u05E7\u05D8 \u05E8\u05D1 \u05DE\u05E9\u05EA\u05EA\u05E4\u05D9\u05DD";
var dx = "\u05E1\u05DE\u05DF";
var lx = "\u05DE\u05D7\u05E7";
var cx = "\u05E6\u05D9\u05D9\u05E8";
var px = "\u05D7\u05E5";
var ux = "\u05D8\u05E7\u05E1\u05D8";
var hx = "\u05D3\u05D1\u05D9\u05E7\u05D9";
var mx = "\u05DE\u05E8\u05D5\u05D1\u05E2";
var gx = "\u05D0\u05DC\u05D9\u05E4\u05E1\u05D4";
var fx = "\u05DE\u05E9\u05D5\u05DC\u05E9";
var Sx = "\u05E7\u05D5";
var Tx = "\u05E1\u05D5\u05D1\u05D1";
var bx = "\u05E0\u05E2\u05DC \u05D9\u05D7\u05E1 \u05E8\u05D5\u05D7\u05D1-\u05D2\u05D5\u05D1\u05D4";
var yx = "\u05E9\u05D7\u05E8\u05E8 \u05E0\u05E2\u05D9\u05DC\u05EA \u05D9\u05D7\u05E1 \u05E8\u05D5\u05D7\u05D1-\u05D2\u05D5\u05D1\u05D4";
var wx = "\u05E7\u05D1\u05E5";
var xx = "\u05D1\u05D8\u05DC \u05E7\u05D9\u05D1\u05D5\u05E5";
var Ix = "\u05D4\u05D1\u05D0 \u05DC\u05EA\u05D7\u05EA\u05D9\u05EA";
var Cx = "\u05D4\u05D6\u05D6 \u05D0\u05D7\u05D5\u05E8\u05D4";
var vx = "\u05D4\u05D6\u05D6 \u05E7\u05D3\u05D9\u05DE\u05D4";
var kx = "\u05D4\u05D1\u05D0 \u05DC\u05D7\u05D6\u05D9\u05EA";
var Dx = "\u05D0\u05E4\u05E1 \u05D6\u05D5\u05D5\u05D9\u05EA";
var Px = "\u05E0\u05E2\u05DC";
var Bx = "\u05E9\u05D7\u05E8\u05E8 \u05E0\u05E2\u05D9\u05DC\u05D4";
var Mx = "\u05D4\u05D6\u05D6 \u05DC\u05D3\u05E3";
var Ex = "\u05D4\u05E4\u05D5\u05DA \u05D0\u05D5\u05E4\u05E7\u05D9\u05EA";
var Rx = "\u05D4\u05E4\u05D5\u05DA \u05D0\u05E0\u05DB\u05D9\u05EA";
var Lx = "\u05D4\u05D6\u05D6";
var Ax = "\u05D4\u05D1\u05D0 \u05DC\u05E7\u05D3\u05D9\u05DE\u05D4";
var Hx = "\u05E7\u05D3\u05D9\u05DE\u05D4";
var zx = "\u05D0\u05D7\u05D5\u05E8\u05D4";
var Ox = "\u05D1\u05D7\u05D6\u05E8\u05D4";
var Fx = "\u05E9\u05E4\u05D4";
var $d = { "style.menu.color": iw, "style.menu.fill": rw, "style.menu.dash": aw, "style.menu.size": dw, "style.menu.keep.open": lw, "style.menu.font": cw, "style.menu.align": pw, styles: uw, "zoom.in": hw, "zoom.out": mw, to: gw, "to.selection": fw, "to.fit": Sw, "menu.file": Tw, "menu.edit": bw, "menu.view": yw, "menu.preferences": ww, "menu.sign.in": xw, "menu.sign.out": Iw, sponsored: Cw, "become.a.sponsor": vw, "zoom.to.selection": kw, "zoom.to.fit": Dw, "zoom.to": Pw, "preferences.dark.mode": Bw, "preferences.focus.mode": Mw, "preferences.debug.mode": Ew, "preferences.show.grid": Rw, "preferences.use.cad.selection": Lw, "preferences.keep.stylemenu.open": Aw, "preferences.always.show.snaps": Hw, "preferences.rotate.handles": zw, "preferences.binding.handles": Ow, "preferences.clone.handles": Fw, undo: jw, redo: Uw, cut: Gw, copy: Vw, paste: $w, "copy.as": Nw, "export.as": Kw, "select.all": Ww, "select.none": _w, delete: Yw, "new.project": Zw, open: Xw, save: qw, "save.as": Jw, "upload.media": Qw, "create.page": ex, "new.page": tx, "page.name": nx, duplicate: ox, cancel: sx, "copy.invite.link": ix, "create.multiplayer.project": rx, "copy.multiplayer.project": ax, select: dx, eraser: lx, draw: cx, arrow: px, text: ux, sticky: hx, Rectangle: mx, Ellipse: gx, Triangle: fx, Line: Sx, rotate: Tx, "lock.aspect.ratio": bx, "unlock.aspect.ratio": yx, group: wx, ungroup: xx, "move.to.back": Ix, "move.backward": Cx, "move.forward": vx, "move.to.front": kx, "reset.angle": Dx, lock: Px, unlock: Bx, "move.to.page": Mx, "flip.horizontal": Ex, "flip.vertical": Rx, move: Lx, "to.front": Ax, forward: Hx, backward: zx, back: Ox, language: Fx };
var jx = "Colore";
var Ux = "Riempi";
var Gx = "Tratteggo";
var Vx = "Dimensione";
var $x = "Mantieni aperto";
var Nx = "Font";
var Kx = "Allineamento";
var Wx = "Stile";
var _x = "Ingrandisci";
var Yx = "Rimpicciolisci";
var Zx = "Imposta";
var Xx = "Adatta alla selezione";
var qx = "Adatta";
var Jx = "File";
var Qx = "Modifica";
var eI = "Visualizzazione";
var tI = "Preferenze";
var nI = "Accedi";
var oI = "Esci";
var sI = "Sponsorizza";
var iI = "Sponsorizza";
var rI = "Adatta alla selezione";
var aI = "Adatta";
var dI = "Ingrandisci";
var lI = "Modalit\xE0 scura";
var cI = "Modalit\xE0 zen";
var pI = "Modalit\xE0 sviluppatore";
var uI = "Mostra griglia";
var hI = "Selezione CAD";
var mI = "Mantieni menu stile aperto";
var gI = "Mostra sempre le guide";
var fI = "Controlli d'inclinazione";
var SI = "Controlli d'associazione";
var TI = "Controlli di clonazione";
var bI = "Annulla";
var yI = "Ripristina";
var wI = "Taglia";
var xI = "Copia";
var II = "Incolla";
var CI = "Copia come";
var vI = "Esporta come";
var kI = "Seleziona tutto";
var DI = "Deseleziona tutto";
var PI = "Elimina";
var BI = "Nuovo progetto";
var MI = "Apri";
var EI = "Salva";
var RI = "Salva come";
var LI = "Carica contenuti multimediali";
var AI = "Crea nuova pagina";
var HI = "Nuova pagina";
var zI = "Nome pagina";
var OI = "Pagina";
var FI = "Duplica";
var jI = "Chiudi";
var UI = "Copia link invito";
var GI = "Crea progetto multiplayer";
var VI = "Trasforma in progetto multiplayer";
var $I = "Seleziona";
var NI = "Gomma";
var KI = "Matita";
var WI = "Freccia";
var _I = "Casella di testo";
var YI = "Post-it";
var ZI = "Rettangolo";
var XI = "Ellisse";
var qI = "Triangolo";
var JI = "Linea";
var QI = "Ruota";
var eC = "Blocca rapporto lati";
var tC = "Sblocca rapporto lati";
var nC = "Raggruppa";
var oC = "Separa";
var sC = "Muovi in fondo";
var iC = "Sposta indietro";
var rC = "Sposta avanti";
var aC = "Muovi in fronte";
var dC = "Reimposta angolo";
var lC = "Blocca";
var cC = "Sblocca";
var pC = "Trasferisci a pagina";
var uC = "Ribalta orizzontalmente";
var hC = "Ribalta verticalmente";
var mC = "Sposta";
var gC = "In primo piano";
var fC = "Sposta avanti";
var SC = "Sposta indietro";
var TC = "In fondo";
var bC = "Lingua";
var yC = "Posizione dock";
var wC = "In basso";
var xC = "Sinistra";
var IC = "Destra";
var CC = "In Alto";
var Nd = { "style.menu.color": jx, "style.menu.fill": Ux, "style.menu.dash": Gx, "style.menu.size": Vx, "style.menu.keep.open": $x, "style.menu.font": Nx, "style.menu.align": Kx, styles: Wx, "zoom.in": _x, "zoom.out": Yx, to: Zx, "to.selection": Xx, "to.fit": qx, "menu.file": Jx, "menu.edit": Qx, "menu.view": eI, "menu.preferences": tI, "menu.sign.in": nI, "menu.sign.out": oI, sponsored: sI, "become.a.sponsor": iI, "zoom.to.selection": rI, "zoom.to.fit": aI, "zoom.to": dI, "preferences.dark.mode": lI, "preferences.focus.mode": cI, "preferences.debug.mode": pI, "preferences.show.grid": uI, "preferences.use.cad.selection": hI, "preferences.keep.stylemenu.open": mI, "preferences.always.show.snaps": gI, "preferences.rotate.handles": fI, "preferences.binding.handles": SI, "preferences.clone.handles": TI, undo: bI, redo: yI, cut: wI, copy: xI, paste: II, "copy.as": CI, "export.as": vI, "select.all": kI, "select.none": DI, delete: PI, "new.project": BI, open: MI, save: EI, "save.as": RI, "upload.media": LI, "create.page": AI, "new.page": HI, "page.name": zI, page: OI, duplicate: FI, cancel: jI, "copy.invite.link": UI, "create.multiplayer.project": GI, "copy.multiplayer.project": VI, select: $I, eraser: NI, draw: KI, arrow: WI, text: _I, sticky: YI, Rectangle: ZI, Ellipse: XI, Triangle: qI, Line: JI, rotate: QI, "lock.aspect.ratio": eC, "unlock.aspect.ratio": tC, group: nC, ungroup: oC, "move.to.back": sC, "move.backward": iC, "move.forward": rC, "move.to.front": aC, "reset.angle": dC, lock: lC, unlock: cC, "move.to.page": pC, "flip.horizontal": uC, "flip.vertical": hC, move: mC, "to.front": gC, forward: fC, backward: SC, back: TC, language: bC, "dock.position": yC, bottom: wC, left: xC, right: IC, top: CC };
var vC = "\u8272";
var kC = "\u5857\u308A\u3064\u3076\u3057";
var DC = "\u7DDA";
var PC = "\u5927\u304D\u3055";
var BC = "\u5E38\u306B\u8868\u793A";
var MC = "\u30D5\u30A9\u30F3\u30C8";
var EC = "\u914D\u7F6E";
var RC = "\u30B9\u30BF\u30A4\u30EB";
var LC = "\u62E1\u5927";
var AC = "\u7E2E\u5C0F";
var HC = " ";
var zC = "\u9078\u629E\u3057\u305F\u30A2\u30A4\u30C6\u30E0\u306B\u5408\u308F\u305B\u308B";
var OC = "\u3059\u3079\u3066\u8868\u793A";
var FC = "\u30D5\u30A1\u30A4\u30EB";
var jC = "\u7DE8\u96C6";
var UC = "\u8868\u793A";
var GC = "\u8A2D\u5B9A";
var VC = "\u30B5\u30A4\u30F3\u30A4\u30F3";
var $C = "\u30B5\u30A4\u30F3\u30A2\u30A6\u30C8";
var NC = "\u652F\u63F4";
var KC = "\u652F\u63F4\u3059\u308B";
var WC = "\u9078\u629E\u3057\u305F\u30A2\u30A4\u30C6\u30E0\u306B\u5408\u308F\u305B\u3066\u62E1\u5927";
var _C = "\u62E1\u5927\u3057\u3066\u3059\u3079\u3066\u3092\u8868\u793A";
var YC = " ";
var ZC = "\u30C0\u30FC\u30AF\u30E2\u30FC\u30C9";
var XC = "\u30D5\u30A9\u30FC\u30AB\u30B9\u30E2\u30FC\u30C9";
var qC = "\u30C7\u30D0\u30C3\u30B0\u30E2\u30FC\u30C9";
var JC = "\u30B0\u30EA\u30C3\u30C9\u3092\u8868\u793A";
var QC = "CAD\u306E\u9078\u629E\u6CD5\u3092\u4F7F\u7528";
var ev = "\u30B9\u30BF\u30A4\u30EB\u30E1\u30CB\u30E5\u30FC\u3092\u5E38\u306B\u8868\u793A";
var tv = "\u30B9\u30CA\u30C3\u30D7\u3092\u5E38\u306B\u8868\u793A";
var nv = "\u56DE\u8EE2\u30CF\u30F3\u30C9\u30EB\u3092\u8868\u793A";
var ov = "\u7D50\u5408\u30CF\u30F3\u30C9\u30EB\u3092\u8868\u793A";
var sv = "\u30AF\u30ED\u30FC\u30F3\u30CF\u30F3\u30C9\u30EB\u3092\u8868\u793A";
var iv = "\u5143\u306B\u623B\u3059";
var rv = "\u3084\u308A\u76F4\u3057";
var av = "\u5207\u308A\u53D6\u308A";
var dv = "\u30B3\u30D4\u30FC";
var lv = "\u8CBC\u308A\u4ED8\u3051";
var cv = "\u5F62\u5F0F\u3092\u9078\u629E\u3057\u3066\u30B3\u30D4\u30FC";
var pv = "\u5F62\u5F0F\u3092\u9078\u629E\u3057\u3066\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8";
var uv = "\u3059\u3079\u3066\u9078\u629E";
var hv = "\u9078\u629E\u3092\u89E3\u9664";
var mv = "\u524A\u9664";
var gv = "\u65B0\u3057\u3044\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8";
var fv = "\u958B\u304F";
var Sv = "\u4FDD\u5B58";
var Tv = "\u540D\u524D\u3092\u3064\u3051\u3066\u4FDD\u5B58";
var bv = "\u30E1\u30C7\u30A3\u30A2\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9";
var yv = "\u30DA\u30FC\u30B8\u3092\u4F5C\u6210";
var wv = "\u65B0\u898F\u30DA\u30FC\u30B8";
var xv = "\u30DA\u30FC\u30B8\u540D";
var Iv = "\u8907\u88FD";
var Cv = "\u30AD\u30E3\u30F3\u30BB\u30EB";
var vv = "\u5171\u6709\u30EA\u30F3\u30AF\u3092\u30AF\u30EA\u30C3\u30D7\u30DC\u30FC\u30C9\u306B\u30B3\u30D4\u30FC";
var kv = "\u30DE\u30EB\u30C1\u30D7\u30EC\u30A4\u30E4\u30FC\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u3092\u4F5C\u6210";
var Dv = "\u30DE\u30EB\u30C1\u30D7\u30EC\u30A4\u30E4\u30FC\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306B\u30B3\u30D4\u30FC";
var Pv = "\u9078\u629E";
var Bv = "\u6D88\u3057\u30B4\u30E0";
var Mv = "\u63CF\u753B";
var Ev = "\u77E2\u5370";
var Rv = "\u30C6\u30AD\u30B9\u30C8";
var Lv = "\u3075\u305B\u3093";
var Av = "\u9577\u65B9\u5F62";
var Hv = "\u6955\u5186\u5F62";
var zv = "\u4E09\u89D2\u5F62";
var Ov = "\u7DDA";
var Fv = "\u56DE\u8EE2";
var jv = "\u7E26\u6A2A\u6BD4\u3092\u56FA\u5B9A";
var Uv = "\u7E26\u6A2A\u6BD4\u306E\u56FA\u5B9A\u3092\u89E3\u9664";
var Gv = "\u30B0\u30EB\u30FC\u30D4\u30F3\u30B0";
var Vv = "\u30B0\u30EB\u30FC\u30D7\u89E3\u9664";
var $v = "\u6700\u5F8C\u9762\u306B\u79FB\u52D5";
var Nv = "\u3072\u3068\u3064\u5F8C\u308D\u306B\u79FB\u52D5";
var Kv = "\u3072\u3068\u3064\u524D\u306B\u79FB\u52D5";
var Wv = "\u6700\u80CC\u9762\u306B\u79FB\u52D5";
var _v = "\u89D2\u5EA6\u3092\u521D\u671F\u5316";
var Yv = "\u30ED\u30C3\u30AF";
var Zv = "\u30A2\u30F3\u30ED\u30C3\u30AF";
var Xv = "\u30DA\u30FC\u30B8\u3078\u79FB\u52D5";
var qv = "\u6C34\u5E73\u65B9\u5411\u306B\u53CD\u8EE2";
var Jv = "\u5782\u76F4\u65B9\u5411\u306B\u53CD\u8EE2";
var Qv = "\u79FB\u52D5";
var ek = "\u6700\u524D\u9762\u3078";
var tk = "\u3072\u3068\u3064\u524D\u3078";
var nk = "\u3072\u3068\u3064\u5F8C\u308D\u3078";
var ok = "\u6700\u80CC\u9762\u3078";
var sk = "\u8A00\u8A9E";
var Kd = { "style.menu.color": vC, "style.menu.fill": kC, "style.menu.dash": DC, "style.menu.size": PC, "style.menu.keep.open": BC, "style.menu.font": MC, "style.menu.align": EC, styles: RC, "zoom.in": LC, "zoom.out": AC, to: HC, "to.selection": zC, "to.fit": OC, "menu.file": FC, "menu.edit": jC, "menu.view": UC, "menu.preferences": GC, "menu.sign.in": VC, "menu.sign.out": $C, sponsored: NC, "become.a.sponsor": KC, "zoom.to.selection": WC, "zoom.to.fit": _C, "zoom.to": YC, "preferences.dark.mode": ZC, "preferences.focus.mode": XC, "preferences.debug.mode": qC, "preferences.show.grid": JC, "preferences.use.cad.selection": QC, "preferences.keep.stylemenu.open": ev, "preferences.always.show.snaps": tv, "preferences.rotate.handles": nv, "preferences.binding.handles": ov, "preferences.clone.handles": sv, undo: iv, redo: rv, cut: av, copy: dv, paste: lv, "copy.as": cv, "export.as": pv, "select.all": uv, "select.none": hv, delete: mv, "new.project": gv, open: fv, save: Sv, "save.as": Tv, "upload.media": bv, "create.page": yv, "new.page": wv, "page.name": xv, duplicate: Iv, cancel: Cv, "copy.invite.link": vv, "create.multiplayer.project": kv, "copy.multiplayer.project": Dv, select: Pv, eraser: Bv, draw: Mv, arrow: Ev, text: Rv, sticky: Lv, Rectangle: Av, Ellipse: Hv, Triangle: zv, Line: Ov, rotate: Fv, "lock.aspect.ratio": jv, "unlock.aspect.ratio": Uv, group: Gv, ungroup: Vv, "move.to.back": $v, "move.backward": Nv, "move.forward": Kv, "move.to.front": Wv, "reset.angle": _v, lock: Yv, unlock: Zv, "move.to.page": Xv, "flip.horizontal": qv, "flip.vertical": Jv, move: Qv, "to.front": ek, forward: tk, backward: nk, back: ok, language: sk };
var ik = "\uC0C9\uAE54";
var rk = "\uCC44\uC6B0\uAE30";
var ak = "\uD14C\uB450\uB9AC";
var dk = "\uD06C\uAE30";
var lk = "\uD56D\uC0C1 \uC5F4\uAE30";
var ck = "\uAE00\uAF34";
var pk = "\uC815\uB82C";
var uk = "\uC2A4\uD0C0\uC77C";
var hk = "\uD655\uB300";
var mk = "\uCD95\uC18C";
var gk = "to";
var fk = "\uC120\uD0DD \uC694\uC18C \uB9DE\uCDA4";
var Sk = "\uC804\uCCB4 \uB9DE\uCDA4";
var Tk = "\uD30C\uC77C";
var bk = "\uD3B8\uC9D1";
var yk = "\uBCF4\uAE30";
var wk = "\uC124\uC815";
var xk = "\uB85C\uADF8\uC778";
var Ik = "\uB85C\uADF8\uC544\uC6C3";
var Ck = "\uD6C4\uC6D0";
var vk = "\uD6C4\uC6D0\uC790 \uB418\uAE30";
var kk = "\uC120\uD0DD \uC694\uC18C \uB9DE\uCD94\uAE30";
var Dk = "\uC804\uCCB4 \uB9DE\uCD94\uAE30";
var Pk = "\uB9DE\uCD94\uAE30";
var Bk = "\uB2E4\uD06C \uBAA8\uB4DC";
var Mk = "\uC9D1\uC911 \uBAA8\uB4DC";
var Ek = "\uB514\uBC84\uADF8 \uBAA8\uB4DC";
var Rk = "\uACA9\uC790 \uBCF4\uAE30";
var Lk = "CAD \uC120\uD0DD \uC0AC\uC6A9";
var Ak = "\uC2A4\uD0C0\uC77C \uBA54\uB274 \uD56D\uC0C1 \uC5F4\uAE30";
var Hk = "Snap \uD56D\uC0C1 \uC5F4\uAE30";
var zk = "\uD68C\uC804 \uBCF4\uC774\uAE30";
var Ok = "Binding Handles";
var Fk = "\uBCF5\uC81C \uBCF4\uC774\uAE30";
var jk = "\uC2E4\uD589 \uCDE8\uC18C";
var Uk = "\uB2E4\uC2DC \uC2E4\uD589";
var Gk = "\uC790\uB974\uAE30";
var Vk = "\uBCF5\uC0AC";
var $k = "\uBD99\uC5EC\uB123\uAE30";
var Nk = "\uB2E4\uB978 \uD615\uC2DD\uC73C\uB85C \uBCF5\uC0AC\uD558\uAE30";
var Kk = "\uB0B4\uBCF4\uB0B4\uAE30";
var Wk = "\uC804\uCCB4 \uC120\uD0DD";
var _k = "\uC120\uD0DD \uC548\uD568";
var Yk = "\uC0AD\uC81C\uD558\uAE30";
var Zk = "\uC0C8 \uD504\uB85C\uC81D\uD2B8";
var Xk = "\uC5F4\uAE30";
var qk = "\uC800\uC7A5";
var Jk = "\uB2E4\uB978 \uC774\uB984\uC73C\uB85C \uC800\uC7A5";
var Qk = "\uBBF8\uB514\uC5B4 \uC5C5\uB85C\uB4DC";
var eD = "\uC0C8 \uD398\uC774\uC9C0 \uB9CC\uB4E4\uAE30";
var tD = "\uC0C8 \uD398\uC774\uC9C0";
var nD = "\uD398\uC774\uC9C0 \uC774\uB984";
var oD = "\uBCF5\uC81C";
var sD = "\uCDE8\uC18C";
var iD = "\uCD08\uB300 \uB9C1\uD06C \uBCF5\uC0AC\uD558\uAE30";
var rD = "\uACF5\uB3D9 \uD504\uB85C\uC81D\uD2B8 \uB9CC\uB4E4\uAE30";
var aD = "\uACF5\uB3D9 \uD504\uB85C\uC81D\uD2B8\uB85C \uBCF5\uC0AC\uD558\uAE30";
var dD = "\uC120\uD0DD";
var lD = "\uC9C0\uC6B0\uAC1C";
var cD = "\uADF8\uB9AC\uAE30";
var pD = "\uD654\uC0B4\uD45C";
var uD = "\uD14D\uC2A4\uD2B8";
var hD = "\uBA54\uBAA8";
var mD = "\uC0AC\uAC01\uD615";
var gD = "\uC6D0";
var fD = "\uC0BC\uAC01\uD615";
var SD = "\uC120";
var TD = "\uD68C\uC804";
var bD = "\uBE44\uC728 \uC7A0\uAE08";
var yD = "\uBE44\uC728 \uC7A0\uAE08 \uD574\uC81C";
var wD = "\uADF8\uB8F9\uD654";
var xD = "\uADF8\uB8F9\uD654 \uD574\uC81C";
var ID = "\uB9E8 \uB4A4\uB85C \uBCF4\uB0B4\uAE30";
var CD = "\uB4A4\uB85C \uBCF4\uB0B4\uAE30";
var vD = "\uC55E\uC73C\uB85C \uAC00\uC838\uC624\uAE30";
var kD = "\uB9E8 \uC55E\uC73C\uB85C \uAC00\uC838\uC624\uAE30";
var DD = "\uD68C\uC804 \uCD08\uAE30\uD654";
var PD = "\uC7A0\uAD6C\uAE30";
var BD = "\uC7A0\uAE08 \uD574\uC81C\uD558\uAE30";
var MD = "\uD398\uC774\uC9C0\uB85C \uC774\uB3D9";
var ED = "\uC218\uD3C9\uC73C\uB85C \uB4A4\uC9D1\uAE30";
var RD = "\uC218\uC9C1\uC73C\uB85C \uB4A4\uC9D1\uAE30";
var LD = "\uC21C\uC11C";
var AD = "\uB9E8 \uC55E\uC73C\uB85C";
var HD = "\uC55E\uC73C\uB85C";
var zD = "\uB4A4\uB85C";
var OD = "\uB9E8 \uB4A4\uB85C";
var FD = "\uC5B8\uC5B4";
var Wd = { "style.menu.color": ik, "style.menu.fill": rk, "style.menu.dash": ak, "style.menu.size": dk, "style.menu.keep.open": lk, "style.menu.font": ck, "style.menu.align": pk, styles: uk, "zoom.in": hk, "zoom.out": mk, to: gk, "to.selection": fk, "to.fit": Sk, "menu.file": Tk, "menu.edit": bk, "menu.view": yk, "menu.preferences": wk, "menu.sign.in": xk, "menu.sign.out": Ik, sponsored: Ck, "become.a.sponsor": vk, "zoom.to.selection": kk, "zoom.to.fit": Dk, "zoom.to": Pk, "preferences.dark.mode": Bk, "preferences.focus.mode": Mk, "preferences.debug.mode": Ek, "preferences.show.grid": Rk, "preferences.use.cad.selection": Lk, "preferences.keep.stylemenu.open": Ak, "preferences.always.show.snaps": Hk, "preferences.rotate.handles": zk, "preferences.binding.handles": Ok, "preferences.clone.handles": Fk, undo: jk, redo: Uk, cut: Gk, copy: Vk, paste: $k, "copy.as": Nk, "export.as": Kk, "select.all": Wk, "select.none": _k, delete: Yk, "new.project": Zk, open: Xk, save: qk, "save.as": Jk, "upload.media": Qk, "create.page": eD, "new.page": tD, "page.name": nD, duplicate: oD, cancel: sD, "copy.invite.link": iD, "create.multiplayer.project": rD, "copy.multiplayer.project": aD, select: dD, eraser: lD, draw: cD, arrow: pD, text: uD, sticky: hD, Rectangle: mD, Ellipse: gD, Triangle: fD, Line: SD, rotate: TD, "lock.aspect.ratio": bD, "unlock.aspect.ratio": yD, group: wD, ungroup: xD, "move.to.back": ID, "move.backward": CD, "move.forward": vD, "move.to.front": kD, "reset.angle": DD, lock: PD, unlock: BD, "move.to.page": MD, "flip.horizontal": ED, "flip.vertical": RD, move: LD, "to.front": AD, forward: HD, backward: zD, back: OD, language: FD };
var jD = "Color";
var UD = "Fill";
var GD = "Dash";
var VD = "Size";
var $D = "Keep Open";
var ND = "Font";
var KD = "Align";
var WD = "Styles";
var _D = "Zoom In";
var YD = "Zoom Out";
var ZD = "To";
var XD = "To Selection";
var qD = "To Fit";
var JD = "Tools";
var QD = "Transform";
var eP = "File";
var tP = "Edit";
var nP = "View";
var oP = "Preferences";
var sP = "Sign In";
var iP = "Sign Out";
var rP = "Sponsored";
var aP = "Become a Sponsor";
var dP = "Back to content";
var lP = "Zoom to Selection";
var cP = "Zoom to Fit";
var pP = "Zoom to";
var uP = "Dark Mode";
var hP = "Focus Mode";
var mP = "Debug Mode";
var gP = "Show Grid";
var fP = "Use CAD Selection";
var SP = "Keep Style Menu Open";
var TP = "Always Show Snaps";
var bP = "Rotate Handles";
var yP = "Binding Handles";
var wP = "Clone Handles";
var xP = "Undo";
var IP = "Redo";
var CP = "Cut";
var vP = "Copy";
var kP = "Paste";
var DP = "Copy As";
var PP = "Export As";
var BP = "Select All";
var MP = "Select None";
var EP = "Delete";
var RP = "New Project";
var LP = "Open";
var AP = "Save";
var HP = "Save As";
var zP = "Upload Media";
var OP = "Create Page";
var FP = "New Page";
var jP = "Page Name";
var UP = "Duplicate";
var GP = "Cancel";
var VP = "Copy Invite Link";
var $P = "Copy ReadOnly Link";
var NP = "Create a Multiplayer Project";
var KP = "Copy to Multiplayer Project";
var WP = "Select";
var _P = "Eraser";
var YP = "Draw";
var ZP = "Arrow";
var XP = "Text";
var qP = "Sticky";
var JP = "Rectangle";
var QP = "Ellipse";
var e22 = "Triangle";
var t22 = "Line";
var n22 = "Rotate";
var o22 = "Lock Aspect Ratio";
var s22 = "Unlock Aspect Ratio";
var i22 = "Group";
var r22 = "Ungroup";
var a22 = "Move to Back";
var d22 = "Move Backward";
var l22 = "Move Forward";
var c22 = "Move to Front";
var p22 = "Reset Angle";
var u22 = "Lock";
var h22 = "Unlock";
var m22 = "Move to Page";
var g22 = "Flip Horizontal";
var f22 = "Flip Vertical";
var S22 = "Move";
var T22 = "To Front";
var b22 = "Forward";
var y22 = "Backward";
var w22 = "To Back";
var x22 = "Language";
var I22 = "Learn More";
var C22 = "Dock Position";
var v22 = "Bottom";
var k22 = "Left";
var D22 = "Right";
var P22 = "Top";
var B22 = "Page";
var M22 = "Keyboard shortcuts";
var E22 = "Search";
var R22 = "Loading{dots}";
var _d = { "style.menu.color": jD, "style.menu.fill": UD, "style.menu.dash": GD, "style.menu.size": VD, "style.menu.keep.open": $D, "style.menu.font": ND, "style.menu.align": KD, styles: WD, "zoom.in": _D, "zoom.out": YD, to: ZD, "to.selection": XD, "to.fit": qD, "menu.tools": JD, "menu.transform": QD, "menu.file": eP, "menu.edit": tP, "menu.view": nP, "menu.preferences": oP, "menu.sign.in": sP, "menu.sign.out": iP, sponsored: rP, "become.a.sponsor": aP, "zoom.to.content": dP, "zoom.to.selection": lP, "zoom.to.fit": cP, "zoom.to": pP, "preferences.dark.mode": uP, "preferences.focus.mode": hP, "preferences.debug.mode": mP, "preferences.show.grid": gP, "preferences.use.cad.selection": fP, "preferences.keep.stylemenu.open": SP, "preferences.always.show.snaps": TP, "preferences.rotate.handles": bP, "preferences.binding.handles": yP, "preferences.clone.handles": wP, undo: xP, redo: IP, cut: CP, copy: vP, paste: kP, "copy.as": DP, "export.as": PP, "select.all": BP, "select.none": MP, delete: EP, "new.project": RP, open: LP, save: AP, "save.as": HP, "upload.media": zP, "create.page": OP, "new.page": FP, "page.name": jP, duplicate: UP, cancel: GP, "copy.invite.link": VP, "copy.readonly.link": $P, "create.multiplayer.project": NP, "copy.multiplayer.project": KP, select: WP, eraser: _P, draw: YP, arrow: ZP, text: XP, sticky: qP, rectangle: JP, ellipse: QP, triangle: e22, line: t22, rotate: n22, "lock.aspect.ratio": o22, "unlock.aspect.ratio": s22, group: i22, ungroup: r22, "move.to.back": a22, "move.backward": d22, "move.forward": l22, "move.to.front": c22, "reset.angle": p22, lock: u22, unlock: h22, "move.to.page": m22, "flip.horizontal": g22, "flip.vertical": f22, move: S22, "to.front": T22, forward: b22, backward: y22, back: w22, language: x22, "translation.link": I22, "dock.position": C22, bottom: v22, left: k22, right: D22, top: P22, page: B22, "keyboard.shortcuts": M22, search: E22, loading: R22 };
var L22 = "\u0930\u0902\u0917";
var A22 = "\u092D\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var H22 = "\u0927\u0930\u094D\u0915\u093E";
var z22 = "\u0906\u0915\u093E\u0930";
var O22 = "\u0916\u0941\u0932\u093E \u0930\u093E\u0916\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var F22 = "\u092B\u0928\u094D\u091F";
var j22 = "\u092A\u0919\u094D\u0915\u094D\u0924\u093F\u092C\u0926\u094D\u0927";
var U22 = "\u0936\u0948\u0932\u0940\u0939\u0930\u0942";
var G22 = "\u091C\u0941\u092E \u0907\u0928";
var V22 = "\u091C\u0941\u092E \u0906\u0909\u091F";
var $2 = "\u091F\u0941";
var N2 = "\u091F\u0941 \u0938\u0947\u0932\u0947\u0915\u094D\u0938\u0928";
var K22 = "\u091F\u0941 \u092B\u093F\u091F";
var W22 = "\u092B\u093E\u0907\u0932";
var _22 = "\u0938\u092E\u094D\u092A\u093E\u0926\u0928 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var Y22 = "\u092D\u094D\u092F\u0942";
var Z22 = "\u092A\u094D\u0930\u093E\u0925\u092E\u093F\u0915\u0924\u093E\u0939\u0930\u0942";
var X22 = "\u0938\u093E\u0907\u0928 \u0907\u0928 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var q22 = "\u0938\u093E\u0907\u0928 \u0906\u0909\u091F \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var J22 = "\u092A\u094D\u0930\u093E\u092F\u094B\u091C\u093F\u0924";
var Q2 = "\u092A\u094D\u0930\u093E\u092F\u094B\u091C\u0915 \u092C\u0928\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var eB = "\u091C\u0941\u092E \u091F\u0941 \u0938\u0947\u0932\u0947\u0915\u094D\u0938\u0928";
var tB = "\u091C\u0941\u092E \u091F\u0941 \u092B\u093F\u091F";
var nB = "\u091C\u0941\u092E \u091F\u0941";
var oB = "\u0905\u0901\u0927\u094D\u092F\u093E\u0930\u094B \u092E\u094B\u0921";
var sB = "\u092B\u094B\u0915\u0938 \u092E\u094B\u0921";
var iB = "\u0921\u093F\u092C\u0917 \u092E\u094B\u0921";
var rB = "\u0917\u094D\u0930\u093F\u0921 \u0926\u0947\u0916\u093E\u0909\u0928\u0941\u0939\u094B\u0938\u094D";
var aB = "CAD \u0938\u0947\u0932\u0947\u0915\u094D\u0938\u0928 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var dB = "\u0938\u094D\u091F\u093E\u0907\u0932 \u092E\u0947\u0928\u0941 \u0916\u0941\u0932\u093E \u0930\u093E\u0916\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var lB = "\u0938\u0927\u0948\u0901 \u0938\u094D\u0928\u094D\u092F\u093E\u092A\u0939\u0930\u0942 \u0926\u0947\u0916\u093E\u0909\u0928\u0941\u0939\u094B\u0938\u094D";
var cB = "\u0939\u094D\u092F\u093E\u0928\u094D\u0921\u0932\u0939\u0930\u0942 \u0918\u0941\u092E\u093E\u0909\u0928\u0941\u0939\u094B\u0938\u094D";
var pB = "\u092C\u093E\u0907\u0928\u094D\u0921\u093F\u0919 \u0939\u094D\u092F\u093E\u0928\u094D\u0921\u0932\u0939\u0930\u0942";
var uB = "\u0915\u094D\u0932\u094B\u0928 \u0939\u094D\u092F\u093E\u0928\u094D\u0921\u0932\u0939\u0930\u0942";
var hB = "\u092A\u0942\u0930\u094D\u0935\u0935\u0924 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var mB = "\u092A\u0941\u0928\u0903 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var gB = "\u0915\u091F \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var fB = "\u0915\u092A\u093F \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var SB = "\u092A\u0947\u0938\u094D\u091F \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var TB = "\u0915\u092A\u093F \u090F\u091C";
var bB = "\u090F\u0915\u094D\u0938\u092A\u094B\u0930\u094D\u091F \u090F\u091C";
var yB = "\u0938\u092C\u0948 \u091B\u093E\u0928\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var wB = "\u0915\u0947\u0939\u093F \u092A\u0928\u093F \u0938\u0947\u0932\u0947\u0915\u094D\u091F \u0928\u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var xB = "\u092E\u0947\u091F\u093E\u0909\u0928\u0941\u0939\u094B\u0938\u094D";
var IB = "\u0928\u092F\u093E\u0901 \u092A\u0930\u093F\u092F\u094B\u091C\u0928\u093E";
var CB = "\u0916\u094B\u0932\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var vB = "\u0938\u0941\u0930\u0915\u094D\u0937\u093F\u0924 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var kB = "\u0938\u0947\u092D \u090F\u091C";
var DB = "\u092E\u093F\u0921\u093F\u092F\u093E \u0905\u092A\u0932\u094B\u0921 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var PB = "\u092A\u0943\u0937\u094D\u0920 \u0938\u093F\u0930\u094D\u091C\u0928\u093E \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var BB = "\u0928\u092F\u093E\u0901 \u092A\u0943\u0937\u094D\u0920 \u0938\u093F\u0930\u094D\u091C\u0928\u093E \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var MB = "\u092A\u0943\u0937\u094D\u0920\u0915\u094B \u0928\u093E\u092E";
var EB = "\u0905\u0928\u0941\u0932\u093F\u092A\u093F \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var RB = "\u0930\u0926\u094D\u0926 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var LB = "\u0928\u093F\u092E\u0928\u094D\u0924\u094D\u0930\u0923\u093E \u0932\u093F\u0919\u094D\u0915 \u0915\u092A\u093F \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var AB = "\u092E\u0932\u094D\u091F\u093F\u092A\u094D\u0932\u0947\u092F\u0930 \u092A\u0930\u093F\u092F\u094B\u091C\u0928\u093E \u0938\u093F\u0930\u094D\u091C\u0928\u093E \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var HB = "\u092E\u0932\u094D\u091F\u093F\u092A\u094D\u0932\u0947\u092F\u0930 \u092A\u094D\u0930\u094B\u091C\u0947\u0915\u094D\u091F\u092E\u093E \u0915\u092A\u093F \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var zB = "\u0938\u0947\u0932\u0947\u0915\u094D\u091F";
var OB = "\u0907\u0930\u0947\u091C\u0930";
var FB = "\u091A\u093F\u0924\u094D\u0930 \u092C\u0928\u093E\u0909\u0928\u0941";
var jB = "\u0924\u0940\u0930";
var UB = "\u0936\u092C\u094D\u0926";
var GB = "\u091F\u093E\u0901\u0938\u093F\u0928\u0947";
var VB = "\u0906\u092F\u0924";
var $B = "\u0926\u0940\u0930\u094D\u0918\u0935\u0943\u0924\u094D\u0924";
var NB = "\u0924\u094D\u0930\u093F\u092D\u0941\u091C";
var KB = "\u0930\u0947\u0916\u093E";
var WB = "\u0918\u0941\u092E\u093E\u0909\u0928\u0941\u0939\u094B\u0938\u094D";
var _B = "\u0906\u0915\u093E\u0930 \u0905\u0928\u0941\u092A\u093E\u0924 \u0932\u0915 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var YB = "\u0906\u0915\u093E\u0930 \u0905\u0928\u0941\u092A\u093E\u0924 \u0905\u0928\u0932\u0915 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var ZB = "\u0938\u092E\u0942\u0939";
var XB = "\u0938\u092E\u0942\u0939 \u0930\u0926\u094D\u0926 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var qB = "\u092A\u091B\u093E\u0921\u093F \u0938\u093E\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var JB = "\u0925\u092A \u092A\u091B\u093E\u0921\u093F \u0938\u093E\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var QB = "\u0905\u0917\u093E\u0921\u093F \u0938\u093E\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var e52 = "\u0925\u092A \u0905\u0917\u093E\u0921\u093F \u0938\u093E\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var t52 = "\u0915\u094B\u0923 \u0930\u093F\u0938\u0947\u091F \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var n52 = "\u0932\u0915 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var o52 = "\u0905\u0928\u0932\u0915 \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var s52 = "\u092A\u0943\u0937\u094D\u0920\u092E\u093E \u0938\u093E\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var i52 = "\u0924\u0947\u0930\u094D\u0938\u094B \u092B\u094D\u0932\u093F\u092A \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var r52 = "\u0920\u093E\u0921\u094B \u092B\u094D\u0932\u093F\u092A \u0917\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var a52 = "\u0938\u093E\u0930\u094D\u0928\u0941\u0939\u094B\u0938\u094D";
var d52 = "\u0925\u092A \u0905\u0917\u093E\u0921\u093F";
var l52 = "\u0905\u0917\u093E\u0921\u093F";
var c52 = "\u092A\u091B\u093E\u0921\u093F";
var p52 = "\u0925\u092A \u092A\u091B\u093E\u0921\u093F";
var u5 = "\u092D\u093E\u0937\u093E";
var Yd = { "style.menu.color": L22, "style.menu.fill": A22, "style.menu.dash": H22, "style.menu.size": z22, "style.menu.keep.open": O22, "style.menu.font": F22, "style.menu.align": j22, styles: U22, "zoom.in": G22, "zoom.out": V22, to: $2, "to.selection": N2, "to.fit": K22, "menu.file": W22, "menu.edit": _22, "menu.view": Y22, "menu.preferences": Z22, "menu.sign.in": X22, "menu.sign.out": q22, sponsored: J22, "become.a.sponsor": Q2, "zoom.to.selection": eB, "zoom.to.fit": tB, "zoom.to": nB, "preferences.dark.mode": oB, "preferences.focus.mode": sB, "preferences.debug.mode": iB, "preferences.show.grid": rB, "preferences.use.cad.selection": aB, "preferences.keep.stylemenu.open": dB, "preferences.always.show.snaps": lB, "preferences.rotate.handles": cB, "preferences.binding.handles": pB, "preferences.clone.handles": uB, undo: hB, redo: mB, cut: gB, copy: fB, paste: SB, "copy.as": TB, "export.as": bB, "select.all": yB, "select.none": wB, delete: xB, "new.project": IB, open: CB, save: vB, "save.as": kB, "upload.media": DB, "create.page": PB, "new.page": BB, "page.name": MB, duplicate: EB, cancel: RB, "copy.invite.link": LB, "create.multiplayer.project": AB, "copy.multiplayer.project": HB, select: zB, eraser: OB, draw: FB, arrow: jB, text: UB, sticky: GB, Rectangle: VB, Ellipse: $B, Triangle: NB, Line: KB, rotate: WB, "lock.aspect.ratio": _B, "unlock.aspect.ratio": YB, group: ZB, ungroup: XB, "move.to.back": qB, "move.backward": JB, "move.forward": QB, "move.to.front": e52, "reset.angle": t52, lock: n52, unlock: o52, "move.to.page": s52, "flip.horizontal": i52, "flip.vertical": r52, move: a52, "to.front": d52, forward: l52, backward: c52, back: p52, language: u5 };
var h52 = "Farge";
var m52 = "Fyll";
var g52 = "Linje";
var f52 = "St\xF8rrelse";
var S5 = "Hold \xE5pen";
var T5 = "Teksttype";
var b52 = "Juster";
var y5 = "Stiler";
var w52 = "Zoom inn";
var x52 = "Zoom ut";
var I5 = "til";
var C52 = "Til valg";
var v52 = "For \xE5 passe";
var k5 = "Fil";
var D5 = "Rediger";
var P5 = "Vis";
var B5 = "Preferanser";
var M5 = "Logg inn";
var E52 = "Logg ut";
var R52 = "Sponset";
var L5 = "Bli en sponsor";
var A5 = "Zoom til valg";
var H5 = "Zoom for \xE5 passe";
var z5 = "Zoom til";
var O5 = "M\xF8rk modus";
var F5 = "Fokus modus";
var j5 = "Debug modus";
var U5 = "Vis rutenett";
var G5 = "Bruk CAD seleksjon";
var V5 = "Hold stilmeny \xE5pen";
var $5 = "Vis alltid snaps";
var N5 = "Vis roteringsh\xE5ndtak";
var K5 = "Vis bindingsh\xE5ndtak";
var W5 = "Vis kloningsh\xE5ndtak";
var _5 = "Angre";
var Y5 = "Gj\xF8r om";
var Z5 = "Klipp ut";
var X5 = "Kopier";
var q5 = "Lim inn";
var J5 = "Kopier som";
var Q5 = "Eksporter som";
var eM = "Velg alle";
var tM = "Velg ingen";
var nM = "Slett";
var oM = "Nytt prosjekt";
var sM = "\xC5pne";
var iM = "Lagre";
var rM = "Lagre som";
var aM = "Last opp media";
var dM = "Opprett side";
var lM = "Ny side";
var cM = "Sidenavn";
var pM = "Dupliser";
var uM = "Avbryt";
var hM = "Kopier invitasjonslink";
var mM = "Opprett et flerspiller prosjekt";
var gM = "Kopier til flerspiller prosjekt";
var fM = "Velg";
var SM = "Viskel\xE6r";
var TM = "Tegn";
var bM = "Pil";
var yM = "Tekst";
var wM = "Lapp";
var xM = "Rektangel";
var IM = "Ellipse";
var CM = "Trekant";
var vM = "Linje";
var kM = "Roter";
var DM = "L\xE5s st\xF8rrelsesforhold";
var PM = "L\xE5s opp st\xF8rrelsesforhold";
var BM = "Grupper";
var MM = "Avgrupper";
var EM = "Flytt bakerst";
var RM = "Flytt bakover";
var LM = "Flytt forover";
var AM = "Flytt til front";
var HM = "Tilbakestill vinkel";
var zM = "L\xE5s";
var OM = "L\xE5s opp";
var FM = "Flytt til side";
var jM = "Snu horisontalt";
var UM = "Snu vertikalt";
var GM = "Flytt";
var VM = "Foran";
var $M = "Framover";
var NM = "Bakover";
var KM = "Bakerst";
var WM = "Spr\xE5k";
var Zd = { "style.menu.color": h52, "style.menu.fill": m52, "style.menu.dash": g52, "style.menu.size": f52, "style.menu.keep.open": S5, "style.menu.font": T5, "style.menu.align": b52, styles: y5, "zoom.in": w52, "zoom.out": x52, to: I5, "to.selection": C52, "to.fit": v52, "menu.file": k5, "menu.edit": D5, "menu.view": P5, "menu.preferences": B5, "menu.sign.in": M5, "menu.sign.out": E52, sponsored: R52, "become.a.sponsor": L5, "zoom.to.selection": A5, "zoom.to.fit": H5, "zoom.to": z5, "preferences.dark.mode": O5, "preferences.focus.mode": F5, "preferences.debug.mode": j5, "preferences.show.grid": U5, "preferences.use.cad.selection": G5, "preferences.keep.stylemenu.open": V5, "preferences.always.show.snaps": $5, "preferences.rotate.handles": N5, "preferences.binding.handles": K5, "preferences.clone.handles": W5, undo: _5, redo: Y5, cut: Z5, copy: X5, paste: q5, "copy.as": J5, "export.as": Q5, "select.all": eM, "select.none": tM, delete: nM, "new.project": oM, open: sM, save: iM, "save.as": rM, "upload.media": aM, "create.page": dM, "new.page": lM, "page.name": cM, duplicate: pM, cancel: uM, "copy.invite.link": hM, "create.multiplayer.project": mM, "copy.multiplayer.project": gM, select: fM, eraser: SM, draw: TM, arrow: bM, text: yM, sticky: wM, Rectangle: xM, Ellipse: IM, Triangle: CM, Line: vM, rotate: kM, "lock.aspect.ratio": DM, "unlock.aspect.ratio": PM, group: BM, ungroup: MM, "move.to.back": EM, "move.backward": RM, "move.forward": LM, "move.to.front": AM, "reset.angle": HM, lock: zM, unlock: OM, "move.to.page": FM, "flip.horizontal": jM, "flip.vertical": UM, move: GM, "to.front": VM, forward: $M, backward: NM, back: KM, language: WM };
var _M = "Kolor";
var YM = "Wype\u0142nienie";
var ZM = "Linia";
var XM = "Rozmiar";
var qM = "Zachowaj otwarte";
var JM = "Czcionka";
var QM = "Wyr\xF3wnanie";
var eE = "Style";
var tE = "Przybli\u017C";
var nE = "Oddal";
var oE = "do";
var sE = "Do zaznaczenia";
var iE = "Do wype\u0142nienia";
var rE = "Plik";
var aE = "Edycja";
var dE = "Widok";
var lE = "Preferencje";
var cE = "Zaloguj";
var pE = "Wyloguj";
var uE = "Sponsorzy";
var hE = "Zosta\u0144 sponsorem";
var mE = "Przybli\u017C do zaznaczenia";
var gE = "Wype\u0142nij ekran";
var fE = "Przybli\u017C do";
var SE = "Tryb ciemny";
var TE = "Tryb skupienia";
var bE = "Tryb debugowania";
var yE = "Poka\u017C siatk\u0119";
var wE = "U\u017Cyj zaznaczania CAD";
var xE = "Zachowaj menu styli otwarte";
var IE = "Przyci\u0105gaj obiekty";
var CE = "Uchwyty obrotu";
var vE = "Uchwyty powi\u0105zania";
var kE = "Uchwyty klonuj\u0105ce";
var DE = "Cofnij";
var PE = "Powt\xF3rz";
var BE = "Wytnij";
var ME = "Kopiuj";
var EE = "Wklej";
var RE2 = "Kopiuj jako";
var LE = "Eksportuj jako";
var AE = "Zaznacz wszystko";
var HE = "Odznacz wszystko";
var zE = "Usu\u0144";
var OE = "Nowy projekt";
var FE = "Otw\xF3rz";
var jE = "Zapisz";
var UE = "Zapisz jako";
var GE = "Za\u0142aduj multimedia";
var VE = "Utw\xF3rz stron\u0119";
var $E = "Nowa strona";
var NE = "Nazwa strony";
var KE = "Powiel";
var WE = "Anuluj";
var _E = "Kopiuj link zaproszenia";
var YE = "Stw\xF3rz projekt wieloosobowy";
var ZE = "Kopiuj do projektu wieloosobowego";
var XE = "Zaznacz";
var qE = "Gumka";
var JE = "Rysuj";
var QE = "Strza\u0142ka";
var eR = "Tekst";
var tR = "Naklejka";
var nR = "Prostok\u0105t";
var oR = "Elipsa";
var sR = "Tr\xF3jk\u0105t";
var iR = "Linia";
var rR = "Obr\xF3\u0107";
var aR = "Zablokuj proporcje";
var dR = "Odblokuj proporcje";
var lR = "Grupuj";
var cR = "Rozgrupuj";
var pR = "Przenie\u015B na ty\u0142";
var uR = "Przesu\u0144 do ty\u0142u";
var hR = "Przesu\u0144 do przodu";
var mR = "Przenie\u015B na prz\xF3d";
var gR = "Resetuj k\u0105t";
var fR = "Zablokuj";
var SR = "Odblokuj";
var TR = "Przenie\u015B na stron\u0119";
var bR = "Odwr\xF3\u0107 w poziomie";
var yR = "Odwr\xF3\u0107 w pionie";
var wR = "Przenie\u015B";
var xR = "Na wierzch";
var IR = "Do przodu";
var CR = "Do ty\u0142u";
var vR = "Na sp\xF3d";
var kR = "J\u0119zyk";
var Xd = { "style.menu.color": _M, "style.menu.fill": YM, "style.menu.dash": ZM, "style.menu.size": XM, "style.menu.keep.open": qM, "style.menu.font": JM, "style.menu.align": QM, styles: eE, "zoom.in": tE, "zoom.out": nE, to: oE, "to.selection": sE, "to.fit": iE, "menu.file": rE, "menu.edit": aE, "menu.view": dE, "menu.preferences": lE, "menu.sign.in": cE, "menu.sign.out": pE, sponsored: uE, "become.a.sponsor": hE, "zoom.to.selection": mE, "zoom.to.fit": gE, "zoom.to": fE, "preferences.dark.mode": SE, "preferences.focus.mode": TE, "preferences.debug.mode": bE, "preferences.show.grid": yE, "preferences.use.cad.selection": wE, "preferences.keep.stylemenu.open": xE, "preferences.always.show.snaps": IE, "preferences.rotate.handles": CE, "preferences.binding.handles": vE, "preferences.clone.handles": kE, undo: DE, redo: PE, cut: BE, copy: ME, paste: EE, "copy.as": RE2, "export.as": LE, "select.all": AE, "select.none": HE, delete: zE, "new.project": OE, open: FE, save: jE, "save.as": UE, "upload.media": GE, "create.page": VE, "new.page": $E, "page.name": NE, duplicate: KE, cancel: WE, "copy.invite.link": _E, "create.multiplayer.project": YE, "copy.multiplayer.project": ZE, select: XE, eraser: qE, draw: JE, arrow: QE, text: eR, sticky: tR, Rectangle: nR, Ellipse: oR, Triangle: sR, Line: iR, rotate: rR, "lock.aspect.ratio": aR, "unlock.aspect.ratio": dR, group: lR, ungroup: cR, "move.to.back": pR, "move.backward": uR, "move.forward": hR, "move.to.front": mR, "reset.angle": gR, lock: fR, unlock: SR, "move.to.page": TR, "flip.horizontal": bR, "flip.vertical": yR, move: wR, "to.front": xR, forward: IR, backward: CR, back: vR, language: kR };
var DR = "Cor";
var PR = "Preencher";
var BR = "Tra\xE7o";
var MR = "Tamanho";
var ER = "Manter aberto";
var RR = "Fonte";
var LR = "Alinhamento";
var AR = "Estilos";
var HR = "Aumentar zoom";
var zR = "Diminuir zoom";
var OR = "para";
var FR = "Para sele\xE7\xE3o";
var jR = "Para encaixar";
var UR = "Arquivo";
var GR = "Editar";
var VR = "Visualizar";
var $R = "Prefer\xEAncias";
var NR = "Entrar";
var KR = "Sair";
var WR = "Patrocinado";
var _R = "Torne-se um patrocinador";
var YR = "Zoom para a sele\xE7\xE3o";
var ZR = "Zoom para ajuste";
var XR = "Zoom para";
var qR = "Modo Escuro";
var JR = "Modo Foco";
var QR = "Modo Debug";
var e32 = "Mostrar Grade";
var t32 = "Usar sele\xE7\xE3o CAD";
var n32 = "Manter Menu de Estilos Aberto";
var o32 = "Mostrar Pontos de Ajuste";
var s32 = "Controle de Rota\xE7\xE3o";
var i32 = "Controle de V\xEDnculos";
var r32 = "Controle de Clone";
var a32 = "Desfazer";
var d32 = "Refazer";
var l32 = "Cortar";
var c32 = "Copiar";
var p32 = "Colar";
var u32 = "Copiar como";
var h32 = "Exportar como";
var m32 = "Selecionar todos";
var g32 = "Selecionar nenhum";
var f32 = "Deletar";
var S3 = "Novo Projeto";
var T32 = "Abrir";
var b32 = "Salvar";
var y32 = "Salvar Como";
var w32 = "Carregar M\xEDdia";
var x32 = "Criar P\xE1gina";
var I3 = "Nova P\xE1gina";
var C32 = "Nome da P\xE1gina";
var v32 = "Duplicar";
var k32 = "Cancelar";
var D32 = "Copiar Link de Convite";
var P3 = "Criar um Projeto Multijogador";
var B3 = "Copiar para Projeto Multijogador";
var M32 = "Selecionar";
var E32 = "Borracha";
var R32 = "Desenhar";
var L32 = "Seta";
var A32 = "Texto";
var H32 = "Adesivo";
var z3 = "Ret\xE2ngulo";
var O32 = "Elipse";
var F32 = "Tri\xE2ngulo";
var j32 = "Linha";
var U3 = "Rotacionar";
var G3 = "Travar Propor\xE7\xE3o da Tela";
var V32 = "Destravar Propor\xE7\xE3o da Tela";
var $3 = "Agrupar";
var N3 = "Desagrupar";
var K3 = "Recuar";
var W32 = "Enviar para Tr\xE1s";
var _32 = "Avan\xE7ar";
var Y32 = "Trazer para Frente";
var Z32 = "Reiniciar \xC2ngulo";
var X3 = "Travar";
var q3 = "Destravar";
var J32 = "Mover para P\xE1gina";
var Q3 = "Virar Horizontalmente";
var e82 = "Virar Verticalmente";
var t82 = "Mover";
var n8 = "Para Frente";
var o82 = "Avan\xE7ar";
var s82 = "Recuar";
var i8 = "Voltar";
var r82 = "Idioma";
var qd = { "style.menu.color": DR, "style.menu.fill": PR, "style.menu.dash": BR, "style.menu.size": MR, "style.menu.keep.open": ER, "style.menu.font": RR, "style.menu.align": LR, styles: AR, "zoom.in": HR, "zoom.out": zR, to: OR, "to.selection": FR, "to.fit": jR, "menu.file": UR, "menu.edit": GR, "menu.view": VR, "menu.preferences": $R, "menu.sign.in": NR, "menu.sign.out": KR, sponsored: WR, "become.a.sponsor": _R, "zoom.to.selection": YR, "zoom.to.fit": ZR, "zoom.to": XR, "preferences.dark.mode": qR, "preferences.focus.mode": JR, "preferences.debug.mode": QR, "preferences.show.grid": e32, "preferences.use.cad.selection": t32, "preferences.keep.stylemenu.open": n32, "preferences.always.show.snaps": o32, "preferences.rotate.handles": s32, "preferences.binding.handles": i32, "preferences.clone.handles": r32, undo: a32, redo: d32, cut: l32, copy: c32, paste: p32, "copy.as": u32, "export.as": h32, "select.all": m32, "select.none": g32, delete: f32, "new.project": S3, open: T32, save: b32, "save.as": y32, "upload.media": w32, "create.page": x32, "new.page": I3, "page.name": C32, duplicate: v32, cancel: k32, "copy.invite.link": D32, "create.multiplayer.project": P3, "copy.multiplayer.project": B3, select: M32, eraser: E32, draw: R32, arrow: L32, text: A32, sticky: H32, Rectangle: z3, Ellipse: O32, Triangle: F32, Line: j32, rotate: U3, "lock.aspect.ratio": G3, "unlock.aspect.ratio": V32, group: $3, ungroup: N3, "move.to.back": K3, "move.backward": W32, "move.forward": _32, "move.to.front": Y32, "reset.angle": Z32, lock: X3, unlock: q3, "move.to.page": J32, "flip.horizontal": Q3, "flip.vertical": e82, move: t82, "to.front": n8, forward: o82, backward: s82, back: i8, language: r82 };
var a8 = "\u0426\u0432\u0435\u0442";
var d82 = "\u0417\u0430\u043F\u043E\u043B\u043D\u044F\u0442\u044C";
var l8 = "\u0428\u0442\u0440\u0438\u0445";
var c8 = "\u0420\u0430\u0437\u043C\u0435\u0440";
var p8 = "\u0414\u0435\u0440\u0436\u0430\u0442\u044C \u043E\u0442\u043A\u0440\u044B\u0442\u044B\u043C";
var u8 = "\u0428\u0440\u0438\u0444\u0442";
var h8 = "\u0412\u044B\u0440\u043E\u0432\u043D\u044F\u0442\u044C";
var m8 = "\u0421\u0442\u0438\u043B\u044C";
var g8 = "\u0423\u0432\u0435\u043B\u0438\u0447\u0438\u0442\u044C";
var f82 = "\u0423\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C";
var S8 = "\u043A";
var T8 = "\u041A \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u0438\u044E";
var b8 = "\u041F\u043E \u0440\u0430\u0437\u043C\u0435\u0440\u0443 \u044D\u043A\u0440\u0430\u043D\u0430";
var y8 = "\u0424\u0430\u0439\u043B";
var w8 = "\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435";
var x8 = "\u0412\u0438\u0434";
var I8 = "\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438";
var C8 = "\u0412\u043E\u0439\u0442\u0438";
var v8 = "\u0412\u044B\u0439\u0442\u0438";
var k8 = "\u0421\u043F\u043E\u043D\u0441\u0438\u0440\u043E\u0432\u0430\u043D\u043E";
var D8 = "\u0421\u0442\u0430\u0442\u044C \u0441\u043F\u043E\u043D\u0441\u043E\u0440\u043E\u043C";
var P8 = "\u041F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u044C \u043A \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u0438\u044E";
var B8 = "\u0423\u0432\u0435\u043B\u0438\u0447\u0438\u0442\u044C \u043F\u043E \u0440\u0430\u0437\u043C\u0435\u0440\u0443 \u044D\u043A\u0440\u0430\u043D\u0430";
var M8 = "\u041F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u044C \u043A";
var E8 = "\u0422\u0451\u043C\u043D\u0430\u044F \u0442\u0435\u043C\u0430";
var R8 = "\u041C\u0438\u043D\u0438\u043C\u0430\u043B\u0438\u0441\u0442\u0438\u0447\u043D\u044B\u0439 \u0440\u0435\u0436\u0438\u043C";
var L8 = "\u0420\u0435\u0436\u0438\u043C \u043E\u0442\u043B\u0430\u0434\u043A\u0438";
var A8 = "\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0441\u0435\u0442\u043A\u0443";
var H8 = "\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C CAD \u0412\u044B\u0434\u0435\u043B\u0435\u043D\u0438\u0435";
var z8 = "\u0414\u0435\u0440\u0436\u0430\u0442\u044C \u043C\u0435\u043D\u044E \u0441\u0442\u0438\u043B\u0435\u0439 \u043E\u0442\u043A\u0440\u044B\u0442\u044B\u043C";
var O8 = "\u0412\u0441\u0435\u0433\u0434\u0430 \u043F\u043E\u043A\u0430\u0437\u044B\u0432\u0430\u0442\u044C \u043F\u0440\u0438\u0432\u044F\u0437\u043A\u0438";
var F8 = "\u0420\u0443\u0447\u043A\u0438 \u0432\u0440\u0430\u0449\u0435\u043D\u0438\u044F";
var j8 = "\u0420\u0443\u0447\u043A\u0438 \u043F\u0440\u0438\u0432\u044F\u0437\u043A\u0438";
var U8 = "\u0420\u0443\u0447\u043A\u0438 \u043A\u043B\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F";
var G8 = "\u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C";
var V8 = "\u041F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u044C";
var $8 = "\u0412\u044B\u0440\u0435\u0437\u0430\u0442\u044C";
var N8 = "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C";
var K8 = "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044C";
var W8 = "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043A\u0430\u043A";
var _8 = "\u042D\u043A\u0441\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043A\u0430\u043A";
var Y8 = "\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0432\u0441\u0451";
var Z8 = "\u0421\u043D\u044F\u0442\u044C \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u0438\u0435";
var X8 = "\u0423\u0434\u0430\u043B\u0438\u0442\u044C";
var q8 = "\u041D\u043E\u0432\u044B\u0439 \u043F\u0440\u043E\u0435\u043A\u0442";
var J8 = "\u041E\u0442\u043A\u0440\u044B\u0442\u044C";
var Q8 = "\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C";
var e42 = "\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u043A\u0430\u043A";
var t42 = "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0444\u043E\u0442\u043E";
var n42 = "\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443";
var o42 = "\u041D\u043E\u0432\u0430\u044F \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430";
var s42 = "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B";
var i42 = "\u0414\u0443\u0431\u043B\u0438\u0440\u043E\u0432\u0430\u0442\u044C";
var r42 = "\u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C";
var a42 = "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u0441\u044B\u043B\u043A\u0443 \u043F\u0440\u0438\u0433\u043B\u0430\u0448\u0435\u043D\u0438\u0435";
var d42 = "\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u043C\u043D\u043E\u0433\u043E\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u0441\u043A\u0438\u0439 \u043F\u0440\u043E\u0435\u043A\u0442";
var l42 = "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432 \u043C\u043D\u043E\u0433\u043E\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u0441\u043A\u0438\u0439 \u043F\u0440\u043E\u0435\u043A\u0442";
var c42 = "\u0412\u044B\u0431\u0438\u0440\u0430\u0442\u044C";
var p42 = "\u041B\u0430\u0441\u0442\u0438\u043A";
var u42 = "\u0420\u0438\u0441\u043E\u0432\u0430\u0442\u044C";
var h42 = "\u0421\u0442\u0440\u0435\u043B\u043A\u0430";
var m42 = "\u0422\u0435\u043A\u0441\u0442";
var g42 = "\u0417\u0430\u043C\u0435\u0442\u043A\u0430";
var f42 = "\u041F\u0440\u044F\u043C\u043E\u0443\u0433\u043E\u043B\u044C\u043D\u0438\u043A";
var S4 = "\u042D\u043B\u043B\u0438\u043F\u0441";
var T42 = "\u0422\u0440\u0435\u0443\u0433\u043E\u043B\u044C\u043D\u0438\u043A";
var b42 = "\u041B\u0438\u043D\u0438\u044F";
var y4 = "\u041F\u043E\u0432\u0435\u0440\u043D\u0443\u0442\u044C";
var w42 = "\u0417\u0430\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u043E\u043E\u0442\u043D\u043E\u0448\u0435\u043D\u0438\u0435 \u0441\u0442\u043E\u0440\u043E\u043D";
var x42 = "\u0420\u0430\u0437\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u043E\u043E\u0442\u043D\u043E\u0448\u0435\u043D\u0438\u0435 \u0441\u0442\u043E\u0440\u043E\u043D";
var I4 = "\u0421\u0433\u0440\u0443\u043F\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C";
var C42 = "\u0420\u0430\u0437\u0433\u0440\u0443\u043F\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C";
var v42 = "\u041F\u0435\u0440\u0435\u043C\u0435\u0441\u0442\u0438\u0442\u044C \u043D\u0430\u0437\u0430\u0434";
var k42 = "\u041F\u0435\u0440\u0435\u043C\u0435\u0441\u0442\u0438\u0442\u044C \u043D\u0430 \u0437\u0430\u0434\u043D\u0438\u0439 \u043F\u043B\u0430\u043D";
var D42 = "\u041F\u0435\u0440\u0435\u043C\u0435\u0441\u0442\u0438\u0442\u044C \u0432\u043F\u0435\u0440\u0451\u0434";
var P4 = "\u041F\u0435\u0440\u0435\u043C\u0435\u0441\u0442\u0438\u0442\u044C \u043D\u0430 \u043F\u0435\u0440\u0435\u0434\u043D\u0438\u0439 \u043F\u043B\u0430\u043D";
var B4 = "\u0421\u0431\u0440\u043E\u0441 \u0443\u0433\u043B\u0430";
var M4 = "\u0411\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u043A\u0430";
var E42 = "\u0420\u0430\u0437\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u043A\u0430";
var R42 = "\u041F\u0435\u0440\u0435\u0439\u0442\u0438 \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443";
var L4 = "\u041F\u0435\u0440\u0435\u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0433\u043E\u0440\u0438\u0437\u043E\u043D\u0442\u0430\u043B\u044C\u043D\u043E";
var A4 = "\u041F\u0435\u0440\u0435\u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0432\u0435\u0440\u0442\u0438\u043A\u0430\u043B\u044C\u043D\u043E";
var H42 = "\u041F\u0435\u0440\u0435\u043C\u0435\u0441\u0442\u0438\u0442\u044C";
var z4 = "\u041D\u0430 \u043F\u0435\u0440\u0435\u0434\u043D\u0438\u0439 \u043F\u043B\u0430\u043D";
var O42 = "\u0412\u043F\u0435\u0440\u0435\u0434";
var F42 = "\u041D\u0430 \u0437\u0430\u0434\u043D\u0438\u0439 \u043F\u043B\u0430\u043D";
var j4 = "\u041D\u0430\u0437\u0430\u0434";
var U4 = "\u042F\u0437\u044B\u043A";
var Jd = { "style.menu.color": a8, "style.menu.fill": d82, "style.menu.dash": l8, "style.menu.size": c8, "style.menu.keep.open": p8, "style.menu.font": u8, "style.menu.align": h8, styles: m8, "zoom.in": g8, "zoom.out": f82, to: S8, "to.selection": T8, "to.fit": b8, "menu.file": y8, "menu.edit": w8, "menu.view": x8, "menu.preferences": I8, "menu.sign.in": C8, "menu.sign.out": v8, sponsored: k8, "become.a.sponsor": D8, "zoom.to.selection": P8, "zoom.to.fit": B8, "zoom.to": M8, "preferences.dark.mode": E8, "preferences.focus.mode": R8, "preferences.debug.mode": L8, "preferences.show.grid": A8, "preferences.use.cad.selection": H8, "preferences.keep.stylemenu.open": z8, "preferences.always.show.snaps": O8, "preferences.rotate.handles": F8, "preferences.binding.handles": j8, "preferences.clone.handles": U8, undo: G8, redo: V8, cut: $8, copy: N8, paste: K8, "copy.as": W8, "export.as": _8, "select.all": Y8, "select.none": Z8, delete: X8, "new.project": q8, open: J8, save: Q8, "save.as": e42, "upload.media": t42, "create.page": n42, "new.page": o42, "page.name": s42, duplicate: i42, cancel: r42, "copy.invite.link": a42, "create.multiplayer.project": d42, "copy.multiplayer.project": l42, select: c42, eraser: p42, draw: u42, arrow: h42, text: m42, sticky: g42, Rectangle: f42, Ellipse: S4, Triangle: T42, Line: b42, rotate: y4, "lock.aspect.ratio": w42, "unlock.aspect.ratio": x42, group: I4, ungroup: C42, "move.to.back": v42, "move.backward": k42, "move.forward": D42, "move.to.front": P4, "reset.angle": B4, lock: M4, unlock: E42, "move.to.page": R42, "flip.horizontal": L4, "flip.vertical": A4, move: H42, "to.front": z4, forward: O42, backward: F42, back: j4, language: U4 };
var G4 = "Renk";
var V42 = "Doldur";
var $4 = "\xC7izgi";
var N4 = "Boyut";
var K4 = "A\xE7\u0131k Tut";
var W4 = "Yaz\u0131 Tipi";
var _4 = "Hizala";
var Y4 = "Stiller";
var Z4 = "Yak\u0131nla\u015Ft\u0131r";
var X4 = "Uzakla\u015Ft\u0131r";
var q4 = "";
var J4 = "Se\xE7ime G\xF6re";
var Q4 = "S\u0131\u011Fd\u0131rmaya G\xF6re";
var e62 = "Dosya";
var t62 = "D\xFCzenle";
var n6 = "G\xF6r\xFCnt\xFC";
var o62 = "Tercihler";
var s62 = "Giri\u015F Yap";
var i62 = "Oturumu Kapat";
var r62 = "Sponsorlu";
var a6 = "Sponsor Ol";
var d62 = "Se\xE7ime Yak\u0131nla\u015Ft\u0131r";
var l62 = "S\u0131\u011Fd\u0131rmak i\xE7in Yak\u0131nla\u015Ft\u0131r";
var c62 = "Yak\u0131nla\u015Ft\u0131r";
var p62 = "Karanl\u0131k Mod";
var u6 = "Odak Modu";
var h6 = "Debug Modu";
var m62 = "Izgaray\u0131 G\xF6ster";
var g62 = "CAD Se\xE7imi Kullan";
var f62 = "Stil Men\xFCs\xFCn\xFC A\xE7\u0131k Tut";
var S6 = "Hiza \xC7izgilerini Hep G\xF6ster";
var T6 = "Rotasyon Kontrolc\xFCleri";
var b62 = "Ba\u011Flama Kontrolc\xFCleri";
var y6 = "Klon Kontrolc\xFCleri";
var w62 = "Geri Al";
var x62 = "Yinele";
var I6 = "Kes";
var C6 = "Kopyala";
var v6 = "Yap\u0131\u015Ft\u0131r";
var k6 = "Olarak Kopyala";
var D6 = "Olarak D\u0131\u015Far\u0131 Aktar";
var P6 = "Hepsini Se\xE7";
var B6 = "Hi\xE7birini Se\xE7me";
var M6 = "Sil";
var E6 = "Yeni Proje";
var R62 = "A\xE7";
var L6 = "Kaydet";
var A6 = "Farkl\u0131 Kaydet";
var H6 = "Medya Y\xFCkle";
var z6 = "Sayfa Olu\u015Ftur";
var O6 = "Yeni Sayfa";
var F6 = "Sayfa \u0130smi";
var j6 = "Kopya Olu\u015Ftur";
var U6 = "\u0130ptal";
var G6 = "Davet Linkini Kopyala";
var V6 = "\xC7ok Oyunculu Proje Olu\u015Ftur";
var $6 = "\xC7ok Oyunculu Projeye Kopyala";
var N6 = "Se\xE7";
var K6 = "Silgi";
var W6 = "\xC7izim";
var _6 = "Ok";
var Y6 = "Yaz\u0131";
var Z6 = "Yap\u0131\u015Fkan";
var X6 = "Dikd\xF6rtgen";
var q6 = "Elips";
var J6 = "\xDC\xE7gen";
var Q6 = "\xC7izgi";
var eL = "D\xF6nd\xFCr";
var tL = "En Boy Oran\u0131n\u0131 Kilitle";
var nL = "En Boy Oran\u0131 Kilidini A\xE7";
var oL = "Grupla";
var sL = "Gruplamay\u0131 Kald\u0131r";
var iL = "Arkaya Ta\u015F\u0131";
var rL = "En Arkaya Ta\u015F\u0131";
var aL = "En \xD6ne Ta\u015F\u0131";
var dL = "\xD6ne Ta\u015F\u0131";
var lL = "A\xE7\u0131y\u0131 S\u0131f\u0131rla";
var cL = "Kilitle";
var pL = "Kilidini A\xE7";
var uL = "Sayfaya Ta\u015F\u0131";
var hL = "Yatay \xC7evir";
var mL = "Dikey \xC7evir";
var gL = "Ta\u015F\u0131";
var fL = "\xD6ne";
var SL = "En \xD6ne";
var TL = "En Arkaya";
var bL = "Arkaya";
var yL = "Dil";
var Qd = { "style.menu.color": G4, "style.menu.fill": V42, "style.menu.dash": $4, "style.menu.size": N4, "style.menu.keep.open": K4, "style.menu.font": W4, "style.menu.align": _4, styles: Y4, "zoom.in": Z4, "zoom.out": X4, to: q4, "to.selection": J4, "to.fit": Q4, "menu.file": e62, "menu.edit": t62, "menu.view": n6, "menu.preferences": o62, "menu.sign.in": s62, "menu.sign.out": i62, sponsored: r62, "become.a.sponsor": a6, "zoom.to.selection": d62, "zoom.to.fit": l62, "zoom.to": c62, "preferences.dark.mode": p62, "preferences.focus.mode": u6, "preferences.debug.mode": h6, "preferences.show.grid": m62, "preferences.use.cad.selection": g62, "preferences.keep.stylemenu.open": f62, "preferences.always.show.snaps": S6, "preferences.rotate.handles": T6, "preferences.binding.handles": b62, "preferences.clone.handles": y6, undo: w62, redo: x62, cut: I6, copy: C6, paste: v6, "copy.as": k6, "export.as": D6, "select.all": P6, "select.none": B6, delete: M6, "new.project": E6, open: R62, save: L6, "save.as": A6, "upload.media": H6, "create.page": z6, "new.page": O6, "page.name": F6, duplicate: j6, cancel: U6, "copy.invite.link": G6, "create.multiplayer.project": V6, "copy.multiplayer.project": $6, select: N6, eraser: K6, draw: W6, arrow: _6, text: Y6, sticky: Z6, Rectangle: X6, Ellipse: q6, Triangle: J6, Line: Q6, rotate: eL, "lock.aspect.ratio": tL, "unlock.aspect.ratio": nL, group: oL, ungroup: sL, "move.to.back": iL, "move.backward": rL, "move.forward": aL, "move.to.front": dL, "reset.angle": lL, lock: cL, unlock: pL, "move.to.page": uL, "flip.horizontal": hL, "flip.vertical": mL, move: gL, "to.front": fL, forward: SL, backward: TL, back: bL, language: yL };
var wL = "\u041A\u043E\u043B\u0456\u0440";
var xL = "\u0417\u0430\u043F\u043E\u0432\u043D\u044E\u0432\u0430\u0442\u0438";
var IL = "\u0428\u0442\u0440\u0438\u0445";
var CL = "\u0420\u043E\u0437\u043C\u0456\u0440";
var vL = "\u0422\u0440\u0438\u043C\u0430\u0442\u0438 \u0432\u0456\u0434\u043A\u0440\u0438\u0442\u0438\u043C";
var kL = "\u0428\u0440\u0438\u0444\u0442";
var DL = "\u0412\u0438\u0440\u0456\u0432\u043D\u044F\u0442\u0438";
var PL = "\u0421\u0442\u0438\u043B\u044C";
var BL = "\u0417\u0431\u0456\u043B\u044C\u0448\u0438\u0442\u0438";
var ML = "\u0417\u043C\u0435\u043D\u0448\u0438\u0442\u0438";
var EL = "\u0434\u043E";
var RL = "\u0414\u043E \u0432\u0438\u0434\u0456\u043B\u0435\u043D\u043D\u044F";
var LL = "\u0417\u0430 \u0440\u043E\u0437\u043C\u0456\u0440\u043E\u043C \u0435\u043A\u0440\u0430\u043D\u0443";
var AL = "\u0424\u0430\u0439\u043B";
var HL = "\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u043D\u043D\u044F";
var zL = "\u0412\u0438\u0433\u043B\u044F\u0434";
var OL = "\u041D\u0430\u043B\u0430\u0448\u0442\u0443\u0432\u0430\u043D\u043D\u044F";
var FL = "\u0423\u0432\u0456\u0439\u0442\u0438";
var jL = "\u0412\u0438\u0439\u0442\u0438";
var UL = "\u0421\u043F\u043E\u043D\u0441\u043E\u0432\u0430\u043D\u043E";
var GL = "\u0421\u0442\u0430\u0442\u0438 \u0441\u043F\u043E\u043D\u0441\u043E\u0440\u043E\u043C";
var VL = "\u041D\u0430\u0431\u043B\u0438\u0437\u0438\u0442\u0438 \u0434\u043E \u0432\u0438\u0434\u0456\u043B\u0435\u043D\u043D\u044F";
var $L = "\u0417\u0431\u0456\u043B\u044C\u0448\u0438\u0442\u0438 \u0437\u0430 \u0440\u043E\u0437\u043C\u0456\u0440\u043E\u043C \u0435\u043A\u0440\u0430\u043D\u0443";
var NL = "\u041D\u0430\u0431\u043B\u0438\u0437\u0438\u0442\u0438 \u0434\u043E";
var KL = "\u0422\u0435\u043C\u043D\u0430 \u0442\u0435\u043C\u0430";
var WL = "\u041C\u0456\u043D\u0456\u043C\u0430\u043B\u0456\u0441\u0442\u0438\u0447\u043D\u0438\u0439 \u0440\u0435\u0436\u0438\u043C";
var _L = "\u0420\u0435\u0436\u0438\u043C \u043D\u0430\u043B\u0430\u0433\u043E\u0434\u0436\u0435\u043D\u043D\u044F";
var YL = "\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u0438 \u0441\u0456\u0442\u043A\u0443";
var ZL = "\u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438 CAD \u0432\u0438\u0434\u0456\u043B\u0435\u043D\u043D\u044F";
var XL = "\u0422\u0440\u0438\u043C\u0430\u0442\u0438 \u043C\u0435\u043D\u044E \u0441\u0442\u0438\u043B\u0456\u0432 \u0432\u0456\u0434\u043A\u0440\u0438\u0442\u0438\u043C";
var qL = "\u0417\u0430\u0432\u0436\u0434\u0438 \u043F\u043E\u043A\u0430\u0437\u0443\u0432\u0430\u0442\u0438 \u043F\u0440\u0438\u0432'\u044F\u0437\u043A\u0438";
var JL = "\u0420\u0443\u0447\u043A\u0438 \u043E\u0431\u0435\u0440\u0442\u0430\u043D\u043D\u044F";
var QL = "\u0420\u0443\u0447\u043A\u0438 \u043F\u0440\u0438\u0432'\u044F\u0437\u043A\u0438";
var eA = "\u0420\u0443\u0447\u043A\u0438 \u043A\u043B\u043E\u043D\u0443\u0432\u0430\u043D\u043D\u044F";
var tA = "\u0421\u043A\u0430\u0441\u0443\u0432\u0430\u0442\u0438";
var nA = "\u041F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u0438";
var oA = "\u0412\u0438\u0440\u0456\u0437\u0430\u0442\u0438";
var sA = "\u0421\u043A\u043E\u043F\u0456\u044E\u0432\u0430\u0442\u0438";
var iA = "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u0438";
var rA = "\u0421\u043A\u043E\u043F\u0456\u044E\u0432\u0430\u0442\u0438 \u044F\u043A";
var aA = "\u0415\u043A\u0441\u043F\u043E\u0440\u0442\u0443\u0432\u0430\u0442\u0438 \u044F\u043A";
var dA = "\u041E\u0431\u0440\u0430\u0442\u0438 \u0432\u0441\u0435";
var lA = "\u0417\u043D\u044F\u0442\u0438 \u0432\u0438\u0434\u0456\u043B\u0435\u043D\u043D\u044F";
var cA = "\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438";
var pA = "\u041D\u043E\u0432\u0438\u0439 \u043F\u0440\u043E\u0435\u043A\u0442";
var uA = "\u0412\u0456\u0434\u043A\u0440\u0438\u0442\u0438";
var hA = "\u0417\u0431\u0435\u0440\u0435\u0433\u0442\u0438";
var mA = "\u0417\u0431\u0435\u0440\u0435\u0433\u0442\u0438 \u044F\u043A";
var gA = "\u0417\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0438\u0442\u0438 \u043C\u0435\u0434\u0456\u0430";
var fA = "\u0421\u0442\u0432\u043E\u0440\u0438\u0442\u0438 \u0441\u0442\u043E\u0440\u0456\u043D\u043A\u0443";
var SA = "\u041D\u043E\u0432\u0430 \u0441\u0442\u043E\u0440\u0456\u043D\u043A\u0430";
var TA = "\u041D\u0430\u0437\u0432\u0430 \u0441\u0442\u043E\u0440\u0456\u043D\u043A\u0438";
var bA = "\u0414\u0443\u0431\u043B\u044E\u0432\u0430\u0442\u0438";
var yA = "\u0421\u043A\u0430\u0441\u0443\u0432\u0430\u0442\u0438";
var wA = "\u0421\u043A\u043E\u043F\u0456\u044E\u0432\u0430\u0442\u0438 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430 \u0437\u0430\u043F\u0440\u043E\u0448\u0435\u043D\u043D\u044F";
var xA = "\u0421\u0442\u0432\u043E\u0440\u0438\u0442\u0438 \u0431\u0430\u0433\u0430\u0442\u043E\u043A\u043E\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0446\u044C\u043A\u0438\u0439 \u043F\u0440\u043E\u0435\u043A\u0442";
var IA = "\u0421\u043A\u043E\u043F\u0456\u044E\u0432\u0430\u0442\u0438 \u0432 \u0431\u0430\u0433\u0430\u0442\u043E\u043A\u043E\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0446\u044C\u043A\u0438\u0439 \u043F\u0440\u043E\u0435\u043A\u0442";
var CA = "\u0412\u0438\u0431\u0438\u0440\u0430\u0442\u0438";
var vA = "\u041B\u0430\u0441\u0442\u0438\u043A";
var kA = "\u041C\u0430\u043B\u044E\u0432\u0430\u0442\u0438";
var DA = "\u0421\u0442\u0440\u0456\u043B\u043A\u0430";
var PA = "\u0422\u0435\u043A\u0441\u0442";
var BA = "\u041D\u043E\u0442\u0430\u0442\u043A\u0430";
var MA = "\u041F\u0440\u044F\u043C\u043E\u043A\u0443\u0442\u043D\u0438\u043A";
var EA = "\u0415\u043B\u0456\u043F\u0441";
var RA = "\u0422\u0440\u0438\u043A\u0443\u0442\u043D\u0438\u043A";
var LA = " \u041B\u0456\u043D\u0456\u044F";
var AA = "\u041F\u043E\u0432\u0435\u0440\u043D\u0443\u0442\u0438";
var HA = "\u0417\u0430\u0431\u043B\u043E\u043A\u0443\u0432\u0430\u0442\u0438 \u0441\u043F\u0456\u0432\u0432\u0456\u0434\u043D\u043E\u0448\u0435\u043D\u043D\u044F \u0441\u0442\u043E\u0440\u0456\u043D";
var zA = " \u0420\u043E\u0437\u0431\u043B\u043E\u043A\u0443\u0432\u0430\u0442\u0438 \u0441\u043F\u0456\u0432\u0432\u0456\u0434\u043D\u043E\u0448\u0435\u043D\u043D\u044F \u0441\u0442\u043E\u0440\u0456\u043D";
var OA = "\u0417\u0433\u0440\u0443\u043F\u0443\u0432\u0430\u0442\u0438";
var FA = " \u0420\u043E\u0437\u0433\u0440\u0443\u043F\u0443\u0432\u0430\u0442\u0438";
var jA = "\u041F\u0435\u0440\u0435\u043C\u0456\u0441\u0442\u0438\u0442\u0438 \u043D\u0430\u0437\u0430\u0434";
var UA = "\u041F\u0435\u0440\u0435\u043C\u0456\u0441\u0442\u0438\u0442\u0438 \u043D\u0430 \u0437\u0430\u0434\u043D\u0456\u0439 \u043F\u043B\u0430\u043D";
var GA = "\u041F\u0435\u0440\u0435\u043C\u0456\u0441\u0442\u0438\u0442\u0438 \u0432\u043F\u0435\u0440\u0435\u0434";
var VA = "\u041F\u0435\u0440\u0435\u043C\u0456\u0441\u0442\u0438\u0442\u0438 \u043D\u0430 \u043F\u0435\u0440\u0435\u0434\u043D\u0456\u0439 \u043F\u043B\u0430\u043D";
var $A = "\u0421\u043A\u0438\u0434\u0430\u043D\u043D\u044F \u043A\u0443\u0442\u0430";
var NA = "\u0411\u043B\u043E\u043A\u0443\u0432\u0430\u043D\u043D\u044F";
var KA = " \u0420\u043E\u0437\u0431\u043B\u043E\u043A\u0443\u0432\u0430\u043D\u043D\u044F";
var WA = "\u041F\u0435\u0440\u0435\u0439\u0442\u0438 \u043D\u0430 \u0441\u0442\u043E\u0440\u0456\u043D\u043A\u0443";
var _A = "\u041F\u0435\u0440\u0435\u0432\u0435\u0440\u043D\u0443\u0442\u0438 \u0433\u043E\u0440\u0438\u0437\u043E\u043D\u0442\u0430\u043B\u044C\u043D\u043E";
var YA = "\u041F\u0435\u0440\u0435\u0432\u0435\u0440\u043D\u0443\u0442\u0438 \u0432\u0435\u0440\u0442\u0438\u043A\u0430\u043B\u044C\u043D\u043E";
var ZA = "\u041F\u0435\u0440\u0435\u043C\u0456\u0441\u0442\u0438\u0442\u0438";
var XA = "\u041D\u0430 \u043F\u0435\u0440\u0435\u0434\u043D\u0456\u0439 \u043F\u043B\u0430\u043D";
var qA = " \u0412\u043F\u0435\u0440\u0435\u0434";
var JA = "\u041D\u0430 \u0437\u0430\u0434\u043D\u0456\u0439 \u043F\u043B\u0430\u043D";
var QA = "\u041D\u0430\u0437\u0430\u0434";
var e92 = "\u041C\u043E\u0432\u0430";
var el = { "style.menu.color": wL, "style.menu.fill": xL, "style.menu.dash": IL, "style.menu.size": CL, "style.menu.keep.open": vL, "style.menu.font": kL, "style.menu.align": DL, styles: PL, "zoom.in": BL, "zoom.out": ML, to: EL, "to.selection": RL, "to.fit": LL, "menu.file": AL, "menu.edit": HL, "menu.view": zL, "menu.preferences": OL, "menu.sign.in": FL, "menu.sign.out": jL, sponsored: UL, "become.a.sponsor": GL, "zoom.to.selection": VL, "zoom.to.fit": $L, "zoom.to": NL, "preferences.dark.mode": KL, "preferences.focus.mode": WL, "preferences.debug.mode": _L, "preferences.show.grid": YL, "preferences.use.cad.selection": ZL, "preferences.keep.stylemenu.open": XL, "preferences.always.show.snaps": qL, "preferences.rotate.handles": JL, "preferences.binding.handles": QL, "preferences.clone.handles": eA, undo: tA, redo: nA, cut: oA, copy: sA, paste: iA, "copy.as": rA, "export.as": aA, "select.all": dA, "select.none": lA, delete: cA, "new.project": pA, open: uA, save: hA, "save.as": mA, "upload.media": gA, "create.page": fA, "new.page": SA, "page.name": TA, duplicate: bA, cancel: yA, "copy.invite.link": wA, "create.multiplayer.project": xA, "copy.multiplayer.project": IA, select: CA, eraser: vA, draw: kA, arrow: DA, text: PA, sticky: BA, Rectangle: MA, Ellipse: EA, Triangle: RA, Line: LA, rotate: AA, "lock.aspect.ratio": HA, "unlock.aspect.ratio": zA, group: OA, ungroup: FA, "move.to.back": jA, "move.backward": UA, "move.forward": GA, "move.to.front": VA, "reset.angle": $A, lock: NA, unlock: KA, "move.to.page": WA, "flip.horizontal": _A, "flip.vertical": YA, move: ZA, "to.front": XA, forward: qA, backward: JA, back: QA, language: e92 };
var t92 = "\u989C\u8272";
var n9 = "\u586B\u5145";
var o92 = "\u8FB9\u6846";
var s9 = "\u5C3A\u5BF8";
var i9 = "\u4FDD\u6301\u5E38\u5F00";
var r92 = "\u5B57\u4F53";
var a9 = "\u5BF9\u9F50";
var d9 = "\u6837\u5F0F";
var l9 = "\u653E\u5927";
var c9 = "\u7F29\u5C0F";
var p9 = "\u7F29\u653E\u81F3";
var u9 = "\u7F29\u653E\u9009\u4E2D";
var h9 = "\u81EA\u9002\u5E94\u7F29\u653E";
var m9 = "\u6587\u4EF6";
var g9 = "\u7F16\u8F91";
var f9 = "\u89C6\u56FE";
var S9 = "\u504F\u597D";
var T9 = "\u767B\u5F55";
var b9 = "\u767B\u51FA";
var y9 = "\u5DF2\u8D5E\u52A9";
var w9 = "\u6210\u4E3A\u8D5E\u52A9\u8005";
var x9 = "\u7F29\u653E\u9009\u4E2D";
var I9 = "\u81EA\u9002\u5E94\u7F29\u653E";
var C9 = "\u7F29\u653E\u81F3";
var v9 = "\u6697\u9ED1\u6A21\u5F0F";
var k9 = "\u4E13\u6CE8\u6A21\u5F0F";
var D9 = "\u8C03\u8BD5\u6A21\u5F0F";
var P9 = "\u663E\u793A\u7F51\u683C";
var B9 = "\u4F7F\u7528 CAD \u9009\u62E9";
var M9 = "\u4FDD\u6301\u6837\u5F0F\u83DC\u5355\u5E38\u5F00";
var E9 = "\u603B\u662F\u5C55\u793A\u5BF9\u9F50\u7EBF";
var R9 = "\u65CB\u8F6C\u624B\u67C4";
var L9 = "\u6346\u7ED1\u624B\u67C4";
var A9 = "\u514B\u9686\u624B\u67C4";
var H9 = "\u64A4\u9500";
var z9 = "\u91CD\u505A";
var O9 = "\u526A\u5207";
var F9 = "\u590D\u5236";
var j9 = "\u7C98\u8D34";
var U9 = "\u590D\u5236\u4E3A";
var G9 = "\u5BFC\u51FA\u4E3A";
var V9 = "\u9009\u4E2D\u5168\u90E8";
var $9 = "\u53D6\u6D88\u9009\u4E2D";
var N9 = "\u5220\u9664";
var K9 = "\u65B0\u5DE5\u7A0B";
var W9 = "\u6253\u5F00";
var _9 = "\u4FDD\u5B58";
var Y9 = "\u4FDD\u5B58\u4E3A";
var Z9 = "\u4E0A\u4F20\u5A92\u4F53\u6587\u4EF6";
var X9 = "\u521B\u5EFA\u9875\u9762";
var q9 = "\u65B0\u9875\u9762";
var J9 = "\u9875\u9762\u540D\u79F0";
var Q9 = "\u590D\u5236";
var e72 = "\u53D6\u6D88";
var t72 = "\u590D\u5236\u9080\u8BF7\u94FE\u63A5";
var n7 = "\u521B\u5EFA\u591A\u4EBA\u5DE5\u7A0B";
var o72 = "\u590D\u5236\u5230\u591A\u4EBA\u5DE5\u7A0B";
var s72 = "\u9009\u62E9";
var i7 = "\u6A61\u76AE";
var r72 = "\u753B\u7B14";
var a7 = "\u7BAD\u5934";
var d72 = "\u6587\u672C";
var l72 = "\u4FBF\u5229\u8D34";
var c72 = "\u77E9\u5F62";
var p7 = "\u692D\u5706\u5F62";
var u7 = "\u4E09\u89D2\u5F62";
var h7 = "\u76F4\u7EBF";
var m72 = "\u65CB\u8F6C";
var g7 = "\u9501\u5B9A\u5BBD\u9AD8\u6BD4";
var f72 = "\u89E3\u9501\u5BBD\u9AD8\u6BD4";
var S7 = "\u5206\u7EC4";
var T7 = "\u53D6\u6D88\u5206\u7EC4";
var b7 = "\u7F6E\u5E95";
var y7 = "\u4E0B\u79FB\u4E00\u5C42";
var w7 = "\u4E0A\u79FB\u4E00\u5C42";
var x72 = "\u7F6E\u9876";
var I7 = "\u91CD\u7F6E\u65CB\u8F6C\u89D2\u5EA6";
var C7 = "\u9501\u5B9A";
var v7 = "\u89E3\u9501";
var k7 = "\u79FB\u52A8\u5230\u9875\u9762";
var D7 = "\u6C34\u5E73\u7FFB\u8F6C";
var P7 = "\u5782\u76F4\u7FFB\u8F6C";
var B7 = "\u79FB\u52A8";
var M7 = "\u7F6E\u9876";
var E7 = "\u4E0A\u4E00\u5C42";
var R7 = "\u4E0B\u4E00\u5C42";
var L7 = "\u7F6E\u5E95";
var A7 = "\u8BED\u8A00";
var tl = { "style.menu.color": t92, "style.menu.fill": n9, "style.menu.dash": o92, "style.menu.size": s9, "style.menu.keep.open": i9, "style.menu.font": r92, "style.menu.align": a9, styles: d9, "zoom.in": l9, "zoom.out": c9, to: p9, "to.selection": u9, "to.fit": h9, "menu.file": m9, "menu.edit": g9, "menu.view": f9, "menu.preferences": S9, "menu.sign.in": T9, "menu.sign.out": b9, sponsored: y9, "become.a.sponsor": w9, "zoom.to.selection": x9, "zoom.to.fit": I9, "zoom.to": C9, "preferences.dark.mode": v9, "preferences.focus.mode": k9, "preferences.debug.mode": D9, "preferences.show.grid": P9, "preferences.use.cad.selection": B9, "preferences.keep.stylemenu.open": M9, "preferences.always.show.snaps": E9, "preferences.rotate.handles": R9, "preferences.binding.handles": L9, "preferences.clone.handles": A9, undo: H9, redo: z9, cut: O9, copy: F9, paste: j9, "copy.as": U9, "export.as": G9, "select.all": V9, "select.none": $9, delete: N9, "new.project": K9, open: W9, save: _9, "save.as": Y9, "upload.media": Z9, "create.page": X9, "new.page": q9, "page.name": J9, duplicate: Q9, cancel: e72, "copy.invite.link": t72, "create.multiplayer.project": n7, "copy.multiplayer.project": o72, select: s72, eraser: i7, draw: r72, arrow: a7, text: d72, sticky: l72, Rectangle: c72, Ellipse: p7, Triangle: u7, Line: h7, rotate: m72, "lock.aspect.ratio": g7, "unlock.aspect.ratio": f72, group: S7, ungroup: T7, "move.to.back": b7, "move.backward": y7, "move.forward": w7, "move.to.front": x72, "reset.angle": I7, lock: C7, unlock: v7, "move.to.page": k7, "flip.horizontal": D7, "flip.vertical": P7, move: B7, "to.front": M7, forward: E7, backward: R7, back: L7, language: A7 };
var H7 = "\u984F\u8272";
var z7 = "\u586B\u5145";
var O7 = "\u865B\u7DDA";
var F7 = "\u5927\u5C0F";
var j7 = "\u4FDD\u6301\u958B\u555F";
var U7 = "\u5B57\u578B";
var G7 = "\u5C0D\u9F4A";
var V7 = "\u6A23\u5F0F";
var $7 = "\u653E\u5927";
var N7 = "\u7E2E\u5C0F";
var K7 = "\u81F3";
var W7 = "\u81F3\u9078\u53D6\u7BC4\u570D";
var _7 = "\u81F3\u9069\u7576\u5927\u5C0F";
var Y7 = "\u6A94\u6848";
var Z7 = "\u7DE8\u8F2F";
var X7 = "\u6AA2\u8996";
var q7 = "\u9078\u9805";
var J7 = "\u767B\u5165";
var Q7 = "\u767B\u51FA";
var eH = "\u8D0A\u52A9";
var tH = "\u6210\u70BA\u8D0A\u52A9\u8005";
var nH = "\u7E2E\u653E\u81F3\u9078\u53D6\u7BC4\u570D";
var oH = "\u7E2E\u653E\u81F3\u9069\u7576\u5927\u5C0F";
var sH = "\u7E2E\u653E\u81F3";
var iH = "\u6DF1\u8272\u6A21\u5F0F";
var rH = "\u5C08\u6CE8\u6A21\u5F0F";
var aH = "\u9664\u932F\u6A21\u5F0F";
var dH = "\u986F\u793A\u7DB2\u683C";
var lH = "\u4F7F\u7528 CAD \u9078\u53D6";
var cH = "\u6A23\u5F0F\u9078\u55AE\u4FDD\u6301\u958B\u555F";
var pH = "\u6C38\u9060\u986F\u793A\u5C0D\u9F4A\u7DDA";
var uH = "\u65CB\u8F49\u63A7\u9EDE";
var hH = "\u7D81\u5B9A\u63A7\u9EDE";
var mH = "\u8907\u88FD\u63A7\u9EDE";
var gH = "\u5FA9\u539F";
var fH = "\u53D6\u6D88\u5FA9\u539F";
var SH = "\u526A\u4E0B";
var TH = "\u8907\u88FD";
var bH = "\u8CBC\u4E0A";
var yH = "\u8907\u88FD\u6210";
var wH = "\u532F\u51FA\u6210";
var xH = "\u5168\u9078";
var IH = "\u53D6\u6D88\u9078\u53D6";
var CH = "\u522A\u9664";
var vH = "\u65B0\u5C08\u6848";
var kH = "\u958B\u555F";
var DH = "\u5132\u5B58";
var PH = "\u53E6\u5B58\u70BA";
var BH = "\u4E0A\u50B3\u5A92\u9AD4";
var MH = "\u5EFA\u7ACB\u9801\u9762";
var EH = "\u65B0\u9801\u9762";
var RH = "\u9801\u9762\u540D\u7A31";
var LH = "\u8907\u88FD";
var AH = "\u53D6\u6D88";
var HH = "\u8907\u88FD\u9080\u8ACB\u9023\u7D50";
var zH = "\u8907\u88FD\u552F\u8B80\u9023\u7D50";
var OH = "\u5EFA\u7ACB\u591A\u4EBA\u5C08\u6848";
var FH = "\u8907\u88FD\u81F3\u591A\u4EBA\u5C08\u6848";
var jH = "\u9078\u53D6";
var UH = "\u6A61\u76AE\u64E6";
var GH = "\u624B\u7E6A";
var VH = "\u7BAD\u982D";
var $H = "\u6587\u5B57";
var NH = "\u4FBF\u5229\u8CBC";
var KH = "\u9577\u65B9\u5F62";
var WH = "\u6A62\u5713\u5F62";
var _H = "\u4E09\u89D2\u5F62";
var YH = "\u76F4\u7DDA";
var ZH = "\u65CB\u8F49";
var XH = "\u9396\u5B9A\u9577\u5BEC\u6BD4";
var qH = "\u89E3\u9396\u9577\u5BEC\u6BD4";
var JH = "\u7D44\u6210\u7FA4\u7D44";
var QH = "\u53D6\u6D88\u7FA4\u7D44";
var ez = "\u79FB\u5230\u6700\u4E0B\u5C64";
var tz = "\u4E0B\u79FB\u4E00\u5C64";
var nz = "\u4E0A\u79FB\u4E00\u5C64";
var oz = "\u79FB\u5230\u6700\u4E0A\u5C64";
var sz = "\u91CD\u8A2D\u89D2\u5EA6";
var iz = "\u9396\u5B9A";
var rz = "\u89E3\u9396";
var az = "\u79FB\u81F3\u9801\u9762";
var dz = "\u6C34\u5E73\u7FFB\u8F49";
var lz = "\u5782\u76F4\u7FFB\u8F49";
var cz = "\u79FB\u52D5";
var pz = "\u5230\u6700\u4E0A\u5C64";
var uz = "\u5230\u4E0A\u4E00\u5C64";
var hz = "\u5230\u4E0B\u4E00\u5C64";
var mz = "\u5230\u6700\u4E0B\u5C64";
var gz = "\u8A9E\u8A00";
var fz = "\u4E86\u89E3\u8A73\u60C5";
var Sz = "\u5DE5\u5177\u5217\u4F4D\u7F6E";
var Tz = "\u4E0B\u65B9";
var bz = "\u5DE6\u5074";
var yz = "\u53F3\u5074";
var wz = "\u4E0A\u65B9";
var xz = "\u9801\u9762";
var nl = { "style.menu.color": H7, "style.menu.fill": z7, "style.menu.dash": O7, "style.menu.size": F7, "style.menu.keep.open": j7, "style.menu.font": U7, "style.menu.align": G7, styles: V7, "zoom.in": $7, "zoom.out": N7, to: K7, "to.selection": W7, "to.fit": _7, "menu.file": Y7, "menu.edit": Z7, "menu.view": X7, "menu.preferences": q7, "menu.sign.in": J7, "menu.sign.out": Q7, sponsored: eH, "become.a.sponsor": tH, "zoom.to.selection": nH, "zoom.to.fit": oH, "zoom.to": sH, "preferences.dark.mode": iH, "preferences.focus.mode": rH, "preferences.debug.mode": aH, "preferences.show.grid": dH, "preferences.use.cad.selection": lH, "preferences.keep.stylemenu.open": cH, "preferences.always.show.snaps": pH, "preferences.rotate.handles": uH, "preferences.binding.handles": hH, "preferences.clone.handles": mH, undo: gH, redo: fH, cut: SH, copy: TH, paste: bH, "copy.as": yH, "export.as": wH, "select.all": xH, "select.none": IH, delete: CH, "new.project": vH, open: kH, save: DH, "save.as": PH, "upload.media": BH, "create.page": MH, "new.page": EH, "page.name": RH, duplicate: LH, cancel: AH, "copy.invite.link": HH, "copy.readonly.link": zH, "create.multiplayer.project": OH, "copy.multiplayer.project": FH, select: jH, eraser: UH, draw: GH, arrow: VH, text: $H, sticky: NH, Rectangle: KH, Ellipse: WH, Triangle: _H, Line: YH, rotate: ZH, "lock.aspect.ratio": XH, "unlock.aspect.ratio": qH, group: JH, ungroup: QH, "move.to.back": ez, "move.backward": tz, "move.forward": nz, "move.to.front": oz, "reset.angle": sz, lock: iz, unlock: rz, "move.to.page": az, "flip.horizontal": dz, "flip.vertical": lz, move: cz, "to.front": pz, forward: uz, backward: hz, back: mz, language: gz, "translation.link": fz, "dock.position": Sz, bottom: Tz, left: bz, right: yz, top: wz, page: xz };
var xs = [{ locale: "ar", label: "\u0639\u0631\u0628\u064A", messages: zd }, { locale: "da", label: "Danish", messages: Od }, { locale: "de", label: "Deutsch", messages: Fd }, { locale: "en", label: "English", messages: jd }, { locale: "es", label: "Espa\xF1ol", messages: Ud }, { locale: "fa", label: "\u0641\u0627\u0631\u0633\u06CC", messages: Gd }, { locale: "fr", label: "Fran\xE7ais", messages: Vd }, { locale: "he", label: "\u05E2\u05D1\u05E8\u05D9\u05EA", messages: $d }, { locale: "it", label: "Italiano", messages: Nd }, { locale: "ja", label: "\u65E5\u672C\u8A9E", messages: Kd }, { locale: "ko-kr", label: "\uD55C\uAD6D\uC5B4", messages: Wd }, { locale: "ne", label: "\u0928\u0947\u092A\u093E\u0932\u0940", messages: Yd }, { locale: "no", label: "Norwegian", messages: Zd }, { locale: "pl", label: "Polski", messages: Xd }, { locale: "pt-br", label: "Portugu\xEAs - Brasil", messages: qd }, { locale: "ru", label: "Russian", messages: Jd }, { locale: "tr", label: "T\xFCrk\xE7e", messages: Qd }, { locale: "uk", label: "Ukrainian", messages: el }, { locale: "zh-ch", label: "\u7B80\u4F53\u4E2D\u6587 (\u4E2D\u56FD\u5927\u9646)", messages: tl }, { locale: "zh-tw", label: "\u7E41\u9AD4\u4E2D\u6587 (\u53F0\u7063)", messages: nl }];
xs.sort((s10, e13) => s10.locale < e13.locale ? -1 : 1);
function ol(s10) {
  var t12;
  let e13 = xs.find((n10) => n10.locale === s10);
  return { locale: s10, label: (t12 = e13 == null ? void 0 : e13.label) != null ? t12 : s10, messages: f8(f8({}, _d), e13 == null ? void 0 : e13.messages) };
}
function il(s10) {
  return sl.useMemo(() => ol(s10 != null ? s10 : navigator.language.split(/[-_]/)[0]), [s10]);
}
var qe = { "@initial": "mobile", "@micro": "micro", "@sm": "small", "@md": "medium", "@lg": "large" };
var Iz = (s10) => s10.appState.status;
var Cz = (s10) => s10.appState.activeTool;
function rl() {
  let s10 = ae(), e13 = s10.useStore(Iz), t12 = s10.useStore(Cz);
  return Gi.createElement(vz, { bp: qe, id: "TD-StatusBar" }, Gi.createElement(kz, null, t12, " | ", e13));
}
var vz = M3("div", { height: 40, userSelect: "none", borderTop: "1px solid $panelContrast", gridArea: "status", display: "flex", color: "$text", justifyContent: "space-between", alignItems: "center", backgroundColor: "$panel", gap: 8, fontFamily: "$ui", fontSize: "$0", padding: "0 16px", variants: { bp: { small: { fontSize: "$1" } } } });
var kz = M3("div", { whiteSpace: "nowrap", overflow: "hidden" });
var Pz = () => Utils.isDarwin() ? "\u2318" : "Ctrl";
function uo({ variant: s10, children: e13 }) {
  return Vi.createElement(Bz, { variant: s10 }, e13.split("").map((t12, n10) => Vi.createElement("span", { key: n10 }, t12.replace("#", Pz()))));
}
var Bz = M3("kbd", { marginLeft: "$3", textShadow: "$2", textAlign: "center", fontSize: "$0", fontFamily: "$ui", color: "$text", background: "none", fontWeight: 400, gap: "$1", display: "flex", alignItems: "center", "& > span": { padding: "$0", borderRadius: "$0", display: "flex", alignItems: "center", justifyContent: "center" }, variants: { variant: { tooltip: { "& > span": { color: "$tooltipContrast", background: "$overlayContrast", boxShadow: "$key", width: "20px", height: "20px" } }, menu: {} } } });
var Je = M3("div", { height: "100%", borderRadius: "4px", marginRight: "1px", width: "fit-content", display: "grid", alignItems: "center", justifyContent: "center", outline: "none", border: "none", pointerEvents: "all", cursor: "pointer", color: "currentColor", "& svg": { height: 16, width: 16, strokeWidth: 1 }, "& > *": { gridRow: 1, gridColumn: 1 } });
var Be = Vt.forwardRef((u10, p10) => {
  var h10 = u10, { onClick: s10, isActive: e13 = false, isWarning: t12 = false, hasIndicator: n10 = false, hasArrow: o10 = false, disabled: i10 = false, variant: a10, kbd: l10, children: r11 } = h10, c10 = Ye(h10, ["onClick", "isActive", "isWarning", "hasIndicator", "hasArrow", "disabled", "variant", "kbd", "children"]);
  return Vt.createElement(Lz, f8({ ref: p10, bp: qe, isWarning: t12, isActive: e13, disabled: i10, onClick: s10, variant: a10 }, c10), Vt.createElement(Is, null, r11, l10 ? Vt.createElement(uo, { variant: "menu" }, l10) : void 0, n10 && Vt.createElement(ItemIndicator2, { dir: "ltr" }, Vt.createElement(Je, null, Vt.createElement(CheckIcon, null))), o10 && Vt.createElement(Je, null, Vt.createElement(ChevronRightIcon, null))));
});
var Is = M3("div", { height: "100%", width: "100%", backgroundColor: "$panel", borderRadius: "$2", display: "flex", gap: "$1", flexDirection: "row", alignItems: "center", padding: "0 $3", justifyContent: "space-between", border: "1px solid transparent", "& svg": { position: "relative", stroke: "$overlay", strokeWidth: 1, zIndex: 1 }, [`& > ${Je}`]: { paddingLeft: "$3" } });
var Lz = M3("button", { position: "relative", width: "100%", background: "none", border: "none", cursor: "pointer", height: 32, minHeight: 32, outline: "none", color: "$text", fontFamily: "$ui", fontWeight: 400, fontSize: "$1", borderRadius: 4, userSelect: "none", margin: 0, padding: "0 0", "&[data-disabled]": { opacity: 0.3 }, "&:disabled": { opacity: 0.3 }, [`&:focus:not(:disabled) ${Is}`]: { backgroundColor: "$hover" }, "& a": { textDecoration: "none", color: "$text" }, variants: { bp: { mobile: {}, small: {} }, variant: { styleMenu: { margin: "$1 0 $1 0" }, wide: { gridColumn: "1 / span 4" } }, size: { icon: { padding: "4px ", width: "auto" } }, isSponsor: { true: { color: "#eb30a2" }, false: {} }, isWarning: { true: { color: "$warn" } }, isActive: { true: { backgroundColor: "$hover" }, false: {} } }, compoundVariants: [{ isActive: false, isSponsor: true, bp: "small", css: { [`&:hover:not(:disabled) ${Is}`]: { backgroundColor: "$sponsorContrast", border: "1px solid $panel", '& *[data-shy="true"]': { opacity: 1 } } } }, { isActive: false, isSponsor: false, bp: "small", css: { [`&:hover:not(:disabled) ${Is}`]: { backgroundColor: "$hover", border: "1px solid $panel", '& *[data-shy="true"]': { opacity: 1 } } } }] });
var Bt = M3("div", { position: "relative", overflow: "hidden", userSelect: "none", display: "flex", flexDirection: "column", zIndex: 180, minWidth: 180, pointerEvents: "all", backgroundColor: "$panel", boxShadow: "$panel", padding: "$2 $2", borderRadius: "$3", font: "$ui", maxHeight: "100vh", overflowY: "auto", overflowX: "hidden", "&::webkit-scrollbar": { display: "none" }, "-ms-overflow-style": "none", scrollbarWidth: "none", variants: { size: { small: { minWidth: 72 } }, overflow: { true: { maxHeight: "60vh" } } } });
var Hz = (s10) => s10.appState.isEmptyCanvas && Object.keys(s10.document.pages[s10.appState.currentPageId].shapes).length > 0;
var zz = (s10) => s10.settings.isDebugMode;
var Oz = (s10) => s10.settings.dockPosition;
var al = ho.memo(function() {
  let e13 = ae(), t12 = e13.useStore(Hz), n10 = e13.useStore(Oz), o10 = e13.useStore(zz), i10 = { bottom: n10 === "bottom" && o10 ? 120 : n10 === "bottom" ? 80 : o10 ? 60 : 20, left: "50%", transform: "translate(-50%,0)" };
  return t12 ? ho.createElement(Fz, { id: "TD-Tools-Back_to_content", style: f8({}, i10) }, ho.createElement(Be, { onClick: e13.zoomToContent }, ho.createElement(message_default, { id: "zoom.to.content" }))) : null;
});
var Fz = M3(Bt, { pointerEvents: "all", width: "fit-content", minWidth: 0, position: "fixed", bottom: 0 });
function ct({ children: s10, label: e13, kbd: t12, id: n10, side: o10 = "top" }) {
  return Rn.createElement("span", { id: n10 }, Rn.createElement(Root7, null, Rn.createElement(Trigger2, { dir: "ltr", asChild: true }, Rn.createElement("span", null, s10)), Rn.createElement(jz, { dir: "ltr", side: o10, sideOffset: 8 }, e13, t12 ? Rn.createElement(uo, { variant: "tooltip" }, t12) : null, Rn.createElement(Uz, null))));
}
var jz = M3(Content4, { borderRadius: 3, padding: "$3 $3 $3 $3", fontSize: "$1", backgroundColor: "$tooltip", color: "$tooltipContrast", boxShadow: "$3", display: "flex", alignItems: "center", fontFamily: "$ui", userSelect: "none" });
var Uz = M3(Arrow5, { fill: "$tooltip", margin: "0 8px" });
var pe2 = $t.forwardRef((g10, h10) => {
  var m10 = g10, { onSelect: s10, onClick: e13, onDoubleClick: t12, variant: n10, children: o10, isToolLocked: i10 = false, disabled: a10 = false, isActive: l10 = false, isSponsor: r11 = false, onKeyDown: c10, id: p10 } = m10, u10 = Ye(m10, ["onSelect", "onClick", "onDoubleClick", "variant", "children", "isToolLocked", "disabled", "isActive", "isSponsor", "onKeyDown", "id"]);
  return $t.createElement(Gz, f8({ ref: h10, isActive: l10, isSponsor: r11, variant: n10, onClick: e13, disabled: a10, onPointerDown: s10, onDoubleClick: t12, onKeyDown: c10, bp: qe, id: p10 }, u10), $t.createElement(Ht, null, o10), i10 && $t.createElement(Vz, null));
});
function An(o10) {
  var i10 = o10, { label: s10, kbd: e13, isLocked: t12 } = i10, n10 = Ye(i10, ["label", "kbd", "isLocked"]);
  let a10 = ae(), l10 = $t.useCallback(() => {
    a10.toggleToolLock();
  }, []), r11 = $t.useCallback((c10) => {
    c10.key === " " && a10.isForcePanning && c10.preventDefault();
  }, []);
  return $t.createElement(ct, { label: s10[0].toUpperCase() + s10.slice(1), kbd: e13 }, $t.createElement(pe2, C5(f8({}, n10), { variant: "primary", isToolLocked: t12 && n10.isActive, onDoubleClick: l10, onKeyDown: r11 })));
}
var Ht = M3("div", { position: "relative", height: "100%", width: "100%", backgroundColor: "$panel", borderRadius: "$2", margin: "0", display: "flex", alignItems: "center", justifyContent: "center", fontFamily: "$ui", color: "inherit", userSelect: "none", boxSizing: "border-box", border: "1px solid transparent" });
var Gz = M3("button", { position: "relative", color: "$text", fontSize: "$0", background: "none", margin: "0", padding: "$2", display: "flex", alignItems: "center", justifyContent: "center", outline: "none", cursor: "pointer", pointerEvents: "all", border: "none", height: "40px", width: "40px", [`&:disabled ${Ht}`]: { opacity: 0.618 }, variants: { variant: { primary: { marginTop: "0" }, icon: { [`& ${Ht}`]: { display: "grid", "& > *": { gridRow: 1, gridColumn: 1 } } }, text: { width: "auto", [`& ${Ht}`]: { fontSize: "$1", padding: "0 $3", gap: "$3" } }, circle: { padding: 0, height: 32, width: 32, [`& ${Ht}`]: { border: "1px solid $panelContrast", borderRadius: "100%", boxShadow: "$panel" }, [`& ${Ht} > svg`]: { width: 14, height: 14 } } }, isSponsor: { true: { [`${Ht}`]: { backgroundColor: "$sponsorContrast" } } }, isActive: { true: {}, false: {} }, bp: { mobile: {}, small: {} } }, compoundVariants: [{ variant: "primary", bp: "mobile", css: { height: "40px", width: "40px", [`& ${Ht} > svg`]: { width: 16, height: 16 } } }, { variant: "primary", bp: "small", css: { height: "44px", width: "44px", [`& ${Ht} > svg`]: { width: 20, height: 20 } } }, { isActive: true, css: { [`${Ht}`]: { backgroundColor: "$selected", color: "$selectedContrast" } } }, { isActive: false, bp: "small", css: { [`&:hover:not(:disabled) ${Ht}`]: { backgroundColor: "$hover", border: "1px solid $panel" }, [`&:focus:not(:disabled) ${Ht}`]: { backgroundColor: "$hover" } } }] });
var Vz = M3("div", { position: "absolute", width: 10, height: 10, backgroundColor: "$selected", borderRadius: "100%", bottom: -2, border: "2px solid $panel", zIndex: 100 });
var Zn = M3("div", { backgroundColor: "$panel", display: "flex", flexDirection: "row", boxShadow: "$panel", padding: "$2", border: "1px solid $panelContrast", gap: 0, variants: { side: { center: { borderRadius: "$4" }, left: { padding: 0, borderTop: 0, borderLeft: 0, borderTopRightRadius: "$1", borderBottomRightRadius: "$3", borderBottomLeftRadius: "$1" }, right: { padding: 0, borderTop: 0, borderRight: 0, borderTopLeftRadius: "$1", borderBottomLeftRadius: "$3", borderBottomRightRadius: "$1" } } } });
function Ni(s10) {
  let n10 = s10, { size: e13 = 16 } = n10, t12 = Ye(n10, ["size"]);
  return $i.createElement("svg", f8({ width: 24, height: 24 }, t12), $i.createElement("circle", { cx: 12, cy: 12, r: e13 / 2 }));
}
function dl() {
  return Ki.createElement("svg", { width: "24", height: "24", stroke: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, Ki.createElement("circle", { cx: 12, cy: 12, r: 8, fill: "none", strokeWidth: 2.5, strokeLinecap: "round", strokeDasharray: 50.26548 * 0.1 }));
}
var Nz = `${50.26548 * 0.025} ${50.26548 * 0.1}`;
function ll() {
  return Wi.createElement("svg", { width: "24", height: "24", stroke: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, Wi.createElement("circle", { cx: 12, cy: 12, r: 8, fill: "none", strokeWidth: 2.5, strokeLinecap: "round", strokeDasharray: Nz }));
}
function cl() {
  return _i.createElement("svg", { width: "24", height: "24", viewBox: "1 1.5 21 22", fill: "currentColor", stroke: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, _i.createElement("path", { d: "M10.0162 19.2768C10.0162 19.2768 9.90679 19.2517 9.6879 19.2017C9.46275 19.1454 9.12816 19.0422 8.68413 18.8921C8.23384 18.7358 7.81482 18.545 7.42707 18.3199C7.03307 18.101 6.62343 17.7883 6.19816 17.3818C5.77289 16.9753 5.33511 16.3718 4.88482 15.5713C4.43453 14.7645 4.1531 13.8545 4.04053 12.8414C3.92795 11.822 4.04991 10.8464 4.40639 9.91451C4.76286 8.98266 5.39452 8.10084 6.30135 7.26906C7.21444 6.44353 8.29325 5.83377 9.5378 5.43976C10.7823 5.05202 11.833 4.92068 12.6898 5.04576C13.5466 5.16459 14.3878 5.43664 15.2133 5.86191C16.0388 6.28718 16.7768 6.8688 17.4272 7.60678C18.0714 8.34475 18.5404 9.21406 18.8344 10.2147C19.1283 11.2153 19.1721 12.2598 18.9657 13.348C18.7593 14.4299 18.2872 15.4337 17.5492 16.3593C16.8112 17.2849 15.9263 18.0072 14.8944 18.5263C13.8624 19.0391 12.9056 19.3174 12.0238 19.3612C11.142 19.405 10.2101 19.2705 9.22823 18.9578C8.24635 18.6451 7.35828 18.151 6.56402 17.4756C5.77601 16.8002 6.08871 16.8658 7.50212 17.6726C8.90927 18.4731 10.1444 18.8484 11.2076 18.7983C12.2645 18.7545 13.2965 18.4825 14.3034 17.9822C15.3102 17.4819 16.1264 16.8221 16.7518 16.0028C17.3772 15.1835 17.7681 14.3111 17.9244 13.3855C18.0808 12.4599 18.0401 11.5781 17.8025 10.74C17.5586 9.902 17.1739 9.15464 16.6486 8.49797C16.1233 7.8413 15.2289 7.27844 13.9656 6.80939C12.7086 6.34034 11.4203 6.20901 10.1007 6.41539C8.78732 6.61552 7.69599 7.06893 6.82669 7.77564C5.96363 8.48859 5.34761 9.26409 4.97863 10.1021C4.60964 10.9402 4.45329 11.8376 4.50958 12.7945C4.56586 13.7513 4.79101 14.6238 5.18501 15.4118C5.57276 16.1998 5.96363 16.8002 6.35764 17.2129C6.75164 17.6257 7.13313 17.9509 7.50212 18.1886C7.87736 18.4325 8.28074 18.642 8.71227 18.8171C9.15005 18.9922 9.47839 19.111 9.69728 19.1736C9.91617 19.2361 10.0256 19.2705 10.0256 19.2768H10.0162Z", strokeWidth: "2" }));
}
function pl() {
  return Yi.createElement("svg", { width: "24", height: "24", stroke: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, Yi.createElement("circle", { cx: 12, cy: 12, r: 8, fill: "none", strokeWidth: 2, strokeLinecap: "round" }));
}
function ul(s10) {
  return Zi.createElement("svg", f8({ width: 32, height: 32, viewBox: "0 0 15 15", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, s10), Zi.createElement("path", { d: "M4.32978 8.5081C4.32978 10.1923 5.70009 11.5625 7.38418 11.5625H8.46539C8.64456 11.5625 8.78975 11.4173 8.78975 11.2382V11.13C8.78975 10.9508 8.64457 10.8057 8.46539 10.8057H7.38418C6.11736 10.8057 5.08662 9.77492 5.08662 8.5081C5.08662 7.24128 6.11736 6.21054 7.38418 6.21054H9.37894L8.00515 7.58433C7.8576 7.73183 7.8576 7.97195 8.00515 8.11944C8.14833 8.26251 8.39751 8.2623 8.54036 8.11944L10.56 6.09971C10.6315 6.02824 10.6709 5.93321 10.6709 5.8321C10.6709 5.73106 10.6315 5.63598 10.56 5.56454L8.54025 3.54472C8.3974 3.40176 8.14801 3.40176 8.00513 3.54472C7.85758 3.69218 7.85758 3.93234 8.00513 4.07979L9.37892 5.45368H7.38418C5.70009 5.45368 4.32978 6.82393 4.32978 8.5081Z" }));
}
function hl(s10) {
  return $o.createElement("svg", f8({ width: 18, height: 18, viewBox: "0 0 15 15", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, s10), $o.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M2 4.656a.5.5 0 01.5-.5h9.7a.5.5 0 010 1H2.5a.5.5 0 01-.5-.5z" }), $o.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M6.272 3a.578.578 0 00-.578.578v.578h3.311v-.578A.578.578 0 008.428 3H6.272zm3.733 1.156v-.578A1.578 1.578 0 008.428 2H6.272a1.578 1.578 0 00-1.578 1.578v.578H3.578a.5.5 0 00-.5.5V12.2a1.578 1.578 0 001.577 1.578h5.39a1.578 1.578 0 001.577-1.578V4.656a.5.5 0 00-.5-.5h-1.117zm-5.927 1V12.2a.578.578 0 00.577.578h5.39a.578.578 0 00.577-.578V5.156H4.078z" }), $o.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M6.272 6.85a.5.5 0 01.5.5v3.233a.5.5 0 11-1 0V7.35a.5.5 0 01.5-.5zM8.428 6.85a.5.5 0 01.5.5v3.233a.5.5 0 11-1 0V7.35a.5.5 0 01.5-.5z" }));
}
function ml(s10) {
  return Xi.createElement("svg", f8({ width: 32, height: 32, viewBox: "0 0 15 15", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, s10), Xi.createElement("path", { d: "M10.6707 8.5081C10.6707 10.1923 9.3004 11.5625 7.61631 11.5625H6.5351C6.35593 11.5625 6.21074 11.4173 6.21074 11.2382V11.13C6.21074 10.9508 6.35591 10.8057 6.5351 10.8057H7.61631C8.88313 10.8057 9.91387 9.77492 9.91387 8.5081C9.91387 7.24128 8.88313 6.21054 7.61631 6.21054H5.62155L6.99534 7.58433C7.14289 7.73183 7.14289 7.97195 6.99534 8.11944C6.85216 8.26251 6.60298 8.2623 6.46013 8.11944L4.44045 6.09971C4.36898 6.02824 4.32959 5.93321 4.32959 5.8321C4.32959 5.73106 4.36898 5.63598 4.44045 5.56454L6.46024 3.54472C6.60309 3.40176 6.85248 3.40176 6.99535 3.54472C7.14291 3.69218 7.14291 3.93234 6.99535 4.07979L5.62156 5.45368H7.61631C9.3004 5.45368 10.6707 6.82393 10.6707 8.5081Z" }));
}
function gl(s10) {
  return qi.createElement("svg", f8({ width: 24, height: 24, viewBox: "-2 -2 28 28", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, s10), qi.createElement("path", { d: "M12.4239 4.62C13.3572 4.62 14.1572 4.73333 14.8239 4.96C15.4906 5.17333 15.9772 5.43333 16.2839 5.74C16.3639 5.82 16.4039 5.94 16.4039 6.1V8.86H14.0639C13.9172 8.86 13.8439 8.78666 13.8439 8.64V7.26C13.4306 7.12666 12.9572 7.06 12.4239 7.06C11.6506 7.06 11.0639 7.18 10.6639 7.42C10.2639 7.66 10.0639 8.04666 10.0639 8.58V9C10.0639 9.38666 10.1639 9.69333 10.3639 9.92C10.5772 10.1333 11.0306 10.3467 11.7239 10.56L13.6439 11.14C14.4706 11.38 15.1172 11.66 15.5839 11.98C16.0506 12.3 16.3772 12.68 16.5639 13.12C16.7639 13.5467 16.8639 14.0733 16.8639 14.7V15.62C16.8639 16.7933 16.4039 17.7133 15.4839 18.38C14.5639 19.0467 13.2839 19.38 11.6439 19.38C10.6706 19.38 9.79723 19.2867 9.0239 19.1C8.2639 18.9133 7.71056 18.6533 7.3639 18.32C7.3239 18.28 7.29056 18.24 7.2639 18.2C7.25056 18.1467 7.2439 18.06 7.2439 17.94V15.74H7.6239C8.2239 16.1533 8.85056 16.4533 9.5039 16.64C10.1572 16.8267 10.9306 16.92 11.8239 16.92C12.6506 16.92 13.2506 16.7867 13.6239 16.52C14.0106 16.2533 14.2039 15.9333 14.2039 15.56V14.88C14.2039 14.6667 14.1639 14.48 14.0839 14.32C14.0172 14.16 13.8706 14.0133 13.6439 13.88C13.4172 13.7467 13.0572 13.6067 12.5639 13.46L10.6639 12.88C9.7839 12.6133 9.11056 12.3 8.6439 11.94C8.17723 11.58 7.85056 11.18 7.6639 10.74C7.49056 10.3 7.4039 9.83333 7.4039 9.34V8.38C7.4039 7.64666 7.61056 7 8.0239 6.44C8.43723 5.88 9.01723 5.44 9.7639 5.12C10.5239 4.78666 11.4106 4.62 12.4239 4.62Z" }));
}
function fl(s10) {
  return Ji.createElement("svg", f8({ width: 24, height: 24, viewBox: "-2 -2 28 28", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, s10), Ji.createElement("path", { d: "M8.16191 19H5.68191C5.53525 19 5.46191 18.9267 5.46191 18.78V5H8.76191C8.88191 5 8.97525 5.03333 9.04191 5.1C9.10858 5.15333 9.17525 5.27333 9.24191 5.46C9.72191 6.59333 10.1686 7.7 10.5819 8.78C11.0086 9.84667 11.4352 10.98 11.8619 12.18H12.1619C12.6019 10.9667 13.0352 9.79333 13.4619 8.66C13.8886 7.52667 14.3552 6.30667 14.8619 5H18.3219C18.4686 5 18.5419 5.07333 18.5419 5.22V19H16.0619C15.9152 19 15.8419 18.9267 15.8419 18.78V16.26C15.8419 15.5267 15.8486 14.8133 15.8619 14.12C15.8886 13.4267 15.9286 12.6867 15.9819 11.9C16.0486 11.1 16.1419 10.1933 16.2619 9.18H15.9019C15.4352 10.3533 14.9486 11.5667 14.4419 12.82C13.9486 14.06 13.4819 15.2333 13.0419 16.34H11.1019C11.0619 16.34 11.0152 16.3333 10.9619 16.32C10.9219 16.2933 10.8886 16.2467 10.8619 16.18C10.4619 15.18 10.0086 14.06 9.50191 12.82C9.00858 11.58 8.53525 10.3667 8.08191 9.18H7.70191C7.83525 10.18 7.93525 11.0733 8.00191 11.86C8.06858 12.6467 8.10858 13.3933 8.12191 14.1C8.14858 14.8067 8.16191 15.5267 8.16191 16.26V19Z" }));
}
function Sl(s10) {
  return Qi.createElement("svg", f8({ width: 24, height: 24, viewBox: "-2 -2 28 28", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, s10), Qi.createElement("path", { d: "M7.68191 19C7.53525 19 7.46191 18.9267 7.46191 18.78V5H10.1219C10.2686 5 10.3419 5.07333 10.3419 5.22V16.56H13.4419V15.02H15.7619C15.9086 15.02 15.9819 15.0933 15.9819 15.24V19H7.68191Z" }));
}
function Tl() {
  return No.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, No.createElement("path", { d: "M1.72838 9.33987L8.84935 2.34732C9.23874 1.96494 9.86279 1.96539 10.2516 2.34831L13.5636 5.60975C13.9655 6.00555 13.9607 6.65526 13.553 7.04507L8.13212 12.2278C7.94604 12.4057 7.69851 12.505 7.44107 12.505L6.06722 12.505L3.83772 12.505C3.5673 12.505 3.30842 12.3954 3.12009 12.2014L1.7114 10.7498C1.32837 10.3551 1.33596 9.72521 1.72838 9.33987Z", stroke: "currentColor" }), No.createElement("line", { x1: "6.01807", y1: "12.5", x2: "10.7959", y2: "12.5", stroke: "currentColor", strokeLinecap: "round" }), No.createElement("line", { x1: "5.50834", y1: "5.74606", x2: "10.1984", y2: "10.4361", stroke: "currentColor" }));
}
function bl() {
  return er.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, er.createElement("path", { d: "M3.64645 11.3536C3.45118 11.1583 3.45118 10.8417 3.64645 10.6465L11.1464 3.14645C11.3417 2.95118 11.6583 2.95118 11.8536 3.14645C12.0488 3.34171 12.0488 3.65829 11.8536 3.85355L4.35355 11.3536C4.15829 11.5488 3.84171 11.5488 3.64645 11.3536Z" }));
}
var tr = ["rectangle", "ellipse", "triangle", "line"];
var yl = { ["rectangle"]: ze.createElement(SquareIcon, null), ["ellipse"]: ze.createElement(CircleIcon, null), ["triangle"]: ze.createElement(VercelLogoIcon, null), ["line"]: ze.createElement(bl, null) };
var Qz = (s10) => s10.settings.dockPosition;
var wl = ze.memo(function({ activeTool: e13, isToolLocked: t12 }) {
  let n10 = ae(), o10 = useIntl(), i10 = n10.useStore(Qz), [a10, l10] = ze.useState("rectangle");
  ze.useEffect(() => {
    tr.includes(e13) && a10 !== e13 && l10(e13);
  }, [e13]);
  let r11 = ze.useCallback(() => {
    n10.selectTool(a10);
  }, [e13, n10]), c10 = ze.useCallback(() => {
    n10.toggleToolLock();
  }, [n10]), p10 = ze.useCallback((m10) => {
    m10.key === " " && n10.shiftKey && m10.preventDefault();
  }, []), u10 = tr.includes(e13), h10 = i10 === "bottom" || i10 === "top" ? "top" : i10, g10 = i10 === "bottom" || i10 === "top" ? "row" : "column";
  return ze.createElement(Root5, { dir: "ltr", onOpenChange: r11 }, ze.createElement(Trigger, { dir: "ltr", asChild: true, id: "TD-PrimaryTools-Shapes" }, ze.createElement(pe2, { disabled: u10 && n10.shiftKey, variant: "primary", onDoubleClick: c10, isToolLocked: u10 && t12, isActive: u10, onKeyDown: p10 }, yl[a10])), ze.createElement(Content3, { asChild: true, dir: "ltr", side: h10, sideOffset: 12 }, ze.createElement(Zn, { side: "center", style: { flexDirection: g10 } }, tr.map((m10, T10) => ze.createElement(ct, { key: m10, label: o10.formatMessage({ id: m10 }), kbd: (4 + T10).toString(), id: `TD-PrimaryTools-Shapes-${m10}` }, ze.createElement(Item3, { asChild: true }, ze.createElement(pe2, { variant: "primary", onClick: () => {
    n10.selectTool(m10), l10(m10);
  } }, yl[m10])))))));
});
var aO = (s10) => s10.appState.activeTool;
var dO = (s10) => s10.appState.isToolLocked;
var lO = (s10) => s10.settings.dockPosition;
var xl = Ce.memo(function() {
  let e13 = ae(), t12 = useIntl(), n10 = e13.useStore(aO), o10 = e13.useStore(dO), i10 = e13.useStore(lO), a10 = Ce.useCallback(() => {
    e13.selectTool("select");
  }, [e13]), l10 = Ce.useCallback(() => {
    e13.selectTool("erase");
  }, [e13]), r11 = Ce.useCallback(() => {
    e13.selectTool("draw");
  }, [e13]), c10 = Ce.useCallback(() => {
    e13.selectTool("arrow");
  }, [e13]), p10 = Ce.useCallback(() => {
    e13.selectTool("text");
  }, [e13]), u10 = Ce.useCallback(() => {
    e13.selectTool("sticky");
  }, [e13]), h10 = Ce.useCallback(() => ee(this, null, function* () {
    e13.openAsset();
  }), [e13]);
  return Ce.createElement(Zn, { side: "center", id: "TD-PrimaryTools", style: { flexDirection: i10 === "bottom" || i10 === "top" ? "row" : "column" } }, Ce.createElement(An, { kbd: "1", label: t12.formatMessage({ id: "select" }), onClick: a10, isActive: n10 === "select", id: "TD-PrimaryTools-CursorArrow" }, Ce.createElement(CursorArrowIcon, null)), Ce.createElement(An, { kbd: "2", label: t12.formatMessage({ id: "draw" }), onClick: r11, isActive: n10 === "draw", id: "TD-PrimaryTools-Pencil" }, Ce.createElement(Pencil1Icon, null)), Ce.createElement(An, { kbd: "3", label: t12.formatMessage({ id: "eraser" }), onClick: l10, isActive: n10 === "erase", id: "TD-PrimaryTools-Eraser" }, Ce.createElement(Tl, null)), Ce.createElement(wl, { activeTool: n10, isToolLocked: o10 }), Ce.createElement(An, { kbd: "8", label: t12.formatMessage({ id: "arrow" }), onClick: c10, isLocked: o10, isActive: n10 === "arrow", id: "TD-PrimaryTools-ArrowTopRight" }, Ce.createElement(ArrowTopRightIcon, null)), Ce.createElement(An, { kbd: "9", label: t12.formatMessage({ id: "text" }), onClick: p10, isLocked: o10, isActive: n10 === "text", id: "TD-PrimaryTools-Text" }, Ce.createElement(TextIcon, null)), Ce.createElement(An, { kbd: "0", label: t12.formatMessage({ id: "sticky" }), onClick: u10, isActive: n10 === "sticky", id: "TD-PrimaryTools-Pencil2" }, Ce.createElement(Pencil2Icon, null)), Ce.createElement(An, { label: "Image", onClick: h10, id: "TD-PrimaryTools-Image" }, Ce.createElement(ImageIcon, null)));
});
function ue2(n10) {
  var o10 = n10, { onSelect: s10, id: e13 } = o10, t12 = Ye(o10, ["onSelect", "id"]);
  return nr.createElement(Item3, { dir: "ltr", asChild: true, onSelect: s10, id: e13 }, nr.createElement(Be, f8({}, t12)));
}
var ve = (s10) => s10.preventDefault();
function pt({ checked: s10, disabled: e13 = false, variant: t12, onCheckedChange: n10, kbd: o10, id: i10, children: a10 }) {
  return or.createElement(CheckboxItem2, { dir: "ltr", onSelect: ve, onCheckedChange: n10, checked: s10, disabled: e13, asChild: true, id: i10 }, or.createElement(Be, { kbd: o10, variant: t12, hasIndicator: true }, a10));
}
function xt({ sideOffset: s10 = 8, children: e13, align: t12, variant: n10, id: o10, overflow: i10 = false, side: a10 = "bottom" }) {
  return sr.createElement(Content3, { dir: "ltr", align: t12, sideOffset: s10, onEscapeKeyDown: rt, asChild: true, id: o10, side: a10 }, sr.createElement(uO, { variant: n10, overflow: i10 }, e13));
}
var uO = M3(Bt, { width: "fit-content", height: "fit-content", minWidth: 0, maxHeight: "100vh", overflowY: "auto", overflowX: "hidden", "&::webkit-scrollbar": { display: "none" }, "-ms-overflow-style": "none", scrollbarWidth: "none", variants: { variant: { horizontal: { flexDirection: "row" }, menu: { minWidth: 128 } }, overflow: { true: { maxHeight: "60vh" } } } });
var Qe = M3(Separator2, { backgroundColor: "$hover", height: 1, marginTop: "$2", marginRight: "-$2", marginBottom: "$2", marginLeft: "-$2" });
var Ko = M3(RadioItem2, { height: "32px", width: "32px", backgroundColor: "$panel", borderRadius: "4px", padding: "0", margin: "0", display: "flex", alignItems: "center", justifyContent: "center", outline: "none", border: "none", pointerEvents: "all", cursor: "pointer", variants: { isActive: { true: { backgroundColor: "$selected", color: "$panel" }, false: {} }, bp: { mobile: {}, small: {} } }, compoundVariants: [{ isActive: false, bp: "small", css: { "&:focus": { backgroundColor: "$hover" }, "&:hover:not(:disabled)": { backgroundColor: "$hover" } } }] });
function Tn({ children: s10, size: e13, overflow: t12 = false, disabled: n10 = false, label: o10, id: i10 }) {
  return zn.createElement("span", { id: i10 }, zn.createElement(Root5, { dir: "ltr" }, zn.createElement(TriggerItem, { dir: "ltr", asChild: true }, zn.createElement(Be, { disabled: n10, hasArrow: true }, o10)), zn.createElement(Content3, { dir: "ltr", asChild: true, sideOffset: 2, alignOffset: -2, align: "start" }, zn.createElement(Bt, { size: e13, overflow: t12 }, s10, zn.createElement(Arrow4, { offset: 13 })))));
}
function Cs(n10) {
  var o10 = n10, { id: s10, children: e13 } = o10, t12 = Ye(o10, ["id", "children"]);
  return ir.createElement(Trigger, { asChild: true, id: s10 }, ir.createElement(pe2, f8({}, t12), e13));
}
var ut = M3("hr", { height: 1, marginTop: "$1", marginRight: "-$0", marginBottom: "$1", marginLeft: "-$0", border: "none", borderBottom: "1px solid $hover" });
var NO = (s10) => s10.settings.dockPosition;
var KO = (s10) => s10.document.pageStates[s10.appState.currentPageId].selectedIds.length;
var WO = (s10) => {
  let e13 = s10.document.pages[s10.appState.currentPageId], { selectedIds: t12 } = s10.document.pageStates[s10.appState.currentPageId];
  return t12.every((n10) => e13.shapes[n10].isLocked);
};
var _O = (s10) => {
  let e13 = s10.document.pages[s10.appState.currentPageId], { selectedIds: t12 } = s10.document.pageStates[s10.appState.currentPageId];
  return t12.every((n10) => e13.shapes[n10].isAspectRatioLocked);
};
var YO = (s10) => {
  let e13 = s10.document.pages[s10.appState.currentPageId], t12 = s10.document.pageStates[s10.appState.currentPageId].selectedIds.map((n10) => e13.shapes[n10]);
  return t12.every((n10) => n10.children !== void 0 || n10.parentId === t12[0].parentId && t12[0].parentId !== s10.appState.currentPageId);
};
var ZO = (s10) => {
  let { selectedIds: e13 } = s10.document.pageStates[s10.appState.currentPageId];
  return e13.length > 0;
};
var XO = (s10) => {
  let { selectedIds: e13 } = s10.document.pageStates[s10.appState.currentPageId];
  return e13.length > 1;
};
function Cl() {
  let s10 = ae(), e13 = useIntl(), t12 = s10.useStore(WO), n10 = s10.useStore(_O), o10 = s10.useStore(YO), i10 = s10.useStore(ZO), a10 = s10.useStore(XO), l10 = s10.useStore(KO), r11 = s10.useStore(NO), c10 = l10 > 1, p10 = l10 > 2, u10 = J3.useCallback(() => {
    s10.rotate();
  }, [s10]), h10 = J3.useCallback(() => {
    s10.duplicate();
  }, [s10]), g10 = J3.useCallback(() => {
    s10.toggleLocked();
  }, [s10]), m10 = J3.useCallback(() => {
    s10.toggleAspectRatioLocked();
  }, [s10]), T10 = J3.useCallback(() => {
    s10.group();
  }, [s10]), y10 = J3.useCallback(() => {
    s10.moveToBack();
  }, [s10]), b10 = J3.useCallback(() => {
    s10.moveBackward();
  }, [s10]), S10 = J3.useCallback(() => {
    s10.moveForward();
  }, [s10]), w10 = J3.useCallback(() => {
    s10.moveToFront();
  }, [s10]), D10 = J3.useCallback(() => {
    s10.setShapeProps({ rotation: 0 });
  }, [s10]), B10 = J3.useCallback(() => {
    s10.align("top");
  }, [s10]), I10 = J3.useCallback(() => {
    s10.align("centerVertical");
  }, [s10]), P10 = J3.useCallback(() => {
    s10.align("bottom");
  }, [s10]), v10 = J3.useCallback(() => {
    s10.stretch("vertical");
  }, [s10]), Q = J3.useCallback(() => {
    s10.distribute("vertical");
  }, [s10]), oe2 = J3.useCallback(() => {
    s10.align("left");
  }, [s10]), te = J3.useCallback(() => {
    s10.align("centerHorizontal");
  }, [s10]), ke = J3.useCallback(() => {
    s10.align("right");
  }, [s10]), be2 = J3.useCallback(() => {
    s10.stretch("horizontal");
  }, [s10]), xe = J3.useCallback(() => {
    s10.distribute("horizontal");
  }, [s10]), Me = J3.useCallback((_e) => {
    s10.setMenuOpen(_e);
  }, [s10]);
  return J3.createElement(Root5, { dir: "ltr", onOpenChange: Me }, J3.createElement(Trigger, { dir: "ltr", asChild: true, id: "TD-Tools-Dots" }, J3.createElement(pe2, { variant: "circle" }, J3.createElement(DotsHorizontalIcon, null))), J3.createElement(xt, { sideOffset: 16, side: r11 === "bottom" || r11 === "top" ? "top" : r11 }, J3.createElement(J3.Fragment, null, J3.createElement(vs, null, J3.createElement(pe2, { variant: "icon", disabled: !i10, onClick: h10 }, J3.createElement(ct, { label: e13.formatMessage({ id: "duplicate" }), kbd: "#D", id: "TD-Tools-Copy" }, J3.createElement(CopyIcon, null))), J3.createElement(pe2, { disabled: !i10, onClick: u10 }, J3.createElement(ct, { label: e13.formatMessage({ id: "rotate" }), id: "TD-Tools-Rotate" }, J3.createElement(RotateCounterClockwiseIcon, null))), J3.createElement(pe2, { disabled: !i10, onClick: g10 }, J3.createElement(ct, { label: e13.formatMessage({ id: t12 ? "unlock" : "lock" }), kbd: "#L", id: "TD-Tools-Lock" }, t12 ? J3.createElement(LockClosedIcon, null) : J3.createElement(LockOpen1Icon, null))), J3.createElement(pe2, { disabled: !i10, onClick: m10 }, J3.createElement(ct, { label: e13.formatMessage({ id: n10 ? "unlock.aspect.ratio" : "lock.aspect.ratio" }), id: "TD-Tools-AspectRatio" }, n10 ? J3.createElement(AspectRatioIcon, null) : J3.createElement(BoxIcon, null))), J3.createElement(pe2, { disabled: !i10 || !o10 && !a10, onClick: T10 }, J3.createElement(ct, { label: e13.formatMessage({ id: "group" }), kbd: "#G", id: "TD-Tools-Group" }, J3.createElement(GroupIcon, null)))), J3.createElement(vs, null, J3.createElement(pe2, { disabled: !i10, onClick: y10 }, J3.createElement(ct, { label: e13.formatMessage({ id: "move.to.back" }), kbd: "#\u21E7[", id: "TD-Tools-PinBottom" }, J3.createElement(PinBottomIcon, null))), J3.createElement(pe2, { disabled: !i10, onClick: b10 }, J3.createElement(ct, { label: e13.formatMessage({ id: "move.backward" }), kbd: "#[", id: "TD-Tools-ArrowDown" }, J3.createElement(ArrowDownIcon, null))), J3.createElement(pe2, { disabled: !i10, onClick: S10 }, J3.createElement(ct, { label: e13.formatMessage({ id: "move.forward" }), kbd: "#]", id: "TD-Tools-ArrowUp" }, J3.createElement(ArrowUpIcon, null))), J3.createElement(pe2, { disabled: !i10, onClick: w10 }, J3.createElement(ct, { label: e13.formatMessage({ id: "move.to.front" }), kbd: "#\u21E7]", id: "TD-Tools-PinTop" }, J3.createElement(PinTopIcon, null))), J3.createElement(pe2, { disabled: !i10, onClick: D10 }, J3.createElement(ct, { label: e13.formatMessage({ id: "reset.angle" }), id: "TD-Tools-ResetAngle" }, J3.createElement(AngleIcon, null)))), J3.createElement(ut, null), J3.createElement(vs, null, J3.createElement(pe2, { disabled: !c10, onClick: oe2, id: "TD-Tools-AlignLeft" }, J3.createElement(AlignLeftIcon, null)), J3.createElement(pe2, { disabled: !c10, onClick: te, id: "TD-Tools-AlignCenterHorizontal" }, J3.createElement(AlignCenterHorizontallyIcon, null)), J3.createElement(pe2, { disabled: !c10, onClick: ke, id: "TD-Tools-AlignRight" }, J3.createElement(AlignRightIcon, null)), J3.createElement(pe2, { disabled: !c10, onClick: be2, id: "TD-Tools-StretchHorizontal" }, J3.createElement(StretchHorizontallyIcon, null)), J3.createElement(pe2, { disabled: !p10, onClick: xe, id: "TD-Tools-SpaceEvenlyHorizontal" }, J3.createElement(SpaceEvenlyHorizontallyIcon, null))), J3.createElement(vs, null, J3.createElement(pe2, { disabled: !c10, onClick: B10, id: "TD-Tools-AlignTop" }, J3.createElement(AlignTopIcon, null)), J3.createElement(pe2, { disabled: !c10, onClick: I10, id: "TD-Tools-AlignCenterVertical" }, J3.createElement(AlignCenterVerticallyIcon, null)), J3.createElement(pe2, { disabled: !c10, onClick: P10, id: "TD-Tools-AlignBottom" }, J3.createElement(AlignBottomIcon, null)), J3.createElement(pe2, { disabled: !c10, onClick: v10, id: "TD-Tools-tretchVertical" }, J3.createElement(StretchVerticallyIcon, null)), J3.createElement(pe2, { disabled: !p10, onClick: Q, id: "TD-Tools-SpaceEvenlyVertical" }, J3.createElement(SpaceEvenlyVerticallyIcon, null))))));
}
var vs = M3("div", { position: "relative", display: "flex", width: "100%", background: "none", border: "none", cursor: "pointer", outline: "none", alignItems: "center", justifyContent: "flex-start", padding: 0 });
function vl() {
  let s10 = ae(), e13 = useIntl(), t12 = mo.useCallback(() => {
    s10.delete();
  }, [s10]), n10 = s10.useStore((o10) => o10.appState.status === "idle" && o10.document.pageStates[o10.appState.currentPageId].selectedIds.length > 0);
  return mo.createElement(ct, { label: e13.formatMessage({ id: "delete" }), kbd: "\u232B", id: "TD-Delete" }, mo.createElement(pe2, { variant: "circle", disabled: !n10, onSelect: t12 }, mo.createElement(hl, null)));
}
var eF = (s10) => s10.settings.language;
function kl() {
  let s10 = ae(), e13 = s10.useStore(eF), t12 = Nt.useCallback((n10) => {
    s10.setSetting("language", n10);
  }, [s10]);
  return Nt.createElement(xt, { variant: "menu", overflow: true, id: "language-menu", side: "left", sideOffset: 8 }, xs.map(({ locale: n10, label: o10 }) => Nt.createElement(pt, { key: n10, checked: e13 === n10, onCheckedChange: () => t12(n10), id: `TD-MenuItem-Language-${n10}` }, o10)), Nt.createElement(Qe, null), Nt.createElement("a", { href: "https://github.com/tldraw/tldraw/blob/main/guides/translation.md", target: "_blank", rel: "nofollow" }, Nt.createElement(ue2, { id: "TD-MenuItem-Translation-Link" }, Nt.createElement(message_default, { id: "translation.link" }), Nt.createElement(Je, null, Nt.createElement(ExternalLinkIcon, null)))));
}
var go = M3("button", { position: "relative", height: "32px", width: "32px", backgroundColor: "$panel", borderRadius: "4px", padding: "0", margin: "0", outline: "none", border: "none", pointerEvents: "all", fontSize: "$0", color: "$text", cursor: "pointer", display: "grid", alignItems: "center", justifyContent: "center", "& > *": { gridRow: 1, gridColumn: 1 }, "&:disabled": { opacity: "0.5" }, "& > span": { width: "100%", height: "100%", display: "flex", alignItems: "center" }, variants: { bp: { mobile: { backgroundColor: "transparent" }, small: { "&:hover:not(:disabled)": { backgroundColor: "$hover" } } }, size: { small: { height: 32, width: 32, "& svg:nth-of-type(1)": { height: "16px", width: "16px" } }, medium: { height: 44, width: 44, "& svg:nth-of-type(1)": { height: "18px", width: "18px" } }, large: { height: 44, width: 44, "& svg:nth-of-type(1)": { height: "20px", width: "20px" } } }, isActive: { true: { color: "$selected" } } } });
function Dl({ onOpenChange: s10 }) {
  let e13 = useIntl(), t12 = { Tools: [{ label: e13.formatMessage({ id: "select" }), kbd: "1" }, { label: e13.formatMessage({ id: "draw" }), kbd: "2" }, { label: e13.formatMessage({ id: "eraser" }), kbd: "3" }, { label: e13.formatMessage({ id: "rectangle" }), kbd: "4" }, { label: e13.formatMessage({ id: "ellipse" }), kbd: "5" }, { label: e13.formatMessage({ id: "triangle" }), kbd: "6" }, { label: e13.formatMessage({ id: "line" }), kbd: "7" }, { label: e13.formatMessage({ id: "arrow" }), kbd: "8" }, { label: e13.formatMessage({ id: "text" }), kbd: "9" }, { label: e13.formatMessage({ id: "sticky" }), kbd: "0" }], View: [{ label: e13.formatMessage({ id: "zoom.in" }), kbd: "#+" }, { label: e13.formatMessage({ id: "zoom.out" }), kbd: "#-" }, { label: `${e13.formatMessage({ id: "zoom.to" })} 100%`, kbd: "\u21E7+0" }, { label: e13.formatMessage({ id: "zoom.to.fit" }), kbd: "\u21E7+1" }, { label: e13.formatMessage({ id: "zoom.to.selection" }), kbd: "\u21E7+2" }, { label: e13.formatMessage({ id: "preferences.dark.mode" }), kbd: "#\u21E7D" }, { label: e13.formatMessage({ id: "preferences.focus.mode" }), kbd: "#." }, { label: e13.formatMessage({ id: "preferences.show.grid" }), kbd: "#\u21E7G" }], Transform: [{ label: e13.formatMessage({ id: "flip.horizontal" }), kbd: "\u21E7H" }, { label: e13.formatMessage({ id: "flip.vertical" }), kbd: "\u21E7V" }, { label: `${e13.formatMessage({ id: "lock" })} / ${e13.formatMessage({ id: "unlock" })}`, kbd: "#\u21E7L" }, { label: `${e13.formatMessage({ id: "move" })} ${e13.formatMessage({ id: "to.front" })}`, kbd: "\u21E7]" }, { label: `${e13.formatMessage({ id: "move" })} ${e13.formatMessage({ id: "forward" })}`, kbd: "]" }, { label: `${e13.formatMessage({ id: "move" })} ${e13.formatMessage({ id: "backward" })}`, kbd: "[" }, { label: `${e13.formatMessage({ id: "move" })} ${e13.formatMessage({ id: "back" })}`, kbd: "\u21E7[" }], File: [{ label: e13.formatMessage({ id: "new.project" }), kbd: "#N" }, { label: e13.formatMessage({ id: "open" }), kbd: "#O" }, { label: e13.formatMessage({ id: "save" }), kbd: "#S" }, { label: e13.formatMessage({ id: "save.as" }), kbd: "#\u21E7S" }, { label: e13.formatMessage({ id: "upload.media" }), kbd: "#U" }], Edit: [{ label: e13.formatMessage({ id: "undo" }), kbd: "#Z" }, { label: e13.formatMessage({ id: "redo" }), kbd: "#\u21E7Z" }, { label: e13.formatMessage({ id: "cut" }), kbd: "#X" }, { label: e13.formatMessage({ id: "copy" }), kbd: "#C" }, { label: e13.formatMessage({ id: "paste" }), kbd: "#V" }, { label: e13.formatMessage({ id: "select.all" }), kbd: "#A" }, { label: e13.formatMessage({ id: "delete" }), kbd: "\u232B" }, { label: e13.formatMessage({ id: "duplicate" }), kbd: "#D" }] };
  return Ke.createElement(Root9, { onOpenChange: s10 }, Ke.createElement(Trigger4, { asChild: true }, Ke.createElement(Be, { id: "TD-HelpItem-Keyboard", variant: "wide" }, Ke.createElement(message_default, { id: "keyboard.shortcuts" }))), Ke.createElement(Portal2, null, Ke.createElement(dF, null), Ke.createElement(rF, null, Ke.createElement(cF, null, Ke.createElement(message_default, { id: "keyboard.shortcuts" }), Ke.createElement(Close, { asChild: true }, Ke.createElement(lF, null, Ke.createElement(Cross2Icon, null)))), Ke.createElement(aF, { bp: qe }, Object.entries(t12).map(([n10, o10]) => Ke.createElement(ar, { key: n10 }, Ke.createElement(oF, null, Ke.createElement(message_default, { id: `menu.${n10.toLocaleLowerCase()}` })), Ke.createElement(sF, null, o10.map((i10) => Ke.createElement(iF, { key: i10.label }, i10.label, Ke.createElement(uo, { variant: "menu" }, i10.kbd))))))))));
}
var oF = M3("h3", { fontSize: "$2", color: "$text", fontFamily: "$ui", margin: 0, paddingBottom: "$5" });
var ar = M3("div", { breakInside: "avoid", paddingBottom: 24 });
var sF = M3("ul", { listStyleType: "none", width: "100%", padding: 0, margin: 0 });
var iF = M3("li", { display: "flex", alignItems: "center", justifyContent: "space-between", height: 32, minHeight: 32, width: "100%", outline: "none", color: "$text", fontFamily: "$ui", fontWeight: 400, fontSize: "$1", borderRadius: 4, userSelect: "none", margin: 0, padding: "0 0" });
var rF = M3(Content6, { backgroundColor: "white", borderRadius: 6, boxShadow: "hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px", position: "fixed", top: "50%", left: "50%", transform: "translate(-50%, -50%)", width: "fit-content", maxWidth: "90vw", maxHeight: "74vh", overflowY: "auto", padding: 25, "&:focus": { outline: "none" } });
var aF = M3("div", { maxWidth: "100%", width: "fit-content", height: "fit-content", overflowY: "auto", columnGap: 64, variants: { bp: { mobile: { columns: 1, [`& ${ar}`]: { minWidth: "0px" } }, small: { columns: 2, [`& ${ar}`]: { minWidth: "200px" } }, medium: { columns: 3 }, large: { columns: 3 } } } });
var dF = M3(Overlay3, { backgroundColor: "$overlay", position: "fixed", inset: 0 });
var lF = M3(go, { fontFamily: "inherit", borderRadius: "100%", height: 25, width: 25, display: "inline-flex", alignItems: "center", justifyContent: "center", color: "$text", cursor: "pointer", "&:hover": { backgroundColor: "$hover" } });
var cF = M3(Title, { fontFamily: "$body", fontSize: "$3", color: "$text", paddingBottom: 32, display: "flex", alignItems: "center", justifyContent: "space-between", margin: 0 });
var hF = (s10) => s10.settings.isDebugMode;
var mF = (s10) => s10.settings.dockPosition;
function Pl() {
  let s10 = ae(), e13 = s10.useStore(hF), t12 = s10.useStore(mF), [n10, o10] = et.useState(false);
  return et.createElement(Root8, null, et.createElement(TF, { dir: "ltr" }, et.createElement(Trigger3, { asChild: true, dir: "ltr" }, et.createElement(fF, { side: t12, debug: e13, bp: qe }, et.createElement(QuestionMarkIcon, null)))), et.createElement(Content5, { dir: "ltr" }, et.createElement(SF, { style: { visibility: n10 ? "hidden" : "visible" } }, et.createElement(gF, null), et.createElement(Dl, { onOpenChange: o10 }), et.createElement(Qe, null))));
}
var gF = () => et.createElement(Root5, { dir: "ltr" }, et.createElement(Trigger, { asChild: true }, et.createElement(Be, { variant: "wide", hasArrow: true }, et.createElement(message_default, { id: "language" }))), et.createElement(kl, null));
var fF = M3("button", { width: 28, height: 28, borderRadius: "100%", position: "fixed", right: 10, display: "grid", placeItems: "center", border: "none", backgroundColor: "white", cursor: "pointer", boxShadow: "$panel", bottom: 10, variants: { debug: { true: {}, false: {} }, bp: { mobile: {}, small: {}, medium: {}, large: {} }, side: { top: {}, left: {}, right: {}, bottom: {} } }, compoundVariants: [{ bp: "mobile", side: "bottom", debug: false, css: { bottom: 70 } }, { bp: "mobile", debug: true, css: { bottom: 50 } }, { bp: "mobile", side: "bottom", debug: true, css: { bottom: 110 } }, { bp: "small", side: "bottom", debug: true, css: { bottom: 50 } }, { bp: "small", debug: false, css: { bottom: 10 } }] });
var SF = M3(Bt, { width: "fit-content", height: "fit-content", minWidth: 200, maxHeight: 380, overflowY: "auto", "& *": { boxSizing: "border-box" }, variants: { variant: { horizontal: { flexDirection: "row" }, menu: { minWidth: 128 } } } });
var TF = M3(Anchor3, { position: "absolute", right: 10, zIndex: 999, bottom: 50 });
var bF = (s10) => s10.settings.isDebugMode;
var yF = (s10) => s10.settings.dockPosition;
var Bl = St.memo(function({ onBlur: e13 }) {
  let t12 = ae(), n10 = t12.useStore(yF), o10 = t12.useStore(bF);
  return St.createElement(St.Fragment, null, St.createElement(wF, { side: n10, onBlur: e13, bp: qe, debug: o10 }, St.createElement(xF, { id: "TD-Tools" }, St.createElement(al, null), St.createElement(CF, { orientation: n10 === "bottom" || n10 === "top" ? "horizontal" : "vertical" }, St.createElement(Cl, null), St.createElement(xl, null), St.createElement(vl, null)))), St.createElement(Pl, null), o10 && St.createElement(IF, null, St.createElement(rl, null)));
});
var wF = M3("div", { position: "absolute", width: "100%", minWidth: 0, maxWidth: "100%", height: "64px", gap: "$4", display: "flex", justifyContent: "center", alignItems: "center", zIndex: 200, overflow: "hidden", pointerEvents: "none", "& > div > *": { pointerEvents: "all" }, variants: { debug: { true: {}, false: {} }, bp: { mobile: {}, small: {}, medium: {}, large: {} }, side: { top: { width: "100%", height: 64, left: 0, right: 0, top: 45 }, right: { width: 64, height: "100%", top: 0, right: 0 }, bottom: { width: "100%", left: 0, right: 0, bottom: 4 }, left: { width: 64, height: "100%", left: 0 } } }, compoundVariants: [{ side: "top", bp: "large", css: { top: "10px" } }, { side: "bottom", debug: true, css: { bottom: 44 } }] });
var xF = M3("div", { display: "flex", width: "fit-content", height: "fit-content", alignItems: "center", justifyContent: "center", flexDirection: "column", gap: "$4" });
var IF = M3("div", { position: "absolute", bottom: "0px", left: "0px", right: "0px", height: "40px", width: "100%", maxWidth: "100%" });
var CF = M3("div", { position: "relative", display: "flex", alignItems: "center", height: "fit-content", gap: "$3", variants: { orientation: { horizontal: { flexDirection: "row" }, vertical: { flexDirection: "column" } } } });
var kF = (s10) => s10.settings;
var DF = ["bottom", "left", "right", "top"];
function Ml() {
  let s10 = ae(), e13 = useIntl(), t12 = s10.useStore(kF), n10 = fe2.useCallback(() => {
    s10.setSetting("isDebugMode", (m10) => !m10);
  }, [s10]), o10 = fe2.useCallback(() => {
    s10.setSetting("isDarkMode", (m10) => !m10);
  }, [s10]), i10 = fe2.useCallback(() => {
    s10.setSetting("isFocusMode", (m10) => !m10);
  }, [s10]), a10 = fe2.useCallback(() => {
    s10.setSetting("showRotateHandles", (m10) => !m10);
  }, [s10]), l10 = fe2.useCallback(() => {
    s10.setSetting("showGrid", (m10) => !m10);
  }, [s10]), r11 = fe2.useCallback(() => {
    s10.setSetting("showBindingHandles", (m10) => !m10);
  }, [s10]), c10 = fe2.useCallback(() => {
    s10.setSetting("isSnapping", (m10) => !m10);
  }, [s10]), p10 = fe2.useCallback(() => {
    s10.setSetting("keepStyleMenuOpen", (m10) => !m10);
  }, [s10]), u10 = fe2.useCallback(() => {
    s10.setSetting("showCloneHandles", (m10) => !m10);
  }, [s10]), h10 = fe2.useCallback(() => {
    s10.setSetting("isCadSelectMode", (m10) => !m10);
  }, [s10]), g10 = fe2.useCallback((m10) => {
    s10.setSetting("dockPosition", m10);
  }, [s10]);
  return fe2.createElement(Tn, { label: e13.formatMessage({ id: "menu.preferences" }), id: "TD-MenuItem-Preferences" }, fe2.createElement(pt, { checked: t12.isDarkMode, onCheckedChange: o10, kbd: "#\u21E7D", id: "TD-MenuItem-Preferences-Dark_Mode" }, fe2.createElement(message_default, { id: "preferences.dark.mode" })), fe2.createElement(pt, { checked: t12.isFocusMode, onCheckedChange: i10, kbd: "#.", id: "TD-MenuItem-Preferences-Focus_Mode" }, fe2.createElement(message_default, { id: "preferences.focus.mode" })), fe2.createElement(pt, { checked: t12.isDebugMode, onCheckedChange: n10, id: "TD-MenuItem-Preferences-Debug_Mode" }, fe2.createElement(message_default, { id: "preferences.debug.mode" })), fe2.createElement(Qe, null), fe2.createElement(pt, { checked: t12.showGrid, onCheckedChange: l10, kbd: "#\u21E7G", id: "TD-MenuItem-Preferences-Grid" }, fe2.createElement(message_default, { id: "preferences.show.grid" })), fe2.createElement(pt, { checked: t12.isCadSelectMode, onCheckedChange: h10, id: "TD-MenuItem-Preferences-Cad_Selection" }, fe2.createElement(message_default, { id: "preferences.use.cad.selection" })), fe2.createElement(pt, { checked: t12.keepStyleMenuOpen, onCheckedChange: p10, id: "TD-MenuItem-Preferences-Style_menu" }, fe2.createElement(message_default, { id: "preferences.keep.stylemenu.open" })), fe2.createElement(pt, { checked: t12.isSnapping, onCheckedChange: c10, id: "TD-MenuItem-Preferences-Always_Show_Snaps" }, fe2.createElement(message_default, { id: "preferences.always.show.snaps" })), fe2.createElement(pt, { checked: t12.showRotateHandles, onCheckedChange: a10, id: "TD-MenuItem-Preferences-Rotate_Handles" }, fe2.createElement(message_default, { id: "preferences.rotate.handles" })), fe2.createElement(pt, { checked: t12.showBindingHandles, onCheckedChange: r11, id: "TD-MenuItem-Preferences-Binding_Handles" }, fe2.createElement(message_default, { id: "preferences.binding.handles" })), fe2.createElement(pt, { checked: t12.showCloneHandles, onCheckedChange: u10, id: "TD-MenuItem-Preferences-Clone_Handles" }, fe2.createElement(message_default, { id: "preferences.clone.handles" })), fe2.createElement(Tn, { label: e13.formatMessage({ id: "dock.position" }), overflow: false }, DF.map((m10) => fe2.createElement(pt, { key: m10, checked: t12.dockPosition === m10, onCheckedChange: () => g10(m10), id: `TD-MenuItem-DockPosition-${m10}` }, fe2.createElement(PF, null, fe2.createElement(message_default, { id: m10 }))))));
}
var PF = M3("span", { textTransform: "capitalize" });
var RF = (s10) => s10.document.pageStates[s10.appState.currentPageId].selectedIds.length;
var LF = (s10) => s10.appState.disableAssets;
var Rl = H4.memo(function({ sponsor: e13, readOnly: t12 }) {
  let n10 = ae(), o10 = useIntl(), i10 = n10.useStore(RF), a10 = n10.useStore(LF), [l10, r11] = H4.useState(0);
  H4.useEffect(() => r11(1), []);
  let { onNewProject: c10, onOpenProject: p10, onSaveProject: u10, onSaveProjectAs: h10 } = bs(), g10 = H4.useCallback(() => {
    n10.delete();
  }, [n10]), m10 = H4.useCallback(() => {
    n10.copyImage("svg", { scale: 1, quality: 1, transparentBackground: false });
  }, [n10]), T10 = H4.useCallback(() => {
    n10.copyImage("png", { scale: 2, quality: 1, transparentBackground: true });
  }, [n10]), y10 = H4.useCallback(() => ee(this, null, function* () {
    n10.exportImage("png", { scale: 2, quality: 1, transparentBackground: true });
  }), [n10]), b10 = H4.useCallback(() => ee(this, null, function* () {
    n10.exportImage("jpeg", { scale: 2, quality: 1, transparentBackground: false });
  }), [n10]), S10 = H4.useCallback(() => ee(this, null, function* () {
    n10.exportImage("webp", { scale: 2, quality: 1, transparentBackground: false });
  }), [n10]), w10 = H4.useCallback(() => ee(this, null, function* () {
    n10.exportImage("svg", { scale: 2, quality: 1, transparentBackground: false });
  }), [n10]), D10 = H4.useCallback(() => ee(this, null, function* () {
    n10.copyJson();
  }), [n10]), B10 = H4.useCallback(() => ee(this, null, function* () {
    n10.exportJson();
  }), [n10]), I10 = H4.useCallback(() => {
    var ot, Tt;
    (Tt = (ot = n10.callbacks).onSignIn) == null || Tt.call(ot, n10);
  }, [n10]), P10 = H4.useCallback(() => {
    var ot, Tt;
    (Tt = (ot = n10.callbacks).onSignOut) == null || Tt.call(ot, n10);
  }, [n10]), v10 = H4.useCallback(() => {
    n10.cut();
  }, [n10]), Q = H4.useCallback(() => {
    n10.copy();
  }, [n10]), oe2 = H4.useCallback(() => {
    n10.paste();
  }, [n10]), te = H4.useCallback(() => {
    n10.selectAll();
  }, [n10]), ke = H4.useCallback(() => {
    n10.selectNone();
  }, [n10]), be2 = H4.useCallback(() => {
    n10.openAsset();
  }, [n10]), xe = H4.useCallback(() => {
    n10.zoomTo(1);
  }, [n10]), Me = n10.callbacks.onNewProject || n10.callbacks.onOpenProject || n10.callbacks.onSaveProject || n10.callbacks.onSaveProjectAs || n10.callbacks.onExport, Fe = n10.callbacks.onSignIn || n10.callbacks.onSignOut, _e = i10 > 0;
  return H4.createElement(Root5, { dir: "ltr" }, H4.createElement(Cs, { id: "TD-MenuIcon" }, H4.createElement(HamburgerMenuIcon, null)), H4.createElement(xt, { variant: "menu", id: "TD-Menu" }, Me && H4.createElement(Tn, { label: `${o10.formatMessage({ id: "menu.file" })}...`, id: "TD-MenuItem-File" }, n10.callbacks.onNewProject && H4.createElement(ue2, { onClick: c10, kbd: "#N", id: "TD-MenuItem-File-New_Project" }, H4.createElement(message_default, { id: "new.project" })), n10.callbacks.onOpenProject && H4.createElement(ue2, { onClick: p10, kbd: "#O", id: "TD-MenuItem-File-Open" }, H4.createElement(message_default, { id: "open" }), "..."), n10.callbacks.onSaveProject && H4.createElement(ue2, { onClick: u10, kbd: "#S", id: "TD-MenuItem-File-Save" }, H4.createElement(message_default, { id: "save" })), n10.callbacks.onSaveProjectAs && H4.createElement(ue2, { onClick: h10, kbd: "#\u21E7S", id: "TD-MenuItem-File-Save_As" }, H4.createElement(message_default, { id: "save.as" }), "..."), !a10 && H4.createElement(H4.Fragment, null, H4.createElement(ut, null), H4.createElement(ue2, { onClick: be2, kbd: "#U", id: "TD-MenuItem-File-Upload_Media" }, H4.createElement(message_default, { id: "upload.media" })))), H4.createElement(Tn, { label: `${o10.formatMessage({ id: "menu.edit" })}...`, id: "TD-MenuItem-Edit" }, H4.createElement(ue2, { onSelect: ve, onClick: n10.undo, disabled: t12, kbd: "#Z", id: "TD-MenuItem-Edit-Undo" }, H4.createElement(message_default, { id: "undo" })), H4.createElement(ue2, { onSelect: ve, onClick: n10.redo, disabled: t12, kbd: "#\u21E7Z", id: "TD-MenuItem-Edit-Redo" }, H4.createElement(message_default, { id: "redo" })), H4.createElement(Qe, { dir: "ltr" }), H4.createElement(ue2, { onSelect: ve, disabled: !_e || t12, onClick: v10, kbd: "#X", id: "TD-MenuItem-Edit-Cut" }, H4.createElement(message_default, { id: "cut" })), H4.createElement(ue2, { onSelect: ve, disabled: !_e, onClick: Q, kbd: "#C", id: "TD-MenuItem-Edit-Copy" }, H4.createElement(message_default, { id: "copy" })), H4.createElement(ue2, { onSelect: ve, onClick: oe2, kbd: "#V", id: "TD-MenuItem-Edit-Paste" }, H4.createElement(message_default, { id: "paste" })), H4.createElement(Qe, { dir: "ltr" }), H4.createElement(Tn, { label: `${o10.formatMessage({ id: "copy.as" })}...`, size: "small", id: "TD-MenuItem-Copy-As" }, H4.createElement(ue2, { onClick: m10, id: "TD-MenuItem-Copy-as-SVG" }, "SVG"), H4.createElement(ue2, { onClick: T10, id: "TD-MenuItem-Copy-As-PNG" }, "PNG"), H4.createElement(ue2, { onClick: D10, id: "TD-MenuItem-Copy_as_JSON" }, "JSON")), H4.createElement(Tn, { label: `${o10.formatMessage({ id: "export.as" })}...`, size: "small", id: "TD-MenuItem-Export" }, H4.createElement(ue2, { onClick: w10, id: "TD-MenuItem-Export-SVG" }, "SVG"), H4.createElement(ue2, { onClick: y10, id: "TD-MenuItem-Export-PNG" }, "PNG"), H4.createElement(ue2, { onClick: b10, id: "TD-MenuItem-Export-JPG" }, "JPG"), H4.createElement(ue2, { onClick: S10, id: "TD-MenuItem-Export-WEBP" }, "WEBP"), H4.createElement(ue2, { onClick: B10, id: "TD-MenuItem-Export-JSON" }, "JSON")), H4.createElement(Qe, { dir: "ltr" }), H4.createElement(ue2, { onSelect: ve, onClick: te, kbd: "#A", id: "TD-MenuItem-Select_All" }, H4.createElement(message_default, { id: "select.all" })), H4.createElement(ue2, { onSelect: ve, disabled: !_e, onClick: ke, id: "TD-MenuItem-Select_None" }, H4.createElement(message_default, { id: "select.none" })), H4.createElement(Qe, { dir: "ltr" }), H4.createElement(ue2, { onSelect: g10, disabled: !_e, kbd: "\u232B", id: "TD-MenuItem-Delete" }, H4.createElement(message_default, { id: "delete" }))), H4.createElement(Tn, { label: o10.formatMessage({ id: "menu.view" }), id: "TD-MenuItem-Edit" }, H4.createElement(ue2, { onSelect: ve, onClick: n10.zoomIn, kbd: "#+", id: "TD-MenuItem-View-ZoomIn" }, H4.createElement(message_default, { id: "zoom.in" })), H4.createElement(ue2, { onSelect: ve, onClick: n10.zoomOut, kbd: "#-", id: "TD-MenuItem-View-ZoomOut" }, H4.createElement(message_default, { id: "zoom.out" })), H4.createElement(ue2, { onSelect: ve, onClick: xe, kbd: "\u21E7+0", id: "TD-MenuItem-View-ZoomTo100" }, H4.createElement(message_default, { id: "zoom.to" }), " 100%"), H4.createElement(ue2, { onSelect: ve, onClick: n10.zoomToFit, kbd: "\u21E7+1", id: "TD-MenuItem-View-ZoomToFit" }, H4.createElement(message_default, { id: "zoom.to.fit" })), H4.createElement(ue2, { onSelect: ve, onClick: n10.zoomToSelection, kbd: "\u21E7+2", id: "TD-MenuItem-View-ZoomToSelection" }, H4.createElement(message_default, { id: "zoom.to.selection" }))), H4.createElement(Qe, { dir: "ltr" }), H4.createElement(Ml, null), Fe && H4.createElement(H4.Fragment, null, H4.createElement(Qe, { dir: "ltr" }), " ", n10.callbacks.onSignIn && H4.createElement(ue2, { onSelect: I10, id: "TD-MenuItem-Sign_in" }, H4.createElement(message_default, { id: "menu.sign.in" })), n10.callbacks.onSignOut && H4.createElement(ue2, { onSelect: P10, id: "TD-MenuItem-Sign_out" }, H4.createElement(message_default, { id: "menu.sign.out" }), H4.createElement(Je, null, H4.createElement(ExitIcon, null))))));
});
var Ll = fo.forwardRef((n10, t12) => {
  var o10 = n10, { icon: s10 } = o10, e13 = Ye(o10, ["icon"]);
  return fo.createElement(AF, null, fo.createElement(HF, C5(f8({}, e13), { ref: t12 })), s10 ? fo.createElement(zF, null, s10) : null);
});
var AF = M3("div", { position: "relative", width: "100%", height: "min-content" });
var HF = M3("input", { color: "$text", border: "none", textAlign: "left", width: "100%", paddingLeft: "$3", paddingRight: "$6", backgroundColor: "$background", height: "32px", outline: "none", fontFamily: "$ui", fontSize: "$1", "&:focus": { backgroundColor: "$hover" }, borderRadius: "$2" });
var zF = M3(Je, { top: 0, right: 0, position: "absolute", paddingLeft: "$3", paddingRight: "$3", pointerEvents: "none", color: "$text" });
var UF = (s10) => Object.keys(s10.document.pages).length > 1;
function Hl({ page: s10, onOpen: e13, onClose: t12 }) {
  let n10 = ae(), o10 = useIntl(), [i10, a10] = Se.useState(false), [l10, r11] = Se.useState(s10.name || "Page"), c10 = n10.useStore(UF), p10 = Se.useRef(null), u10 = Se.useCallback(() => {
    a10(false);
  }, []), h10 = Se.useCallback(() => {
    n10.duplicatePage(s10.id);
  }, [n10]), g10 = Se.useCallback(() => {
    window.confirm("Are you sure you want to delete this page?") && n10.deletePage(s10.id);
  }, [n10]), m10 = Se.useCallback((B10) => {
    if (a10(B10), B10) {
      e13 == null || e13();
      return;
    }
  }, [n10]);
  function T10(B10) {
    B10.stopPropagation();
  }
  let y10 = Se.useRef(s10.name || "Page"), b10 = Se.useRef(y10.current), S10 = Se.useCallback((B10) => {
    let I10 = B10.target.value.trimStart();
    b10.current = I10, r11(I10);
  }, []), w10 = Se.useCallback((B10) => {
    switch (B10.key) {
      case "Enter": {
        b10.current === y10.current ? a10(false) : (y10.current = b10.current, n10.renamePage(s10.id, b10.current.trim()));
        break;
      }
      case "Escape": {
        if (b10.current === y10.current) {
          a10(false);
          return;
        }
        b10.current = y10.current, r11(y10.current), requestAnimationFrame(() => {
          let I10 = p10.current;
          I10 && (I10.focus(), I10.setSelectionRange(0, I10.value.length));
        });
        break;
      }
    }
  }, []), D10 = Se.useRef(false);
  return Se.useEffect(() => (i10 ? (D10.current = true, y10.current = s10.name || "Page", b10.current = y10.current, requestAnimationFrame(() => {
    let B10 = p10.current;
    B10 && (B10.focus(), B10.setSelectionRange(0, B10.value.length));
  })) : D10.current && (t12 == null || t12()), () => {
    b10.current !== y10.current && (y10.current = b10.current, n10.renamePage(s10.id, b10.current));
  }), [i10]), Se.createElement(Root10, { open: i10, onOpenChange: m10 }, Se.createElement(Trigger5, { asChild: true, "data-shy": "true" }, Se.createElement(go, { bp: qe }, Se.createElement(Je, null, Se.createElement(MixerVerticalIcon, null)))), Se.createElement(Portal3, null, Se.createElement(VF, { onPointerDown: u10 }), Se.createElement(GF, { dir: "ltr", onKeyDown: T10, onKeyUp: T10 }, Se.createElement(Ll, { ref: p10, placeholder: o10.formatMessage({ id: "page.name" }), value: l10, onChange: S10, onKeyDown: w10, icon: Se.createElement(Pencil1Icon, null) }), Se.createElement(ut, null), Se.createElement(Al, { onSelect: h10 }, Se.createElement(message_default, { id: "duplicate" })), Se.createElement(Al, { disabled: !c10, onSelect: g10 }, Se.createElement(message_default, { id: "delete" })), Se.createElement(ut, null), Se.createElement(Cancel, { asChild: true }, Se.createElement(Be, null, Se.createElement(message_default, { id: "cancel" }))))));
}
var GF = M3(Content7, { position: "fixed", top: "50%", left: "50%", transform: "translate(-50%, -50%)", minWidth: 240, maxWidth: "fit-content", maxHeight: "85vh", marginTop: "-5vh", pointerEvents: "all", backgroundColor: "$panel", padding: "$1", borderRadius: "$2", font: "$ui", "&:focus": { outline: "none" } });
var VF = M3(Overlay4, { backgroundColor: "rgba(0, 0, 0, .15)", position: "fixed", pointerEvents: "all", inset: 0 });
function Al(t12) {
  var n10 = t12, { onSelect: s10 } = n10, e13 = Ye(n10, ["onSelect"]);
  return Se.createElement(Action, { asChild: true, onClick: s10, onSelect: s10 }, Se.createElement(Be, f8({}, e13)));
}
var _F = (s10) => Object.values(s10.document.pages).sort((e13, t12) => (e13.childIndex || 0) - (t12.childIndex || 0));
var YF = (s10) => s10.document.pages[s10.appState.currentPageId].name;
var ZF = (s10) => s10.document.pages[s10.appState.currentPageId].id;
function zl() {
  let s10 = ae(), e13 = me2.useRef(false), [t12, n10] = me2.useState(false);
  me2.useEffect(() => {
    e13.current !== t12 && (e13.current = t12);
  }, [t12]);
  let o10 = me2.useCallback(() => {
    n10(false);
  }, [n10]), i10 = me2.useCallback((l10) => {
    e13.current !== l10 && n10(l10);
  }, [n10]), a10 = s10.useStore(YF);
  return me2.createElement(Root5, { dir: "ltr", open: t12, onOpenChange: i10 }, me2.createElement(Trigger, { dir: "ltr", asChild: true, id: "TD-Page" }, me2.createElement(pe2, { variant: "text" }, a10 || "Page")), me2.createElement(xt, { variant: "menu", align: "start" }, t12 && me2.createElement(XF, { onClose: o10 })));
}
function XF({ onClose: s10 }) {
  let e13 = ae(), t12 = useIntl(), n10 = e13.useStore(_F), o10 = e13.useStore(ZF), i10 = me2.useCallback(() => {
    let m10 = t12.formatMessage({ id: "page" }) + " " + (Object.keys(e13.document.pages).length + 1);
    e13.createPage(void 0, m10);
  }, [e13]), a10 = me2.useCallback((m10) => {
    s10(), e13.changePage(m10);
  }, [e13]), [l10, r11] = me2.useState(null), [c10, p10] = me2.useState(null), u10 = me2.useCallback((m10) => {
    r11(m10.currentTarget.id), p10(n10.findIndex((T10) => T10.id === m10.currentTarget.id)), m10.dataTransfer.effectAllowed = "move";
  }, []), h10 = me2.useCallback((m10) => {
    m10.preventDefault();
    let T10 = n10.findIndex((S10) => S10.id === m10.currentTarget.id), y10 = m10.currentTarget.getBoundingClientRect();
    T10 = (m10.clientY - y10.top) / y10.height < 0.5 ? T10 : T10 + 1, p10(T10);
  }, [l10, n10]), g10 = me2.useCallback(() => {
    l10 !== null && c10 !== null && e13.movePage(l10, c10), r11(null), p10(null);
  }, [l10, c10]);
  return me2.createElement(me2.Fragment, null, me2.createElement(RadioGroup2, { dir: "ltr", value: o10, onValueChange: a10 }, n10.map((m10, T10) => me2.createElement(qF, { key: m10.id, isDropAbove: T10 === c10 && T10 === 0, isDropBelow: c10 !== null && T10 === c10 - 1 }, me2.createElement(RadioItem2, { title: m10.name || "Page", value: m10.id, key: m10.id, id: m10.id, asChild: true, onDragOver: h10, onDragStart: u10, onDrop: g10, draggable: true }, me2.createElement(JF, null, me2.createElement("span", { id: m10.id }, m10.name || "Page"), me2.createElement(ItemIndicator2, null, me2.createElement(Je, null, me2.createElement(CheckIcon, null))))), me2.createElement(Hl, { page: m10, onClose: s10 })))), me2.createElement(Qe, null), me2.createElement(Item3, { onSelect: i10, asChild: true }, me2.createElement(Be, null, me2.createElement("span", null, me2.createElement(message_default, { id: "create.page" })), me2.createElement(Je, null, me2.createElement(PlusIcon, null)))));
}
var qF = M3("div", { position: "relative", display: "grid", gridTemplateColumns: "1fr auto", gridAutoFlow: "column", margin: 0, '& > *[data-shy="true"]': { opacity: 0 }, '&:hover > *[data-shy="true"]': { opacity: 1 }, variants: { isDropAbove: { true: { "&::after": { content: "", display: "block", position: "absolute", top: 0, width: "100%", height: "1px", backgroundColor: "$selected", zIndex: 999, pointerEvents: "none" } } }, isDropBelow: { true: { "&::after": { content: "", display: "block", position: "absolute", width: "100%", height: "1px", top: "100%", backgroundColor: "$selected", zIndex: 999, pointerEvents: "none" } } } } });
var JF = M3(Be, { minWidth: 128 });
var QF = (s10) => s10.document.pageStates[s10.appState.currentPageId].camera.zoom;
var Ol = ht.memo(function() {
  let e13 = ae(), t12 = e13.useStore(QF);
  return ht.createElement(Root5, { dir: "ltr" }, ht.createElement(Trigger, { dir: "ltr", asChild: true, id: "TD-Zoom" }, ht.createElement(ej, { onDoubleClick: e13.resetZoom, variant: "text" }, Math.round(t12 * 100), "%")), ht.createElement(xt, { align: "end" }, ht.createElement(ue2, { onSelect: ve, onClick: e13.zoomIn, kbd: "#+", id: "TD-Zoom-Zoom_In" }, ht.createElement(message_default, { id: "zoom.in" })), ht.createElement(ue2, { onSelect: ve, onClick: e13.zoomOut, kbd: "#\u2212", id: "TD-Zoom-Zoom_Out" }, ht.createElement(message_default, { id: "zoom.out" })), ht.createElement(ue2, { onSelect: ve, onClick: e13.resetZoom, kbd: "\u21E70", id: "TD-Zoom-Zoom_To_100%" }, ht.createElement(message_default, { id: "to" }), " 100%"), ht.createElement(ue2, { onSelect: ve, onClick: e13.zoomToFit, kbd: "\u21E71", id: "TD-Zoom-To_Fit" }, ht.createElement(message_default, { id: "to.fit" })), ht.createElement(ue2, { onSelect: ve, onClick: e13.zoomToSelection, kbd: "\u21E72", id: "TD-Zoom-To_Selection" }, ht.createElement(message_default, { id: "to.selection" }))));
});
var ej = M3(pe2, { minWidth: 56 });
var ij = (s10) => s10.appState.currentStyle;
var rj = (s10) => s10.document.pageStates[s10.appState.currentPageId].selectedIds;
var aj = Object.keys(to);
var Fl = { ["draw"]: ne2.createElement(cl, null), ["solid"]: ne2.createElement(pl, null), ["dashed"]: ne2.createElement(dl, null), ["dotted"]: ne2.createElement(ll, null) };
var dj = { ["small"]: ne2.createElement(gl, null), ["medium"]: ne2.createElement(fl, null), ["large"]: ne2.createElement(Sl, null) };
var lj = { ["start"]: ne2.createElement(TextAlignLeftIcon, null), ["middle"]: ne2.createElement(TextAlignCenterIcon, null), ["end"]: ne2.createElement(TextAlignRightIcon, null), ["justify"]: ne2.createElement(TextAlignJustifyIcon, null) };
var cj = (s10) => s10.settings.isDarkMode ? "dark" : "light";
var pj = (s10) => s10.settings.keepStyleMenuOpen;
var uj = (s10) => {
  let { activeTool: e13, currentPageId: t12 } = s10.appState;
  switch (e13) {
    case "select": {
      let n10 = s10.document.pages[t12], o10 = false, i10 = false;
      for (let a10 of s10.document.pageStates[t12].selectedIds)
        "text" in n10.shapes[a10] && (o10 = true), "label" in n10.shapes[a10] && (i10 = true);
      return o10 ? "text" : i10 ? "label" : "";
    }
    case "text":
      return "text";
    case "rectangle":
      return "label";
    case "ellipse":
      return "label";
    case "triangle":
      return "label";
    case "arrow":
      return "label";
    case "line":
      return "label";
  }
  return false;
};
var jl = ne2.memo(function() {
  let e13 = ae(), t12 = e13.useStore(cj), n10 = e13.useStore(pj), o10 = e13.useStore(uj), i10 = e13.useStore(ij), a10 = e13.useStore(rj), [l10, r11] = ne2.useState(i10), c10 = ne2.useRef(i10);
  ne2.useEffect(() => {
    let { appState: { currentStyle: b10 }, page: S10, selectedIds: w10 } = e13, D10 = {};
    if (w10.length <= 0)
      D10 = b10;
    else {
      let B10 = /* @__PURE__ */ new Set([]);
      e13.selectedIds.map((I10) => S10.shapes[I10]).forEach((I10) => {
        aj.forEach((P10) => {
          if (!B10.has(P10))
            if (D10[P10] === void 0)
              D10[P10] = I10.style[P10];
            else {
              if (D10[P10] === I10.style[P10])
                return;
              D10[P10] = I10.style[P10], B10.add(P10);
            }
        });
      });
    }
    JSON.stringify(D10) !== JSON.stringify(c10.current) && (c10.current = D10, r11(D10));
  }, [i10, a10]);
  let p10 = ne2.useCallback((b10) => {
    e13.setSetting("keepStyleMenuOpen", b10);
  }, []), u10 = ne2.useCallback((b10) => {
    e13.style({ isFilled: b10 });
  }, []), h10 = ne2.useCallback((b10) => {
    e13.style({ dash: b10 });
  }, []), g10 = ne2.useCallback((b10) => {
    e13.style({ size: b10 });
  }, []), m10 = ne2.useCallback((b10) => {
    e13.style({ font: b10 });
  }, []), T10 = ne2.useCallback((b10) => {
    e13.style({ textAlign: b10 });
  }, []), y10 = ne2.useCallback((b10) => {
    e13.setMenuOpen(b10);
  }, [e13]);
  return ne2.createElement(Root5, { dir: "ltr", onOpenChange: y10, open: n10 ? true : void 0, modal: false }, ne2.createElement(Trigger, { asChild: true, id: "TD-Styles" }, ne2.createElement(pe2, { variant: "text" }, ne2.createElement(message_default, { id: "styles" }), ne2.createElement(mj, { style: { color: eo[t12][l10.color] } }, l10.isFilled && ne2.createElement(Ni, { size: 16, stroke: "none", fill: os[t12][l10.color] }), Fl[l10.dash]))), ne2.createElement(xt, null, ne2.createElement(_o, { variant: "tall", id: "TD-Styles-Color-Container" }, ne2.createElement("span", null, ne2.createElement(message_default, { id: "style.menu.color" })), ne2.createElement(hj, null, Object.keys(eo.light).map((b10) => ne2.createElement(Item3, { key: b10, onSelect: ve, asChild: true, id: `TD-Styles-Color-Swatch-${b10}` }, ne2.createElement(pe2, { variant: "icon", isActive: l10.color === b10, onClick: () => e13.style({ color: b10 }) }, ne2.createElement(Ni, { size: 18, strokeWidth: 2.5, fill: l10.isFilled ? os.light[b10] : "transparent", stroke: eo.light[b10] })))))), ne2.createElement(pt, { variant: "styleMenu", checked: !!l10.isFilled, onCheckedChange: u10, id: "TD-Styles-Fill" }, ne2.createElement(message_default, { id: "style.menu.fill" })), ne2.createElement(_o, { id: "TD-Styles-Dash-Container" }, ne2.createElement(message_default, { id: "style.menu.dash" }), ne2.createElement(Bs, { dir: "ltr", value: l10.dash, onValueChange: h10 }, Object.values(on).map((b10) => ne2.createElement(Ko, { key: b10, isActive: b10 === l10.dash, value: b10, onSelect: ve, bp: qe, id: `TD-Styles-Dash-${b10}` }, Fl[b10])))), ne2.createElement(_o, { id: "TD-Styles-Size-Container" }, ne2.createElement(message_default, { id: "style.menu.size" }), ne2.createElement(Bs, { dir: "ltr", value: l10.size, onValueChange: g10 }, Object.values(Qo).map((b10) => ne2.createElement(Ko, { key: b10, isActive: b10 === l10.size, value: b10, onSelect: ve, bp: qe, id: `TD-Styles-Dash-${b10}` }, dj[b10])))), (o10 === "text" || o10 === "label") && ne2.createElement(ne2.Fragment, null, ne2.createElement(ut, null), ne2.createElement(_o, { id: "TD-Styles-Font-Container" }, ne2.createElement(message_default, { id: "style.menu.font" }), ne2.createElement(Bs, { dir: "ltr", value: l10.font, onValueChange: m10 }, Object.values(To).map((b10) => ne2.createElement(Ko, { key: b10, isActive: b10 === l10.font, value: b10, onSelect: ve, bp: qe, id: `TD-Styles-Font-${b10}` }, ne2.createElement(gj, { fontStyle: b10 }, "Aa"))))), o10 === "text" && ne2.createElement(_o, { id: "TD-Styles-Align-Container" }, ne2.createElement(message_default, { id: "style.menu.align" }), ne2.createElement(Bs, { dir: "ltr", value: l10.textAlign, onValueChange: T10 }, Object.values(Wt).map((b10) => ne2.createElement(Ko, { key: b10, isActive: b10 === l10.textAlign, value: b10, onSelect: ve, bp: qe, id: `TD-Styles-Align-${b10}` }, lj[b10]))))), ne2.createElement(Qe, null), ne2.createElement(pt, { variant: "styleMenu", checked: n10, onCheckedChange: p10, id: "TD-Styles-Keep-Open" }, ne2.createElement(message_default, { id: "style.menu.keep.open" }))));
});
var hj = M3("div", { display: "grid", gridTemplateColumns: "repeat(4, auto)", gap: 0 });
var _o = M3("div", { position: "relative", width: "100%", background: "none", border: "none", cursor: "pointer", minHeight: "32px", outline: "none", color: "$text", fontFamily: "$ui", fontWeight: 400, fontSize: "$1", padding: "$2 0 $2 $3", borderRadius: 4, userSelect: "none", margin: 0, display: "flex", gap: "$3", flexDirection: "row", alignItems: "center", justifyContent: "space-between", variants: { variant: { tall: { alignItems: "flex-start", padding: "0 0 0 $3", "& > span": { paddingTop: "$4" } } } } });
var Bs = M3(DropdownMenuRadioGroup, { display: "flex", flexDirection: "row", gap: "$1" });
var mj = M3("div", { display: "grid", "& > *": { gridColumn: 1, gridRow: 1 } });
var gj = M3("div", { width: 32, height: 32, display: "flex", alignItems: "center", justifyContent: "center", fontSize: "$3", variants: { fontStyle: { ["script"]: { fontFamily: "Caveat Brush" }, ["sans"]: { fontFamily: "Recursive" }, ["erif"]: { fontFamily: "Georgia" }, ["mono"]: { fontFamily: "Recursive Mono" } } } });
function Ul() {
  return lr.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", xmlns: "http://www.w3.org/2000/svg", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }, lr.createElement("path", { d: "M1.36482 4.71089C1.36482 3.21371 2.57853 2 4.07572 2C5.5729 2 6.78661 3.21371 6.78661 4.71089C6.78661 5.76842 6.18106 6.68452 5.29779 7.13136C5.80465 7.24611 6.26407 7.44186 6.66028 7.73182C7.18674 8.11711 7.57215 8.64722 7.81073 9.30983C7.81452 9.30606 7.81832 9.3023 7.82212 9.29855C8.30448 8.82317 8.91325 8.52463 9.60905 8.37275C8.68812 7.922 8.05394 6.97569 8.05394 5.88126C8.05394 4.35017 9.29513 3.10898 10.8262 3.10898C12.3573 3.10898 13.5985 4.35017 13.5985 5.88126C13.5985 6.97561 12.9644 7.92186 12.0436 8.37265C12.7396 8.52449 13.3486 8.82306 13.831 9.29854C14.5795 10.0361 14.9481 11.1249 14.9481 12.5176C14.9481 12.7799 14.7354 12.9926 14.473 12.9926C14.2107 12.9926 13.9981 12.7799 13.9981 12.5175C13.9981 11.2848 13.6738 10.4774 13.1642 9.97518C12.6532 9.4716 11.8802 9.20024 10.8266 9.20024C9.77294 9.20024 8.99993 9.4716 8.48896 9.97518C7.97939 10.4774 7.65513 11.2848 7.65513 12.5176C7.65513 12.7799 7.44247 12.9926 7.18013 12.9926C6.9178 12.9926 6.70513 12.7799 6.70513 12.5176C6.70513 11.6734 6.84053 10.941 7.11384 10.3307C7.0922 10.2895 7.0763 10.2444 7.06737 10.1962C6.91739 9.38749 6.57392 8.84586 6.09923 8.49845C5.61626 8.14499 4.94481 7.95427 4.07574 7.95427C3.05232 7.95427 2.30368 8.21784 1.80952 8.70485C1.31675 9.19047 1.00176 9.97257 1.00176 11.1702C1.00176 11.4326 0.789093 11.6452 0.526758 11.6452C0.264423 11.6452 0.0517578 11.4326 0.0517578 11.1702C0.0517578 9.81263 0.411052 8.74925 1.14268 8.02821C1.60624 7.57137 2.18892 7.28191 2.85378 7.13142C1.97043 6.68461 1.36482 5.76848 1.36482 4.71089ZM4.07572 2.95C3.1032 2.95 2.31482 3.73838 2.31482 4.71089C2.31482 5.68341 3.1032 6.47178 4.07572 6.47178C5.04823 6.47178 5.83661 5.68341 5.83661 4.71089C5.83661 3.73838 5.04823 2.95 4.07572 2.95ZM10.8262 4.05898C9.8198 4.05898 9.00394 4.87484 9.00394 5.88126C9.00394 6.88768 9.8198 7.70355 10.8262 7.70355C11.8326 7.70355 12.6485 6.88768 12.6485 5.88126C12.6485 4.87484 11.8326 4.05898 10.8262 4.05898Z" }));
}
var fj = (s10) => s10.room;
var Nl = ye.memo(function() {
  let e13 = ae(), t12 = e13.useStore(fj), [n10, o10] = ye.useState(false), i10 = ye.useRef(0), a10 = ye.useCallback(() => {
    o10(true), x7.copyStringToClipboard(window.location.href), clearTimeout(i10.current), i10.current = setTimeout(() => o10(false), 1200);
  }, []), l10 = ye.useCallback(() => {
    o10(true);
    let p10 = window.location.href.split("/");
    p10[p10.length - 2] = "v", p10[p10.length - 1] = Utils.lns(p10[p10.length - 1]), x7.copyStringToClipboard(p10.join("/")), clearTimeout(i10.current), i10.current = setTimeout(() => o10(false), 1200);
  }, []), r11 = ye.useCallback(() => ee(this, null, function* () {
    e13.isDirty ? e13.fileSystemHandle ? window.confirm("Do you want to save changes to your current project?") && (yield e13.saveProject()) : window.confirm("Do you want to save your current project?") && (yield e13.saveProject()) : e13.fileSystemHandle || window.confirm("Do you want to save your current project?") && (yield e13.saveProject());
  }), []), c10 = ye.useCallback(() => ee(this, null, function* () {
    var u10;
    let p10 = Utils.deepClone(e13.document);
    e13.setIsLoading(true);
    try {
      if (e13.callbacks.onAssetUpload)
        for (let g10 in p10.assets) {
          let m10 = p10.assets[g10];
          if (m10.src.includes("base64")) {
            let T10 = Sj(m10.src, ((u10 = m10.fileName) != null ? u10 : m10.type === "video") ? "image.png" : "image.mp4"), y10 = yield e13.callbacks.onAssetUpload(e13, T10, g10);
            y10 ? m10.src = y10 : m10.src = "";
          }
        }
      let h10 = yield fetch("/api/create", { method: "POST", mode: "no-cors", headers: { "Access-Control-Allow-Origin": "*", "Content-Type": "application/json" }, body: JSON.stringify({ roomId: Utils.uniqueId(), pageId: e13.currentPageId, document: p10 }) }).then((g10) => g10.json());
      (h10 == null ? void 0 : h10.url) ? window.location.href = h10.url : x7.warn(h10 == null ? void 0 : h10.message);
    } catch (h10) {
      x7.warn(h10.message);
    }
    e13.setIsLoading(false);
  }), []);
  return ye.createElement(Root5, { dir: "ltr" }, ye.createElement(Cs, { id: "TD-MultiplayerMenuIcon", isActive: !!t12 }, ye.createElement(Ul, null)), ye.createElement(xt, { variant: "menu", align: "start", id: "TD-MultiplayerMenu" }, ye.createElement(ue2, { id: "TD-Multiplayer-CopyInviteLink", onClick: a10, disabled: !t12 }, ye.createElement(message_default, { id: "copy.invite.link" }), ye.createElement(Je, null, n10 ? ye.createElement(CheckIcon, null) : ye.createElement(ClipboardIcon, null))), ye.createElement(ue2, { id: "TD-Multiplayer-CopyReadOnlyLink", onClick: l10, disabled: !t12 }, ye.createElement(message_default, { id: "copy.readonly.link" }), ye.createElement(Je, null, n10 ? ye.createElement(CheckIcon, null) : ye.createElement(ClipboardIcon, null))), ye.createElement(Qe, { id: "TD-Multiplayer-CopyInviteLinkDivider" }), ye.createElement(ue2, { id: "TD-Multiplayer-CreateMultiplayerProject", onClick: r11 }, ye.createElement("a", { href: "https://tldraw.com/r" }, ye.createElement(message_default, { id: "create.multiplayer.project" }))), ye.createElement(ue2, { id: "TD-Multiplayer-CopyToMultiplayerProject", onClick: c10 }, ye.createElement(message_default, { id: "copy.multiplayer.project" }))));
});
function Sj(s10, e13) {
  var l10, r11;
  let t12 = s10.split(","), n10 = (r11 = (l10 = t12[0]) == null ? void 0 : l10.match(/:(.*?);/)) == null ? void 0 : r11[1], o10 = window.atob(t12[1]), i10 = o10.length, a10 = new Uint8Array(i10);
  for (; i10--; )
    a10[i10] = o10.charCodeAt(i10);
  return new File([a10], e13, { type: n10 });
}
function Kl({ readOnly: s10, showPages: e13, showMenu: t12, showStyles: n10, showZoom: o10, sponsor: i10, showMultiplayerMenu: a10 }) {
  let l10 = ae();
  return it.createElement(Tj, null, (t12 || e13) && it.createElement(Zn, { side: "left", id: "TD-MenuPanel" }, t12 && it.createElement(Rl, { sponsor: i10, readOnly: s10 }), a10 && it.createElement(Nl, null), e13 && it.createElement(zl, null)), it.createElement(bj, null), (n10 || o10) && it.createElement(Zn, { side: "right" }, l10.readOnly ? it.createElement(yj, null, "Read Only") : it.createElement(it.Fragment, null, " ", it.createElement(pe2, null, it.createElement(ml, { onClick: l10.undo })), it.createElement(pe2, null, it.createElement(ul, { onClick: l10.redo }))), o10 && it.createElement(Ol, null), n10 && !s10 && it.createElement(jl, null)));
}
var Tj = M3("div", { width: "100%", position: "absolute", top: 0, left: 0, right: 0, display: "flex", flexDirection: "row", pointerEvents: "none", "& > *": { pointerEvents: "all" } });
var bj = M3("div", { flexGrow: 2, pointerEvents: "none" });
var yj = M3("div", { width: "100%", display: "flex", alignItems: "center", justifyContent: "center", fontFamily: "$ui", fontSize: "$1", paddingLeft: "$4", paddingRight: "$1", userSelect: "none" });
var Rj = (s10) => s10.document.pageStates[s10.appState.currentPageId].selectedIds.length;
var Lj = (s10) => s10.settings.isDebugMode;
var Aj = (s10) => s10.document.pageStates[s10.appState.currentPageId].selectedIds.some((e13) => s10.document.pages[s10.appState.currentPageId].shapes[e13].children !== void 0);
var Hj = (s10) => s10.stopPropagation();
var Wl = ({ onBlur: s10, children: e13 }) => k4.createElement(Root11, { dir: "ltr" }, k4.createElement(Trigger6, { dir: "ltr" }, e13), k4.createElement(zj, { onBlur: s10 }));
var zj = k4.memo(function({ onBlur: e13 }) {
  let t12 = ae(), n10 = useIntl(), o10 = t12.useStore(Rj), i10 = t12.useStore(Lj), a10 = t12.useStore(Aj), l10 = k4.useRef(null), r11 = k4.useCallback(() => {
    t12.flipHorizontal();
  }, [t12]), c10 = k4.useCallback(() => {
    t12.flipVertical();
  }, [t12]), p10 = k4.useCallback(() => {
    t12.duplicate();
  }, [t12]), u10 = k4.useCallback(() => {
    t12.toggleLocked();
  }, [t12]), h10 = k4.useCallback(() => {
    t12.group();
  }, [t12]), g10 = k4.useCallback(() => {
    t12.moveToBack();
  }, [t12]), m10 = k4.useCallback(() => {
    t12.moveBackward();
  }, [t12]), T10 = k4.useCallback(() => {
    t12.moveForward();
  }, [t12]), y10 = k4.useCallback(() => {
    t12.moveToFront();
  }, [t12]), b10 = k4.useCallback(() => {
    t12.delete();
  }, [t12]), S10 = k4.useCallback(() => {
    t12.cut();
  }, [t12]), w10 = k4.useCallback(() => {
    t12.copy();
  }, [t12]), D10 = k4.useCallback(() => {
    t12.paste();
  }, [t12]), B10 = k4.useCallback(() => {
    t12.copyImage("svg", { scale: 1, quality: 1, transparentBackground: false });
  }, [t12]), I10 = k4.useCallback(() => {
    t12.copyImage("png", { scale: 2, quality: 1, transparentBackground: true });
  }, [t12]), P10 = k4.useCallback(() => {
    t12.undo();
  }, [t12]), v10 = k4.useCallback(() => {
    t12.redo();
  }, [t12]), Q = k4.useCallback(() => ee(this, null, function* () {
    t12.exportImage("png", { scale: 2, quality: 1, transparentBackground: true });
  }), [t12]), oe2 = k4.useCallback(() => ee(this, null, function* () {
    t12.exportImage("jpeg", { scale: 2, quality: 1, transparentBackground: false });
  }), [t12]), te = k4.useCallback(() => ee(this, null, function* () {
    t12.exportImage("webp", { scale: 2, quality: 1, transparentBackground: false });
  }), [t12]), ke = k4.useCallback(() => ee(this, null, function* () {
    t12.exportImage("svg", { scale: 1, quality: 1, transparentBackground: false });
  }), [t12]), be2 = k4.useCallback(() => ee(this, null, function* () {
    t12.copyJson();
  }), [t12]), xe = k4.useCallback(() => ee(this, null, function* () {
    t12.exportJson();
  }), [t12]), Me = o10 > 0, Fe = o10 > 1, _e = o10 > 2;
  return k4.createElement(Content8, { dir: "ltr", ref: l10, onEscapeKeyDown: Hj, asChild: true, tabIndex: -1, onBlur: e13 }, k4.createElement(Bt, { id: "TD-ContextMenu" }, Me ? k4.createElement(k4.Fragment, null, k4.createElement(De, { onClick: p10, kbd: "#D", id: "TD-ContextMenu-Duplicate" }, k4.createElement(message_default, { id: "duplicate" })), k4.createElement(De, { onClick: r11, kbd: "\u21E7H", id: "TD-ContextMenu-Flip_Horizontal" }, k4.createElement(message_default, { id: "flip.horizontal" })), k4.createElement(De, { onClick: c10, kbd: "\u21E7V", id: "TD-ContextMenu-Flip_Vertical" }, k4.createElement(message_default, { id: "flip.vertical" })), k4.createElement(De, { onClick: u10, kbd: "#\u21E7L", id: "TD-ContextMenu- Lock_Unlock" }, k4.createElement(message_default, { id: "lock" }), " / ", k4.createElement(message_default, { id: "unlock" })), (Fe || a10) && k4.createElement(ut, null), Fe && k4.createElement(De, { onClick: h10, kbd: "#G", id: "TD-ContextMenu-Group" }, k4.createElement(message_default, { id: "group" })), a10 && k4.createElement(De, { onClick: h10, kbd: "#G", id: "TD-ContextMenu-Ungroup" }, k4.createElement(message_default, { id: "ungroup" })), k4.createElement(ut, null), k4.createElement(pr, { label: n10.formatMessage({ id: "move" }), id: "TD-ContextMenu-Move" }, k4.createElement(De, { onClick: y10, kbd: "\u21E7]", id: "TD-ContextMenu-Move-To_Front" }, k4.createElement(message_default, { id: "to.front" })), k4.createElement(De, { onClick: T10, kbd: "]", id: "TD-ContextMenu-Move-Forward" }, k4.createElement(message_default, { id: "forward" })), k4.createElement(De, { onClick: m10, kbd: "[", id: "TD-ContextMenu-Move-Backward" }, k4.createElement(message_default, { id: "backward" })), k4.createElement(De, { onClick: g10, kbd: "\u21E7[", id: "TD-ContextMenu-Move-To_Back" }, k4.createElement(message_default, { id: "back" }))), k4.createElement(Gj, null), Fe && k4.createElement(Oj, { hasTwoOrMore: Fe, hasThreeOrMore: _e }), k4.createElement(ut, null), k4.createElement(De, { onClick: S10, kbd: "#X", id: "TD-ContextMenu-Cut" }, k4.createElement(message_default, { id: "cut" })), k4.createElement(De, { onClick: w10, kbd: "#C", id: "TD-ContextMenu-Copy" }, k4.createElement(message_default, { id: "copy" })), k4.createElement(De, { onClick: D10, kbd: "#V", id: "TD-ContextMenu-Paste" }, k4.createElement(message_default, { id: "paste" })), k4.createElement(ut, null), k4.createElement(pr, { label: `${n10.formatMessage({ id: "copy.as" })}...`, size: "small", id: "TD-ContextMenu-Copy-As" }, k4.createElement(De, { onClick: B10, id: "TD-ContextMenu-Copy-as-SVG" }, "SVG"), k4.createElement(De, { onClick: I10, id: "TD-ContextMenu-Copy-As-PNG" }, "PNG"), i10 && k4.createElement(De, { onClick: be2, id: "TD-ContextMenu-Copy_as_JSON" }, "JSON")), k4.createElement(pr, { label: `${n10.formatMessage({ id: "export.as" })}...`, size: "small", id: "TD-ContextMenu-Export" }, k4.createElement(De, { onClick: ke, id: "TD-ContextMenu-Export-SVG" }, "SVG"), k4.createElement(De, { onClick: Q, id: "TD-ContextMenu-Export-PNG" }, "PNG"), k4.createElement(De, { onClick: oe2, id: "TD-ContextMenu-Export-JPG" }, "JPG"), k4.createElement(De, { onClick: te, id: "TD-ContextMenu-Export-WEBP" }, "WEBP"), i10 && k4.createElement(De, { onClick: xe, id: "TD-ContextMenu-Export-JSON" }, "JSON")), k4.createElement(ut, null), k4.createElement(De, { onClick: b10, kbd: "\u232B", id: "TD-ContextMenu-Delete" }, k4.createElement(message_default, { id: "delete" }))) : k4.createElement(k4.Fragment, null, k4.createElement(De, { onClick: D10, kbd: "#V", id: "TD-ContextMenu-Paste" }, k4.createElement(message_default, { id: "paste" })), k4.createElement(De, { onClick: P10, kbd: "#Z", id: "TD-ContextMenu-Undo" }, k4.createElement(message_default, { id: "undo" })), k4.createElement(De, { onClick: v10, kbd: "#\u21E7Z", id: "TD-ContextMenu-Redo" }, k4.createElement(message_default, { id: "redo" })))));
});
function Oj({ hasThreeOrMore: s10 }) {
  let e13 = ae(), t12 = k4.useCallback(() => {
    e13.align("top");
  }, [e13]), n10 = k4.useCallback(() => {
    e13.align("centerVertical");
  }, [e13]), o10 = k4.useCallback(() => {
    e13.align("bottom");
  }, [e13]), i10 = k4.useCallback(() => {
    e13.stretch("vertical");
  }, [e13]), a10 = k4.useCallback(() => {
    e13.distribute("vertical");
  }, [e13]), l10 = k4.useCallback(() => {
    e13.align("left");
  }, [e13]), r11 = k4.useCallback(() => {
    e13.align("centerHorizontal");
  }, [e13]), c10 = k4.useCallback(() => {
    e13.align("right");
  }, [e13]), p10 = k4.useCallback(() => {
    e13.stretch("horizontal");
  }, [e13]), u10 = k4.useCallback(() => {
    e13.distribute("horizontal");
  }, [e13]);
  return k4.createElement("span", { id: "TD-ContextMenu-Align_Duplicate" }, k4.createElement(Root11, { dir: "ltr" }, k4.createElement(hr, { isSubmenu: true }, "Align / Distribute"), k4.createElement(Content8, { asChild: true, sideOffset: 2, alignOffset: -2 }, k4.createElement(Fj, { numberOfSelected: s10 ? "threeOrMore" : "twoOrMore" }, k4.createElement(tn, { onClick: l10, id: "TD-ContextMenu-Align_Duplicate-AlignLeft" }, k4.createElement(AlignLeftIcon, null)), k4.createElement(tn, { onClick: r11, id: "TD-ContextMenu-Align_Duplicate-AlignCenterHorizontal" }, k4.createElement(AlignCenterHorizontallyIcon, null)), k4.createElement(tn, { onClick: c10, id: "TD-ContextMenu-Align_Duplicate-AlignRight" }, k4.createElement(AlignRightIcon, null)), k4.createElement(tn, { onClick: p10, id: "TD-ContextMenu-Align_Duplicate-StretchHorizontal" }, k4.createElement(StretchHorizontallyIcon, null)), s10 && k4.createElement(tn, { onClick: u10, id: "TD-ContextMenu-Align_Duplicate-SpaceEvenlyHorizontal" }, k4.createElement(SpaceEvenlyHorizontallyIcon, null)), k4.createElement(tn, { onClick: t12, id: "TD-ContextMenu-Align_Duplicate-AlignTop" }, k4.createElement(AlignTopIcon, null)), k4.createElement(tn, { onClick: n10, id: "TD-ContextMenu-Align_Duplicate-AlignCenterVertical" }, k4.createElement(AlignCenterVerticallyIcon, null)), k4.createElement(tn, { onClick: o10, id: "TD-ContextMenu-Align_Duplicate-AlignBottom" }, k4.createElement(AlignBottomIcon, null)), k4.createElement(tn, { onClick: i10, id: "TD-ContextMenu-Align_Duplicate-StretchVertical" }, k4.createElement(StretchVerticallyIcon, null)), s10 && k4.createElement(tn, { onClick: a10, id: "TD-ContextMenu-Align_Duplicate-SpaceEvenlyVertical" }, k4.createElement(SpaceEvenlyVerticallyIcon, null)), k4.createElement(ur, { offset: 13 })))));
}
var Fj = M3(Bt, { display: "grid", variants: { numberOfSelected: { threeOrMore: { gridTemplateColumns: "repeat(5, auto)" }, twoOrMore: { gridTemplateColumns: "repeat(4, auto)" } } } });
var jj = (s10) => s10.appState.currentPageId;
var Uj = (s10) => s10.document.pages;
function Gj() {
  let s10 = ae(), e13 = s10.useStore(jj), t12 = s10.useStore(Uj), n10 = Object.values(t12).sort((o10, i10) => (o10.childIndex || 0) - (i10.childIndex || 0)).filter((o10) => o10.id !== e13);
  return n10.length === 0 ? null : k4.createElement(Root11, { dir: "ltr" }, k4.createElement(hr, { isSubmenu: true }, k4.createElement(message_default, { id: "move.to.page" })), k4.createElement(Content8, { dir: "ltr", sideOffset: 2, alignOffset: -2, asChild: true }, k4.createElement(Bt, null, n10.map(({ id: o10, name: i10 }, a10) => k4.createElement(De, { key: o10, disabled: o10 === e13, onClick: () => s10.moveToPage(o10) }, i10 || `Page ${a10}`)), k4.createElement(ur, { offset: 13 }))));
}
function pr({ children: s10, label: e13, size: t12, id: n10 }) {
  return k4.createElement("span", { id: n10 }, k4.createElement(Root11, { dir: "ltr" }, k4.createElement(hr, { isSubmenu: true }, e13), k4.createElement(Content8, { dir: "ltr", sideOffset: 2, alignOffset: -2, asChild: true }, k4.createElement(Bt, { size: t12 }, s10, k4.createElement(ur, { offset: 13 })))));
}
var ur = M3(ContextMenuArrow, { fill: "$panel" });
function tn(t12) {
  var n10 = t12, { onSelect: s10 } = n10, e13 = Ye(n10, ["onSelect"]);
  return k4.createElement(ContextMenuItem, { dir: "ltr", onSelect: s10, asChild: true }, k4.createElement(pe2, f8({}, e13)));
}
var De = (t12) => {
  var n10 = t12, { id: s10 } = n10, e13 = Ye(n10, ["id"]);
  return k4.createElement(ContextMenuItem, { asChild: true, id: s10 }, k4.createElement(Be, f8({}, e13)));
};
var hr = (t12) => {
  var n10 = t12, { isSubmenu: s10 } = n10, e13 = Ye(n10, ["isSubmenu"]);
  return k4.createElement(ContextMenuTriggerItem, { asChild: true }, k4.createElement(Be, f8({ hasArrow: s10 }, e13)));
};
function _l({ onSelect: s10 }) {
  return Es.createElement($j, null, Es.createElement(go, { onClick: s10 }, Es.createElement(DotFilledIcon, null)));
}
var $j = M3("div", { opacity: 1, zIndex: 100, backgroundColor: "transparent", "& svg": { color: "$text" }, "&:hover svg": { color: "$text" } });
var Kj = (s10) => s10.appState.isLoading;
function gr() {
  let e13 = ae().useStore(Kj);
  return mr.createElement(Wj, { hidden: !e13 }, mr.createElement(message_default, { id: "loading", values: { dots: "..." } }));
}
var Wj = M3("div", { position: "absolute", top: 0, left: "50%", transform: "translate(-50%, 0)", borderBottomLeftRadius: "12px", borderBottomRightRadius: "12px", padding: "8px 16px", fontFamily: "var(--fonts-ui)", fontSize: "var(--fontSizes-1)", boxShadow: "var(--shadows-panel)", backgroundColor: "white", zIndex: 200, pointerEvents: "none", "& > div > *": { pointerEvents: "all" }, variants: { transform: { hidden: { transform: "translate(-50%, 100%)" }, visible: { transform: "translate(-50%, 0%)" } } } });
function Yl({ error: s10, resetErrorBoundary: e13 }) {
  let t12 = ae(), n10 = () => {
    window.location.reload(), e13();
  }, o10 = () => {
    let l10 = document.createElement("textarea");
    l10.value = s10.message, document.body.appendChild(l10), l10.select(), document.execCommand("copy"), l10.remove();
  }, i10 = () => {
    t12.saveProjectAs();
  }, a10 = () => {
    t12.resetDocument(), e13();
  };
  return Mt.createElement(_j, null, Mt.createElement(Yj, null, Mt.createElement("div", null, "We've encountered an error!"), Mt.createElement("pre", null, Mt.createElement("code", null, s10.message)), Mt.createElement(Zj, null, Mt.createElement(Be, { onClick: o10 }, "Copy Error"), Mt.createElement(Be, { onClick: n10 }, "Refresh Page")), Mt.createElement(ut, null), Mt.createElement("p", null, "Keep getting this error?", " ", Mt.createElement("a", { onClick: i10, title: "Download your project" }, "Download your project"), " ", "as a backup and then", " ", Mt.createElement("a", { onClick: a10, title: "Reset the document" }, "reset the document"), ".")));
}
var _j = M3("div", { position: "absolute", top: 0, left: 0, width: "100%", height: "100%", display: "flex", alignItems: "center", justifyContent: "center", backgroundColor: "$canvas" });
var Yj = M3("div", { backgroundColor: "$panel", border: "1px solid $panelContrast", padding: "$5", borderRadius: 8, boxShadow: "$panel", maxWidth: 320, color: "$text", fontFamily: "$ui", fontSize: "$2", textAlign: "center", display: "flex", flexDirection: "column", gap: "$3", "& > pre": { marginTop: "$3", marginBottom: "$3", textAlign: "left", whiteSpace: "pre-wrap", backgroundColor: "$hover", padding: "$4", borderRadius: "$2", fontFamily: '"Menlo", "Monaco", monospace', fontWeight: 500 }, "& p": { fontFamily: "$body", lineHeight: 1.7, padding: "$5", margin: 0 }, "& a": { color: "$text", cursor: "pointer", textDecoration: "underline" }, "& hr": { marginLeft: "-$5", marginRight: "-$5" } });
var Zj = M3("div", { display: "flex", "& > button > div": { justifyContent: "center", textAlign: "center" } });
var Qj = import_react_error_boundary.ErrorBoundary;
function ice({ id: s10, document: e13, currentPageId: t12, autofocus: n10 = true, showMenu: o10 = true, showMultiplayerMenu: i10 = true, showPages: a10 = true, showTools: l10 = true, showZoom: r11 = true, showStyles: c10 = true, showUI: p10 = true, readOnly: u10 = false, disableAssets: h10 = false, darkMode: g10 = false, showSponsorLink: m10, onMount: T10, onChange: y10, onChangePresence: b10, onNewProject: S10, onSaveProject: w10, onSaveProjectAs: D10, onOpenProject: B10, onOpenMedia: I10, onSignOut: P10, onSignIn: v10, onUndo: Q, onRedo: oe2, onPersist: te, onPatch: ke, onCommand: be2, onChangePage: xe, onAssetCreate: Me, onAssetDelete: Fe, onAssetUpload: _e, onSessionStart: ot, onSessionEnd: Tt, onExport: Xn }) {
  let [Un, Rs] = ge2.useState(s10), [Ie, So] = ge2.useState(() => new Sn(s10, { onMount: T10, onChange: y10, onChangePresence: b10, onNewProject: S10, onSaveProject: w10, onSaveProjectAs: D10, onOpenProject: B10, onOpenMedia: I10, onSignOut: P10, onSignIn: v10, onUndo: Q, onRedo: oe2, onPersist: te, onPatch: ke, onCommand: be2, onChangePage: xe, onAssetDelete: Fe, onAssetCreate: Me, onAssetUpload: _e, onSessionStart: ot, onSessionEnd: Tt }));
  return ge2.useLayoutEffect(() => {
    if (s10 === Un)
      return;
    let nn2 = new Sn(s10, { onMount: T10, onChange: y10, onChangePresence: b10, onNewProject: S10, onSaveProject: w10, onSaveProjectAs: D10, onOpenProject: B10, onOpenMedia: I10, onSignOut: P10, onSignIn: v10, onUndo: Q, onRedo: oe2, onPersist: te, onPatch: ke, onCommand: be2, onChangePage: xe, onAssetDelete: Fe, onAssetCreate: Me, onAssetUpload: _e, onExport: Xn, onSessionStart: ot, onSessionEnd: Tt });
    Rs(s10), So(nn2);
  }, [Un, s10]), ge2.useEffect(() => {
    !e13 || (e13.id === Ie.document.id ? Ie.updateDocument(e13) : Ie.loadDocument(e13));
  }, [e13, Ie]), ge2.useEffect(() => {
    Ie.setDisableAssets(h10);
  }, [Ie, h10]), ge2.useEffect(() => {
    !t12 || Ie.changePage(t12);
  }, [t12, Ie]), ge2.useEffect(() => {
    Ie.readOnly = u10, u10 || (Ie.selectNone(), Ie.cancelSession(), Ie.setEditingId());
  }, [Ie, u10]), ge2.useEffect(() => {
    g10 !== Ie.settings.isDarkMode && Ie.toggleDarkMode();
  }, [Ie, g10]), ge2.useEffect(() => {
    Ie.callbacks = { onMount: T10, onChange: y10, onChangePresence: b10, onNewProject: S10, onSaveProject: w10, onSaveProjectAs: D10, onOpenProject: B10, onOpenMedia: I10, onSignOut: P10, onSignIn: v10, onUndo: Q, onRedo: oe2, onPersist: te, onPatch: ke, onCommand: be2, onChangePage: xe, onAssetDelete: Fe, onAssetCreate: Me, onAssetUpload: _e, onExport: Xn, onSessionStart: ot, onSessionEnd: Tt };
  }, [T10, y10, b10, S10, w10, D10, B10, I10, P10, v10, Q, oe2, te, ke, be2, xe, Fe, Me, _e, Xn, ot, Tt]), ge2.useLayoutEffect(() => {
    var fr;
    if (typeof window == "undefined" || !((fr = window.document) == null ? void 0 : fr.fonts))
      return;
    function nn2() {
      Ie.refreshBoundingBoxes();
    }
    return window.document.fonts.addEventListener("loadingdone", nn2), () => {
      window.document.fonts.removeEventListener("loadingdone", nn2);
    };
  }, [Ie]), ge2.createElement(ji.Provider, { value: Ie }, ge2.createElement(eU, { key: Un || "Tldraw", id: Un, autofocus: n10, showPages: a10, showMenu: o10, showMultiplayerMenu: i10, showStyles: c10, showZoom: r11, showTools: l10, showUI: p10, showSponsorLink: m10, readOnly: u10 }));
}
var eU = ge2.memo(function({ id: e13, autofocus: t12, showPages: n10, showMenu: o10, showMultiplayerMenu: i10, showZoom: a10, showStyles: l10, showTools: r11, showSponsorLink: c10, readOnly: p10, showUI: u10 }) {
  var Tt, Xn;
  let h10 = ae(), g10 = ge2.useRef(null), m10 = h10.useStore(), { document: T10, settings: y10, appState: b10, room: S10 } = m10, w10 = m10.appState.activeTool === "select", D10 = T10.pages[b10.currentPageId], B10 = T10.pageStates[D10.id], I10 = T10.assets, { selectedIds: P10 } = B10, v10 = P10.length === 1 && D10.shapes[P10[0]] && x7.getShapeUtil(D10.shapes[P10[0]].type).hideBounds, Q = P10.length === 1 && D10.shapes[P10[0]] && x7.getShapeUtil(D10.shapes[P10[0]].type).hideResizeHandles, oe2 = ge2.useMemo(() => ({ isDarkMode: y10.isDarkMode }), [y10.isDarkMode]), te = y10.isCadSelectMode ? !b10.selectByContain : b10.selectByContain, ke = ge2.useMemo(() => {
    let { selectByContain: Un } = b10, { isDarkMode: Rs, isCadSelectMode: Ie } = y10;
    if (Rs) {
      let nn2 = Ie ? Un ? "69, 155, 255" : "105, 209, 73" : "180, 180, 180";
      return { brushFill: `rgba(${nn2}, ${Ie ? 0.08 : 0.05})`, brushStroke: `rgba(${nn2}, ${Ie ? 0.5 : 0.25})`, brushDashStroke: `rgba(${nn2}, .6)`, selected: "rgba(38, 150, 255, 1.000)", selectFill: "rgba(38, 150, 255, 0.05)", background: "#212529", foreground: "#49555f" };
    }
    let So = Ie ? Un ? "0, 89, 242" : "51, 163, 23" : "0,0,0";
    return { brushFill: `rgba(${So}, ${Ie ? 0.08 : 0.05})`, brushStroke: `rgba(${So}, ${Ie ? 0.4 : 0.25})`, brushDashStroke: `rgba(${So}, .6)` };
  }, [y10.isDarkMode, y10.isCadSelectMode, b10.selectByContain]), be2 = h10.session !== void 0, xe = be2 && ((Tt = h10.session) == null ? void 0 : Tt.constructor.name) !== "BrushSession" || !w10 || v10 || !!B10.editingId, Me = be2 || !w10, Fe = be2 && m10.appState.status !== "brushing" || !w10, _e = be2 || !w10 || !y10.showCloneHandles || B10.camera.zoom < 0.2, ot = il(y10.language);
  return ge2.useLayoutEffect(() => {
    y10.isDarkMode ? window.document.body.classList.add(As) : window.document.body.classList.remove(As);
  }, [y10.isDarkMode]), ge2.createElement(provider_default, { locale: ot.locale, messages: ot.messages }, ge2.createElement(nU, { ref: g10, tabIndex: -0 }, ge2.createElement(gr, null), ge2.createElement(tU, { focusableRef: g10, autofocus: t12 }), ge2.createElement(Wl, null, ge2.createElement(Qj, { FallbackComponent: Yl }, ge2.createElement(Renderer, { id: e13, containerRef: g10, shapeUtils: mn, page: D10, pageState: B10, assets: I10, snapLines: b10.snapLines, eraseLine: b10.eraseLine, grid: 8, users: S10 == null ? void 0 : S10.users, userId: S10 == null ? void 0 : S10.userId, theme: ke, meta: oe2, hideBounds: xe, hideHandles: Me, hideResizeHandles: Q, hideIndicators: Fe, hideBindingHandles: !y10.showBindingHandles, hideCloneHandles: _e, hideRotateHandles: !y10.showRotateHandles, hideGrid: !y10.showGrid, showDashedBrush: te, performanceMode: (Xn = h10.session) == null ? void 0 : Xn.performanceMode, onPinchStart: h10.onPinchStart, onPinchEnd: h10.onPinchEnd, onPinch: h10.onPinch, onPan: h10.onPan, onZoom: h10.onZoom, onPointerDown: h10.onPointerDown, onPointerMove: h10.onPointerMove, onPointerUp: h10.onPointerUp, onPointCanvas: h10.onPointCanvas, onDoubleClickCanvas: h10.onDoubleClickCanvas, onRightPointCanvas: h10.onRightPointCanvas, onDragCanvas: h10.onDragCanvas, onReleaseCanvas: h10.onReleaseCanvas, onPointShape: h10.onPointShape, onDoubleClickShape: h10.onDoubleClickShape, onRightPointShape: h10.onRightPointShape, onDragShape: h10.onDragShape, onHoverShape: h10.onHoverShape, onUnhoverShape: h10.onUnhoverShape, onReleaseShape: h10.onReleaseShape, onPointBounds: h10.onPointBounds, onDoubleClickBounds: h10.onDoubleClickBounds, onRightPointBounds: h10.onRightPointBounds, onDragBounds: h10.onDragBounds, onHoverBounds: h10.onHoverBounds, onUnhoverBounds: h10.onUnhoverBounds, onReleaseBounds: h10.onReleaseBounds, onPointBoundsHandle: h10.onPointBoundsHandle, onDoubleClickBoundsHandle: h10.onDoubleClickBoundsHandle, onRightPointBoundsHandle: h10.onRightPointBoundsHandle, onDragBoundsHandle: h10.onDragBoundsHandle, onHoverBoundsHandle: h10.onHoverBoundsHandle, onUnhoverBoundsHandle: h10.onUnhoverBoundsHandle, onReleaseBoundsHandle: h10.onReleaseBoundsHandle, onPointHandle: h10.onPointHandle, onDoubleClickHandle: h10.onDoubleClickHandle, onRightPointHandle: h10.onRightPointHandle, onDragHandle: h10.onDragHandle, onHoverHandle: h10.onHoverHandle, onUnhoverHandle: h10.onUnhoverHandle, onReleaseHandle: h10.onReleaseHandle, onError: h10.onError, onRenderCountChange: h10.onRenderCountChange, onShapeChange: h10.onShapeChange, onShapeBlur: h10.onShapeBlur, onShapeClone: h10.onShapeClone, onBoundsChange: h10.updateBounds, onKeyDown: h10.onKeyDown, onKeyUp: h10.onKeyUp, onDragOver: h10.onDragOver, onDrop: h10.onDrop }))), u10 && ge2.createElement(oU, null, y10.isFocusMode ? ge2.createElement(_l, { onSelect: h10.toggleFocusMode }) : ge2.createElement(ge2.Fragment, null, ge2.createElement(Kl, { readOnly: p10, showPages: n10, showMenu: o10, showMultiplayerMenu: i10, showStyles: l10, showZoom: a10, sponsor: c10 }), ge2.createElement(sU, null), r11 && !p10 && ge2.createElement(Bl, null)))));
});
var tU = ge2.memo(function({ focusableRef: e13, autofocus: t12 }) {
  return Ld(e13), Hd(), ge2.useEffect(() => {
    var n10;
    t12 && ((n10 = e13.current) == null || n10.focus());
  }, [t12]), null;
});
var nU = M3("div", { position: "absolute", height: "100%", width: "100%", minHeight: 0, minWidth: 0, maxHeight: "100%", maxWidth: "100%", overflow: "hidden", boxSizing: "border-box", outline: "none", "& .tl-container": { position: "absolute", top: 0, left: 0, height: "100%", width: "100%", zIndex: 1 }, "& input, textarea, button, select, label, button": { webkitTouchCallout: "none", webkitUserSelect: "none", "-webkit-tap-highlight-color": "transparent", "tap-highlight-color": "transparent" } });
var oU = M3("div", { position: "absolute", top: 0, left: 0, height: "100%", width: "100%", padding: "8px 8px 0 8px", display: "flex", alignItems: "flex-start", justifyContent: "flex-start", pointerEvents: "none", zIndex: 2, "& > *": { pointerEvents: "all" } });
var sU = M3("div", { flexGrow: 2 });

// ../../node_modules/@liveblocks/client/shared.mjs
function errorIf(condition, message) {
  false;
}
function __rest4(s10, e13) {
  var t12 = {};
  for (var p10 in s10)
    Object.prototype.hasOwnProperty.call(s10, p10) && e13.indexOf(p10) < 0 && (t12[p10] = s10[p10]);
  if (s10 != null && typeof Object.getOwnPropertySymbols == "function") {
    var i10 = 0;
    for (p10 = Object.getOwnPropertySymbols(s10); i10 < p10.length; i10++)
      e13.indexOf(p10[i10]) < 0 && Object.prototype.propertyIsEnumerable.call(s10, p10[i10]) && (t12[p10[i10]] = s10[p10[i10]]);
  }
  return t12;
}
function assertNever(_value, errmsg) {
  throw new Error(errmsg);
}
function nn(value, errmsg = "Expected value to be non-nullable") {
  return function(condition, errmsg2) {
    if (false) {
      const err = new Error(errmsg2);
      throw err.name = "Assertion failure", err;
    }
  }(value != null, errmsg), value;
}
var ClientMsgCode;
var OpCode;
var CrdtType;
var ServerMsgCode;
var WebsocketCloseCodes;
var OpSource;
function isRootCrdt(crdt) {
  return crdt.type === CrdtType.OBJECT && !isChildCrdt(crdt);
}
function isChildCrdt(crdt) {
  return crdt.parentId !== void 0 && crdt.parentKey !== void 0;
}
function isRoomEventName(value) {
  return value === "my-presence" || value === "others" || value === "event" || value === "error" || value === "connection";
}
function HasParent(node, key) {
  return Object.freeze({ type: "HasParent", node, key });
}
!function(ClientMsgCode2) {
  ClientMsgCode2[ClientMsgCode2.UPDATE_PRESENCE = 100] = "UPDATE_PRESENCE", ClientMsgCode2[ClientMsgCode2.BROADCAST_EVENT = 103] = "BROADCAST_EVENT", ClientMsgCode2[ClientMsgCode2.FETCH_STORAGE = 200] = "FETCH_STORAGE", ClientMsgCode2[ClientMsgCode2.UPDATE_STORAGE = 201] = "UPDATE_STORAGE";
}(ClientMsgCode || (ClientMsgCode = {})), function(OpCode2) {
  OpCode2[OpCode2.INIT = 0] = "INIT", OpCode2[OpCode2.SET_PARENT_KEY = 1] = "SET_PARENT_KEY", OpCode2[OpCode2.CREATE_LIST = 2] = "CREATE_LIST", OpCode2[OpCode2.UPDATE_OBJECT = 3] = "UPDATE_OBJECT", OpCode2[OpCode2.CREATE_OBJECT = 4] = "CREATE_OBJECT", OpCode2[OpCode2.DELETE_CRDT = 5] = "DELETE_CRDT", OpCode2[OpCode2.DELETE_OBJECT_KEY = 6] = "DELETE_OBJECT_KEY", OpCode2[OpCode2.CREATE_MAP = 7] = "CREATE_MAP", OpCode2[OpCode2.CREATE_REGISTER = 8] = "CREATE_REGISTER";
}(OpCode || (OpCode = {})), function(CrdtType2) {
  CrdtType2[CrdtType2.OBJECT = 0] = "OBJECT", CrdtType2[CrdtType2.LIST = 1] = "LIST", CrdtType2[CrdtType2.MAP = 2] = "MAP", CrdtType2[CrdtType2.REGISTER = 3] = "REGISTER";
}(CrdtType || (CrdtType = {})), function(ServerMsgCode2) {
  ServerMsgCode2[ServerMsgCode2.UPDATE_PRESENCE = 100] = "UPDATE_PRESENCE", ServerMsgCode2[ServerMsgCode2.USER_JOINED = 101] = "USER_JOINED", ServerMsgCode2[ServerMsgCode2.USER_LEFT = 102] = "USER_LEFT", ServerMsgCode2[ServerMsgCode2.BROADCASTED_EVENT = 103] = "BROADCASTED_EVENT", ServerMsgCode2[ServerMsgCode2.ROOM_STATE = 104] = "ROOM_STATE", ServerMsgCode2[ServerMsgCode2.INITIAL_STORAGE_STATE = 200] = "INITIAL_STORAGE_STATE", ServerMsgCode2[ServerMsgCode2.UPDATE_STORAGE = 201] = "UPDATE_STORAGE";
}(ServerMsgCode || (ServerMsgCode = {})), function(WebsocketCloseCodes2) {
  WebsocketCloseCodes2[WebsocketCloseCodes2.CLOSE_ABNORMAL = 1006] = "CLOSE_ABNORMAL", WebsocketCloseCodes2[WebsocketCloseCodes2.INVALID_MESSAGE_FORMAT = 4e3] = "INVALID_MESSAGE_FORMAT", WebsocketCloseCodes2[WebsocketCloseCodes2.NOT_ALLOWED = 4001] = "NOT_ALLOWED", WebsocketCloseCodes2[WebsocketCloseCodes2.MAX_NUMBER_OF_MESSAGES_PER_SECONDS = 4002] = "MAX_NUMBER_OF_MESSAGES_PER_SECONDS", WebsocketCloseCodes2[WebsocketCloseCodes2.MAX_NUMBER_OF_CONCURRENT_CONNECTIONS = 4003] = "MAX_NUMBER_OF_CONCURRENT_CONNECTIONS", WebsocketCloseCodes2[WebsocketCloseCodes2.MAX_NUMBER_OF_MESSAGES_PER_DAY_PER_APP = 4004] = "MAX_NUMBER_OF_MESSAGES_PER_DAY_PER_APP", WebsocketCloseCodes2[WebsocketCloseCodes2.MAX_NUMBER_OF_CONCURRENT_CONNECTIONS_PER_ROOM = 4005] = "MAX_NUMBER_OF_CONCURRENT_CONNECTIONS_PER_ROOM", WebsocketCloseCodes2[WebsocketCloseCodes2.CLOSE_WITHOUT_RETRY = 4999] = "CLOSE_WITHOUT_RETRY";
}(WebsocketCloseCodes || (WebsocketCloseCodes = {})), function(OpSource2) {
  OpSource2[OpSource2.UNDOREDO_RECONNECT = 0] = "UNDOREDO_RECONNECT", OpSource2[OpSource2.REMOTE = 1] = "REMOTE", OpSource2[OpSource2.ACK = 2] = "ACK";
}(OpSource || (OpSource = {}));
var NoParent = Object.freeze({ type: "NoParent" });
function Orphaned(oldKey) {
  return Object.freeze({ type: "Orphaned", oldKey });
}
var AbstractCrdt = class {
  constructor() {
    this._parent = NoParent;
  }
  _getParentKeyOrThrow() {
    switch (this.parent.type) {
      case "HasParent":
        return this.parent.key;
      case "NoParent":
        throw new Error("Parent key is missing");
      case "Orphaned":
        return this.parent.oldKey;
      default:
        return assertNever(this.parent, "Unknown state");
    }
  }
  get _doc() {
    return this.__doc;
  }
  get roomId() {
    return this.__doc ? this.__doc.roomId : null;
  }
  get _id() {
    return this.__id;
  }
  get parent() {
    return this._parent;
  }
  get _parentNode() {
    switch (this.parent.type) {
      case "HasParent":
        return this.parent.node;
      case "NoParent":
      case "Orphaned":
        return null;
      default:
        return assertNever(this.parent, "Unknown state");
    }
  }
  get _parentKey() {
    switch (this.parent.type) {
      case "HasParent":
        return this.parent.key;
      case "NoParent":
        return null;
      case "Orphaned":
        return this.parent.oldKey;
      default:
        return assertNever(this.parent, "Unknown state");
    }
  }
  _apply(op, _isLocal) {
    return op.type === OpCode.DELETE_CRDT && this.parent.type === "HasParent" ? this.parent.node._detachChild(this) : { modified: false };
  }
  _setParentLink(newParentNode, newParentKey) {
    switch (this.parent.type) {
      case "HasParent":
        if (this.parent.node !== newParentNode)
          throw new Error("Cannot attach parent if it already exist");
        return void (this._parent = HasParent(newParentNode, newParentKey));
      case "Orphaned":
      case "NoParent":
        return void (this._parent = HasParent(newParentNode, newParentKey));
      default:
        return assertNever(this.parent, "Unknown state");
    }
  }
  _attach(id2, doc) {
    if (this.__id || this.__doc)
      throw new Error("Cannot attach if CRDT is already attached");
    doc.addItem(id2, this), this.__id = id2, this.__doc = doc;
  }
  _detach() {
    switch (this.__doc && this.__id && this.__doc.deleteItem(this.__id), this.parent.type) {
      case "HasParent":
        this._parent = Orphaned(this.parent.key);
        break;
      case "NoParent":
        this._parent = NoParent;
        break;
      case "Orphaned":
        this._parent = Orphaned(this.parent.oldKey);
        break;
      default:
        assertNever(this.parent, "Unknown state");
    }
    this.__doc = void 0;
  }
};
var LiveRegister = class extends AbstractCrdt {
  constructor(data) {
    super(), this._data = data;
  }
  get data() {
    return this._data;
  }
  static _deserialize([id2, item], _parentToChildren, doc) {
    const register = new LiveRegister(item.data);
    return register._attach(id2, doc), register;
  }
  _serialize(parentId, parentKey, doc) {
    if (this._id == null || parentId == null || parentKey == null)
      throw new Error("Cannot serialize register if parentId or parentKey is undefined");
    return [
      {
        type: OpCode.CREATE_REGISTER,
        opId: doc == null ? void 0 : doc.generateOpId(),
        id: this._id,
        parentId,
        parentKey,
        data: this.data
      }
    ];
  }
  _toSerializedCrdt() {
    if (this.parent.type !== "HasParent")
      throw new Error("Cannot serialize LiveRegister if parent is missing");
    return {
      type: CrdtType.REGISTER,
      parentId: nn(this.parent.node._id, "Parent node expected to have ID"),
      parentKey: this.parent.key,
      data: this.data
    };
  }
  _attachChild(_op) {
    throw new Error("Method not implemented.");
  }
  _detachChild(_crdt) {
    throw new Error("Method not implemented.");
  }
  _apply(op, isLocal) {
    return super._apply(op, isLocal);
  }
};
function makePosition(before, after) {
  return before != null && after != null ? pos(makePositionFromCodes(posCodes(before), posCodes(after))) : before != null ? function(before2) {
    const result = [], beforeCodes = posCodes(before2);
    for (let i10 = 0; i10 < beforeCodes.length; i10++) {
      const code3 = beforeCodes[i10];
      if (code3 !== 126) {
        result.push(code3 + 1);
        break;
      }
      if (result.push(code3), beforeCodes.length - 1 === i10) {
        result.push(33);
        break;
      }
    }
    return pos(result);
  }(before) : after != null ? function(after2) {
    const result = [], afterCodes = posCodes(after2);
    for (let i10 = 0; i10 < afterCodes.length; i10++) {
      const code3 = afterCodes[i10];
      if (!(code3 <= 33)) {
        result.push(code3 - 1);
        break;
      }
      if (result.push(32), afterCodes.length - 1 === i10) {
        result.push(126);
        break;
      }
    }
    return pos(result);
  }(after) : pos([33]);
}
function makePositionFromCodes(before, after) {
  let index2 = 0;
  const result = [];
  for (; ; ) {
    const beforeDigit = before[index2] || 32, afterDigit = after[index2] || 126;
    if (beforeDigit > afterDigit)
      throw new Error(`Impossible to generate position between ${before} and ${after}`);
    if (beforeDigit === afterDigit) {
      result.push(beforeDigit), index2++;
      continue;
    }
    if (afterDigit - beforeDigit == 1) {
      result.push(beforeDigit), result.push(...makePositionFromCodes(before.slice(index2 + 1), []));
      break;
    }
    const mid = afterDigit + beforeDigit >> 1;
    result.push(mid);
    break;
  }
  return result;
}
function posCodes(str) {
  const codes = [];
  for (let i10 = 0; i10 < str.length; i10++)
    codes.push(str.charCodeAt(i10));
  return codes;
}
function pos(codes) {
  return String.fromCharCode(...codes);
}
function comparePosition(posA, posB) {
  const aCodes = posCodes(posA), bCodes = posCodes(posB), maxLength = Math.max(aCodes.length, bCodes.length);
  for (let i10 = 0; i10 < maxLength; i10++) {
    const a10 = aCodes[i10] == null ? 32 : aCodes[i10], b10 = bCodes[i10] == null ? 32 : bCodes[i10];
    if (a10 !== b10)
      return a10 - b10;
  }
  throw new Error(`Impossible to compare similar position "${posA}" and "${posB}"`);
}
var LiveList = class extends AbstractCrdt {
  constructor(items = []) {
    let position;
    super(), this._items = [], this._implicitlyDeletedItems = /* @__PURE__ */ new Set(), this._unacknowledgedSets = /* @__PURE__ */ new Map();
    for (let i10 = 0; i10 < items.length; i10++) {
      const newPosition = makePosition(position), item = lsonToLiveNode(items[i10]);
      item._setParentLink(this, newPosition), this._items.push(item), position = newPosition;
    }
  }
  static _deserialize([id2], parentToChildren, doc) {
    const list = new LiveList();
    list._attach(id2, doc);
    const children = parentToChildren.get(id2);
    if (children == null)
      return list;
    for (const [id3, crdt] of children) {
      const child = deserialize([id3, crdt], parentToChildren, doc);
      child._setParentLink(list, crdt.parentKey), list._items.push(child), sortListItem(list._items);
    }
    return list;
  }
  _serialize(parentId, parentKey, doc) {
    if (this._id == null)
      throw new Error("Cannot serialize item is not attached");
    const ops = [], op = {
      id: this._id,
      opId: doc == null ? void 0 : doc.generateOpId(),
      type: OpCode.CREATE_LIST,
      parentId,
      parentKey
    };
    ops.push(op);
    for (const item of this._items)
      ops.push(...item._serialize(this._id, item._getParentKeyOrThrow(), doc));
    return ops;
  }
  _indexOfPosition(position) {
    return this._items.findIndex((item) => item._getParentKeyOrThrow() === position);
  }
  _attach(id2, doc) {
    super._attach(id2, doc);
    for (const item of this._items)
      item._attach(doc.generateId(), doc);
  }
  _detach() {
    super._detach();
    for (const item of this._items)
      item._detach();
  }
  _applySetRemote(op) {
    if (this._doc == null)
      throw new Error("Can't attach child if doc is not present");
    const { id: id2, parentKey: key } = op, child = creationOpToLiveNode(op);
    child._attach(id2, this._doc), child._setParentLink(this, key);
    const deletedId = op.deletedId, indexOfItemWithSamePosition = this._indexOfPosition(key);
    if (indexOfItemWithSamePosition !== -1) {
      const itemWithSamePosition = this._items[indexOfItemWithSamePosition];
      if (itemWithSamePosition._id === deletedId)
        return itemWithSamePosition._detach(), this._items[indexOfItemWithSamePosition] = child, {
          modified: makeUpdate(this, [
            setDelta(indexOfItemWithSamePosition, child)
          ]),
          reverse: []
        };
      {
        this._implicitlyDeletedItems.add(itemWithSamePosition), this._items[indexOfItemWithSamePosition] = child;
        const delta = [setDelta(indexOfItemWithSamePosition, child)], deleteDelta2 = this._detachItemAssociatedToSetOperation(op.deletedId);
        return deleteDelta2 && delta.push(deleteDelta2), { modified: makeUpdate(this, delta), reverse: [] };
      }
    }
    {
      const updates = [], deleteDelta2 = this._detachItemAssociatedToSetOperation(op.deletedId);
      return deleteDelta2 && updates.push(deleteDelta2), this._items.push(child), sortListItem(this._items), updates.push(insertDelta(this._indexOfPosition(key), child)), { reverse: [], modified: makeUpdate(this, updates) };
    }
  }
  _applySetAck(op) {
    if (this._doc == null)
      throw new Error("Can't attach child if doc is not present");
    const delta = [], deletedDelta = this._detachItemAssociatedToSetOperation(op.deletedId);
    deletedDelta && delta.push(deletedDelta);
    const unacknowledgedOpId = this._unacknowledgedSets.get(op.parentKey);
    if (unacknowledgedOpId != null) {
      if (unacknowledgedOpId !== op.opId)
        return delta.length === 0 ? { modified: false } : { modified: makeUpdate(this, delta), reverse: [] };
      this._unacknowledgedSets.delete(op.parentKey);
    }
    const indexOfItemWithSamePosition = this._indexOfPosition(op.parentKey), existingItem = this._items.find((item) => item._id === op.id);
    if (existingItem != null) {
      if (existingItem._parentKey === op.parentKey)
        return {
          modified: delta.length > 0 && makeUpdate(this, delta),
          reverse: []
        };
      indexOfItemWithSamePosition !== -1 && (this._implicitlyDeletedItems.add(this._items[indexOfItemWithSamePosition]), this._items.splice(indexOfItemWithSamePosition, 1), delta.push(deleteDelta(indexOfItemWithSamePosition)));
      const previousIndex = this._items.indexOf(existingItem);
      existingItem._setParentLink(this, op.parentKey), sortListItem(this._items);
      const newIndex = this._items.indexOf(existingItem);
      return newIndex !== previousIndex && delta.push(moveDelta(previousIndex, newIndex, existingItem)), { modified: delta.length > 0 && makeUpdate(this, delta), reverse: [] };
    }
    {
      const orphan = this._doc.getItem(op.id);
      if (orphan && this._implicitlyDeletedItems.has(orphan)) {
        orphan._setParentLink(this, op.parentKey), this._implicitlyDeletedItems.delete(orphan), this._items.push(orphan), sortListItem(this._items);
        const recreatedItemIndex = this._items.indexOf(orphan);
        return {
          modified: makeUpdate(this, [
            indexOfItemWithSamePosition === -1 ? insertDelta(recreatedItemIndex, orphan) : setDelta(recreatedItemIndex, orphan),
            ...delta
          ]),
          reverse: []
        };
      }
      {
        indexOfItemWithSamePosition !== -1 && this._items.splice(indexOfItemWithSamePosition, 1);
        const { newItem, newIndex } = this._createAttachItemAndSort(op, op.parentKey);
        return {
          modified: makeUpdate(this, [
            indexOfItemWithSamePosition === -1 ? insertDelta(newIndex, newItem) : setDelta(newIndex, newItem),
            ...delta
          ]),
          reverse: []
        };
      }
    }
  }
  _detachItemAssociatedToSetOperation(deletedId) {
    if (deletedId == null || this._doc == null)
      return null;
    const deletedItem = this._doc.getItem(deletedId);
    if (deletedItem == null)
      return null;
    const result = this._detachChild(deletedItem);
    return result.modified === false ? null : result.modified.updates[0];
  }
  _applyRemoteInsert(op) {
    if (this._doc == null)
      throw new Error("Can't attach child if doc is not present");
    const key = op.parentKey, existingItemIndex = this._indexOfPosition(key);
    existingItemIndex !== -1 && this._shiftItemPosition(existingItemIndex, key);
    const { newItem, newIndex } = this._createAttachItemAndSort(op, key);
    return {
      modified: makeUpdate(this, [insertDelta(newIndex, newItem)]),
      reverse: []
    };
  }
  _applyInsertAck(op) {
    const existingItem = this._items.find((item) => item._id === op.id), key = op.parentKey, itemIndexAtPosition = this._indexOfPosition(key);
    if (existingItem) {
      if (existingItem._parentKey === key)
        return { modified: false };
      {
        const oldPositionIndex = this._items.indexOf(existingItem);
        itemIndexAtPosition !== -1 && this._shiftItemPosition(itemIndexAtPosition, key), existingItem._setParentLink(this, key), sortListItem(this._items);
        const newIndex = this._indexOfPosition(key);
        return newIndex === oldPositionIndex ? { modified: false } : {
          modified: makeUpdate(this, [
            moveDelta(oldPositionIndex, newIndex, existingItem)
          ]),
          reverse: []
        };
      }
    }
    {
      const orphan = nn(this._doc).getItem(op.id);
      if (orphan && this._implicitlyDeletedItems.has(orphan)) {
        orphan._setParentLink(this, key), this._implicitlyDeletedItems.delete(orphan), this._items.push(orphan), sortListItem(this._items);
        return {
          modified: makeUpdate(this, [
            insertDelta(this._indexOfPosition(key), orphan)
          ]),
          reverse: []
        };
      }
      {
        itemIndexAtPosition !== -1 && this._shiftItemPosition(itemIndexAtPosition, key);
        const { newItem, newIndex } = this._createAttachItemAndSort(op, key);
        return {
          modified: makeUpdate(this, [insertDelta(newIndex, newItem)]),
          reverse: []
        };
      }
    }
  }
  _applyInsertUndoRedo(op) {
    var _a4;
    const { id: id2, parentKey: key } = op, child = creationOpToLiveNode(op);
    if (((_a4 = this._doc) === null || _a4 === void 0 ? void 0 : _a4.getItem(id2)) !== void 0)
      return { modified: false };
    child._attach(id2, nn(this._doc)), child._setParentLink(this, key);
    const existingItemIndex = this._indexOfPosition(key);
    let newKey = key;
    if (existingItemIndex !== -1) {
      newKey = makePosition(this._items[existingItemIndex] ? this._items[existingItemIndex]._getParentKeyOrThrow() : void 0, this._items[existingItemIndex + 1] ? this._items[existingItemIndex + 1]._getParentKeyOrThrow() : void 0), child._setParentLink(this, newKey);
    }
    this._items.push(child), sortListItem(this._items);
    return {
      modified: makeUpdate(this, [
        insertDelta(this._indexOfPosition(newKey), child)
      ]),
      reverse: [{ type: OpCode.DELETE_CRDT, id: id2 }]
    };
  }
  _applySetUndoRedo(op) {
    var _a4;
    const { id: id2, parentKey: key } = op, child = creationOpToLiveNode(op);
    if (((_a4 = this._doc) === null || _a4 === void 0 ? void 0 : _a4.getItem(id2)) !== void 0)
      return { modified: false };
    this._unacknowledgedSets.set(key, nn(op.opId));
    const indexOfItemWithSameKey = this._indexOfPosition(key);
    child._attach(id2, nn(this._doc)), child._setParentLink(this, key);
    const newKey = key;
    if (indexOfItemWithSameKey !== -1) {
      const existingItem = this._items[indexOfItemWithSameKey];
      existingItem._detach(), this._items[indexOfItemWithSameKey] = child;
      const reverse2 = existingItem._serialize(nn(this._id), key, this._doc);
      addIntentAndDeletedIdToOperation(reverse2, op.id);
      const delta = [setDelta(indexOfItemWithSameKey, child)], deletedDelta = this._detachItemAssociatedToSetOperation(op.deletedId);
      return deletedDelta && delta.push(deletedDelta), { modified: makeUpdate(this, delta), reverse: reverse2 };
    }
    {
      this._items.push(child), sortListItem(this._items), this._detachItemAssociatedToSetOperation(op.deletedId);
      const newIndex = this._indexOfPosition(newKey);
      return {
        reverse: [{ type: OpCode.DELETE_CRDT, id: id2 }],
        modified: makeUpdate(this, [insertDelta(newIndex, child)])
      };
    }
  }
  _attachChild(op, source) {
    if (this._doc == null)
      throw new Error("Can't attach child if doc is not present");
    if (op.intent === "set") {
      if (source === OpSource.REMOTE)
        return this._applySetRemote(op);
      if (source === OpSource.UNDOREDO_RECONNECT)
        return this._applySetUndoRedo(op);
      if (source === OpSource.ACK)
        return this._applySetAck(op);
    }
    return source === OpSource.REMOTE ? this._applyRemoteInsert(op) : source === OpSource.ACK ? this._applyInsertAck(op) : this._applyInsertUndoRedo(op);
  }
  _detachChild(child) {
    if (child) {
      const parentKey = nn(child._parentKey), reverse2 = child._serialize(nn(this._id), parentKey, this._doc), indexToDelete = this._items.indexOf(child);
      return this._items.splice(indexToDelete, 1), child._detach(), {
        modified: makeUpdate(this, [deleteDelta(indexToDelete)]),
        reverse: reverse2
      };
    }
    return { modified: false };
  }
  _applySetChildKeyRemote(newKey, child) {
    var _a4;
    if (this._implicitlyDeletedItems.has(child)) {
      this._implicitlyDeletedItems.delete(child), child._setParentLink(this, newKey), this._items.push(child), sortListItem(this._items);
      return {
        modified: makeUpdate(this, [
          insertDelta(this._items.indexOf(child), child)
        ]),
        reverse: []
      };
    }
    if (newKey === child._parentKey)
      return { modified: false };
    const existingItemIndex = this._indexOfPosition(newKey);
    if (existingItemIndex === -1) {
      const previousIndex = this._items.indexOf(child);
      child._setParentLink(this, newKey), sortListItem(this._items);
      const newIndex = this._items.indexOf(child);
      return newIndex === previousIndex ? { modified: false } : {
        modified: makeUpdate(this, [
          moveDelta(previousIndex, newIndex, child)
        ]),
        reverse: []
      };
    }
    {
      this._items[existingItemIndex]._setParentLink(this, makePosition(newKey, (_a4 = this._items[existingItemIndex + 1]) === null || _a4 === void 0 ? void 0 : _a4._getParentKeyOrThrow()));
      const previousIndex = this._items.indexOf(child);
      child._setParentLink(this, newKey), sortListItem(this._items);
      const newIndex = this._items.indexOf(child);
      return newIndex === previousIndex ? { modified: false } : {
        modified: makeUpdate(this, [
          moveDelta(previousIndex, newIndex, child)
        ]),
        reverse: []
      };
    }
  }
  _applySetChildKeyAck(newKey, child) {
    var _a4, _b2;
    const previousKey = nn(child._parentKey);
    if (this._implicitlyDeletedItems.has(child)) {
      const existingItemIndex = this._indexOfPosition(newKey);
      return this._implicitlyDeletedItems.delete(child), existingItemIndex !== -1 && this._items[existingItemIndex]._setParentLink(this, makePosition(newKey, (_a4 = this._items[existingItemIndex + 1]) === null || _a4 === void 0 ? void 0 : _a4._getParentKeyOrThrow())), child._setParentLink(this, newKey), this._items.push(child), sortListItem(this._items), { modified: false };
    }
    {
      if (newKey === previousKey)
        return { modified: false };
      const previousIndex = this._items.indexOf(child), existingItemIndex = this._indexOfPosition(newKey);
      existingItemIndex !== -1 && this._items[existingItemIndex]._setParentLink(this, makePosition(newKey, (_b2 = this._items[existingItemIndex + 1]) === null || _b2 === void 0 ? void 0 : _b2._getParentKeyOrThrow())), child._setParentLink(this, newKey), sortListItem(this._items);
      const newIndex = this._items.indexOf(child);
      return previousIndex === newIndex ? { modified: false } : {
        modified: makeUpdate(this, [
          moveDelta(previousIndex, newIndex, child)
        ]),
        reverse: []
      };
    }
  }
  _applySetChildKeyUndoRedo(newKey, child) {
    var _a4;
    const previousKey = nn(child._parentKey), previousIndex = this._items.indexOf(child), existingItemIndex = this._indexOfPosition(newKey);
    existingItemIndex !== -1 && this._items[existingItemIndex]._setParentLink(this, makePosition(newKey, (_a4 = this._items[existingItemIndex + 1]) === null || _a4 === void 0 ? void 0 : _a4._getParentKeyOrThrow())), child._setParentLink(this, newKey), sortListItem(this._items);
    const newIndex = this._items.indexOf(child);
    return previousIndex === newIndex ? { modified: false } : {
      modified: makeUpdate(this, [
        moveDelta(previousIndex, newIndex, child)
      ]),
      reverse: [
        {
          type: OpCode.SET_PARENT_KEY,
          id: nn(child._id),
          parentKey: previousKey
        }
      ]
    };
  }
  _setChildKey(newKey, child, source) {
    return source === OpSource.REMOTE ? this._applySetChildKeyRemote(newKey, child) : source === OpSource.ACK ? this._applySetChildKeyAck(newKey, child) : this._applySetChildKeyUndoRedo(newKey, child);
  }
  _apply(op, isLocal) {
    return super._apply(op, isLocal);
  }
  _toSerializedCrdt() {
    if (this.parent.type !== "HasParent")
      throw new Error("Cannot serialize LiveList if parent is missing");
    return {
      type: CrdtType.LIST,
      parentId: nn(this.parent.node._id, "Parent node expected to have ID"),
      parentKey: this.parent.key
    };
  }
  get length() {
    return this._items.length;
  }
  push(element) {
    return this.insert(element, this.length);
  }
  insert(element, index2) {
    if (index2 < 0 || index2 > this._items.length)
      throw new Error(`Cannot insert list item at index "${index2}". index should be between 0 and ${this._items.length}`);
    const position = makePosition(this._items[index2 - 1] ? this._items[index2 - 1]._getParentKeyOrThrow() : void 0, this._items[index2] ? this._items[index2]._getParentKeyOrThrow() : void 0), value = lsonToLiveNode(element);
    if (value._setParentLink(this, position), this._items.push(value), sortListItem(this._items), this._doc && this._id) {
      const id2 = this._doc.generateId();
      value._attach(id2, this._doc), this._doc.dispatch(value._serialize(this._id, position, this._doc), [{ type: OpCode.DELETE_CRDT, id: id2 }], /* @__PURE__ */ new Map([[this._id, makeUpdate(this, [insertDelta(index2, value)])]]));
    }
  }
  move(index2, targetIndex) {
    if (targetIndex < 0)
      throw new Error("targetIndex cannot be less than 0");
    if (targetIndex >= this._items.length)
      throw new Error("targetIndex cannot be greater or equal than the list length");
    if (index2 < 0)
      throw new Error("index cannot be less than 0");
    if (index2 >= this._items.length)
      throw new Error("index cannot be greater or equal than the list length");
    let beforePosition = null, afterPosition = null;
    index2 < targetIndex ? (afterPosition = targetIndex === this._items.length - 1 ? void 0 : this._items[targetIndex + 1]._getParentKeyOrThrow(), beforePosition = this._items[targetIndex]._getParentKeyOrThrow()) : (afterPosition = this._items[targetIndex]._getParentKeyOrThrow(), beforePosition = targetIndex === 0 ? void 0 : this._items[targetIndex - 1]._getParentKeyOrThrow());
    const position = makePosition(beforePosition, afterPosition), item = this._items[index2], previousPosition = item._getParentKeyOrThrow();
    if (item._setParentLink(this, position), sortListItem(this._items), this._doc && this._id) {
      const storageUpdates = /* @__PURE__ */ new Map([
        [this._id, makeUpdate(this, [moveDelta(index2, targetIndex, item)])]
      ]);
      this._doc.dispatch([
        {
          type: OpCode.SET_PARENT_KEY,
          id: nn(item._id),
          opId: this._doc.generateOpId(),
          parentKey: position
        }
      ], [
        {
          type: OpCode.SET_PARENT_KEY,
          id: nn(item._id),
          parentKey: previousPosition
        }
      ], storageUpdates);
    }
  }
  delete(index2) {
    if (index2 < 0 || index2 >= this._items.length)
      throw new Error(`Cannot delete list item at index "${index2}". index should be between 0 and ${this._items.length - 1}`);
    const item = this._items[index2];
    if (item._detach(), this._items.splice(index2, 1), this._doc) {
      const childRecordId = item._id;
      if (childRecordId) {
        const storageUpdates = /* @__PURE__ */ new Map();
        storageUpdates.set(nn(this._id), makeUpdate(this, [deleteDelta(index2)])), this._doc.dispatch([
          {
            id: childRecordId,
            opId: this._doc.generateOpId(),
            type: OpCode.DELETE_CRDT
          }
        ], item._serialize(nn(this._id), item._getParentKeyOrThrow()), storageUpdates);
      }
    }
  }
  clear() {
    if (this._doc) {
      const ops = [], reverseOps = [], updateDelta = [];
      for (const item of this._items) {
        item._detach();
        const childId = item._id;
        childId && (ops.push({
          type: OpCode.DELETE_CRDT,
          id: childId,
          opId: this._doc.generateOpId()
        }), reverseOps.push(...item._serialize(nn(this._id), item._getParentKeyOrThrow())), updateDelta.push(deleteDelta(0)));
      }
      this._items = [];
      const storageUpdates = /* @__PURE__ */ new Map();
      storageUpdates.set(nn(this._id), makeUpdate(this, updateDelta)), this._doc.dispatch(ops, reverseOps, storageUpdates);
    } else {
      for (const item of this._items)
        item._detach();
      this._items = [];
    }
  }
  set(index2, item) {
    if (index2 < 0 || index2 >= this._items.length)
      throw new Error(`Cannot set list item at index "${index2}". index should be between 0 and ${this._items.length - 1}`);
    const existingItem = this._items[index2], position = existingItem._getParentKeyOrThrow(), existingId = existingItem._id;
    existingItem._detach();
    const value = lsonToLiveNode(item);
    if (value._setParentLink(this, position), this._items[index2] = value, this._doc && this._id) {
      const id2 = this._doc.generateId();
      value._attach(id2, this._doc);
      const storageUpdates = /* @__PURE__ */ new Map();
      storageUpdates.set(this._id, makeUpdate(this, [setDelta(index2, value)]));
      const ops = value._serialize(this._id, position, this._doc);
      addIntentAndDeletedIdToOperation(ops, existingId), this._unacknowledgedSets.set(position, nn(ops[0].opId));
      const reverseOps = existingItem._serialize(this._id, position, void 0);
      addIntentAndDeletedIdToOperation(reverseOps, id2), this._doc.dispatch(ops, reverseOps, storageUpdates);
    }
  }
  toArray() {
    return this._items.map((entry) => liveNodeToLson(entry));
  }
  every(predicate) {
    return this.toArray().every(predicate);
  }
  filter(predicate) {
    return this.toArray().filter(predicate);
  }
  find(predicate) {
    return this.toArray().find(predicate);
  }
  findIndex(predicate) {
    return this.toArray().findIndex(predicate);
  }
  forEach(callbackfn) {
    return this.toArray().forEach(callbackfn);
  }
  get(index2) {
    if (!(index2 < 0 || index2 >= this._items.length))
      return liveNodeToLson(this._items[index2]);
  }
  indexOf(searchElement, fromIndex) {
    return this.toArray().indexOf(searchElement, fromIndex);
  }
  lastIndexOf(searchElement, fromIndex) {
    return this.toArray().lastIndexOf(searchElement, fromIndex);
  }
  map(callback) {
    return this._items.map((entry, i10) => callback(liveNodeToLson(entry), i10));
  }
  some(predicate) {
    return this.toArray().some(predicate);
  }
  [Symbol.iterator]() {
    return new LiveListIterator(this._items);
  }
  _createAttachItemAndSort(op, key) {
    const newItem = creationOpToLiveNode(op);
    newItem._attach(op.id, nn(this._doc)), newItem._setParentLink(this, key), this._items.push(newItem), sortListItem(this._items);
    return { newItem, newIndex: this._indexOfPosition(key) };
  }
  _shiftItemPosition(index2, key) {
    var _a4;
    const shiftedPosition = makePosition(key, this._items.length > index2 + 1 ? (_a4 = this._items[index2 + 1]) === null || _a4 === void 0 ? void 0 : _a4._getParentKeyOrThrow() : void 0);
    this._items[index2]._setParentLink(this, shiftedPosition);
  }
};
var LiveListIterator = class {
  constructor(items) {
    this._innerIterator = items[Symbol.iterator]();
  }
  [Symbol.iterator]() {
    return this;
  }
  next() {
    const result = this._innerIterator.next();
    if (result.done)
      return { done: true, value: void 0 };
    return { value: liveNodeToLson(result.value) };
  }
};
function makeUpdate(liveList, deltaUpdates) {
  return { node: liveList, type: "LiveList", updates: deltaUpdates };
}
function setDelta(index2, item) {
  return {
    index: index2,
    type: "set",
    item: item instanceof LiveRegister ? item.data : item
  };
}
function deleteDelta(index2) {
  return { index: index2, type: "delete" };
}
function insertDelta(index2, item) {
  return {
    index: index2,
    type: "insert",
    item: item instanceof LiveRegister ? item.data : item
  };
}
function moveDelta(previousIndex, index2, item) {
  return {
    index: index2,
    type: "move",
    previousIndex,
    item: item instanceof LiveRegister ? item.data : item
  };
}
function sortListItem(items) {
  items.sort((itemA, itemB) => comparePosition(itemA._getParentKeyOrThrow(), itemB._getParentKeyOrThrow()));
}
function addIntentAndDeletedIdToOperation(ops, deletedId) {
  if (ops.length === 0)
    throw new Error("Internal error. Serialized LiveStructure should have at least 1 operation");
  const firstOp = ops[0];
  firstOp.intent = "set", firstOp.deletedId = deletedId;
}
var LiveMap = class extends AbstractCrdt {
  constructor(entries2) {
    if (super(), errorIf(entries2 === null, "Support for calling `new LiveMap(null)` will be removed in @liveblocks/client 0.18. Please call as `new LiveMap()`, or `new LiveMap([])`."), this.unacknowledgedSet = /* @__PURE__ */ new Map(), entries2) {
      const mappedEntries = [];
      for (const entry of entries2) {
        const value = lsonToLiveNode(entry[1]);
        value._setParentLink(this, entry[0]), mappedEntries.push([entry[0], value]);
      }
      this._map = new Map(mappedEntries);
    } else
      this._map = /* @__PURE__ */ new Map();
  }
  _serialize(parentId, parentKey, doc) {
    if (this._id == null)
      throw new Error("Cannot serialize item is not attached");
    const ops = [], op = {
      id: this._id,
      opId: doc == null ? void 0 : doc.generateOpId(),
      type: OpCode.CREATE_MAP,
      parentId,
      parentKey
    };
    ops.push(op);
    for (const [key, value] of this._map)
      ops.push(...value._serialize(this._id, key, doc));
    return ops;
  }
  static _deserialize([id2, _item], parentToChildren, doc) {
    const map2 = new LiveMap();
    map2._attach(id2, doc);
    const children = parentToChildren.get(id2);
    if (children == null)
      return map2;
    for (const [id3, crdt] of children) {
      const child = deserialize([id3, crdt], parentToChildren, doc);
      child._setParentLink(map2, crdt.parentKey), map2._map.set(crdt.parentKey, child);
    }
    return map2;
  }
  _attach(id2, doc) {
    super._attach(id2, doc);
    for (const [_key, value] of this._map)
      isLiveNode(value) && value._attach(doc.generateId(), doc);
  }
  _attachChild(op, source) {
    if (this._doc == null)
      throw new Error("Can't attach child if doc is not present");
    const { id: id2, parentKey, opId } = op, key = parentKey, child = creationOpToLiveNode(op);
    if (this._doc.getItem(id2) !== void 0)
      return { modified: false };
    if (source === OpSource.ACK) {
      const lastUpdateOpId = this.unacknowledgedSet.get(key);
      if (lastUpdateOpId === opId)
        return this.unacknowledgedSet.delete(key), { modified: false };
      if (lastUpdateOpId != null)
        return { modified: false };
    } else
      source === OpSource.REMOTE && this.unacknowledgedSet.delete(key);
    const previousValue = this._map.get(key);
    let reverse2;
    if (previousValue) {
      const thisId = nn(this._id);
      reverse2 = previousValue._serialize(thisId, key), previousValue._detach();
    } else
      reverse2 = [{ type: OpCode.DELETE_CRDT, id: id2 }];
    return child._setParentLink(this, key), child._attach(id2, this._doc), this._map.set(key, child), {
      modified: {
        node: this,
        type: "LiveMap",
        updates: { [key]: { type: "update" } }
      },
      reverse: reverse2
    };
  }
  _detach() {
    super._detach();
    for (const item of this._map.values())
      item._detach();
  }
  _detachChild(child) {
    const id2 = nn(this._id), parentKey = nn(child._parentKey), reverse2 = child._serialize(id2, parentKey, this._doc);
    for (const [key, value] of this._map)
      value === child && this._map.delete(key);
    child._detach();
    return {
      modified: {
        node: this,
        type: "LiveMap",
        updates: { [parentKey]: { type: "delete" } }
      },
      reverse: reverse2
    };
  }
  _toSerializedCrdt() {
    if (this.parent.type !== "HasParent")
      throw new Error("Cannot serialize LiveMap if parent is missing");
    return {
      type: CrdtType.MAP,
      parentId: nn(this.parent.node._id, "Parent node expected to have ID"),
      parentKey: this.parent.key
    };
  }
  get(key) {
    const value = this._map.get(key);
    if (value != null)
      return liveNodeToLson(value);
  }
  set(key, value) {
    const oldValue = this._map.get(key);
    oldValue && oldValue._detach();
    const item = lsonToLiveNode(value);
    if (item._setParentLink(this, key), this._map.set(key, item), this._doc && this._id) {
      const id2 = this._doc.generateId();
      item._attach(id2, this._doc);
      const storageUpdates = /* @__PURE__ */ new Map();
      storageUpdates.set(this._id, {
        node: this,
        type: "LiveMap",
        updates: { [key]: { type: "update" } }
      });
      const ops = item._serialize(this._id, key, this._doc);
      this.unacknowledgedSet.set(key, nn(ops[0].opId)), this._doc.dispatch(item._serialize(this._id, key, this._doc), oldValue ? oldValue._serialize(this._id, key) : [{ type: OpCode.DELETE_CRDT, id: id2 }], storageUpdates);
    }
  }
  get size() {
    return this._map.size;
  }
  has(key) {
    return this._map.has(key);
  }
  delete(key) {
    const item = this._map.get(key);
    if (item == null)
      return false;
    if (item._detach(), this._map.delete(key), this._doc && item._id) {
      const thisId = nn(this._id), storageUpdates = /* @__PURE__ */ new Map();
      storageUpdates.set(thisId, {
        node: this,
        type: "LiveMap",
        updates: { [key]: { type: "delete" } }
      }), this._doc.dispatch([
        {
          type: OpCode.DELETE_CRDT,
          id: item._id,
          opId: this._doc.generateOpId()
        }
      ], item._serialize(thisId, key), storageUpdates);
    }
    return true;
  }
  entries() {
    const innerIterator = this._map.entries();
    return {
      [Symbol.iterator]() {
        return this;
      },
      next() {
        const iteratorValue = innerIterator.next();
        if (iteratorValue.done)
          return { done: true, value: void 0 };
        return {
          value: [
            iteratorValue.value[0],
            liveNodeToLson(iteratorValue.value[1])
          ]
        };
      }
    };
  }
  [Symbol.iterator]() {
    return this.entries();
  }
  keys() {
    return this._map.keys();
  }
  values() {
    const innerIterator = this._map.values();
    return {
      [Symbol.iterator]() {
        return this;
      },
      next() {
        const iteratorValue = innerIterator.next();
        if (iteratorValue.done)
          return { done: true, value: void 0 };
        return { value: liveNodeToLson(iteratorValue.value) };
      }
    };
  }
  forEach(callback) {
    for (const entry of this)
      callback(entry[1], entry[0], this);
  }
};
var LiveObject = class extends AbstractCrdt {
  constructor(obj = {}) {
    super(), this._propToLastUpdate = /* @__PURE__ */ new Map();
    for (const key in obj) {
      const value = obj[key];
      value !== void 0 && isLiveNode(value) && value._setParentLink(this, key);
    }
    this._map = new Map(Object.entries(obj));
  }
  _serialize(parentId, parentKey, doc) {
    if (this._id == null)
      throw new Error("Cannot serialize item is not attached");
    const opId = doc == null ? void 0 : doc.generateOpId(), ops = [], op = parentId !== void 0 && parentKey !== void 0 ? {
      type: OpCode.CREATE_OBJECT,
      id: this._id,
      opId,
      parentId,
      parentKey,
      data: {}
    } : { type: OpCode.CREATE_OBJECT, id: this._id, opId, data: {} };
    ops.push(op);
    for (const [key, value] of this._map)
      isLiveNode(value) ? ops.push(...value._serialize(this._id, key, doc)) : op.data[key] = value;
    return ops;
  }
  static _deserialize([id2, item], parentToChildren, doc) {
    const liveObj = new LiveObject(item.data);
    return liveObj._attach(id2, doc), this._deserializeChildren(liveObj, parentToChildren, doc);
  }
  static _deserializeChildren(liveObj, parentToChildren, doc) {
    const children = parentToChildren.get(nn(liveObj._id));
    if (children == null)
      return liveObj;
    for (const [id2, crdt] of children) {
      const child = deserializeToLson([id2, crdt], parentToChildren, doc);
      isLiveStructure(child) && child._setParentLink(liveObj, crdt.parentKey), liveObj._map.set(crdt.parentKey, child);
    }
    return liveObj;
  }
  _attach(id2, doc) {
    super._attach(id2, doc);
    for (const [_key, value] of this._map)
      isLiveNode(value) && value._attach(doc.generateId(), doc);
  }
  _attachChild(op, source) {
    if (this._doc == null)
      throw new Error("Can't attach child if doc is not present");
    const { id: id2, opId, parentKey: key } = op, child = creationOpToLson(op);
    if (this._doc.getItem(id2) !== void 0)
      return this._propToLastUpdate.get(key) === opId && this._propToLastUpdate.delete(key), { modified: false };
    if (source === OpSource.UNDOREDO_RECONNECT)
      this._propToLastUpdate.set(key, nn(opId));
    else if (this._propToLastUpdate.get(key) !== void 0)
      return this._propToLastUpdate.get(key) === opId ? (this._propToLastUpdate.delete(key), { modified: false }) : { modified: false };
    const thisId = nn(this._id), previousValue = this._map.get(key);
    let reverse2;
    return isLiveNode(previousValue) ? (reverse2 = previousValue._serialize(thisId, key), previousValue._detach()) : reverse2 = previousValue === void 0 ? [{ type: OpCode.DELETE_OBJECT_KEY, id: thisId, key }] : [
      {
        type: OpCode.UPDATE_OBJECT,
        id: thisId,
        data: { [key]: previousValue }
      }
    ], this._map.set(key, child), isLiveStructure(child) && (child._setParentLink(this, key), child._attach(id2, this._doc)), {
      reverse: reverse2,
      modified: {
        node: this,
        type: "LiveObject",
        updates: { [key]: { type: "update" } }
      }
    };
  }
  _detachChild(child) {
    if (child) {
      const id2 = nn(this._id), parentKey = nn(child._parentKey), reverse2 = child._serialize(id2, parentKey, this._doc);
      for (const [key, value] of this._map)
        value === child && this._map.delete(key);
      child._detach();
      return {
        modified: {
          node: this,
          type: "LiveObject",
          updates: { [parentKey]: { type: "delete" } }
        },
        reverse: reverse2
      };
    }
    return { modified: false };
  }
  _detach() {
    super._detach();
    for (const value of this._map.values())
      isLiveNode(value) && value._detach();
  }
  _apply(op, isLocal) {
    return op.type === OpCode.UPDATE_OBJECT ? this._applyUpdate(op, isLocal) : op.type === OpCode.DELETE_OBJECT_KEY ? this._applyDeleteObjectKey(op) : super._apply(op, isLocal);
  }
  _toSerializedCrdt() {
    const data = {};
    for (const [key, value] of this._map)
      isLiveNode(value) || (data[key] = value);
    return this.parent.type === "HasParent" && this.parent.node._id ? {
      type: CrdtType.OBJECT,
      parentId: this.parent.node._id,
      parentKey: this.parent.key,
      data
    } : { type: CrdtType.OBJECT, data };
  }
  _applyUpdate(op, isLocal) {
    let isModified = false;
    const id2 = nn(this._id), reverse2 = [], reverseUpdate = { type: OpCode.UPDATE_OBJECT, id: id2, data: {} };
    reverse2.push(reverseUpdate);
    for (const key in op.data) {
      const oldValue = this._map.get(key);
      isLiveNode(oldValue) ? (reverse2.push(...oldValue._serialize(id2, key)), oldValue._detach()) : oldValue !== void 0 ? reverseUpdate.data[key] = oldValue : oldValue === void 0 && reverse2.push({ type: OpCode.DELETE_OBJECT_KEY, id: id2, key });
    }
    const updateDelta = {};
    for (const key in op.data) {
      const value = op.data[key];
      if (value === void 0)
        continue;
      if (isLocal)
        this._propToLastUpdate.set(key, nn(op.opId));
      else {
        if (this._propToLastUpdate.get(key) != null) {
          if (this._propToLastUpdate.get(key) === op.opId) {
            this._propToLastUpdate.delete(key);
            continue;
          }
          continue;
        }
        isModified = true;
      }
      const oldValue = this._map.get(key);
      isLiveNode(oldValue) && oldValue._detach(), isModified = true, updateDelta[key] = { type: "update" }, this._map.set(key, value);
    }
    return Object.keys(reverseUpdate.data).length !== 0 && reverse2.unshift(reverseUpdate), isModified ? {
      modified: { node: this, type: "LiveObject", updates: updateDelta },
      reverse: reverse2
    } : { modified: false };
  }
  _applyDeleteObjectKey(op) {
    const key = op.key;
    if (this._map.has(key) === false)
      return { modified: false };
    if (this._propToLastUpdate.get(key) !== void 0)
      return { modified: false };
    const oldValue = this._map.get(key), id2 = nn(this._id);
    let reverse2 = [];
    return isLiveNode(oldValue) ? (reverse2 = oldValue._serialize(id2, op.key), oldValue._detach()) : oldValue !== void 0 && (reverse2 = [
      { type: OpCode.UPDATE_OBJECT, id: id2, data: { [key]: oldValue } }
    ]), this._map.delete(key), {
      modified: {
        node: this,
        type: "LiveObject",
        updates: { [op.key]: { type: "delete" } }
      },
      reverse: reverse2
    };
  }
  toObject() {
    return function(iterable) {
      const obj = {};
      for (const [key, val] of iterable)
        obj[key] = val;
      return obj;
    }(this._map);
  }
  set(key, value) {
    this.update({ [key]: value });
  }
  get(key) {
    return this._map.get(key);
  }
  delete(key) {
    const keyAsString = key, oldValue = this._map.get(keyAsString);
    if (oldValue === void 0)
      return;
    if (this._doc == null || this._id == null)
      return isLiveNode(oldValue) && oldValue._detach(), void this._map.delete(keyAsString);
    let reverse2;
    isLiveNode(oldValue) ? (oldValue._detach(), reverse2 = oldValue._serialize(this._id, keyAsString)) : reverse2 = [
      {
        type: OpCode.UPDATE_OBJECT,
        data: { [keyAsString]: oldValue },
        id: this._id
      }
    ], this._map.delete(keyAsString);
    const storageUpdates = /* @__PURE__ */ new Map();
    storageUpdates.set(this._id, {
      node: this,
      type: "LiveObject",
      updates: { [key]: { type: "delete" } }
    }), this._doc.dispatch([
      {
        type: OpCode.DELETE_OBJECT_KEY,
        key: keyAsString,
        id: this._id,
        opId: this._doc.generateOpId()
      }
    ], reverse2, storageUpdates);
  }
  update(overrides) {
    if (this._doc == null || this._id == null) {
      for (const key in overrides) {
        const newValue = overrides[key];
        if (newValue === void 0)
          continue;
        const oldValue = this._map.get(key);
        isLiveNode(oldValue) && oldValue._detach(), isLiveNode(newValue) && newValue._setParentLink(this, key), this._map.set(key, newValue);
      }
      return;
    }
    const ops = [], reverseOps = [], opId = this._doc.generateOpId(), updatedProps = {}, reverseUpdateOp = { id: this._id, type: OpCode.UPDATE_OBJECT, data: {} }, updateDelta = {};
    for (const key in overrides) {
      const newValue = overrides[key];
      if (newValue === void 0)
        continue;
      const oldValue = this._map.get(key);
      if (isLiveNode(oldValue) ? (reverseOps.push(...oldValue._serialize(this._id, key)), oldValue._detach()) : oldValue === void 0 ? reverseOps.push({
        type: OpCode.DELETE_OBJECT_KEY,
        id: this._id,
        key
      }) : reverseUpdateOp.data[key] = oldValue, isLiveNode(newValue)) {
        newValue._setParentLink(this, key), newValue._attach(this._doc.generateId(), this._doc);
        const newAttachChildOps = newValue._serialize(this._id, key, this._doc), createCrdtOp = newAttachChildOps.find((op) => op.parentId === this._id);
        createCrdtOp && this._propToLastUpdate.set(key, nn(createCrdtOp.opId)), ops.push(...newAttachChildOps);
      } else
        updatedProps[key] = newValue, this._propToLastUpdate.set(key, opId);
      this._map.set(key, newValue), updateDelta[key] = { type: "update" };
    }
    Object.keys(reverseUpdateOp.data).length !== 0 && reverseOps.unshift(reverseUpdateOp), Object.keys(updatedProps).length !== 0 && ops.unshift({
      opId,
      id: this._id,
      type: OpCode.UPDATE_OBJECT,
      data: updatedProps
    });
    const storageUpdates = /* @__PURE__ */ new Map();
    storageUpdates.set(this._id, {
      node: this,
      type: "LiveObject",
      updates: updateDelta
    }), this._doc.dispatch(ops, reverseOps, storageUpdates);
  }
};
function remove2(array2, item) {
  for (let i10 = 0; i10 < array2.length; i10++)
    if (array2[i10] === item) {
      array2.splice(i10, 1);
      break;
    }
}
function compact(items) {
  return items.filter((item) => item != null);
}
function creationOpToLiveNode(op) {
  return lsonToLiveNode(creationOpToLson(op));
}
function creationOpToLson(op) {
  switch (op.type) {
    case OpCode.CREATE_REGISTER:
      return op.data;
    case OpCode.CREATE_OBJECT:
      return new LiveObject(op.data);
    case OpCode.CREATE_MAP:
      return new LiveMap();
    case OpCode.CREATE_LIST:
      return new LiveList();
    default:
      return assertNever(0, "Unknown creation Op");
  }
}
function isSameNodeOrChildOf(node, parent) {
  return node === parent || node.parent.type === "HasParent" && isSameNodeOrChildOf(node.parent.node, parent);
}
function deserialize([id2, crdt], parentToChildren, doc) {
  switch (crdt.type) {
    case CrdtType.OBJECT:
      return LiveObject._deserialize([id2, crdt], parentToChildren, doc);
    case CrdtType.LIST:
      return LiveList._deserialize([id2, crdt], parentToChildren, doc);
    case CrdtType.MAP:
      return LiveMap._deserialize([id2, crdt], parentToChildren, doc);
    case CrdtType.REGISTER:
      return LiveRegister._deserialize([id2, crdt], parentToChildren, doc);
    default:
      throw new Error("Unexpected CRDT type");
  }
}
function deserializeToLson([id2, crdt], parentToChildren, doc) {
  switch (crdt.type) {
    case CrdtType.OBJECT:
      return LiveObject._deserialize([id2, crdt], parentToChildren, doc);
    case CrdtType.LIST:
      return LiveList._deserialize([id2, crdt], parentToChildren, doc);
    case CrdtType.MAP:
      return LiveMap._deserialize([id2, crdt], parentToChildren, doc);
    case CrdtType.REGISTER:
      return crdt.data;
    default:
      throw new Error("Unexpected CRDT type");
  }
}
function isLiveStructure(value) {
  return isLiveList(value) || function(value2) {
    return value2 instanceof LiveMap;
  }(value) || isLiveObject(value);
}
function isLiveNode(value) {
  return isLiveStructure(value) || function(value2) {
    return value2 instanceof LiveRegister;
  }(value);
}
function isLiveList(value) {
  return value instanceof LiveList;
}
function isLiveObject(value) {
  return value instanceof LiveObject;
}
function liveNodeToLson(obj) {
  return obj instanceof LiveRegister ? obj.data : obj instanceof LiveList || obj instanceof LiveMap || obj instanceof LiveObject ? obj : assertNever(0, "Unknown AbstractCrdt");
}
function lsonToLiveNode(value) {
  return value instanceof LiveObject || value instanceof LiveMap || value instanceof LiveList ? value : new LiveRegister(value);
}
function getTreesDiffOperations(currentItems, newItems) {
  const ops = [];
  return currentItems.forEach((_10, id2) => {
    newItems.get(id2) || ops.push({ type: OpCode.DELETE_CRDT, id: id2 });
  }), newItems.forEach((crdt, id2) => {
    const currentCrdt = currentItems.get(id2);
    if (currentCrdt)
      crdt.type === CrdtType.OBJECT && (currentCrdt.type === CrdtType.OBJECT && JSON.stringify(crdt.data) === JSON.stringify(currentCrdt.data) || ops.push({ type: OpCode.UPDATE_OBJECT, id: id2, data: crdt.data })), crdt.parentKey !== currentCrdt.parentKey && ops.push({
        type: OpCode.SET_PARENT_KEY,
        id: id2,
        parentKey: nn(crdt.parentKey, "Parent key must not be missing")
      });
    else
      switch (crdt.type) {
        case CrdtType.REGISTER:
          ops.push({
            type: OpCode.CREATE_REGISTER,
            id: id2,
            parentId: crdt.parentId,
            parentKey: crdt.parentKey,
            data: crdt.data
          });
          break;
        case CrdtType.LIST:
          ops.push({
            type: OpCode.CREATE_LIST,
            id: id2,
            parentId: crdt.parentId,
            parentKey: crdt.parentKey
          });
          break;
        case CrdtType.OBJECT:
          ops.push(crdt.parentId ? {
            type: OpCode.CREATE_OBJECT,
            id: id2,
            parentId: crdt.parentId,
            parentKey: crdt.parentKey,
            data: crdt.data
          } : { type: OpCode.CREATE_OBJECT, id: id2, data: crdt.data });
          break;
        case CrdtType.MAP:
          ops.push({
            type: OpCode.CREATE_MAP,
            id: id2,
            parentId: crdt.parentId,
            parentKey: crdt.parentKey
          });
      }
  }), ops;
}
function mergeStorageUpdates(first, second) {
  return first ? first.type === "LiveObject" && second.type === "LiveObject" ? function(first2, second2) {
    const updates = first2.updates;
    for (const [key, value] of entries(second2.updates))
      updates[key] = value;
    return Object.assign(Object.assign({}, second2), { updates });
  }(first, second) : first.type === "LiveMap" && second.type === "LiveMap" ? function(first2, second2) {
    const updates = first2.updates;
    for (const [key, value] of entries(second2.updates))
      updates[key] = value;
    return Object.assign(Object.assign({}, second2), { updates });
  }(first, second) : first.type === "LiveList" && second.type === "LiveList" ? function(first2, second2) {
    const updates = first2.updates;
    return Object.assign(Object.assign({}, second2), {
      updates: updates.concat(second2.updates)
    });
  }(first, second) : second : second;
}
function isPlainObject2(blob2) {
  return blob2 !== null && typeof blob2 == "object" && Object.prototype.toString.call(blob2) === "[object Object]";
}
function entries(obj) {
  return Object.entries(obj);
}
function tryParseJson(rawMessage) {
  try {
    return JSON.parse(rawMessage);
  } catch (e13) {
    return;
  }
}
function b64decode(b64value) {
  try {
    const formattedValue = b64value.replace(/-/g, "+").replace(/_/g, "/");
    return decodeURIComponent(atob(formattedValue).split("").map(function(c10) {
      return "%" + ("00" + c10.charCodeAt(0).toString(16)).slice(-2);
    }).join(""));
  } catch (err) {
    return atob(b64value);
  }
}
function isTokenExpired(token) {
  const now2 = Date.now() / 1e3;
  return now2 > token.exp - 300 || now2 < token.iat + 300;
}
function isStringList(value) {
  return Array.isArray(value) && value.every((i10) => typeof i10 == "string");
}
function isRoomAuthToken(data) {
  return typeof data.appId == "string" && typeof data.roomId == "string" && typeof data.actor == "number" && (data.id === void 0 || typeof data.id == "string") && isStringList(data.scopes) && (data.maxConnectionsPerRoom === void 0 || typeof data.maxConnectionsPerRoom == "number");
}
function parseJwtToken(token) {
  const tokenParts = token.split(".");
  if (tokenParts.length !== 3)
    throw new Error("Authentication error: invalid JWT token");
  const data = tryParseJson(b64decode(tokenParts[1]));
  if (data && function(data2) {
    if (!isPlainObject2(data2))
      return false;
    const { iat, exp } = data2;
    return typeof iat == "number" && typeof exp == "number";
  }(data))
    return data;
  throw new Error("Authentication error: missing JWT metadata");
}
function parseRoomAuthToken(tokenString) {
  const data = parseJwtToken(tokenString);
  if (data && isRoomAuthToken(data)) {
    return __rest4(data, ["maxConnections"]);
  }
  throw new Error("Authentication error: we expected a room token but did not get one. Hint: if you are using a callback, ensure the room is passed when creating the token. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientCallback");
}
function isJsonScalar(data) {
  return data === null || typeof data == "string" || typeof data == "number" || typeof data == "boolean";
}
function isJsonArray(data) {
  return Array.isArray(data);
}
function isJsonObject(data) {
  return !isJsonScalar(data) && !isJsonArray(data);
}

// ../../node_modules/@liveblocks/client/index.mjs
var BACKOFF_RETRY_DELAYS = [250, 500, 1e3, 2e3, 4e3, 8e3, 1e4];
var BACKOFF_RETRY_DELAYS_SLOW = [2e3, 3e4, 6e4, 3e5];
function makeOthers(userMap) {
  const users = Object.values(userMap).map((user) => __rest4(user, ["_hasReceivedInitialPresence"]));
  return {
    get count() {
      return users.length;
    },
    [Symbol.iterator]: () => users[Symbol.iterator](),
    map: (callback) => users.map(callback),
    toArray: () => users
  };
}
function makeStateMachine(state, context, mockedEffects) {
  const effects = mockedEffects || {
    authenticate(auth, createWebSocket) {
      const rawToken = state.token, parsedToken = rawToken !== null && parseRoomAuthToken(rawToken);
      if (!parsedToken || isTokenExpired(parsedToken))
        return auth(context.roomId).then(({ token }) => {
          if (state.connection.state !== "authenticating")
            return;
          authenticationSuccess(parseRoomAuthToken(token), createWebSocket(token)), state.token = token;
        }).catch((er2) => function(error) {
          false;
          state.token = null, updateConnection({ state: "unavailable" }), state.numberOfRetry++, state.timeoutHandles.reconnect = effects.scheduleReconnect(getRetryDelay());
        }(er2 instanceof Error ? er2 : new Error(String(er2))));
      authenticationSuccess(parsedToken, createWebSocket(rawToken));
    },
    send(messageOrMessages) {
      if (state.socket == null)
        throw new Error("Can't send message if socket is null");
      state.socket.send(JSON.stringify(messageOrMessages));
    },
    delayFlush: (delay) => setTimeout(tryFlushing, delay),
    startHeartbeatInterval: () => setInterval(heartbeat, 3e4),
    schedulePongTimeout: () => setTimeout(pongTimeout, 2e3),
    scheduleReconnect: (delay) => setTimeout(connect, delay)
  };
  function genericSubscribe(callback) {
    return state.listeners.storage.push(callback), () => remove2(state.listeners.storage, callback);
  }
  function createOrUpdateRootFromMessage(message) {
    if (message.items.length === 0)
      throw new Error("Internal error: cannot load storage without items");
    state.root ? function(items) {
      if (!state.root)
        return;
      const currentItems = /* @__PURE__ */ new Map();
      state.items.forEach((liveCrdt, id2) => {
        currentItems.set(id2, liveCrdt._toSerializedCrdt());
      });
      const ops = getTreesDiffOperations(currentItems, new Map(items));
      notify(apply(ops, false).updates);
    }(message.items) : state.root = function(items) {
      const [root2, parentToChildren] = function(items2) {
        const parentToChildren2 = /* @__PURE__ */ new Map();
        let root3 = null;
        for (const [id2, crdt] of items2)
          if (isRootCrdt(crdt))
            root3 = [id2, crdt];
          else {
            const tuple = [id2, crdt], children = parentToChildren2.get(crdt.parentId);
            children != null ? children.push(tuple) : parentToChildren2.set(crdt.parentId, [tuple]);
          }
        if (root3 == null)
          throw new Error("Root can't be null");
        return [root3, parentToChildren2];
      }(items);
      return LiveObject._deserialize(root2, parentToChildren, {
        getItem,
        addItem,
        deleteItem,
        generateId,
        generateOpId,
        dispatch: storageDispatch,
        roomId: context.roomId
      });
    }(message.items);
    for (const key in state.defaultStorageRoot)
      state.root.get(key) == null && state.root.set(key, state.defaultStorageRoot[key]);
  }
  function addItem(id2, liveItem) {
    state.items.set(id2, liveItem);
  }
  function deleteItem(id2) {
    state.items.delete(id2);
  }
  function getItem(id2) {
    return state.items.get(id2);
  }
  function addToUndoStack(historyItem) {
    state.undoStack.length >= 50 && state.undoStack.shift(), state.isHistoryPaused ? state.pausedHistory.unshift(...historyItem) : state.undoStack.push(historyItem);
  }
  function storageDispatch(ops, reverse2, storageUpdates) {
    state.isBatching ? (state.batch.ops.push(...ops), storageUpdates.forEach((value, key) => {
      state.batch.updates.storageUpdates.set(key, mergeStorageUpdates(state.batch.updates.storageUpdates.get(key), value));
    }), state.batch.reverseOps.push(...reverse2)) : (addToUndoStack(reverse2), state.redoStack = [], dispatch2(ops), notify({ storageUpdates }));
  }
  function notify({
    storageUpdates = /* @__PURE__ */ new Map(),
    presence = false,
    others: otherEvents = []
  }) {
    if (otherEvents.length > 0) {
      state.others = makeOthers(state.users);
      for (const event of otherEvents)
        for (const listener of state.listeners.others)
          listener(state.others, event);
    }
    if (presence)
      for (const listener of state.listeners["my-presence"])
        listener(state.me);
    if (storageUpdates.size > 0)
      for (const subscriber of state.listeners.storage)
        subscriber(Array.from(storageUpdates.values()));
  }
  function getConnectionId() {
    if (state.connection.state === "open" || state.connection.state === "connecting")
      return state.connection.id;
    if (state.lastConnectionId !== null)
      return state.lastConnectionId;
    throw new Error("Internal. Tried to get connection id but connection was never open");
  }
  function generateId() {
    return `${getConnectionId()}:${state.clock++}`;
  }
  function generateOpId() {
    return `${getConnectionId()}:${state.opClock++}`;
  }
  function apply(item, isLocal) {
    const result = {
      reverse: [],
      updates: { storageUpdates: /* @__PURE__ */ new Map(), presence: false }
    }, createdNodeIds = /* @__PURE__ */ new Set();
    for (const op of item)
      if (op.type === "presence") {
        const reverse2 = { type: "presence", data: {} };
        for (const key in op.data)
          reverse2.data[key] = state.me[key];
        if (state.me = Object.assign(Object.assign({}, state.me), op.data), state.buffer.presence == null)
          state.buffer.presence = op.data;
        else
          for (const key in op.data)
            state.buffer.presence[key] = op.data[key];
        result.reverse.unshift(reverse2), result.updates.presence = true;
      } else {
        let source;
        if (op.opId || (op.opId = generateOpId()), isLocal)
          source = OpSource.UNDOREDO_RECONNECT;
        else {
          source = state.offlineOperations.delete(nn(op.opId)) ? OpSource.ACK : OpSource.REMOTE;
        }
        const applyOpResult = applyOp(op, source);
        if (applyOpResult.modified) {
          const parentId = applyOpResult.modified.node.parent.type === "HasParent" ? nn(applyOpResult.modified.node.parent.node._id, "Expected parent node to have an ID") : void 0;
          parentId && createdNodeIds.has(parentId) || (result.updates.storageUpdates.set(nn(applyOpResult.modified.node._id), mergeStorageUpdates(result.updates.storageUpdates.get(nn(applyOpResult.modified.node._id)), applyOpResult.modified)), result.reverse.unshift(...applyOpResult.reverse)), op.type !== OpCode.CREATE_LIST && op.type !== OpCode.CREATE_MAP && op.type !== OpCode.CREATE_OBJECT || createdNodeIds.add(nn(applyOpResult.modified.node._id));
        }
      }
    return result;
  }
  function applyOp(op, source) {
    switch (op.type) {
      case OpCode.DELETE_OBJECT_KEY:
      case OpCode.UPDATE_OBJECT:
      case OpCode.DELETE_CRDT: {
        const item = state.items.get(op.id);
        return item == null ? { modified: false } : item._apply(op, source === OpSource.UNDOREDO_RECONNECT);
      }
      case OpCode.SET_PARENT_KEY: {
        const item = state.items.get(op.id);
        return item == null ? { modified: false } : item.parent.type === "HasParent" && isLiveList(item.parent.node) ? item.parent.node._setChildKey(op.parentKey, item, source) : { modified: false };
      }
      case OpCode.CREATE_OBJECT:
      case OpCode.CREATE_LIST:
      case OpCode.CREATE_MAP:
      case OpCode.CREATE_REGISTER: {
        if (op.parentId === void 0)
          return { modified: false };
        const parent = state.items.get(op.parentId);
        return parent == null ? { modified: false } : parent._attachChild(op, source);
      }
    }
  }
  function connect() {
    var _a4, _b2, _c, _d2;
    if (state.connection.state !== "closed" && state.connection.state !== "unavailable")
      return null;
    const auth = function(authentication, fetchPolyfill) {
      if (authentication.type === "public") {
        if (typeof window == "undefined" && fetchPolyfill == null)
          throw new Error("To use Liveblocks client in a non-dom environment with a publicApiKey, you need to provide a fetch polyfill.");
        return (room) => fetchAuthEndpoint(fetchPolyfill || fetch, authentication.url, {
          room,
          publicApiKey: authentication.publicApiKey
        });
      }
      if (authentication.type === "private") {
        if (typeof window == "undefined" && fetchPolyfill == null)
          throw new Error("To use Liveblocks client in a non-dom environment with a url as auth endpoint, you need to provide a fetch polyfill.");
        return (room) => fetchAuthEndpoint(fetchPolyfill || fetch, authentication.url, {
          room
        });
      }
      if (authentication.type === "custom") {
        return (room) => authentication.callback(room).then((response) => {
          if (!response || !response.token)
            throw new Error('Authentication error. We expect the authentication callback to return a token, but it does not. Hint: the return value should look like: { token: "..." }');
          return response;
        });
      }
      throw new Error("Internal error. Unexpected authentication type");
    }(context.authentication, (_b2 = (_a4 = context.polyfills) === null || _a4 === void 0 ? void 0 : _a4.fetch) !== null && _b2 !== void 0 ? _b2 : context.fetchPolyfill), createWebSocket = function(liveblocksServer, WebSocketPolyfill) {
      if (typeof window == "undefined" && WebSocketPolyfill == null)
        throw new Error("To use Liveblocks client in a non-dom environment, you need to provide a WebSocket polyfill.");
      const ws2 = WebSocketPolyfill || WebSocket;
      return (token) => new ws2(`${liveblocksServer}/?token=${token}`);
    }(context.liveblocksServer, (_d2 = (_c = context.polyfills) === null || _c === void 0 ? void 0 : _c.WebSocket) !== null && _d2 !== void 0 ? _d2 : context.WebSocketPolyfill);
    updateConnection({ state: "authenticating" }), effects.authenticate(auth, createWebSocket);
  }
  function authenticationSuccess(token, socket) {
    socket.addEventListener("message", onMessage), socket.addEventListener("open", onOpen), socket.addEventListener("close", onClose), socket.addEventListener("error", onError), updateConnection({
      state: "connecting",
      id: token.actor,
      userInfo: token.info,
      userId: token.id
    }), state.idFactory = function(connectionId) {
      let count = 0;
      return () => `${connectionId}:${count++}`;
    }(token.actor), state.socket = socket;
  }
  function onUpdatePresenceMessage(message) {
    const user = state.users[message.actor];
    if (message.targetActor !== void 0 || user == null || user._hasReceivedInitialPresence)
      return state.users[message.actor] = user == null ? {
        connectionId: message.actor,
        presence: message.data,
        id: void 0,
        info: void 0,
        _hasReceivedInitialPresence: true
      } : {
        id: user.id,
        info: user.info,
        connectionId: message.actor,
        presence: Object.assign(Object.assign({}, user.presence), message.data),
        _hasReceivedInitialPresence: true
      }, {
        type: "update",
        updates: message.data,
        user: state.users[message.actor]
      };
  }
  function onUserLeftMessage(message) {
    const userLeftMessage = message, user = state.users[userLeftMessage.actor];
    return user ? (delete state.users[userLeftMessage.actor], { type: "leave", user }) : null;
  }
  function onRoomStateMessage(message) {
    const newUsers = {};
    for (const key in message.users) {
      const connectionId = Number.parseInt(key), user = message.users[key];
      newUsers[connectionId] = {
        connectionId,
        info: user.info,
        id: user.id
      };
    }
    return state.users = newUsers, { type: "reset" };
  }
  function onEvent(message) {
    for (const listener of state.listeners.event)
      listener({ connectionId: message.actor, event: message.event });
  }
  function onUserJoinedMessage(message) {
    return state.users[message.actor] = {
      connectionId: message.actor,
      info: message.info,
      id: message.id,
      _hasReceivedInitialPresence: true
    }, state.me && (state.buffer.messages.push({
      type: ClientMsgCode.UPDATE_PRESENCE,
      data: state.me,
      targetActor: message.actor
    }), tryFlushing()), { type: "enter", user: state.users[message.actor] };
  }
  function parseServerMessage(data) {
    return isJsonObject(data) ? data : null;
  }
  function onMessage(event) {
    if (event.data === "pong")
      return void clearTimeout(state.timeoutHandles.pongTimeout);
    const messages = function(text) {
      const data = tryParseJson(text);
      return data === void 0 ? null : isJsonArray(data) ? compact(data.map((item) => parseServerMessage(item))) : compact([parseServerMessage(data)]);
    }(event.data);
    if (messages === null || messages.length === 0)
      return;
    const updates = { storageUpdates: /* @__PURE__ */ new Map(), others: [] };
    for (const message of messages)
      switch (message.type) {
        case ServerMsgCode.USER_JOINED:
          updates.others.push(onUserJoinedMessage(message));
          break;
        case ServerMsgCode.UPDATE_PRESENCE: {
          const othersPresenceUpdate = onUpdatePresenceMessage(message);
          othersPresenceUpdate && updates.others.push(othersPresenceUpdate);
          break;
        }
        case ServerMsgCode.BROADCASTED_EVENT:
          onEvent(message);
          break;
        case ServerMsgCode.USER_LEFT: {
          const event2 = onUserLeftMessage(message);
          event2 && updates.others.push(event2);
          break;
        }
        case ServerMsgCode.ROOM_STATE:
          updates.others.push(onRoomStateMessage(message));
          break;
        case ServerMsgCode.INITIAL_STORAGE_STATE: {
          const offlineOps = new Map(state.offlineOperations);
          createOrUpdateRootFromMessage(message), applyAndSendOfflineOps(offlineOps), _getInitialStateResolver == null || _getInitialStateResolver();
          break;
        }
        case ServerMsgCode.UPDATE_STORAGE:
          apply(message.ops, false).updates.storageUpdates.forEach((value, key) => {
            updates.storageUpdates.set(key, mergeStorageUpdates(updates.storageUpdates.get(key), value));
          });
          break;
      }
    notify(updates);
  }
  function onClose(event) {
    if (state.socket = null, clearTimeout(state.timeoutHandles.pongTimeout), clearInterval(state.intervalHandles.heartbeat), state.timeoutHandles.flush && clearTimeout(state.timeoutHandles.flush), clearTimeout(state.timeoutHandles.reconnect), state.users = {}, notify({ others: [{ type: "reset" }] }), event.code >= 4e3 && event.code <= 4100) {
      updateConnection({ state: "failed" });
      const error = new LiveblocksError(event.reason, event.code);
      for (const listener of state.listeners.error)
        listener(error);
      const delay = getRetryDelay(true);
      state.numberOfRetry++, false, updateConnection({ state: "unavailable" }), state.timeoutHandles.reconnect = effects.scheduleReconnect(delay);
    } else if (event.code === WebsocketCloseCodes.CLOSE_WITHOUT_RETRY)
      updateConnection({ state: "closed" });
    else {
      const delay = getRetryDelay();
      state.numberOfRetry++, false, updateConnection({ state: "unavailable" }), state.timeoutHandles.reconnect = effects.scheduleReconnect(delay);
    }
  }
  function updateConnection(connection) {
    state.connection = connection;
    for (const listener of state.listeners.connection)
      listener(connection.state);
  }
  function getRetryDelay(slow = false) {
    return slow ? BACKOFF_RETRY_DELAYS_SLOW[state.numberOfRetry < BACKOFF_RETRY_DELAYS_SLOW.length ? state.numberOfRetry : BACKOFF_RETRY_DELAYS_SLOW.length - 1] : BACKOFF_RETRY_DELAYS[state.numberOfRetry < BACKOFF_RETRY_DELAYS.length ? state.numberOfRetry : BACKOFF_RETRY_DELAYS.length - 1];
  }
  function onError() {
  }
  function onOpen() {
    clearInterval(state.intervalHandles.heartbeat), state.intervalHandles.heartbeat = effects.startHeartbeatInterval(), state.connection.state === "connecting" && (updateConnection(Object.assign(Object.assign({}, state.connection), { state: "open" })), state.numberOfRetry = 0, state.lastConnectionId !== void 0 && (state.buffer.presence = state.me, tryFlushing()), state.lastConnectionId = state.connection.id, state.root && state.buffer.messages.push({ type: ClientMsgCode.FETCH_STORAGE }), tryFlushing());
  }
  function heartbeat() {
    state.socket != null && (clearTimeout(state.timeoutHandles.pongTimeout), state.timeoutHandles.pongTimeout = effects.schedulePongTimeout(), state.socket.readyState === state.socket.OPEN && state.socket.send("ping"));
  }
  function pongTimeout() {
    reconnect();
  }
  function reconnect() {
    state.socket && (state.socket.removeEventListener("open", onOpen), state.socket.removeEventListener("message", onMessage), state.socket.removeEventListener("close", onClose), state.socket.removeEventListener("error", onError), state.socket.close(), state.socket = null), updateConnection({ state: "unavailable" }), clearTimeout(state.timeoutHandles.pongTimeout), state.timeoutHandles.flush && clearTimeout(state.timeoutHandles.flush), clearTimeout(state.timeoutHandles.reconnect), clearInterval(state.intervalHandles.heartbeat), connect();
  }
  function applyAndSendOfflineOps(offlineOps) {
    if (offlineOps.size === 0)
      return;
    const messages = [], ops = Array.from(offlineOps.values()), result = apply(ops, true);
    messages.push({ type: ClientMsgCode.UPDATE_STORAGE, ops }), notify(result.updates), effects.send(messages);
  }
  function tryFlushing() {
    const storageOps = state.buffer.storageOperations;
    if (storageOps.length > 0 && storageOps.forEach((op) => {
      state.offlineOperations.set(nn(op.opId), op);
    }), state.socket == null || state.socket.readyState !== state.socket.OPEN)
      return void (state.buffer.storageOperations = []);
    const now2 = Date.now();
    if (now2 - state.lastFlushTime > context.throttleDelay) {
      const messages = function(state2) {
        const messages2 = [];
        state2.buffer.presence && messages2.push({
          type: ClientMsgCode.UPDATE_PRESENCE,
          data: state2.buffer.presence
        });
        for (const event of state2.buffer.messages)
          messages2.push(event);
        state2.buffer.storageOperations.length > 0 && messages2.push({
          type: ClientMsgCode.UPDATE_STORAGE,
          ops: state2.buffer.storageOperations
        });
        return messages2;
      }(state);
      if (messages.length === 0)
        return;
      effects.send(messages), state.buffer = {
        messages: [],
        storageOperations: [],
        presence: null
      }, state.lastFlushTime = now2;
    } else
      state.timeoutHandles.flush != null && clearTimeout(state.timeoutHandles.flush), state.timeoutHandles.flush = effects.delayFlush(context.throttleDelay - (now2 - state.lastFlushTime));
  }
  function getPresence() {
    return state.me;
  }
  function dispatch2(ops) {
    state.buffer.storageOperations.push(...ops), tryFlushing();
  }
  let _getInitialStatePromise = null, _getInitialStateResolver = null;
  return {
    onClose,
    onMessage,
    authenticationSuccess,
    heartbeat,
    onNavigatorOnline: function() {
      state.connection.state === "unavailable" && reconnect();
    },
    simulateSocketClose: function() {
      state.socket && (state.socket = null);
    },
    simulateSendCloseEvent: function(event) {
      onClose(event);
    },
    onVisibilityChange: function(visibilityState) {
      visibilityState === "visible" && state.connection.state === "open" && heartbeat();
    },
    getUndoStack: () => state.undoStack,
    getItemsCount: () => state.items.size,
    connect,
    disconnect: function() {
      state.socket && (state.socket.removeEventListener("open", onOpen), state.socket.removeEventListener("message", onMessage), state.socket.removeEventListener("close", onClose), state.socket.removeEventListener("error", onError), state.socket.close(), state.socket = null), updateConnection({ state: "closed" }), state.timeoutHandles.flush && clearTimeout(state.timeoutHandles.flush), clearTimeout(state.timeoutHandles.reconnect), clearTimeout(state.timeoutHandles.pongTimeout), clearInterval(state.intervalHandles.heartbeat), state.users = {}, notify({ others: [{ type: "reset" }] }), function() {
        for (const key in state.listeners)
          state.listeners[key] = [];
      }();
    },
    subscribe: function(first, second, options) {
      if (second === void 0 || typeof first == "function") {
        if (typeof first == "function") {
          return genericSubscribe(first);
        }
        throw new Error("Please specify a listener callback");
      }
      if (isLiveNode(first)) {
        const node = first;
        if (options == null ? void 0 : options.isDeep) {
          return function(node2, callback) {
            return genericSubscribe((updates) => {
              const relatedUpdates = updates.filter((update) => isSameNodeOrChildOf(update.node, node2));
              relatedUpdates.length > 0 && callback(relatedUpdates);
            });
          }(node, second);
        }
        return function(node2, callback) {
          return genericSubscribe((updates) => {
            for (const update of updates)
              update.node._id === node2._id && callback(update.node);
          });
        }(node, second);
      }
      if (!isRoomEventName(first))
        throw new Error(`"${first}" is not a valid event name`);
      const eventName = first, eventListener = second;
      return state.listeners[eventName].push(eventListener), () => {
        const callbacks = state.listeners[eventName];
        remove2(callbacks, eventListener);
      };
    },
    updatePresence: function(overrides, options) {
      const oldValues = {};
      state.buffer.presence == null && (state.buffer.presence = {});
      for (const key in overrides) {
        const overrideValue = overrides[key];
        overrideValue !== void 0 && (state.buffer.presence[key] = overrideValue, oldValues[key] = state.me[key]);
      }
      state.me = Object.assign(Object.assign({}, state.me), overrides), state.isBatching ? ((options == null ? void 0 : options.addToHistory) && state.batch.reverseOps.push({
        type: "presence",
        data: oldValues
      }), state.batch.updates.presence = true) : (tryFlushing(), (options == null ? void 0 : options.addToHistory) && addToUndoStack([{ type: "presence", data: oldValues }]), notify({ presence: true }));
    },
    broadcastEvent: function(event, options = { shouldQueueEventIfNotReady: false }) {
      state.socket == null && options.shouldQueueEventIfNotReady == 0 || (state.buffer.messages.push({
        type: ClientMsgCode.BROADCAST_EVENT,
        event
      }), tryFlushing());
    },
    batch: function(callback) {
      if (state.isBatching)
        throw new Error("batch should not be called during a batch");
      state.isBatching = true;
      try {
        callback();
      } finally {
        state.isBatching = false, state.batch.reverseOps.length > 0 && addToUndoStack(state.batch.reverseOps), state.batch.ops.length > 0 && (state.redoStack = []), state.batch.ops.length > 0 && dispatch2(state.batch.ops), notify(state.batch.updates), state.batch = {
          ops: [],
          reverseOps: [],
          updates: { others: [], storageUpdates: /* @__PURE__ */ new Map(), presence: false }
        }, tryFlushing();
      }
    },
    undo: function() {
      if (state.isBatching)
        throw new Error("undo is not allowed during a batch");
      const historyItem = state.undoStack.pop();
      if (historyItem == null)
        return;
      state.isHistoryPaused = false;
      const result = apply(historyItem, true);
      notify(result.updates), state.redoStack.push(result.reverse);
      for (const op of historyItem)
        op.type !== "presence" && state.buffer.storageOperations.push(op);
      tryFlushing();
    },
    redo: function() {
      if (state.isBatching)
        throw new Error("redo is not allowed during a batch");
      const historyItem = state.redoStack.pop();
      if (historyItem == null)
        return;
      state.isHistoryPaused = false;
      const result = apply(historyItem, true);
      notify(result.updates), state.undoStack.push(result.reverse);
      for (const op of historyItem)
        op.type !== "presence" && state.buffer.storageOperations.push(op);
      tryFlushing();
    },
    pauseHistory: function() {
      state.pausedHistory = [], state.isHistoryPaused = true;
    },
    resumeHistory: function() {
      state.isHistoryPaused = false, state.pausedHistory.length > 0 && addToUndoStack(state.pausedHistory), state.pausedHistory = [];
    },
    getStorage: function() {
      return state.root ? new Promise((resolve) => resolve({ root: state.root })) : (_getInitialStatePromise == null && (state.buffer.messages.push({ type: ClientMsgCode.FETCH_STORAGE }), tryFlushing(), _getInitialStatePromise = new Promise((resolve) => _getInitialStateResolver = resolve)), _getInitialStatePromise.then(() => ({ root: nn(state.root) })));
    },
    selectors: {
      getConnectionState: function() {
        return state.connection.state;
      },
      getSelf: function() {
        return state.connection.state === "open" || state.connection.state === "connecting" ? {
          connectionId: state.connection.id,
          id: state.connection.userId,
          info: state.connection.userInfo,
          presence: getPresence()
        } : null;
      },
      getPresence,
      getOthers: function() {
        return state.others;
      }
    }
  };
}
function createRoom(options, context) {
  var _a4, _b2;
  const initialPresence = (_a4 = options.initialPresence) !== null && _a4 !== void 0 ? _a4 : options.defaultPresence, initialStorage = (_b2 = options.initialStorage) !== null && _b2 !== void 0 ? _b2 : options.defaultStorageRoot, machine = makeStateMachine(function(initialPresence2, initialStorage2) {
    return {
      connection: { state: "closed" },
      token: null,
      lastConnectionId: null,
      socket: null,
      listeners: {
        event: [],
        others: [],
        "my-presence": [],
        error: [],
        connection: [],
        storage: []
      },
      numberOfRetry: 0,
      lastFlushTime: 0,
      timeoutHandles: { flush: null, reconnect: 0, pongTimeout: 0 },
      buffer: {
        presence: initialPresence2 == null ? {} : initialPresence2,
        messages: [],
        storageOperations: []
      },
      intervalHandles: { heartbeat: 0 },
      me: initialPresence2 == null ? {} : initialPresence2,
      users: {},
      others: makeOthers({}),
      defaultStorageRoot: initialStorage2,
      idFactory: null,
      clock: 0,
      opClock: 0,
      items: /* @__PURE__ */ new Map(),
      root: void 0,
      undoStack: [],
      redoStack: [],
      isHistoryPaused: false,
      pausedHistory: [],
      isBatching: false,
      batch: {
        ops: [],
        updates: { storageUpdates: /* @__PURE__ */ new Map(), presence: false, others: [] },
        reverseOps: []
      },
      offlineOperations: /* @__PURE__ */ new Map()
    };
  }(typeof initialPresence == "function" ? initialPresence(context.roomId) : initialPresence, typeof initialStorage == "function" ? initialStorage(context.roomId) : initialStorage), context), room = {
    id: context.roomId,
    getConnectionState: machine.selectors.getConnectionState,
    getSelf: machine.selectors.getSelf,
    subscribe: machine.subscribe,
    getPresence: machine.selectors.getPresence,
    updatePresence: machine.updatePresence,
    getOthers: machine.selectors.getOthers,
    broadcastEvent: machine.broadcastEvent,
    getStorage: machine.getStorage,
    batch: machine.batch,
    history: {
      undo: machine.undo,
      redo: machine.redo,
      pause: machine.pauseHistory,
      resume: machine.resumeHistory
    },
    __INTERNAL_DO_NOT_USE: {
      simulateCloseWebsocket: machine.simulateSocketClose,
      simulateSendCloseEvent: machine.simulateSendCloseEvent
    }
  };
  return {
    connect: machine.connect,
    disconnect: machine.disconnect,
    onNavigatorOnline: machine.onNavigatorOnline,
    onVisibilityChange: machine.onVisibilityChange,
    room
  };
}
var LiveblocksError = class extends Error {
  constructor(message, code3) {
    super(message), this.code = code3;
  }
};
function fetchAuthEndpoint(fetch2, endpoint, body) {
  return fetch2(endpoint, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(body)
  }).then((res) => {
    if (!res.ok)
      throw new AuthenticationError(`Expected a status 200 but got ${res.status} when doing a POST request on "${endpoint}"`);
    return res.json().catch((er2) => {
      throw new AuthenticationError(`Expected a JSON response when doing a POST request on "${endpoint}". ${er2}`);
    });
  }).then((data) => {
    if (!isPlainObject2(data) || typeof data.token != "string")
      throw new AuthenticationError(`Expected a JSON response of the form \`{ token: "..." }\` when doing a POST request on "${endpoint}", but got ${JSON.stringify(data)}`);
    const { token } = data;
    return { token };
  });
}
var AuthenticationError = class extends Error {
  constructor(message) {
    super(message);
  }
};
function createClient(options) {
  const clientOptions = options, throttleDelay = function(options2) {
    if (options2.throttle === void 0)
      return 100;
    if (typeof options2.throttle != "number" || options2.throttle < 80 || options2.throttle > 1e3)
      throw new Error("throttle should be a number between 80 and 1000.");
    return options2.throttle;
  }(options), rooms = /* @__PURE__ */ new Map();
  return typeof window != "undefined" && window.addEventListener !== void 0 && window.addEventListener("online", () => {
    for (const [, room] of rooms)
      room.onNavigatorOnline();
  }), typeof document != "undefined" && document.addEventListener("visibilitychange", () => {
    for (const [, room] of rooms)
      room.onVisibilityChange(document.visibilityState);
  }), {
    getRoom: function(roomId2) {
      const internalRoom = rooms.get(roomId2);
      return internalRoom ? internalRoom.room : null;
    },
    enter: function(roomId2, options2 = {}) {
      var _a4;
      let internalRoom = rooms.get(roomId2);
      if (internalRoom)
        return internalRoom.room;
      if (errorIf(options2.defaultPresence, "Argument `defaultPresence` will be removed in @liveblocks/client 0.18. Please use `initialPresence` instead. For more info, see https://bit.ly/3Niy5aP"), errorIf(options2.defaultStorageRoot, "Argument `defaultStorageRoot` will be removed in @liveblocks/client 0.18. Please use `initialStorage` instead. For more info, see https://bit.ly/3Niy5aP"), internalRoom = createRoom({
        initialPresence: options2.initialPresence,
        initialStorage: options2.initialStorage,
        defaultPresence: options2.defaultPresence,
        defaultStorageRoot: options2.defaultStorageRoot
      }, {
        roomId: roomId2,
        throttleDelay,
        polyfills: clientOptions.polyfills,
        WebSocketPolyfill: clientOptions.WebSocketPolyfill,
        fetchPolyfill: clientOptions.fetchPolyfill,
        liveblocksServer: (clientOptions == null ? void 0 : clientOptions.liveblocksServer) || "wss://liveblocks.net/v6",
        authentication: prepareAuthentication(clientOptions)
      }), rooms.set(roomId2, internalRoom), !options2.DO_NOT_USE_withoutConnecting) {
        if (typeof atob == "undefined") {
          if (((_a4 = clientOptions.polyfills) === null || _a4 === void 0 ? void 0 : _a4.atob) == null)
            throw new Error("You need to polyfill atob to use the client in your environment. Please follow the instructions at https://liveblocks.io/docs/errors/liveblocks-client/atob-polyfill");
          global.atob = clientOptions.polyfills.atob;
        }
        internalRoom.connect();
      }
      return internalRoom.room;
    },
    leave: function(roomId2) {
      const room = rooms.get(roomId2);
      room && (room.disconnect(), rooms.delete(roomId2));
    }
  };
}
function prepareAuthentication(clientOptions) {
  const { publicApiKey, authEndpoint } = clientOptions;
  if (authEndpoint !== void 0 && publicApiKey !== void 0)
    throw new Error("You cannot use both publicApiKey and authEndpoint. Please use either publicApiKey or authEndpoint, but not both. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClient");
  if (typeof publicApiKey == "string") {
    if (publicApiKey.startsWith("sk_"))
      throw new Error("Invalid publicApiKey. You are using the secret key which is not supported. Please use the public key instead. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientPublicKey");
    if (!publicApiKey.startsWith("pk_"))
      throw new Error("Invalid key. Please use the public key format: pk_<public key>. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientPublicKey");
    return {
      type: "public",
      publicApiKey,
      url: clientOptions.publicAuthorizeEndpoint || "https://liveblocks.io/api/public/authorize"
    };
  }
  if (typeof authEndpoint == "string")
    return { type: "private", url: authEndpoint };
  if (typeof authEndpoint == "function")
    return { type: "custom", callback: authEndpoint };
  if (authEndpoint !== void 0)
    throw new Error("authEndpoint must be a string or a function. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClientAuthEndpoint");
  throw new Error("Invalid Liveblocks client options. For more information: https://liveblocks.io/docs/api-reference/liveblocks-client#createClient");
}

// ../../node_modules/@liveblocks/react/index.mjs
var React60 = __toESM(require_react(), 1);
var import_react19 = __toESM(require_react(), 1);
var ClientContext = React60.createContext(null);
function useClient() {
  const client2 = React60.useContext(ClientContext);
  if (client2 == null)
    throw new Error("LiveblocksProvider is missing from the react tree");
  return client2;
}
function __awaiter4(thisArg, _arguments, P10, generator) {
  return new (P10 || (P10 = Promise))(function(resolve, reject2) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e13) {
        reject2(e13);
      }
    }
    function rejected(value) {
      try {
        step(generator.throw(value));
      } catch (e13) {
        reject2(e13);
      }
    }
    function step(result) {
      var value;
      result.done ? resolve(result.value) : (value = result.value, value instanceof P10 ? value : new P10(function(resolve2) {
        resolve2(value);
      })).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function useRerender() {
  const [, update] = (0, import_react19.useReducer)((x10) => x10 + 1, 0);
  return update;
}
function createRoomContext(client2) {
  let useClient$1;
  useClient$1 = client2 !== "__legacy" ? () => client2 : useClient;
  const RoomContext = React60.createContext(null);
  function useRoom2() {
    const room = React60.useContext(RoomContext);
    if (room == null)
      throw new Error("RoomProvider is missing from the react tree");
    return room;
  }
  function useStorage() {
    const room = useRoom2(), [root2, setState] = React60.useState(null);
    return React60.useEffect(() => {
      let didCancel = false;
      return function() {
        __awaiter4(this, void 0, void 0, function* () {
          const storage = yield room.getStorage();
          didCancel || setState(storage.root);
        });
      }(), () => {
        didCancel = true;
      };
    }, [room]), [root2];
  }
  function deprecated_useMap(key, entries2) {
    errorIf(entries2, `Support for initializing entries in useMap() directly will be removed in @liveblocks/react 0.18.

Instead, please initialize this data where you set up your RoomProvider:

    const initialStorage = () => ({
      ${JSON.stringify(key)}: new LiveMap(...),
      ...
    });

    <RoomProvider initialStorage={initialStorage}>
      ...
    </RoomProvider>

Please see https://bit.ly/3Niy5aP for details.`);
    const value = useStorageValue(key, new LiveMap(entries2 != null ? entries2 : void 0));
    return value.status === "ok" ? value.value : (errorIf(value.status === "notfound", `Key ${JSON.stringify(key)} was not found in Storage. Starting with 0.18, useMap() will no longer automatically create this key.

Instead, please initialize your storage where you set up your RoomProvider:

    import { LiveMap } from "@liveblocks/client";

    const initialStorage = () => ({
      ${JSON.stringify(key)}: new LiveMap(...),
      ...
    });

    <RoomProvider initialStorage={initialStorage}>
      ...
    </RoomProvider>

Please see https://bit.ly/3Niy5aP for details.`), null);
  }
  function deprecated_useList(key, items) {
    errorIf(items, `Support for initializing items in useList() directly will be removed in @liveblocks/react 0.18.

Instead, please initialize this data where you set up your RoomProvider:

    import { LiveList } from "@liveblocks/client";

    const initialStorage = () => ({
      ${JSON.stringify(key)}: new LiveList(...),
      ...
    });

    <RoomProvider initialStorage={initialStorage}>
      ...
    </RoomProvider>

Please see https://bit.ly/3Niy5aP for details.`);
    const value = useStorageValue(key, new LiveList(items));
    return value.status === "ok" ? value.value : (errorIf(value.status === "notfound", `Key ${JSON.stringify(key)} was not found in Storage. Starting with 0.18, useList() will no longer automatically create this key.

Instead, please initialize your storage where you set up your RoomProvider:

    import { LiveList } from "@liveblocks/client";

    const initialStorage = () => ({
      ${JSON.stringify(key)}: new LiveList(...),
      ...
    });

    <RoomProvider initialStorage={initialStorage}>
      ...
    </RoomProvider>

Please see https://bit.ly/3Niy5aP for details.`), null);
  }
  function deprecated_useObject(key, initialData) {
    errorIf(initialData, `Support for initializing data in useObject() directly will be removed in @liveblocks/react 0.18.

Instead, please initialize this data where you set up your RoomProvider:

    import { LiveObject } from "@liveblocks/client";

    const initialStorage = () => ({
      ${JSON.stringify(key)}: new LiveObject(...),
      ...
    });

    <RoomProvider initialStorage={initialStorage}>
      ...
    </RoomProvider>

Please see https://bit.ly/3Niy5aP for details.`);
    const value = useStorageValue(key, new LiveObject(initialData));
    return value.status === "ok" ? value.value : (errorIf(value.status === "notfound", `Key ${JSON.stringify(key)} was not found in Storage. Starting with 0.18, useObject() will no longer automatically create this key.

Instead, please initialize your storage where you set up your RoomProvider:

    import { LiveObject } from "@liveblocks/client";

    const initialStorage = () => ({
      ${JSON.stringify(key)}: new LiveObject(...),
      ...
    });

    <RoomProvider initialStorage={initialStorage}>
      ...
    </RoomProvider>

Please see https://bit.ly/3Niy5aP for details.`), null);
  }
  function useHistory2() {
    return useRoom2().history;
  }
  function useStorageValue(key, initialValue) {
    const room = useRoom2(), [root2] = useStorage(), rerender = useRerender();
    if (React60.useEffect(() => {
      if (root2 == null)
        return;
      let liveValue = root2.get(key);
      liveValue == null && (liveValue = initialValue, root2.set(key, liveValue));
      let unsubscribeCrdt = room.subscribe(liveValue, rerender);
      const unsubscribeRoot = room.subscribe(root2, function() {
        const newCrdt = root2.get(key);
        newCrdt !== liveValue && (unsubscribeCrdt(), liveValue = newCrdt, unsubscribeCrdt = room.subscribe(liveValue, rerender), rerender());
      });
      return rerender(), () => {
        unsubscribeRoot(), unsubscribeCrdt();
      };
    }, [root2, room]), root2 == null)
      return { status: "loading" };
    {
      const value = root2.get(key);
      return value == null ? { status: "notfound" } : { status: "ok", value };
    }
  }
  return {
    RoomProvider: function(props) {
      const {
        id: roomId2,
        initialPresence,
        initialStorage,
        defaultPresence,
        defaultStorageRoot
      } = props;
      if (false) {
        if (roomId2 == null)
          throw new Error("RoomProvider id property is required. For more information: https://liveblocks.io/docs/errors/liveblocks-react/RoomProvider-id-property-is-required");
        if (typeof roomId2 != "string")
          throw new Error("RoomProvider id property should be a string.");
      }
      errorIf(defaultPresence, "RoomProvider's `defaultPresence` prop will be removed in @liveblocks/react 0.18. Please use `initialPresence` instead. For more info, see https://bit.ly/3Niy5aP"), errorIf(defaultStorageRoot, "RoomProvider's `defaultStorageRoot` prop will be removed in @liveblocks/react 0.18. Please use `initialStorage` instead. For more info, see https://bit.ly/3Niy5aP");
      const _client = useClient$1(), [room, setRoom] = React60.useState(() => _client.enter(roomId2, {
        initialPresence,
        initialStorage,
        defaultPresence,
        defaultStorageRoot,
        DO_NOT_USE_withoutConnecting: typeof window == "undefined"
      }));
      return React60.useEffect(() => (setRoom(_client.enter(roomId2, {
        initialPresence,
        initialStorage,
        defaultPresence,
        defaultStorageRoot,
        DO_NOT_USE_withoutConnecting: typeof window == "undefined"
      })), () => {
        _client.leave(roomId2);
      }), [_client, roomId2]), React60.createElement(RoomContext.Provider, { value: room }, props.children);
    },
    useBatch: function() {
      return useRoom2().batch;
    },
    useBroadcastEvent: function() {
      const room = useRoom2();
      return React60.useCallback((event, options = { shouldQueueEventIfNotReady: false }) => {
        room.broadcastEvent(event, options);
      }, [room]);
    },
    useErrorListener: function(callback) {
      const room = useRoom2(), savedCallback = React60.useRef(callback);
      React60.useEffect(() => {
        savedCallback.current = callback;
      }), React60.useEffect(() => {
        const unsubscribe = room.subscribe("error", (e13) => savedCallback.current(e13));
        return () => {
          unsubscribe();
        };
      }, [room]);
    },
    useEventListener: function(callback) {
      const room = useRoom2(), savedCallback = React60.useRef(callback);
      React60.useEffect(() => {
        savedCallback.current = callback;
      }), React60.useEffect(() => {
        const unsubscribe = room.subscribe("event", (eventData) => {
          savedCallback.current(eventData);
        });
        return () => {
          unsubscribe();
        };
      }, [room]);
    },
    useHistory: useHistory2,
    useList: function(key) {
      return deprecated_useList(key);
    },
    useMap: function(key) {
      return deprecated_useMap(key);
    },
    useMyPresence: function() {
      const room = useRoom2(), presence = room.getPresence(), rerender = useRerender();
      return React60.useEffect(() => {
        const unsubscribe = room.subscribe("my-presence", rerender);
        return () => {
          unsubscribe();
        };
      }, [room]), [
        presence,
        React60.useCallback((overrides, options) => room.updatePresence(overrides, options), [room])
      ];
    },
    useObject: function(key) {
      return deprecated_useObject(key);
    },
    useOthers: function() {
      const room = useRoom2(), rerender = useRerender();
      return React60.useEffect(() => {
        const unsubscribe = room.subscribe("others", rerender);
        return () => {
          unsubscribe();
        };
      }, [room]), room.getOthers();
    },
    useRedo: function() {
      return useHistory2().redo;
    },
    useRoom: useRoom2,
    useSelf: function() {
      const room = useRoom2(), rerender = useRerender();
      return React60.useEffect(() => {
        const unsubscribePresence = room.subscribe("my-presence", rerender), unsubscribeConnection = room.subscribe("connection", rerender);
        return () => {
          unsubscribePresence(), unsubscribeConnection();
        };
      }, [room]), room.getSelf();
    },
    useStorage,
    useUndo: function() {
      return useHistory2().undo;
    },
    useUpdateMyPresence: function() {
      const room = useRoom2();
      return React60.useCallback((overrides, options) => {
        room.updatePresence(overrides, options);
      }, [room]);
    },
    deprecated_useList,
    deprecated_useMap,
    deprecated_useObject
  };
}
var _hooks = createRoomContext("__legacy");

// src/multiplayer/liveblocks.config.ts
var client = createClient({
  publicApiKey: "pk_live_MQyewokvyPeZAt4CaE5u7o5u",
  throttle: 120
});
var { RoomProvider, useHistory, useRedo, useUndo, useRoom, useUpdateMyPresence } = createRoomContext(client);

// src/multiplayer/useMultiplayerState.ts
var import_react21 = __toESM(require_react());
function useMultiplayerState(roomId2) {
  const [app, setApp] = (0, import_react21.useState)();
  const [error, setError] = (0, import_react21.useState)();
  const [loading, setLoading] = (0, import_react21.useState)(true);
  const room = useRoom();
  const onUndo = useUndo();
  const onRedo = useRedo();
  const updateMyPresence = useUpdateMyPresence();
  const rIsPaused = (0, import_react21.useRef)(false);
  const rLiveShapes = (0, import_react21.useRef)();
  const rLiveBindings = (0, import_react21.useRef)();
  const rLiveAssets = (0, import_react21.useRef)();
  const onMount = (0, import_react21.useCallback)((app2) => {
    app2.loadRoom(roomId2);
    app2.pause();
    window.app = app2;
    setApp(app2);
    app2.selectAll();
  }, [roomId2]);
  const onChangePage = (0, import_react21.useCallback)((app2, shapes, bindings, assets) => {
    room.batch(() => {
      const lShapes = rLiveShapes.current;
      const lBindings = rLiveBindings.current;
      const lAssets = rLiveAssets.current;
      if (!(lShapes && lBindings && lAssets))
        return;
      Object.entries(shapes).forEach(([id2, shape]) => {
        if (!shape) {
          lShapes.delete(id2);
        } else {
          lShapes.set(shape.id, shape);
        }
      });
      Object.entries(bindings).forEach(([id2, binding]) => {
        if (!binding) {
          lBindings.delete(id2);
        } else {
          lBindings.set(binding.id, binding);
        }
      });
      Object.entries(assets).forEach(([id2, asset]) => {
        if (!asset) {
          lAssets.delete(id2);
        } else {
          lAssets.set(asset.id, asset);
        }
      });
    });
  }, [room]);
  const onChangePresence = (0, import_react21.useCallback)((app2, user) => {
    var _a4;
    updateMyPresence({ id: (_a4 = app2.room) == null ? void 0 : _a4.userId, user });
  }, [updateMyPresence]);
  import_react21.default.useEffect(() => {
    const unsubs = [];
    if (!(app && room))
      return;
    unsubs.push(room.subscribe("error", (error2) => setError(error2)));
    unsubs.push(room.subscribe("others", (others, event) => {
      if (event.type === "leave") {
        const { presence } = event.user;
        if (presence) {
          app == null ? void 0 : app.removeUser(presence.id);
        }
      } else {
        app.updateUsers(others.toArray().filter((other) => other.presence).map((other) => other.presence.user).filter(Boolean));
      }
    }));
    let stillAlive = true;
    function setupDocument() {
      return __async(this, null, function* () {
        const storage = yield room.getStorage();
        const version = storage.root.get("version");
        let lShapes = storage.root.get("shapes");
        if (!lShapes || !("_serialize" in lShapes)) {
          storage.root.set("shapes", new LiveMap());
          lShapes = storage.root.get("shapes");
        }
        rLiveShapes.current = lShapes;
        let lBindings = storage.root.get("bindings");
        if (!lBindings || !("_serialize" in lBindings)) {
          storage.root.set("bindings", new LiveMap());
          lBindings = storage.root.get("bindings");
        }
        rLiveBindings.current = lBindings;
        let lAssets = storage.root.get("assets");
        if (!lAssets || !("_serialize" in lAssets)) {
          storage.root.set("assets", new LiveMap());
          lAssets = storage.root.get("assets");
        }
        rLiveAssets.current = lAssets;
        if (!version) {
          const doc = storage.root.get("doc");
          if (doc) {
            const {
              document: {
                pages: {
                  page: { shapes, bindings }
                },
                assets
              }
            } = doc.toObject();
            Object.values(shapes).forEach((shape) => lShapes.set(shape.id, shape));
            Object.values(bindings).forEach((binding) => lBindings.set(binding.id, binding));
            Object.values(assets).forEach((asset) => lAssets.set(asset.id, asset));
          }
        }
        storage.root.set("version", 2.1);
        const handleChanges = () => {
          app == null ? void 0 : app.replacePageContent(Object.fromEntries(lShapes.entries()), Object.fromEntries(lBindings.entries()), Object.fromEntries(lAssets.entries()));
        };
        if (stillAlive) {
          unsubs.push(room.subscribe(lShapes, handleChanges));
          handleChanges();
          if (app) {
            app.zoomToFit();
            if (app.zoom > 1) {
              app.resetZoom();
            }
          }
          setLoading(false);
        }
      });
    }
    setupDocument();
    return () => {
      stillAlive = false;
      unsubs.forEach((unsub) => unsub());
    };
  }, [room, app]);
  const onSessionStart = import_react21.default.useCallback(() => {
    if (!room)
      return;
    room.history.pause();
    rIsPaused.current = true;
  }, [room]);
  const onSessionEnd = import_react21.default.useCallback(() => {
    if (!room)
      return;
    room.history.resume();
    rIsPaused.current = false;
  }, [room]);
  useHotkeys("ctrl+shift+l;,\u2318+shift+l", () => {
    if (window.confirm("Reset the document?")) {
      room.batch(() => {
        const lShapes = rLiveShapes.current;
        const lBindings = rLiveBindings.current;
        const lAssets = rLiveAssets.current;
        if (!(lShapes && lBindings && lAssets))
          return;
        lShapes.forEach((shape) => {
          lShapes.delete(shape.id);
        });
        lBindings.forEach((shape) => {
          lBindings.delete(shape.id);
        });
        lAssets.forEach((shape) => {
          lAssets.delete(shape.id);
        });
      });
    }
  }, []);
  return {
    onUndo,
    onRedo,
    onMount,
    onSessionStart,
    onSessionEnd,
    onChangePage,
    onChangePresence,
    error,
    loading
  };
}

// src/multiplayer/multiplayer.tsx
var roomId = "mp-test-8";
function Multiplayer() {
  return /* @__PURE__ */ React62.createElement(RoomProvider, {
    id: roomId
  }, /* @__PURE__ */ React62.createElement(Editor, {
    roomId
  }));
}
function Editor({ roomId: roomId2 }) {
  const _a4 = useMultiplayerState(roomId2), { error } = _a4, events = __objRest(_a4, ["error"]);
  const fileSystemEvents = Mu();
  if (error)
    return /* @__PURE__ */ React62.createElement("div", null, "Error: ", error.message);
  const handleSignOut = React62.useCallback(() => {
  }, []);
  const handleSignIn = React62.useCallback(() => {
  }, []);
  const handlePersist = React62.useCallback(() => {
  }, []);
  return /* @__PURE__ */ React62.createElement("div", {
    className: "tldraw"
  }, /* @__PURE__ */ React62.createElement(ice, __spreadProps(__spreadValues(__spreadValues({
    showPages: true
  }, events), fileSystemEvents), {
    disableAssets: false,
    showMultiplayerMenu: false,
    onSignIn: handleSignIn,
    onSignOut: handleSignOut,
    onPersist: handlePersist
  })));
}

// src/index.tsx
var container = document.getElementById("root");
var root = (0, import_client4.createRoot)(container);
root.render(/* @__PURE__ */ import_react22.default.createElement(import_react22.default.StrictMode, null, /* @__PURE__ */ import_react22.default.createElement(Multiplayer, null)));
/*!
 * hotkeys-js v3.8.7
 * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies.
 * 
 * Copyright (c) 2021 kenny wong <wowohoo@qq.com>
 * http://jaywcjlove.github.io/hotkeys
 * 
 * Licensed under the MIT license.
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * String.prototype.replaceAll() polyfill
 * https://gomakethings.com/how-to-replace-a-section-of-a-string-with-another-one-with-vanilla-js/
 * @author Chris Ferdinandi
 * @license MIT
 */
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.
